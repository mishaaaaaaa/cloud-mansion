{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/PointerLockControls.js","js/main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","legacyMode","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super33","_this25","isMeshDepthMaterial","_Material4","_super34","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super35","_this27","isArrayCamera","Group","_Object3D4","_super36","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super37","_this29","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super49","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super50","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super51","_this42","LineLoop","_Line2","_super52","_this43","_Material7","_super53","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super54","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super55","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super56","_this47","CompressedTexture","_Texture8","_super57","_this48","CompressedArrayTexture","_CompressedTexture","_super58","_this49","CompressedCubeTexture","_CompressedTexture2","_super59","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super60","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super61","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this52","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super62","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super63","curveType","_this54","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super64","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super65","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super66","_this57","isLineCurve","LineCurve3","_Curve6","_super67","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super68","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super69","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super70","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super71","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super72","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super73","phiStart","phiLength","_this64","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super74","capSegments","radialSegments","_this65","CircleGeometry","_BufferGeometry4","_super75","thetaStart","thetaLength","_this66","segment","CylinderGeometry","_BufferGeometry5","_super76","radiusTop","radiusBottom","openEnded","_this67","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super77","_this68","PolyhedronGeometry","_BufferGeometry6","_super78","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super79","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super80","thresholdAngle","_this71","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super81","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super82","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super83","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super84","_this75","RingGeometry","_BufferGeometry9","_super85","innerRadius","outerRadius","thetaSegments","phiSegments","_this76","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super86","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super87","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super88","_this79","TorusGeometry","_BufferGeometry12","_super89","tube","tubularSegments","_this80","TorusKnotGeometry","_BufferGeometry13","_super90","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super91","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super92","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super93","_this84","RawShaderMaterial","_ShaderMaterial","_super94","_this85","_Material9","_super95","_this86","_MeshStandardMaterial","_super96","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super97","_this88","_Material11","_super98","_this89","_Material12","_super99","_this90","_Material13","_super100","_this91","_Material14","_super101","_this92","_LineBasicMaterial","_super102","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super103","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super104","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super105","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super106","ColorKeyframeTrack","_KeyframeTrack2","_super107","NumberKeyframeTrack","_KeyframeTrack3","_super108","QuaternionLinearInterpolant","_Interpolant4","_super109","QuaternionKeyframeTrack","_KeyframeTrack4","_super110","StringKeyframeTrack","_KeyframeTrack5","_super111","VectorKeyframeTrack","_KeyframeTrack6","_super112","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super113","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super114","_this96","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super115","CompressedTextureLoader","_Loader3","_super116","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super117","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super118","urls","DataTextureLoader","_Loader6","_super119","texData","TextureLoader","_Loader7","_super120","Light","_Object3D11","_super121","_this97","HemisphereLight","_Light","_super122","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super123","_this99","isSpotLightShadow","SpotLight","_Light2","_super124","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super125","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super126","_this102","DirectionalLightShadow","_LightShadow3","_super127","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super128","_this104","AmbientLight","_Light5","_super129","_this105","RectAreaLight","_Light6","_super130","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super131","_this107","MaterialLoader","_Loader8","_super132","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super133","_this109","BufferGeometryLoader","_Loader9","_super134","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super135","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super136","_this110","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super137","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_euler","_changeEvent","_lockEvent","_unlockEvent","_PI_2","PointerLockControls","isLocked","minPolarAngle","maxPolarAngle","pointerSpeed","_onMouseMove","onMouseMove","_onPointerlockChange","onPointerlockChange","_onPointerlockError","onPointerlockError","ownerDocument","getObject","getDirection","moveForward","moveRight","requestPointerLock","unlock","exitPointerLock","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","pointerLockElement","THREE","_interopRequireWildcard","_PointerLockControls","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","controls","moveBackward","moveLeft","canJump","velocity","animate","innerWidth","innerHeight","blocker","getElementById","instructions","onKeyDown","onKeyUp","floorGeometry","colorsFloor","floorMaterial","boxGeometry","colorsBox","boxMaterial","devicePixelRatio","appendChild","onWindowResize","intersections","onObject","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,CAAAkD,MAAA,KAAA7D,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAmC,SAAA,uCAAA3D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAiE,UAAA,IAAArD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAAgE,IAAA,GAAAlE,CAAA,CAAAmE,OAAA,eAAAjE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAmC,SAAA,sCAAA9D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAiC,aAAAnE,CAAA,QAAAD,CAAA,KAAAqE,MAAA,EAAApE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAsE,QAAA,GAAArE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAuE,UAAA,GAAAtE,CAAA,KAAAD,CAAA,CAAAwE,QAAA,GAAAvE,CAAA,WAAAwE,UAAA,CAAAC,IAAA,CAAA1E,CAAA,cAAA2E,cAAA1E,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA2E,UAAA,QAAA5E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA2E,UAAA,GAAA5E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAwE,UAAA,MAAAJ,MAAA,aAAApE,CAAA,CAAA4C,OAAA,CAAAuB,YAAA,cAAAS,KAAA,iBAAAnC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAkE,IAAA,SAAAlE,CAAA,OAAA8E,KAAA,CAAA9E,CAAA,CAAA+E,MAAA,SAAAxE,CAAA,OAAAG,CAAA,YAAAwD,KAAA,aAAA3D,CAAA,GAAAP,CAAA,CAAA+E,MAAA,OAAA1E,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA2D,IAAA,CAAAzD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA2D,IAAA,CAAAX,IAAA,OAAAW,IAAA,SAAAA,IAAA,CAAAzD,KAAA,GAAAR,CAAA,EAAAiE,IAAA,CAAAX,IAAA,OAAAW,IAAA,YAAAxD,CAAA,CAAAwD,IAAA,GAAAxD,CAAA,gBAAAsD,SAAA,CAAAf,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA4C,WAAA,GAAA9D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAiF,mBAAA,aAAAhF,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAiF,WAAA,WAAAlF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAAgF,WAAA,IAAAhF,CAAA,CAAAmF,IAAA,OAAAnF,CAAA,CAAAoF,IAAA,aAAAnF,CAAA,WAAAE,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAkF,cAAA,CAAApF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAqF,SAAA,GAAAjD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAwF,KAAA,aAAAvF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA+E,OAAA,OAAA7E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAiF,mBAAA,CAAA/E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAsD,IAAA,GAAAd,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAsD,IAAA,WAAAtB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAA0F,IAAA,aAAAzF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAwE,IAAA,CAAArE,CAAA,UAAAH,CAAA,CAAAyF,OAAA,aAAAzB,KAAA,WAAAhE,CAAA,CAAA6E,MAAA,SAAA9E,CAAA,GAAAC,CAAA,CAAA0F,GAAA,QAAA3F,CAAA,IAAAD,CAAA,SAAAkE,IAAA,CAAAzD,KAAA,GAAAR,CAAA,EAAAiE,IAAA,CAAAX,IAAA,OAAAW,IAAA,WAAAA,IAAA,CAAAX,IAAA,OAAAW,IAAA,QAAAlE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA8E,WAAA,EAAAzD,OAAA,EAAAoD,KAAA,WAAAA,MAAA7E,CAAA,aAAA6F,IAAA,WAAA3B,IAAA,WAAAP,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAwE,UAAA,CAAA5B,OAAA,CAAA8B,aAAA,IAAA3E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA4F,MAAA,OAAAzF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA4E,KAAA,EAAA5E,CAAA,CAAA6F,KAAA,cAAA7F,CAAA,IAAAD,CAAA,MAAA+F,IAAA,WAAAA,KAAA,SAAAzC,IAAA,WAAAtD,CAAA,QAAAwE,UAAA,IAAAG,UAAA,kBAAA3E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAoE,IAAA,KAAApC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAAgG,OAAA7F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAAgE,IAAA,GAAA7D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAkE,UAAA,CAAAM,MAAA,MAAAxE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA+D,UAAA,CAAAlE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAkE,UAAA,iBAAAlE,CAAA,CAAA2D,MAAA,SAAA6B,MAAA,aAAAxF,CAAA,CAAA2D,MAAA,SAAAwB,IAAA,QAAA/E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA6E,IAAA,GAAAnF,CAAA,CAAA4D,QAAA,SAAA4B,MAAA,CAAAxF,CAAA,CAAA4D,QAAA,gBAAAuB,IAAA,GAAAnF,CAAA,CAAA6D,UAAA,SAAA2B,MAAA,CAAAxF,CAAA,CAAA6D,UAAA,cAAAzD,CAAA,aAAA+E,IAAA,GAAAnF,CAAA,CAAA4D,QAAA,SAAA4B,MAAA,CAAAxF,CAAA,CAAA4D,QAAA,qBAAAtD,CAAA,YAAAsC,KAAA,qDAAAuC,IAAA,GAAAnF,CAAA,CAAA6D,UAAA,SAAA2B,MAAA,CAAAxF,CAAA,CAAA6D,UAAA,YAAAT,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAuE,UAAA,CAAAM,MAAA,MAAA7E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAkE,UAAA,CAAAvE,CAAA,OAAAK,CAAA,CAAA8D,MAAA,SAAAwB,IAAA,IAAAxF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAsF,IAAA,GAAAtF,CAAA,CAAAgE,UAAA,QAAA7D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA2D,MAAA,IAAArE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA6D,UAAA,KAAA7D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAkE,UAAA,cAAAhE,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAU,IAAA,GAAAxD,CAAA,CAAA6D,UAAA,EAAApC,CAAA,SAAAgE,QAAA,CAAAvF,CAAA,MAAAuF,QAAA,WAAAA,SAAAlG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAsC,IAAA,GAAAjE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAqE,IAAA,QAAApE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAU,IAAA,yBAAAjE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAkE,IAAA,GAAAlE,CAAA,GAAAmC,CAAA,KAAAiE,MAAA,WAAAA,OAAAnG,CAAA,aAAAD,CAAA,QAAAyE,UAAA,CAAAM,MAAA,MAAA/E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAuE,UAAA,CAAAzE,CAAA,OAAAE,CAAA,CAAAqE,UAAA,KAAAtE,CAAA,cAAAkG,QAAA,CAAAjG,CAAA,CAAA0E,UAAA,EAAA1E,CAAA,CAAAsE,QAAA,GAAAG,aAAA,CAAAzE,CAAA,GAAAiC,CAAA,OAAAkE,KAAA,WAAAC,OAAArG,CAAA,aAAAD,CAAA,QAAAyE,UAAA,CAAAM,MAAA,MAAA/E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAuE,UAAA,CAAAzE,CAAA,OAAAE,CAAA,CAAAmE,MAAA,KAAApE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAA0E,UAAA,kBAAAvE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA8C,aAAA,CAAAzE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAAiD,aAAA,WAAAA,cAAAvG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAiE,UAAA,EAAA/D,CAAA,EAAAiE,OAAA,EAAA9D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAiD,QAAA1C,CAAA,sCAAA0C,OAAA,wBAAAtC,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAN,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAI,MAAA,IAAAJ,CAAA,CAAA2E,WAAA,KAAAvE,MAAA,IAAAJ,CAAA,KAAAI,MAAA,CAAAP,SAAA,qBAAAG,CAAA,KAAA0C,OAAA,CAAA1C,CAAA;AAAA,SAAAiG,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA1C,SAAA;AAAA,SAAA2C,kBAAAC,MAAA,EAAAC,KAAA,aAAAnG,CAAA,MAAAA,CAAA,GAAAmG,KAAA,CAAA9B,MAAA,EAAArE,CAAA,UAAAoG,UAAA,GAAAD,KAAA,CAAAnG,CAAA,GAAAoG,UAAA,CAAA3F,UAAA,GAAA2F,UAAA,CAAA3F,UAAA,WAAA2F,UAAA,CAAA1F,YAAA,wBAAA0F,UAAA,EAAAA,UAAA,CAAAzF,QAAA,SAAAlB,MAAA,CAAAK,cAAA,CAAAoG,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAAE,GAAA,GAAAF,UAAA;AAAA,SAAAG,aAAAP,WAAA,EAAAQ,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAP,iBAAA,CAAAD,WAAA,CAAAtG,SAAA,EAAA8G,UAAA,OAAAC,WAAA,EAAAR,iBAAA,CAAAD,WAAA,EAAAS,WAAA,GAAAhH,MAAA,CAAAK,cAAA,CAAAkG,WAAA,iBAAArF,QAAA,mBAAAqF,WAAA;AAAA,SAAAK,eAAAlF,GAAA,QAAAmF,GAAA,GAAAI,YAAA,CAAAvF,GAAA,oBAAAoB,OAAA,CAAA+D,GAAA,iBAAAA,GAAA,GAAAK,MAAA,CAAAL,GAAA;AAAA,SAAAI,aAAAE,KAAA,EAAAC,IAAA,QAAAtE,OAAA,CAAAqE,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA3G,MAAA,CAAA8G,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAA1F,IAAA,CAAAwF,KAAA,EAAAC,IAAA,oBAAAtE,OAAA,CAAA0E,GAAA,uBAAAA,GAAA,YAAA3D,SAAA,4DAAAuD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AADA;AACA;AACA;AACA;AACA;AACA,IAAMO,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAG,KAAK;AAEtB,IAAME,KAAK,GAAAD,OAAA,CAAAC,KAAA,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAE,CAAC;AAC3E,IAAMC,KAAK,GAAAR,OAAA,CAAAQ,KAAA,GAAG;EAAEH,MAAM,EAAE,CAAC;EAAEE,GAAG,EAAE,CAAC;EAAEE,SAAS,EAAE,CAAC;EAAEC,YAAY,EAAE;AAAE,CAAC;AAClE,IAAMC,YAAY,GAAAX,OAAA,CAAAW,YAAA,GAAG,CAAC;AACtB,IAAMC,YAAY,GAAAZ,OAAA,CAAAY,YAAA,GAAG,CAAC;AACtB,IAAMC,aAAa,GAAAb,OAAA,CAAAa,aAAA,GAAG,CAAC;AACvB,IAAMC,iBAAiB,GAAAd,OAAA,CAAAc,iBAAA,GAAG,CAAC;AAC3B,IAAMC,cAAc,GAAAf,OAAA,CAAAe,cAAA,GAAG,CAAC;AACxB,IAAMC,YAAY,GAAAhB,OAAA,CAAAgB,YAAA,GAAG,CAAC;AACtB,IAAMC,gBAAgB,GAAAjB,OAAA,CAAAiB,gBAAA,GAAG,CAAC;AAC1B,IAAMC,YAAY,GAAAlB,OAAA,CAAAkB,YAAA,GAAG,CAAC;AACtB,IAAMC,SAAS,GAAAnB,OAAA,CAAAmB,SAAA,GAAG,CAAC;AACnB,IAAMC,QAAQ,GAAApB,OAAA,CAAAoB,QAAA,GAAG,CAAC;AAClB,IAAMC,UAAU,GAAArB,OAAA,CAAAqB,UAAA,GAAG,CAAC;AACpB,IAAMC,iBAAiB,GAAAtB,OAAA,CAAAsB,iBAAA,GAAG,CAAC,CAAC,CAAC;AAC7B,IAAMC,UAAU,GAAAvB,OAAA,CAAAuB,UAAA,GAAG,CAAC;AACpB,IAAMC,cAAc,GAAAxB,OAAA,CAAAwB,cAAA,GAAG,CAAC;AACxB,IAAMC,gBAAgB,GAAAzB,OAAA,CAAAyB,gBAAA,GAAG,CAAC;AAC1B,IAAMC,mBAAmB,GAAA1B,OAAA,CAAA0B,mBAAA,GAAG,CAAC;AAC7B,IAAMC,gBAAgB,GAAA3B,OAAA,CAAA2B,gBAAA,GAAG,CAAC;AAC1B,IAAMC,cAAc,GAAA5B,OAAA,CAAA4B,cAAA,GAAG,CAAC;AACxB,IAAMC,WAAW,GAAA7B,OAAA,CAAA6B,WAAA,GAAG,GAAG;AACvB,IAAMC,gBAAgB,GAAA9B,OAAA,CAAA8B,gBAAA,GAAG,GAAG;AAC5B,IAAMC,uBAAuB,GAAA/B,OAAA,CAAA+B,uBAAA,GAAG,GAAG;AACnC,IAAMC,WAAW,GAAAhC,OAAA,CAAAgC,WAAA,GAAG,GAAG;AACvB,IAAMC,WAAW,GAAAjC,OAAA,CAAAiC,WAAA,GAAG,GAAG;AACvB,IAAMC,UAAU,GAAAlC,OAAA,CAAAkC,UAAA,GAAG,GAAG;AACtB,IAAMC,SAAS,GAAAnC,OAAA,CAAAmC,SAAA,GAAG,GAAG;AACrB,IAAMC,cAAc,GAAApC,OAAA,CAAAoC,cAAA,GAAG,GAAG;AAC1B,IAAMC,sBAAsB,GAAArC,OAAA,CAAAqC,sBAAA,GAAG,GAAG;AAClC,IAAMC,cAAc,GAAAtC,OAAA,CAAAsC,cAAA,GAAG,GAAG;AAC1B,IAAMC,sBAAsB,GAAAvC,OAAA,CAAAuC,sBAAA,GAAG,GAAG;AAClC,IAAMC,cAAc,GAAAxC,OAAA,CAAAwC,cAAA,GAAG,GAAG;AAC1B,IAAMC,sBAAsB,GAAAzC,OAAA,CAAAyC,sBAAA,GAAG,GAAG;AAClC,IAAMC,cAAc,GAAA1C,OAAA,CAAA0C,cAAA,GAAG,GAAG;AAC1B,IAAMC,sBAAsB,GAAA3C,OAAA,CAAA2C,sBAAA,GAAG,GAAG;AAClC,IAAMC,sBAAsB,GAAA5C,OAAA,CAAA4C,sBAAA,GAAG,GAAG;AAClC,IAAMC,UAAU,GAAA7C,OAAA,CAAA6C,UAAA,GAAG,CAAC;AACpB,IAAMC,WAAW,GAAA9C,OAAA,CAAA8C,WAAA,GAAG,CAAC;AACrB,IAAMC,SAAS,GAAA/C,OAAA,CAAA+C,SAAA,GAAG,CAAC;AACnB,IAAMC,cAAc,GAAAhD,OAAA,CAAAgD,cAAA,GAAG,CAAC;AACxB,IAAMC,UAAU,GAAAjD,OAAA,CAAAiD,UAAA,GAAG,CAAC;AACpB,IAAMC,iBAAiB,GAAAlD,OAAA,CAAAkD,iBAAA,GAAG,CAAC;AAC3B,IAAMC,YAAY,GAAAnD,OAAA,CAAAmD,YAAA,GAAG,CAAC;AACtB,IAAMC,aAAa,GAAApD,OAAA,CAAAoD,aAAA,GAAG,CAAC;AACvB,IAAMC,iBAAiB,GAAArD,OAAA,CAAAqD,iBAAA,GAAG,CAAC;AAC3B,IAAMC,YAAY,GAAAtD,OAAA,CAAAsD,YAAA,GAAG,CAAC;AACtB,IAAMC,YAAY,GAAAvD,OAAA,CAAAuD,YAAA,GAAG,CAAC;AACtB,IAAMC,aAAa,GAAAxD,OAAA,CAAAwD,aAAA,GAAG,CAAC;AACvB,IAAMC,iBAAiB,GAAAzD,OAAA,CAAAyD,iBAAA,GAAG,CAAC;AAC3B,IAAMC,mBAAmB,GAAA1D,OAAA,CAAA0D,mBAAA,GAAG,CAAC;AAC7B,IAAMC,iBAAiB,GAAA3D,OAAA,CAAA2D,iBAAA,GAAG,CAAC;AAC3B,IAAMC,qBAAqB,GAAA5D,OAAA,CAAA4D,qBAAA,GAAG,CAAC;AAC/B,IAAMC,iBAAiB,GAAA7D,OAAA,CAAA6D,iBAAA,GAAG,CAAC;AAE3B,IAAMC,SAAS,GAAA9D,OAAA,CAAA8D,SAAA,GAAG,GAAG;AACrB,IAAMC,qBAAqB,GAAA/D,OAAA,CAAA+D,qBAAA,GAAG,GAAG;AACjC,IAAMC,qBAAqB,GAAAhE,OAAA,CAAAgE,qBAAA,GAAG,GAAG;AACjC,IAAMC,gCAAgC,GAAAjE,OAAA,CAAAiE,gCAAA,GAAG,GAAG;AAC5C,IAAMC,gCAAgC,GAAAlE,OAAA,CAAAkE,gCAAA,GAAG,GAAG;AAC5C,IAAMC,uBAAuB,GAAAnE,OAAA,CAAAmE,uBAAA,GAAG,GAAG;AACnC,IAAMC,cAAc,GAAApE,OAAA,CAAAoE,cAAA,GAAG,IAAI;AAC3B,IAAMC,mBAAmB,GAAArE,OAAA,CAAAqE,mBAAA,GAAG,IAAI;AAChC,IAAMC,sBAAsB,GAAAtE,OAAA,CAAAsE,sBAAA,GAAG,IAAI;AACnC,IAAMC,aAAa,GAAAvE,OAAA,CAAAuE,aAAA,GAAG,IAAI;AAC1B,IAAMC,0BAA0B,GAAAxE,OAAA,CAAAwE,0BAAA,GAAG,IAAI;AACvC,IAAMC,0BAA0B,GAAAzE,OAAA,CAAAyE,0BAAA,GAAG,IAAI;AACvC,IAAMC,yBAAyB,GAAA1E,OAAA,CAAA0E,yBAAA,GAAG,IAAI;AACtC,IAAMC,yBAAyB,GAAA3E,OAAA,CAAA2E,yBAAA,GAAG,IAAI;AACtC,IAAMC,YAAY,GAAA5E,OAAA,CAAA4E,YAAA,GAAG,IAAI;AACzB,IAAMC,yBAAyB,GAAA7E,OAAA,CAAA6E,yBAAA,GAAG,IAAI;AACtC,IAAMC,yBAAyB,GAAA9E,OAAA,CAAA8E,yBAAA,GAAG,IAAI;AACtC,IAAMC,wBAAwB,GAAA/E,OAAA,CAAA+E,wBAAA,GAAG,IAAI;AACrC,IAAMC,wBAAwB,GAAAhF,OAAA,CAAAgF,wBAAA,GAAG,IAAI;AACrC,IAAMC,gBAAgB,GAAAjF,OAAA,CAAAiF,gBAAA,GAAG,IAAI;AAC7B,IAAMC,QAAQ,GAAAlF,OAAA,CAAAkF,QAAA,GAAG,IAAI;AACrB,IAAMC,SAAS,GAAAnF,OAAA,CAAAmF,SAAA,GAAG,IAAI;AACtB,IAAMC,iBAAiB,GAAApF,OAAA,CAAAoF,iBAAA,GAAG,IAAI;AAC9B,IAAMC,OAAO,GAAArF,OAAA,CAAAqF,OAAA,GAAG,IAAI;AACpB,IAAMC,eAAe,GAAAtF,OAAA,CAAAsF,eAAA,GAAG,IAAI;AAC5B,IAAMC,SAAS,GAAAvF,OAAA,CAAAuF,SAAA,GAAG,IAAI;AACtB,IAAMC,aAAa,GAAAxF,OAAA,CAAAwF,aAAA,GAAG,IAAI;AAC1B,IAAMC,qBAAqB,GAAAzF,OAAA,CAAAyF,qBAAA,GAAG,IAAI;AAClC,IAAMC,qBAAqB,GAAA1F,OAAA,CAAA0F,qBAAA,GAAG,IAAI;AAClC,IAAMC,kBAAkB,GAAA3F,OAAA,CAAA2F,kBAAA,GAAG,IAAI;AAC/B,IAAMC,WAAW,GAAA5F,OAAA,CAAA4F,WAAA,GAAG,IAAI;AACxB,IAAMC,UAAU,GAAA7F,OAAA,CAAA6F,UAAA,GAAG,IAAI;AACvB,IAAMC,eAAe,GAAA9F,OAAA,CAAA8F,eAAA,GAAG,IAAI;AAC5B,IAAMC,oBAAoB,GAAA/F,OAAA,CAAA+F,oBAAA,GAAG,IAAI;AACjC,IAAMC,WAAW,GAAAhG,OAAA,CAAAgG,WAAA,GAAG,IAAI;AACxB,IAAMC,kBAAkB,GAAAjG,OAAA,CAAAiG,kBAAA,GAAG,IAAI;AAC/B,IAAMC,SAAS,GAAAlG,OAAA,CAAAkG,SAAA,GAAG,IAAI;AACtB,IAAMC,gBAAgB,GAAAnG,OAAA,CAAAmG,gBAAA,GAAG,IAAI;AAC7B,IAAMC,QAAQ,GAAApG,OAAA,CAAAoG,QAAA,GAAG,IAAI;AACrB,IAAMC,eAAe,GAAArG,OAAA,CAAAqG,eAAA,GAAG,IAAI;AAC5B,IAAMC,iBAAiB,GAAAtG,OAAA,CAAAsG,iBAAA,GAAG,IAAI;AAE9B,IAAMC,oBAAoB,GAAAvG,OAAA,CAAAuG,oBAAA,GAAG,KAAK;AAClC,IAAMC,qBAAqB,GAAAxG,OAAA,CAAAwG,qBAAA,GAAG,KAAK;AACnC,IAAMC,qBAAqB,GAAAzG,OAAA,CAAAyG,qBAAA,GAAG,KAAK;AACnC,IAAMC,qBAAqB,GAAA1G,OAAA,CAAA0G,qBAAA,GAAG,KAAK;AACnC,IAAMC,uBAAuB,GAAA3G,OAAA,CAAA2G,uBAAA,GAAG,KAAK;AACrC,IAAMC,uBAAuB,GAAA5G,OAAA,CAAA4G,uBAAA,GAAG,KAAK;AACrC,IAAMC,wBAAwB,GAAA7G,OAAA,CAAA6G,wBAAA,GAAG,KAAK;AACtC,IAAMC,wBAAwB,GAAA9G,OAAA,CAAA8G,wBAAA,GAAG,KAAK;AACtC,IAAMC,eAAe,GAAA/G,OAAA,CAAA+G,eAAA,GAAG,KAAK;AAC7B,IAAMC,eAAe,GAAAhH,OAAA,CAAAgH,eAAA,GAAG,KAAK;AAC7B,IAAMC,oBAAoB,GAAAjH,OAAA,CAAAiH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAlH,OAAA,CAAAkH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAnH,OAAA,CAAAmH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAApH,OAAA,CAAAoH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAArH,OAAA,CAAAqH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAtH,OAAA,CAAAsH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAvH,OAAA,CAAAuH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAxH,OAAA,CAAAwH,oBAAA,GAAG,KAAK;AAClC,IAAMC,oBAAoB,GAAAzH,OAAA,CAAAyH,oBAAA,GAAG,KAAK;AAClC,IAAMC,qBAAqB,GAAA1H,OAAA,CAAA0H,qBAAA,GAAG,KAAK;AACnC,IAAMC,qBAAqB,GAAA3H,OAAA,CAAA2H,qBAAA,GAAG,KAAK;AACnC,IAAMC,qBAAqB,GAAA5H,OAAA,CAAA4H,qBAAA,GAAG,KAAK;AACnC,IAAMC,sBAAsB,GAAA7H,OAAA,CAAA6H,sBAAA,GAAG,KAAK;AACpC,IAAMC,sBAAsB,GAAA9H,OAAA,CAAA8H,sBAAA,GAAG,KAAK;AACpC,IAAMC,sBAAsB,GAAA/H,OAAA,CAAA+H,sBAAA,GAAG,KAAK;AACpC,IAAMC,gBAAgB,GAAAhI,OAAA,CAAAgI,gBAAA,GAAG,KAAK;AAC9B,IAAMC,sBAAsB,GAAAjI,OAAA,CAAAiI,sBAAA,GAAG,KAAK;AACpC,IAAMC,wBAAwB,GAAAlI,OAAA,CAAAkI,wBAAA,GAAG,KAAK;AACtC,IAAMC,gBAAgB,GAAAnI,OAAA,CAAAmI,gBAAA,GAAG,KAAK;AAC9B,IAAMC,uBAAuB,GAAApI,OAAA,CAAAoI,uBAAA,GAAG,KAAK;AACrC,IAAMC,sBAAsB,GAAArI,OAAA,CAAAqI,sBAAA,GAAG,KAAK;AACpC,IAAMC,6BAA6B,GAAAtI,OAAA,CAAAsI,6BAAA,GAAG,KAAK;AAC3C,IAAMC,QAAQ,GAAAvI,OAAA,CAAAuI,QAAA,GAAG,IAAI;AACrB,IAAMC,UAAU,GAAAxI,OAAA,CAAAwI,UAAA,GAAG,IAAI;AACvB,IAAMC,YAAY,GAAAzI,OAAA,CAAAyI,YAAA,GAAG,IAAI;AACzB,IAAMC,mBAAmB,GAAA1I,OAAA,CAAA0I,mBAAA,GAAG,IAAI;AAChC,IAAMC,iBAAiB,GAAA3I,OAAA,CAAA2I,iBAAA,GAAG,IAAI;AAC9B,IAAMC,iBAAiB,GAAA5I,OAAA,CAAA4I,iBAAA,GAAG,IAAI;AAC9B,IAAMC,mBAAmB,GAAA7I,OAAA,CAAA6I,mBAAA,GAAG,IAAI;AAChC,IAAMC,eAAe,GAAA9I,OAAA,CAAA8I,eAAA,GAAG,IAAI;AAC5B,IAAMC,gBAAgB,GAAA/I,OAAA,CAAA+I,gBAAA,GAAG,IAAI;AAC7B,IAAMC,wBAAwB,GAAAhJ,OAAA,CAAAgJ,wBAAA,GAAG,IAAI;AACrC,IAAMC,0BAA0B,GAAAjJ,OAAA,CAAAiJ,0BAAA,GAAG,IAAI;AACvC,IAAMC,iBAAiB,GAAAlJ,OAAA,CAAAkJ,iBAAA,GAAG,CAAC;AAC3B,IAAMC,qBAAqB,GAAAnJ,OAAA,CAAAmJ,qBAAA,GAAG,CAAC;AAC/B,IAAMC,mBAAmB,GAAApJ,OAAA,CAAAoJ,mBAAA,GAAG,CAAC;AAC7B;AACA,IAAMC,cAAc,GAAArJ,OAAA,CAAAqJ,cAAA,GAAG,IAAI;AAC3B;AACA,IAAMC,YAAY,GAAAtJ,OAAA,CAAAsJ,YAAA,GAAG,IAAI;AACzB,IAAMC,iBAAiB,GAAAvJ,OAAA,CAAAuJ,iBAAA,GAAG,IAAI;AAC9B,IAAMC,gBAAgB,GAAAxJ,OAAA,CAAAwJ,gBAAA,GAAG,IAAI;AAC7B,IAAMC,qBAAqB,GAAAzJ,OAAA,CAAAyJ,qBAAA,GAAG,CAAC;AAC/B,IAAMC,oBAAoB,GAAA1J,OAAA,CAAA0J,oBAAA,GAAG,CAAC;;AAE9B;AACA,IAAMC,YAAY,GAAA3J,OAAA,CAAA2J,YAAA,GAAG,EAAE;AACvB,IAAMC,cAAc,GAAA5J,OAAA,CAAA4J,cAAA,GAAG,MAAM;AAC7B,IAAMC,oBAAoB,GAAA7J,OAAA,CAAA6J,oBAAA,GAAG,aAAa;AAC1C,IAAMC,mBAAmB,GAAA9J,OAAA,CAAA8J,mBAAA,GAAG,YAAY;AACxC,IAAMC,yBAAyB,GAAA/J,OAAA,CAAA+J,yBAAA,GAAG,mBAAmB;AAErD,IAAMC,cAAc,GAAAhK,OAAA,CAAAgK,cAAA,GAAG,QAAQ;AAC/B,IAAMC,YAAY,GAAAjK,OAAA,CAAAiK,YAAA,GAAG,MAAM;AAE3B,IAAMC,eAAe,GAAAlK,OAAA,CAAAkK,eAAA,GAAG,QAAQ;AAChC,IAAMC,WAAW,GAAAnK,OAAA,CAAAmK,WAAA,GAAG,IAAI;AAExB,IAAMC,aAAa,GAAApK,OAAA,CAAAoK,aAAA,GAAG,CAAC;AACvB,IAAMC,aAAa,GAAArK,OAAA,CAAAqK,aAAA,GAAG,IAAI;AAC1B,IAAMC,gBAAgB,GAAAtK,OAAA,CAAAsK,gBAAA,GAAG,IAAI;AAC7B,IAAMC,kBAAkB,GAAAvK,OAAA,CAAAuK,kBAAA,GAAG,IAAI;AAC/B,IAAMC,kBAAkB,GAAAxK,OAAA,CAAAwK,kBAAA,GAAG,IAAI;AAC/B,IAAMC,sBAAsB,GAAAzK,OAAA,CAAAyK,sBAAA,GAAG,KAAK;AACpC,IAAMC,sBAAsB,GAAA1K,OAAA,CAAA0K,sBAAA,GAAG,KAAK;AACpC,IAAMC,eAAe,GAAA3K,OAAA,CAAA2K,eAAA,GAAG,IAAI;AAE5B,IAAMC,gBAAgB,GAAA5K,OAAA,CAAA4K,gBAAA,GAAG,GAAG;AAC5B,IAAMC,eAAe,GAAA7K,OAAA,CAAA6K,eAAA,GAAG,GAAG;AAC3B,IAAMC,gBAAgB,GAAA9K,OAAA,CAAA8K,gBAAA,GAAG,GAAG;AAC5B,IAAMC,oBAAoB,GAAA/K,OAAA,CAAA+K,oBAAA,GAAG,GAAG;AAChC,IAAMC,kBAAkB,GAAAhL,OAAA,CAAAgL,kBAAA,GAAG,GAAG;AAC9B,IAAMC,mBAAmB,GAAAjL,OAAA,CAAAiL,mBAAA,GAAG,GAAG;AAC/B,IAAMC,uBAAuB,GAAAlL,OAAA,CAAAkL,uBAAA,GAAG,GAAG;AACnC,IAAMC,iBAAiB,GAAAnL,OAAA,CAAAmL,iBAAA,GAAG,GAAG;AAE7B,IAAMC,YAAY,GAAApL,OAAA,CAAAoL,YAAA,GAAG,GAAG;AACxB,IAAMC,WAAW,GAAArL,OAAA,CAAAqL,WAAA,GAAG,GAAG;AACvB,IAAMC,YAAY,GAAAtL,OAAA,CAAAsL,YAAA,GAAG,GAAG;AACxB,IAAMC,gBAAgB,GAAAvL,OAAA,CAAAuL,gBAAA,GAAG,GAAG;AAC5B,IAAMC,cAAc,GAAAxL,OAAA,CAAAwL,cAAA,GAAG,GAAG;AAC1B,IAAMC,eAAe,GAAAzL,OAAA,CAAAyL,eAAA,GAAG,GAAG;AAC3B,IAAMC,mBAAmB,GAAA1L,OAAA,CAAA0L,mBAAA,GAAG,GAAG;AAC/B,IAAMC,aAAa,GAAA3L,OAAA,CAAA2L,aAAA,GAAG,GAAG;AAEzB,IAAMC,eAAe,GAAA5L,OAAA,CAAA4L,eAAA,GAAG,KAAK;AAC7B,IAAMC,gBAAgB,GAAA7L,OAAA,CAAA6L,gBAAA,GAAG,KAAK;AAC9B,IAAMC,eAAe,GAAA9L,OAAA,CAAA8L,eAAA,GAAG,KAAK;AAC7B,IAAMC,eAAe,GAAA/L,OAAA,CAAA+L,eAAA,GAAG,KAAK;AAC7B,IAAMC,gBAAgB,GAAAhM,OAAA,CAAAgM,gBAAA,GAAG,KAAK;AAC9B,IAAMC,eAAe,GAAAjM,OAAA,CAAAiM,eAAA,GAAG,KAAK;AAC7B,IAAMC,eAAe,GAAAlM,OAAA,CAAAkM,eAAA,GAAG,KAAK;AAC7B,IAAMC,gBAAgB,GAAAnM,OAAA,CAAAmM,gBAAA,GAAG,KAAK;AAC9B,IAAMC,eAAe,GAAApM,OAAA,CAAAoM,eAAA,GAAG,KAAK;AAE7B,IAAMC,KAAK,GAAArM,OAAA,CAAAqM,KAAA,GAAG,KAAK;AACnB,IAAMC,KAAK,GAAAtM,OAAA,CAAAsM,KAAA,GAAG,QAAQ;AAEtB,IAAMC,YAAY,GAAAvM,OAAA,CAAAuM,YAAA,GAAG,IAAI,CAAC,CAAC;;AAE3B,IAAMC,qBAAqB,GAAAxM,OAAA,CAAAwM,qBAAA,GAAG,IAAI;AAClC,IAAMC,sBAAsB,GAAAzM,OAAA,CAAAyM,sBAAA,GAAG,IAAI;;AAEnC;AACA;AACA;AAFA,IAIMC,eAAe,GAAA1M,OAAA,CAAA0M,eAAA;EAAA,SAAAA,gBAAA;IAAAhO,eAAA,OAAAgO,eAAA;EAAA;EAAAvN,YAAA,CAAAuN,eAAA;IAAAxN,GAAA;IAAAvG,KAAA,EAEpB,SAAAgU,iBAAkB7S,IAAI,EAAE8S,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAKjN,SAAS,EAAG,IAAI,CAACiN,UAAU,GAAG,CAAC,CAAC;MAEzD,IAAMC,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,IAAKC,SAAS,CAAEhT,IAAI,CAAE,KAAK8F,SAAS,EAAG;QAEtCkN,SAAS,CAAEhT,IAAI,CAAE,GAAG,EAAE;MAEvB;MAEA,IAAKgT,SAAS,CAAEhT,IAAI,CAAE,CAACiT,OAAO,CAAEH,QAAS,CAAC,KAAK,CAAE,CAAC,EAAG;QAEpDE,SAAS,CAAEhT,IAAI,CAAE,CAAC8C,IAAI,CAAEgQ,QAAS,CAAC;MAEnC;IAED;EAAC;IAAA1N,GAAA;IAAAvG,KAAA,EAED,SAAAqU,iBAAkBlT,IAAI,EAAE8S,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAKjN,SAAS,EAAG,OAAO,KAAK;MAEjD,IAAMkN,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,OAAOC,SAAS,CAAEhT,IAAI,CAAE,KAAK8F,SAAS,IAAIkN,SAAS,CAAEhT,IAAI,CAAE,CAACiT,OAAO,CAAEH,QAAS,CAAC,KAAK,CAAE,CAAC;IAExF;EAAC;IAAA1N,GAAA;IAAAvG,KAAA,EAED,SAAAsU,oBAAqBnT,IAAI,EAAE8S,QAAQ,EAAG;MAErC,IAAK,IAAI,CAACC,UAAU,KAAKjN,SAAS,EAAG;MAErC,IAAMkN,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEhT,IAAI,CAAE;MAEvC,IAAKoT,aAAa,KAAKtN,SAAS,EAAG;QAElC,IAAMuN,KAAK,GAAGD,aAAa,CAACH,OAAO,CAAEH,QAAS,CAAC;QAE/C,IAAKO,KAAK,KAAK,CAAE,CAAC,EAAG;UAEpBD,aAAa,CAACE,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;QAEjC;MAED;IAED;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA0U,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACT,UAAU,KAAKjN,SAAS,EAAG;MAErC,IAAMkN,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEQ,KAAK,CAACxT,IAAI,CAAE;MAE7C,IAAKoT,aAAa,KAAKtN,SAAS,EAAG;QAElC0N,KAAK,CAACxO,MAAM,GAAG,IAAI;;QAEnB;QACA,IAAMyO,KAAK,GAAGL,aAAa,CAACjP,KAAK,CAAE,CAAE,CAAC;QAEtC,KAAM,IAAIrF,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqT,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEhD2U,KAAK,CAAE3U,CAAC,CAAE,CAACoB,IAAI,CAAE,IAAI,EAAEsT,KAAM,CAAC;QAE/B;QAEAA,KAAK,CAACxO,MAAM,GAAG,IAAI;MAEpB;IAED;EAAC;EAAA,OAAA4N,eAAA;AAAA;AAIF,IAAMcgD,IAAIC,KAAK,GAAG,OAAO;AAGnB,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC7B,IAAMC,OAAO,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;;AAE7B;AACA,SAASE,YAAYA,CAAA,EAAG;EAEvB,IAAMC,EAAE,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMC,EAAE,GAAGN,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAME,EAAE,GAAGP,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMG,EAAE,GAAGR,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMI,IAAI,GAAGZ,IAAI,CAAEO,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GAC/GP,IAAI,CAAES,EAAE,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GACjHT,IAAI,CAAEU,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAC3GV,IAAI,CAAEW,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE;;EAEhG;EACA,OAAOC,IAAI,CAACC,WAAW,CAAC,CAAC;AAE1B;AAEA,SAASC,KAAKA,CAAE3V,KAAK,EAAE4V,GAAG,EAAEC,GAAG,EAAG;EAEjC,OAAOb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE7V,KAAM,CAAE,CAAC;AAE/C;;AAEA;AACA;AACA,SAAS8V,eAAeA,CAAElW,CAAC,EAAEmW,CAAC,EAAG;EAEhC,OAAO,CAAInW,CAAC,GAAGmW,CAAC,GAAKA,CAAC,IAAKA,CAAC;AAE7B;;AAEA;AACA,SAASC,SAASA,CAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEvC,OAAOD,EAAE,GAAG,CAAEH,CAAC,GAAGC,EAAE,KAAOG,EAAE,GAAGD,EAAE,CAAE,IAAKD,EAAE,GAAGD,EAAE,CAAE;AAEnD;;AAEA;AACA,SAASI,WAAWA,CAAEL,CAAC,EAAEvU,CAAC,EAAE1B,KAAK,EAAG;EAEnC,IAAKiW,CAAC,KAAKvU,CAAC,EAAG;IAEd,OAAO,CAAE1B,KAAK,GAAGiW,CAAC,KAAOvU,CAAC,GAAGuU,CAAC,CAAE;EAEjC,CAAC,MAAM;IAEN,OAAO,CAAC;EAET;AAED;;AAEA;AACA,SAASM,IAAIA,CAAEN,CAAC,EAAEvU,CAAC,EAAElC,CAAC,EAAG;EAExB,OAAO,CAAE,CAAC,GAAGA,CAAC,IAAKyW,CAAC,GAAGzW,CAAC,GAAGkC,CAAC;AAE7B;;AAEA;AACA,SAAS8U,IAAIA,CAAEP,CAAC,EAAEvU,CAAC,EAAE+U,MAAM,EAAEC,EAAE,EAAG;EAEjC,OAAOH,IAAI,CAAEN,CAAC,EAAEvU,CAAC,EAAE,CAAC,GAAGsT,IAAI,CAAC2B,GAAG,CAAE,CAAEF,MAAM,GAAGC,EAAG,CAAE,CAAC;AAEnD;;AAEA;AACA,SAASE,QAAQA,CAAEX,CAAC,EAAE3R,MAAM,GAAG,CAAC,EAAG;EAElC,OAAOA,MAAM,GAAG0Q,IAAI,CAAC6B,GAAG,CAAEf,eAAe,CAAEG,CAAC,EAAE3R,MAAM,GAAG,CAAE,CAAC,GAAGA,MAAO,CAAC;AAEtE;;AAEA;AACA,SAASwS,UAAUA,CAAEb,CAAC,EAAEL,GAAG,EAAEC,GAAG,EAAG;EAElC,IAAKI,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKK,CAAC,IAAIJ,GAAG,EAAG,OAAO,CAAC;EAExBI,CAAC,GAAG,CAAEA,CAAC,GAAGL,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOK,CAAC,GAAGA,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAE;AAE7B;AAEA,SAASc,YAAYA,CAAEd,CAAC,EAAEL,GAAG,EAAEC,GAAG,EAAG;EAEpC,IAAKI,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKK,CAAC,IAAIJ,GAAG,EAAG,OAAO,CAAC;EAExBI,CAAC,GAAG,CAAEA,CAAC,GAAGL,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOK,CAAC,GAAGA,CAAC,GAAGA,CAAC,IAAKA,CAAC,IAAKA,CAAC,GAAG,CAAC,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AAE/C;;AAEA;AACA,SAASe,OAAOA,CAAEC,GAAG,EAAEC,IAAI,EAAG;EAE7B,OAAOD,GAAG,GAAGjC,IAAI,CAACmC,KAAK,CAAEnC,IAAI,CAACK,MAAM,CAAC,CAAC,IAAK6B,IAAI,GAAGD,GAAG,GAAG,CAAC,CAAG,CAAC;AAE9D;;AAEA;AACA,SAASG,SAASA,CAAEH,GAAG,EAAEC,IAAI,EAAG;EAE/B,OAAOD,GAAG,GAAGjC,IAAI,CAACK,MAAM,CAAC,CAAC,IAAK6B,IAAI,GAAGD,GAAG,CAAE;AAE5C;;AAEA;AACA,SAASI,eAAeA,CAAEC,KAAK,EAAG;EAEjC,OAAOA,KAAK,IAAK,GAAG,GAAGtC,IAAI,CAACK,MAAM,CAAC,CAAC,CAAE;AAEvC;;AAEA;AACA,SAASkC,YAAYA,CAAE9V,CAAC,EAAG;EAE1B,IAAKA,CAAC,KAAKwF,SAAS,EAAG6N,KAAK,GAAGrT,CAAC;;EAEhC;;EAEA,IAAIjC,CAAC,GAAGsV,KAAK,IAAI,UAAU;EAE3BtV,CAAC,GAAGwV,IAAI,CAACwC,IAAI,CAAEhY,CAAC,GAAGA,CAAC,KAAK,EAAE,EAAEA,CAAC,GAAG,CAAE,CAAC;EAEpCA,CAAC,IAAIA,CAAC,GAAGwV,IAAI,CAACwC,IAAI,CAAEhY,CAAC,GAAGA,CAAC,KAAK,CAAC,EAAEA,CAAC,GAAG,EAAG,CAAC;EAEzC,OAAO,CAAE,CAAEA,CAAC,GAAGA,CAAC,KAAK,EAAE,MAAO,CAAC,IAAK,UAAU;AAE/C;AAEA,SAASiY,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG3C,OAAO;AAEzB;AAEA,SAAS4C,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG1C,OAAO;AAEzB;AAEA,SAAS2C,YAAYA,CAAE7X,KAAK,EAAG;EAE9B,OAAO,CAAEA,KAAK,GAAKA,KAAK,GAAG,CAAG,MAAO,CAAC,IAAIA,KAAK,KAAK,CAAC;AAEtD;AAEA,SAAS8X,cAAcA,CAAE9X,KAAK,EAAG;EAEhC,OAAOgV,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAE/C,IAAI,CAACgD,IAAI,CAAEhD,IAAI,CAACiD,GAAG,CAAEjY,KAAM,CAAC,GAAGgV,IAAI,CAACkD,GAAI,CAAE,CAAC;AAEhE;AAEA,SAASC,eAAeA,CAAEnY,KAAK,EAAG;EAEjC,OAAOgV,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAE/C,IAAI,CAACmC,KAAK,CAAEnC,IAAI,CAACiD,GAAG,CAAEjY,KAAM,CAAC,GAAGgV,IAAI,CAACkD,GAAI,CAAE,CAAC;AAEjE;AAEA,SAASE,4BAA4BA,CAAEC,CAAC,EAAElY,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEkY,KAAK,EAAG;EAE1D;;EAEA;EACA;EACA;;EAEA,IAAMC,GAAG,GAAGxD,IAAI,CAACwD,GAAG;EACpB,IAAMC,GAAG,GAAGzD,IAAI,CAACyD,GAAG;EAEpB,IAAMC,EAAE,GAAGF,GAAG,CAAEF,CAAC,GAAG,CAAE,CAAC;EACvB,IAAMK,EAAE,GAAGF,GAAG,CAAEH,CAAC,GAAG,CAAE,CAAC;EAEvB,IAAMM,GAAG,GAAGJ,GAAG,CAAE,CAAErY,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAChC,IAAMwY,GAAG,GAAGJ,GAAG,CAAE,CAAEtY,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAEhC,IAAMyY,IAAI,GAAGN,GAAG,CAAE,CAAErY,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EACjC,IAAM0Y,IAAI,GAAGN,GAAG,CAAE,CAAEtY,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAEjC,IAAM2Y,IAAI,GAAGR,GAAG,CAAE,CAAEnY,CAAC,GAAGF,CAAC,IAAK,CAAE,CAAC;EACjC,IAAM8Y,IAAI,GAAGR,GAAG,CAAE,CAAEpY,CAAC,GAAGF,CAAC,IAAK,CAAE,CAAC;EAEjC,QAASoY,KAAK;IAEb,KAAK,KAAK;MACTF,CAAC,CAACa,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTP,CAAC,CAACa,GAAG,CAAEP,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEJ,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTP,CAAC,CAACa,GAAG,CAAEP,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTP,CAAC,CAACa,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTP,CAAC,CAACa,GAAG,CAAEP,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEP,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTP,CAAC,CAACa,GAAG,CAAEP,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED;MACCO,OAAO,CAACC,IAAI,CAAE,iFAAiF,GAAGb,KAAM,CAAC;EAE3G;AAED;AAEA,SAASc,WAAWA,CAAErZ,KAAK,EAAE4U,KAAK,EAAG;EAEpC,QAASA,KAAK,CAACnQ,WAAW;IAEzB,KAAK6U,YAAY;MAEhB,OAAOtZ,KAAK;IAEb,KAAKuZ,WAAW;MAEf,OAAOvZ,KAAK,GAAG,YAAY;IAE5B,KAAKwZ,WAAW;MAEf,OAAOxZ,KAAK,GAAG,OAAO;IAEvB,KAAKyZ,UAAU;MAEd,OAAOzZ,KAAK,GAAG,KAAK;IAErB,KAAK0Z,UAAU;MAEd,OAAO1E,IAAI,CAACa,GAAG,CAAE7V,KAAK,GAAG,YAAY,EAAE,CAAE,GAAI,CAAC;IAE/C,KAAK2Z,UAAU;MAEd,OAAO3E,IAAI,CAACa,GAAG,CAAE7V,KAAK,GAAG,OAAO,EAAE,CAAE,GAAI,CAAC;IAE1C,KAAK4Z,SAAS;MAEb,OAAO5E,IAAI,CAACa,GAAG,CAAE7V,KAAK,GAAG,KAAK,EAAE,CAAE,GAAI,CAAC;IAExC;MAEC,MAAM,IAAI6C,KAAK,CAAE,yBAA0B,CAAC;EAE9C;AAED;AAEA,SAASgX,SAASA,CAAE7Z,KAAK,EAAE4U,KAAK,EAAG;EAElC,QAASA,KAAK,CAACnQ,WAAW;IAEzB,KAAK6U,YAAY;MAEhB,OAAOtZ,KAAK;IAEb,KAAKuZ,WAAW;MAEf,OAAOvE,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,YAAa,CAAC;IAE1C,KAAKwZ,WAAW;MAEf,OAAOxE,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,OAAQ,CAAC;IAErC,KAAKyZ,UAAU;MAEd,OAAOzE,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,KAAM,CAAC;IAEnC,KAAK0Z,UAAU;MAEd,OAAO1E,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,YAAa,CAAC;IAE1C,KAAK2Z,UAAU;MAEd,OAAO3E,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,OAAQ,CAAC;IAErC,KAAK4Z,SAAS;MAEb,OAAO5E,IAAI,CAAC8E,KAAK,CAAE9Z,KAAK,GAAG,KAAM,CAAC;IAEnC;MAEC,MAAM,IAAI6C,KAAK,CAAE,yBAA0B,CAAC;EAE9C;AAED;AAEA,IAAMkX,SAAS,GAAA1S,OAAA,CAAA0S,SAAA,GAAG;EACjBhF,OAAO,EAAEA,OAAO;EAChBG,OAAO,EAAEA,OAAO;EAChBC,YAAY,EAAEA,YAAY;EAC1BQ,KAAK,EAAEA,KAAK;EACZG,eAAe,EAAEA,eAAe;EAChCE,SAAS,EAAEA,SAAS;EACpBM,WAAW,EAAEA,WAAW;EACxBC,IAAI,EAAEA,IAAI;EACVC,IAAI,EAAEA,IAAI;EACVI,QAAQ,EAAEA,QAAQ;EAClBE,UAAU,EAAEA,UAAU;EACtBC,YAAY,EAAEA,YAAY;EAC1BC,OAAO,EAAEA,OAAO;EAChBI,SAAS,EAAEA,SAAS;EACpBC,eAAe,EAAEA,eAAe;EAChCE,YAAY,EAAEA,YAAY;EAC1BE,QAAQ,EAAEA,QAAQ;EAClBE,QAAQ,EAAEA,QAAQ;EAClBE,YAAY,EAAEA,YAAY;EAC1BC,cAAc,EAAEA,cAAc;EAC9BK,eAAe,EAAEA,eAAe;EAChCC,4BAA4B,EAAEA,4BAA4B;EAC1DyB,SAAS,EAAEA,SAAS;EACpBR,WAAW,EAAEA;AACd,CAAC;AAAC,IAEIW,OAAO,GAAA3S,OAAA,CAAA2S,OAAA,0BAAAC,gBAAA;EAEZ,SAAAD,QAAa/D,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAG;IAAAqE,eAAA,OAAAiU,OAAA;IAE3BA,OAAO,CAACra,SAAS,CAACua,SAAS,GAAG,IAAI;IAElC,IAAI,CAACjE,CAAC,GAAGA,CAAC;IACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;EAEX;EAAC8E,YAAA,CAAAwT,OAAA;IAAAzT,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAClE,CAAC;IAEd,CAAC;IAAAiD,GAAA,EAED,SAAAA,IAAWlZ,KAAK,EAAG;MAElB,IAAI,CAACiW,CAAC,GAAGjW,KAAK;IAEf;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACzY,CAAC;IAEd,CAAC;IAAAwX,GAAA,EAED,SAAAA,IAAYlZ,KAAK,EAAG;MAEnB,IAAI,CAAC0B,CAAC,GAAG1B,KAAK;IAEf;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKjD,CAAC,EAAEvU,CAAC,EAAG;MAEX,IAAI,CAACuU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAoa,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACpE,CAAC,GAAGoE,MAAM;MACf,IAAI,CAAC3Y,CAAC,GAAG2Y,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM7Y,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAwa,aAAchG,KAAK,EAAExU,KAAK,EAAG;MAE5B,QAASwU,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAACyB,CAAC,GAAGjW,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC0B,CAAC,GAAG1B,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI6C,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAya,aAAcjG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAACyB,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACvU,CAAC;QACrB;UAAS,MAAM,IAAImB,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACwR,CAAC,EAAE,IAAI,CAACvU,CAAE,CAAC;IAE9C;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM3Y,CAAC,EAAG;MAET,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC;MACZ,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAK5Y,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6a,UAAWpZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA8a,WAAY3a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA+a,gBAAiB/Y,CAAC,EAAEP,CAAC,EAAG;MAEvB,IAAI,CAACwU,CAAC,IAAIjU,CAAC,CAACiU,CAAC,GAAGxU,CAAC;MACjB,IAAI,CAACC,CAAC,IAAIM,CAAC,CAACN,CAAC,GAAGD,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAgb,IAAKhZ,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAib,UAAWxZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAkb,WAAY/a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAUnZ,CAAC,EAAG;MAEb,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgBf,MAAM,EAAG;MAExB,IAAI,CAACpE,CAAC,IAAIoE,MAAM;MAChB,IAAI,CAAC3Y,CAAC,IAAI2Y,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAqb,OAAQrZ,CAAC,EAAG;MAEX,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAsb,aAAcjB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACe,cAAc,CAAE,CAAC,GAAGf,MAAO,CAAC;IAEzC;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAub,aAAcxF,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;MAC5B,IAAMnC,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAACvF,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE;MACzC,IAAI,CAACmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAgH,GAAA;IAAAvG,KAAA,EAED,SAAA4V,IAAK5T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACY,GAAG,CAAE,IAAI,CAAClU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6V,IAAK7T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACI,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE,IAAI,CAACnU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA2V,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACI,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACK,CAAC,EAAEjB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACI,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAED,GAAG,CAAClU,CAAC,EAAEsT,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAyb,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAAC1F,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAAC1F,CAAE,CAAE,CAAC;MACvD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAACja,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA4b,YAAahG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMvR,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAE,CAAC,CAAC8W,cAAc,CAAEpG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEvR,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAmX,MAAA,EAAQ;MAEP,IAAI,CAAClB,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAClB,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACzV,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAgY,KAAA,EAAO;MAEN,IAAI,CAAC/B,CAAC,GAAGjB,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC/B,CAAE,CAAC;MAC5B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACgD,IAAI,CAAE,IAAI,CAACtW,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA8Z,MAAA,EAAQ;MAEP,IAAI,CAAC7D,CAAC,GAAGjB,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC7D,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAACpY,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6b,YAAA,EAAc;MAEb,IAAI,CAAC5F,CAAC,GAAGjB,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC7F,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAACpa,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA+b,OAAA,EAAS;MAER,IAAI,CAAC9F,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACvU,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAgc,IAAKha,CAAC,EAAG;MAER,OAAO,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC;IAEnC;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAic,MAAOja,CAAC,EAAG;MAEV,OAAO,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACN,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGM,CAAC,CAACiU,CAAC;IAEnC;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAkc,SAAA,EAAW;MAEV,OAAO,IAAI,CAACjG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAC;IAEzC;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAsE,OAAA,EAAS;MAER,OAAO0Q,IAAI,CAACmH,IAAI,CAAE,IAAI,CAAClG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAEtD;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAoc,gBAAA,EAAkB;MAEjB,OAAOpH,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACZ,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACnV,CAAE,CAAC;IAE/C;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6Z,UAAA,EAAY;MAEX,OAAO,IAAI,CAACyB,YAAY,CAAE,IAAI,CAAChX,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAqc,MAAA,EAAQ;MAEP;;MAEA,IAAMA,KAAK,GAAGrH,IAAI,CAACsH,KAAK,CAAE,CAAE,IAAI,CAAC5a,CAAC,EAAE,CAAE,IAAI,CAACuU,CAAE,CAAC,GAAGjB,IAAI,CAACC,EAAE;MAExD,OAAOoH,KAAK;IAEb;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAAuc,QAASva,CAAC,EAAG;MAEZ,IAAMwa,WAAW,GAAGxH,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGla,CAAC,CAACka,QAAQ,CAAC,CAAE,CAAC;MAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAOxH,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMwH,KAAK,GAAG,IAAI,CAACT,GAAG,CAAEha,CAAE,CAAC,GAAGwa,WAAW;;MAEzC;;MAEA,OAAOxH,IAAI,CAAC0H,IAAI,CAAE/G,KAAK,CAAE8G,KAAK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAA2c,WAAY3a,CAAC,EAAG;MAEf,OAAOgT,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAE5a,CAAE,CAAE,CAAC;IAEhD;EAAC;IAAAuE,GAAA;IAAAvG,KAAA,EAED,SAAA4c,kBAAmB5a,CAAC,EAAG;MAEtB,IAAM6a,EAAE,GAAG,IAAI,CAAC5G,CAAC,GAAGjU,CAAC,CAACiU,CAAC;QAAE6G,EAAE,GAAG,IAAI,CAACpb,CAAC,GAAGM,CAAC,CAACN,CAAC;MAC1C,OAAOmb,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;IAEzB;EAAC;IAAAvW,GAAA;IAAAvG,KAAA,EAED,SAAA+c,oBAAqB/a,CAAC,EAAG;MAExB,OAAOgT,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACZ,CAAC,GAAGjU,CAAC,CAACiU,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACnV,CAAC,GAAGM,CAAC,CAACN,CAAE,CAAC;IAE3D;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAgd,UAAW1Y,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACuV,SAAS,CAAC,CAAC,CAACuB,cAAc,CAAE9W,MAAO,CAAC;IAEjD;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAuW,KAAMvU,CAAC,EAAEib,KAAK,EAAG;MAEhB,IAAI,CAAChH,CAAC,IAAI,CAAEjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKgH,KAAK;MAClC,IAAI,CAACvb,CAAC,IAAI,CAAEM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKub,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAkd,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAChH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,GAAG,CAAEmH,EAAE,CAACnH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;MACvC,IAAI,CAACvb,CAAC,GAAGyb,EAAE,CAACzb,CAAC,GAAG,CAAE0b,EAAE,CAAC1b,CAAC,GAAGyb,EAAE,CAACzb,CAAC,IAAKub,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQrb,CAAC,EAAG;MAEX,OAAWA,CAAC,CAACiU,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQjU,CAAC,CAACN,CAAC,KAAK,IAAI,CAACA,CAAG;IAElD;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACtH,CAAC,GAAGrB,KAAK,CAAE2I,MAAM,CAAE;MACxB,IAAI,CAAC7b,CAAC,GAAGkT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACtH,CAAC;MACxBrB,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC7b,CAAC;MAE5B,OAAOkT,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAyd,oBAAqBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,CAACyB,CAAC,GAAGyH,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MAChC,IAAI,CAAC9S,CAAC,GAAGgc,SAAS,CAACE,IAAI,CAAEpJ,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA6d,aAAcC,MAAM,EAAEzB,KAAK,EAAG;MAE7B,IAAMhc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAE6D,KAAM,CAAC;QAAE5a,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAE4D,KAAM,CAAC;MAElD,IAAMpG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG6H,MAAM,CAAC7H,CAAC;MAC3B,IAAMvU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGoc,MAAM,CAACpc,CAAC;MAE3B,IAAI,CAACuU,CAAC,GAAGA,CAAC,GAAG5V,CAAC,GAAGqB,CAAC,GAAGD,CAAC,GAAGqc,MAAM,CAAC7H,CAAC;MACjC,IAAI,CAACvU,CAAC,GAAGuU,CAAC,GAAGxU,CAAC,GAAGC,CAAC,GAAGrB,CAAC,GAAGyd,MAAM,CAACpc,CAAC;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAqV,OAAA,EAAS;MAER,IAAI,CAACY,CAAC,GAAGjB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC3T,CAAC,GAAGsT,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA9O,GAAA,EAAA0T,gBAAA;IAAAja,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAED,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA5Y,IAAA,GAAA4Y,SAAA,CAAAva,IAAA;UAAA;YAAAua,SAAA,CAAAva,IAAA;YAEC,OAAM,IAAI,CAACwS,CAAC;UAAA;YAAA+H,SAAA,CAAAva,IAAA;YACZ,OAAM,IAAI,CAAC/B,CAAC;UAAA;UAAA;YAAA,OAAAsc,SAAA,CAAAzY,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAga,OAAA;AAAA,EALE9Z,MAAM,CAACE,QAAQ;AAAA,IASb6d,OAAO,GAAA5W,OAAA,CAAA4W,OAAA;EAEZ,SAAAA,QAAaC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;IAAA3Y,eAAA,OAAAkY,OAAA;IAE1DA,OAAO,CAACte,SAAS,CAACgf,SAAS,GAAG,IAAI;IAElC,IAAI,CAACnD,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;IAED,IAAK0C,GAAG,KAAKjX,SAAS,EAAG;MAExB,IAAI,CAACiS,GAAG,CAAEgF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAExD;EAED;EAAClY,YAAA,CAAAyX,OAAA;IAAA1X,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKgF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAElD,IAAME,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,GAAGV,GAAG;MAAEU,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAC3CI,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAC3CG,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAnY,GAAA;IAAAvG,KAAA,EAED,SAAA6e,SAAA,EAAW;MAEV,IAAI,CAAC3F,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA3S,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM5E,CAAC,EAAG;MAET,IAAM6I,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAErBoD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAvY,GAAA;IAAAvG,KAAA,EAED,SAAA+e,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAACG,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MACrCF,KAAK,CAACE,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MACrCD,KAAK,CAACC,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAvG,KAAA,EAED,SAAAof,eAAgBrJ,CAAC,EAAG;MAEnB,IAAM+I,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAErB,IAAI,CAACtC,GAAG,CAEP4F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAEzB,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAvY,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAUpF,CAAC,EAAG;MAEb,OAAO,IAAI,CAACsJ,gBAAgB,CAAE,IAAI,EAAEtJ,CAAE,CAAC;IAExC;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAsf,YAAavJ,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACsJ,gBAAgB,CAAEtJ,CAAC,EAAE,IAAK,CAAC;IAExC;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAqf,iBAAkBlf,CAAC,EAAEmY,CAAC,EAAG;MAExB,IAAMiH,EAAE,GAAGpf,CAAC,CAACqb,QAAQ;MACrB,IAAMgE,EAAE,GAAGlH,CAAC,CAACkD,QAAQ;MACrB,IAAMoD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMiE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;MAEjD,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,CAAC,CAAE;MAEjDZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAna,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgB3Z,CAAC,EAAG;MAEnB,IAAMmd,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MACxCmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MACxCmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA2gB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMrb,CAAC,GAAGye,EAAE,CAAE,CAAC,CAAE;QAAEtG,CAAC,GAAGsG,EAAE,CAAE,CAAC,CAAE;QAAEve,CAAC,GAAGue,EAAE,CAAE,CAAC,CAAE;QAC1C9c,CAAC,GAAG8c,EAAE,CAAE,CAAC,CAAE;QAAErf,CAAC,GAAGqf,EAAE,CAAE,CAAC,CAAE;QAAEpd,CAAC,GAAGod,EAAE,CAAE,CAAC,CAAE;QACrC1c,CAAC,GAAG0c,EAAE,CAAE,CAAC,CAAE;QAAEtd,CAAC,GAAGsd,EAAE,CAAE,CAAC,CAAE;QAAE3e,CAAC,GAAG2e,EAAE,CAAE,CAAC,CAAE;MAEtC,OAAOze,CAAC,GAAGZ,CAAC,GAAGU,CAAC,GAAGE,CAAC,GAAGqB,CAAC,GAAGF,CAAC,GAAGgX,CAAC,GAAGxW,CAAC,GAAG7B,CAAC,GAAGqY,CAAC,GAAG9W,CAAC,GAAGU,CAAC,GAAG7B,CAAC,GAAGyB,CAAC,GAAGR,CAAC,GAAGjB,CAAC,GAAGd,CAAC,GAAG2C,CAAC;IAE7E;EAAC;IAAAqE,GAAA;IAAAvG,KAAA,EAED,SAAA4gB,OAAA,EAAS;MAER,IAAMhC,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAEvB0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAC3CT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAC3CR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;QAE3CiC,GAAG,GAAGnC,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAC3BuC,GAAG,GAAGrC,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG;QAC3B4C,GAAG,GAAGxC,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAE3B4C,GAAG,GAAG9C,GAAG,GAAG2C,GAAG,GAAGxC,GAAG,GAAGyC,GAAG,GAAGtC,GAAG,GAAGuC,GAAG;MAExC,IAAKC,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC9H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE7D,IAAM+H,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBpC,EAAE,CAAE,CAAC,CAAE,GAAGiC,GAAG,GAAGI,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAK4C,MAAM;MAC5CrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK2C,MAAM;MAE5CrC,EAAE,CAAE,CAAC,CAAE,GAAGkC,GAAG,GAAGG,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEF,GAAG,GAAGR,GAAG,GAAGM,GAAG,GAAGJ,GAAG,IAAK6C,MAAM;MAC5CrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG,IAAK+C,MAAM;MAE5CrC,EAAE,CAAE,CAAC,CAAE,GAAGmC,GAAG,GAAGE,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEP,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAK+C,MAAM;MAC5CrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK8C,MAAM;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAA1a,GAAA;IAAAvG,KAAA,EAED,SAAAkhB,UAAA,EAAY;MAEX,IAAIC,GAAG;MACP,IAAMpL,CAAC,GAAG,IAAI,CAACyF,QAAQ;MAEvB2F,GAAG,GAAGpL,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGoL,GAAG;MAC3CA,GAAG,GAAGpL,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGoL,GAAG;MAC3CA,GAAG,GAAGpL,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGoL,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAvG,KAAA,EAED,SAAAohB,gBAAiBC,OAAO,EAAG;MAE1B,OAAO,IAAI,CAACjC,cAAc,CAAEiC,OAAQ,CAAC,CAACT,MAAM,CAAC,CAAC,CAACM,SAAS,CAAC,CAAC;IAE3D;EAAC;IAAA3a,GAAA;IAAAvG,KAAA,EAED,SAAAshB,mBAAoB7hB,CAAC,EAAG;MAEvB,IAAMsW,CAAC,GAAG,IAAI,CAACyF,QAAQ;MAEvB/b,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MACftW,CAAC,CAAE,CAAC,CAAE,GAAGsW,CAAC,CAAE,CAAC,CAAE;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAuhB,eAAgBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAElD,IAAMzhB,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAEoJ,QAAS,CAAC;MAC9B,IAAMngB,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEmJ,QAAS,CAAC;MAE9B,IAAI,CAAC1I,GAAG,CACPwI,EAAE,GAAGrhB,CAAC,EAAEqhB,EAAE,GAAGjgB,CAAC,EAAE,CAAEigB,EAAE,IAAKrhB,CAAC,GAAGwhB,EAAE,GAAGpgB,CAAC,GAAGqgB,EAAE,CAAE,GAAGD,EAAE,GAAGL,EAAE,EACpD,CAAEG,EAAE,GAAGlgB,CAAC,EAAEkgB,EAAE,GAAGthB,CAAC,EAAE,CAAEshB,EAAE,IAAK,CAAElgB,CAAC,GAAGogB,EAAE,GAAGxhB,CAAC,GAAGyhB,EAAE,CAAE,GAAGA,EAAE,GAAGL,EAAE,EACxD,CAAC,EAAE,CAAC,EAAE,CACP,CAAC;MAED,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAlb,GAAA;IAAAvG,KAAA,EAEA,SAAA+hB,MAAOL,EAAE,EAAEC,EAAE,EAAG;MAEf,IAAI,CAACrC,WAAW,CAAE0C,GAAG,CAACC,SAAS,CAAEP,EAAE,EAAEC,EAAG,CAAE,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAApb,GAAA;IAAAvG,KAAA,EAED,SAAAkiB,OAAQzF,KAAK,EAAG;MAEf,IAAI,CAAC6C,WAAW,CAAE0C,GAAG,CAACG,YAAY,CAAE,CAAE1F,KAAM,CAAE,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAWZ,EAAE,EAAEC,EAAE,EAAG;MAEnB,IAAI,CAACnC,WAAW,CAAE0C,GAAG,CAACK,eAAe,CAAEb,EAAE,EAAEC,EAAG,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAlb,GAAA;IAAAvG,KAAA,EAEA,SAAAqiB,gBAAiBpM,CAAC,EAAEvU,CAAC,EAAG;MAEvB,IAAKuU,CAAC,CAACiE,SAAS,EAAG;QAElB,IAAI,CAAChB,GAAG,CAEP,CAAC,EAAE,CAAC,EAAEjD,CAAC,CAACA,CAAC,EACT,CAAC,EAAE,CAAC,EAAEA,CAAC,CAACvU,CAAC,EACT,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAEF,CAAC,MAAM;QAEN,IAAI,CAACwX,GAAG,CAEP,CAAC,EAAE,CAAC,EAAEjD,CAAC,EACP,CAAC,EAAE,CAAC,EAAEvU,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAEF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAmiB,aAAc1F,KAAK,EAAG;MAErB;;MAEA,IAAMpc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;MAC3B,IAAMhb,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MAE3B,IAAI,CAACvD,GAAG,CAEP7Y,CAAC,EAAE,CAAEoB,CAAC,EAAE,CAAC,EACTA,CAAC,EAAEpB,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAiiB,UAAWhM,CAAC,EAAEvU,CAAC,EAAG;MAEjB,IAAI,CAACwX,GAAG,CAEPjD,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAEvU,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA6E,GAAA;IAAAvG,KAAA,EAEA,SAAAqd,OAAQiF,MAAM,EAAG;MAEhB,IAAM1D,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAGwD,MAAM,CAAC9G,QAAQ;MAE1B,KAAM,IAAIvb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK2e,EAAE,CAAE3e,CAAC,CAAE,KAAK6e,EAAE,CAAE7e,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAItd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACub,QAAQ,CAAEvb,CAAC,CAAE,GAAG2U,KAAK,CAAE3U,CAAC,GAAGsd,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB5G,KAAK,CAAE2I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7B,OAAOhK,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAAC6Y,SAAS,CAAE,IAAI,CAAC9B,QAAS,CAAC;IAEzD;EAAC;EAAA,OAAAyC,OAAA;AAAA;AAIF,IAAM+D,GAAG,GAAG,aAAc,IAAI/D,OAAO,CAAC,CAAC;AAEvC,SAASsE,gBAAgBA,CAAE3N,KAAK,EAAG;EAElC;;EAEA,KAAM,IAAI3U,CAAC,GAAG2U,KAAK,CAACtQ,MAAM,GAAG,CAAC,EAAErE,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;IAE9C,IAAK2U,KAAK,CAAE3U,CAAC,CAAE,IAAI,KAAK,EAAG,OAAO,IAAI,CAAC,CAAC;EAEzC;;EAEA,OAAO,KAAK;AAEb;AAEA,IAAMuiB,YAAY,GAAG;EACpB5I,SAAS,EAAEA,SAAS;EACpBH,UAAU,EAAEA,UAAU;EACtBgJ,iBAAiB,EAAEA,iBAAiB;EACpC9I,UAAU,EAAEA,UAAU;EACtBH,WAAW,EAAEA,WAAW;EACxBE,UAAU,EAAEA,UAAU;EACtBH,WAAW,EAAEA,WAAW;EACxBD,YAAY,EAAEA,YAAY;EAC1BoJ,YAAY,EAAEA;AACf,CAAC;AAED,SAASC,aAAaA,CAAExhB,IAAI,EAAEyhB,MAAM,EAAG;EAEtC,OAAO,IAAIJ,YAAY,CAAErhB,IAAI,CAAE,CAAEyhB,MAAO,CAAC;AAE1C;AAEA,SAASC,eAAeA,CAAEne,IAAI,EAAG;EAEhC,OAAOoe,QAAQ,CAACD,eAAe,CAAE,8BAA8B,EAAEne,IAAK,CAAC;AAExE;AAEA,SAASqe,mBAAmBA,CAAA,EAAG;EAE9B,IAAMC,MAAM,GAAGH,eAAe,CAAE,QAAS,CAAC;EAC1CG,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;EAC9B,OAAOF,MAAM;AAEd;AAEA,IAAMG,MAAM,GAAG,CAAC,CAAC;AAEjB,SAASC,QAAQA,CAAEC,OAAO,EAAG;EAE5B,IAAKA,OAAO,IAAIF,MAAM,EAAG;EAEzBA,MAAM,CAAEE,OAAO,CAAE,GAAG,IAAI;EAExBlK,OAAO,CAACC,IAAI,CAAEiK,OAAQ,CAAC;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,gCAAgC,GAAG,aAAc,IAAIrF,OAAO,CAAC,CAAC,CAAC/E,GAAG,CACvE,SAAS,EAAE,QAAQ,EAAE,GAAG,EACxB,SAAS,EAAE,SAAS,EAAE,GAAG,EACzB,SAAS,EAAE,SAAS,EAAE,SACvB,CAAC;AAED,IAAMqK,gCAAgC,GAAG,aAAc,IAAItF,OAAO,CAAC,CAAC,CAAC/E,GAAG,CACvE,SAAS,EAAE,CAAE,SAAS,EAAE,GAAG,EAC3B,CAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAC3B,CAAE,SAAS,EAAE,CAAE,SAAS,EAAE,SAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA,IAAMsK,YAAY,IAAAC,aAAA,OAAAC,eAAA,CAAAD,aAAA,EACfvS,oBAAoB,EAAI;EACzByS,QAAQ,EAAEtS,cAAc;EACxBuS,SAAS,EAAErS,eAAe;EAC1BsS,WAAW,EAAE,SAAAA,YAAEC,KAAK;IAAA,OAAMA,KAAK;EAAA;EAC/BC,aAAa,EAAE,SAAAA,cAAED,KAAK;IAAA,OAAMA,KAAK;EAAA;AAClC,CAAC,GAAAJ,eAAA,CAAAD,aAAA,EACCxS,cAAc,EAAI;EACnB0S,QAAQ,EAAErS,YAAY;EACtBsS,SAAS,EAAErS,eAAe;EAC1BsS,WAAW,EAAE,SAAAA,YAAEC,KAAK;IAAA,OAAMA,KAAK,CAACE,mBAAmB,CAAC,CAAC;EAAA;EACrDD,aAAa,EAAE,SAAAA,cAAED,KAAK;IAAA,OAAMA,KAAK,CAACG,mBAAmB,CAAC,CAAC;EAAA;AACxD,CAAC,GAAAP,eAAA,CAAAD,aAAA,EACCrS,yBAAyB,EAAI;EAC9BuS,QAAQ,EAAEtS,cAAc;EACxBuS,SAAS,EAAEpS,WAAW;EACtBqS,WAAW,EAAE,SAAAA,YAAEC,KAAK;IAAA,OAAMA,KAAK,CAACvI,YAAY,CAAEgI,gCAAiC,CAAC;EAAA;EAChFQ,aAAa,EAAE,SAAAA,cAAED,KAAK;IAAA,OAAMA,KAAK,CAACvI,YAAY,CAAE+H,gCAAiC,CAAC;EAAA;AACnF,CAAC,GAAAI,eAAA,CAAAD,aAAA,EACCtS,mBAAmB,EAAI;EACxBwS,QAAQ,EAAErS,YAAY;EACtBsS,SAAS,EAAEpS,WAAW;EACtBqS,WAAW,EAAE,SAAAA,YAAEC,KAAK;IAAA,OAAMA,KAAK,CAACE,mBAAmB,CAAC,CAAC,CAACzI,YAAY,CAAEgI,gCAAiC,CAAC;EAAA;EACtGQ,aAAa,EAAE,SAAAA,cAAED,KAAK;IAAA,OAAMA,KAAK,CAACvI,YAAY,CAAE+H,gCAAiC,CAAC,CAACW,mBAAmB,CAAC,CAAC;EAAA;AACzG,CAAC,GAAAR,aAAA,CACD;AAED,IAAMS,8BAA8B,GAAG,IAAIC,GAAG,CAAE,CAAEjT,oBAAoB,EAAEE,yBAAyB,CAAG,CAAC;AAErG,IAAMgT,eAAe,GAAA/c,OAAA,CAAA+c,eAAA,GAAG;EAEvBC,OAAO,EAAE,IAAI;EAEbC,kBAAkB,EAAEpT,oBAAoB;EAExC,IAAIqT,UAAUA,CAAA,EAAG;IAEhBpL,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;IAE5F,OAAO,CAAE,IAAI,CAACiL,OAAO;EAEtB,CAAC;EAED,IAAIE,UAAUA,CAAEA,UAAU,EAAG;IAE5BpL,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;IAE5F,IAAI,CAACiL,OAAO,GAAG,CAAEE,UAAU;EAE5B,CAAC;EAED,IAAIC,iBAAiBA,CAAA,EAAG;IAEvB,OAAO,IAAI,CAACF,kBAAkB;EAE/B,CAAC;EAED,IAAIE,iBAAiBA,CAAEC,UAAU,EAAG;IAEnC,IAAK,CAAEP,8BAA8B,CAACQ,GAAG,CAAED,UAAW,CAAC,EAAG;MAEzD,MAAM,IAAI5hB,KAAK,uCAAA8hB,MAAA,CAAwCF,UAAU,QAAM,CAAC;IAEzE;IAEA,IAAI,CAACH,kBAAkB,GAAGG,UAAU;EAErC,CAAC;EAEDG,OAAO,EAAE,SAAAA,QAAWd,KAAK,EAAEe,gBAAgB,EAAEC,gBAAgB,EAAG;IAE/D,IAAK,IAAI,CAACT,OAAO,KAAK,KAAK,IAAIQ,gBAAgB,KAAKC,gBAAgB,IAAI,CAAED,gBAAgB,IAAI,CAAEC,gBAAgB,EAAG;MAElH,OAAOhB,KAAK;IAEb;IAEA,IAAMiB,iBAAiB,GAAGvB,YAAY,CAAEqB,gBAAgB,CAAE,CAAChB,WAAW;IACtE,IAAMmB,mBAAmB,GAAGxB,YAAY,CAAEsB,gBAAgB,CAAE,CAACf,aAAa;IAE1E,OAAOiB,mBAAmB,CAAED,iBAAiB,CAAEjB,KAAM,CAAE,CAAC;EAEzD,CAAC;EAEDmB,qBAAqB,EAAE,SAAAA,sBAAWnB,KAAK,EAAEgB,gBAAgB,EAAG;IAE3D,OAAO,IAAI,CAACF,OAAO,CAAEd,KAAK,EAAE,IAAI,CAACQ,kBAAkB,EAAEQ,gBAAiB,CAAC;EAExE,CAAC;EAEDI,mBAAmB,EAAE,SAAAA,oBAAWpB,KAAK,EAAEe,gBAAgB,EAAG;IAEzD,OAAO,IAAI,CAACD,OAAO,CAAEd,KAAK,EAAEe,gBAAgB,EAAE,IAAI,CAACP,kBAAmB,CAAC;EAExE,CAAC;EAEDa,YAAY,EAAE,SAAAA,aAAWV,UAAU,EAAG;IAErC,OAAOjB,YAAY,CAAEiB,UAAU,CAAE,CAACb,SAAS;EAE5C,CAAC;EAEDwB,WAAW,EAAE,SAAAA,YAAWX,UAAU,EAAG;IAEpC,IAAKA,UAAU,KAAKzT,YAAY,EAAG,OAAOK,cAAc;IAExD,OAAOmS,YAAY,CAAEiB,UAAU,CAAE,CAACd,QAAQ;EAE3C;AAED,CAAC;AAGD,SAAS0B,YAAYA,CAAEhlB,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,OAAO,GAAKA,CAAC,GAAG,YAAY,GAAG2U,IAAI,CAAC+C,GAAG,CAAE1X,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAI,CAAC;AAE7F;AAEA,SAASilB,YAAYA,CAAEjlB,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,SAAS,GAAKA,CAAC,GAAG,KAAK,GAAG,KAAK,GAAK2U,IAAI,CAAC+C,GAAG,CAAE1X,CAAC,EAAE,OAAQ,CAAG,GAAG,KAAK;AAElF;AAEA,IAAIklB,OAAO;AAAC,IAENC,UAAU,GAAAne,OAAA,CAAAme,UAAA;EAAA,SAAAA,WAAA;IAAAzf,eAAA,OAAAyf,UAAA;EAAA;EAAAhf,YAAA,CAAAgf,UAAA;IAAAjf,GAAA;IAAAvG,KAAA,EAEf,SAAAylB,WAAmBC,KAAK,EAAG;MAE1B,IAAK,SAAS,CAACC,IAAI,CAAED,KAAK,CAACE,GAAI,CAAC,EAAG;QAElC,OAAOF,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;QAE/C,OAAOH,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAI5C,MAAM;MAEV,IAAK0C,KAAK,YAAYG,iBAAiB,EAAG;QAEzC7C,MAAM,GAAG0C,KAAK;MAEf,CAAC,MAAM;QAEN,IAAKH,OAAO,KAAKte,SAAS,EAAGse,OAAO,GAAG1C,eAAe,CAAE,QAAS,CAAC;QAElE0C,OAAO,CAACO,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC3BP,OAAO,CAACQ,MAAM,GAAGL,KAAK,CAACK,MAAM;QAE7B,IAAMC,OAAO,GAAGT,OAAO,CAACU,UAAU,CAAE,IAAK,CAAC;QAE1C,IAAKP,KAAK,YAAYQ,SAAS,EAAG;UAEjCF,OAAO,CAACG,YAAY,CAAET,KAAK,EAAE,CAAC,EAAE,CAAE,CAAC;QAEpC,CAAC,MAAM;UAENM,OAAO,CAACI,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAE5D;QAEA/C,MAAM,GAAGuC,OAAO;MAEjB;MAEA,IAAKvC,MAAM,CAAC8C,KAAK,GAAG,IAAI,IAAI9C,MAAM,CAAC+C,MAAM,GAAG,IAAI,EAAG;QAElD5M,OAAO,CAACC,IAAI,CAAE,6EAA6E,EAAEsM,KAAM,CAAC;QAEpG,OAAO1C,MAAM,CAACqD,SAAS,CAAE,YAAY,EAAE,GAAI,CAAC;MAE7C,CAAC,MAAM;QAEN,OAAOrD,MAAM,CAACqD,SAAS,CAAE,WAAY,CAAC;MAEvC;IAED;EAAC;IAAA9f,GAAA;IAAAvG,KAAA,EAED,SAAAsmB,aAAqBZ,KAAK,EAAG;MAE5B,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;QAEzE,IAAMxD,MAAM,GAAGH,eAAe,CAAE,QAAS,CAAC;QAE1CG,MAAM,CAAC8C,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC1B9C,MAAM,CAAC+C,MAAM,GAAGL,KAAK,CAACK,MAAM;QAE5B,IAAMC,OAAO,GAAGhD,MAAM,CAACiD,UAAU,CAAE,IAAK,CAAC;QACzCD,OAAO,CAACI,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAE3D,IAAMU,SAAS,GAAGT,OAAO,CAACU,YAAY,CAAE,CAAC,EAAE,CAAC,EAAEhB,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QACzE,IAAMY,IAAI,GAAGF,SAAS,CAACE,IAAI;QAE3B,KAAM,IAAI1mB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0mB,IAAI,CAACriB,MAAM,EAAErE,CAAC,EAAG,EAAG;UAExC0mB,IAAI,CAAE1mB,CAAC,CAAE,GAAGolB,YAAY,CAAEsB,IAAI,CAAE1mB,CAAC,CAAE,GAAG,GAAI,CAAC,GAAG,GAAG;QAElD;QAEA+lB,OAAO,CAACG,YAAY,CAAEM,SAAS,EAAE,CAAC,EAAE,CAAE,CAAC;QAEvC,OAAOzD,MAAM;MAEd,CAAC,MAAM,IAAK0C,KAAK,CAACiB,IAAI,EAAG;QAExB,IAAMA,KAAI,GAAGjB,KAAK,CAACiB,IAAI,CAACrhB,KAAK,CAAE,CAAE,CAAC;QAElC,KAAM,IAAIrF,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG0mB,KAAI,CAACriB,MAAM,EAAErE,EAAC,EAAG,EAAG;UAExC,IAAK0mB,KAAI,YAAYlN,UAAU,IAAIkN,KAAI,YAAYlE,iBAAiB,EAAG;YAEtEkE,KAAI,CAAE1mB,EAAC,CAAE,GAAG+U,IAAI,CAACmC,KAAK,CAAEkO,YAAY,CAAEsB,KAAI,CAAE1mB,EAAC,CAAE,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC;UAEhE,CAAC,MAAM;YAEN;;YAEA0mB,KAAI,CAAE1mB,EAAC,CAAE,GAAGolB,YAAY,CAAEsB,KAAI,CAAE1mB,EAAC,CAAG,CAAC;UAEtC;QAED;QAEA,OAAO;UACN0mB,IAAI,EAAEA,KAAI;UACVb,KAAK,EAAEJ,KAAK,CAACI,KAAK;UAClBC,MAAM,EAAEL,KAAK,CAACK;QACf,CAAC;MAEF,CAAC,MAAM;QAEN5M,OAAO,CAACC,IAAI,CAAE,6FAA8F,CAAC;QAC7G,OAAOsM,KAAK;MAEb;IAED;EAAC;EAAA,OAAAF,UAAA;AAAA;AAIF,IAAIoB,SAAS,GAAG,CAAC;AAAC,IAEZC,MAAM,GAAAxf,OAAA,CAAAwf,MAAA;EAEX,SAAAA,OAAaF,IAAI,GAAG,IAAI,EAAG;IAAA5gB,eAAA,OAAA8gB,MAAA;IAE1B,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpBpnB,MAAM,CAACK,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;MAAEC,KAAK,EAAE4mB,SAAS;IAAI,CAAE,CAAC;IAE5D,IAAI,CAACnR,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B,IAAI,CAACwR,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACI,OAAO,GAAG,CAAC;EAEjB;EAACvgB,YAAA,CAAAqgB,MAAA;IAAAtgB,GAAA;IAAA2S,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC+mB,OAAO,EAAG;IAEtC;EAAC;IAAAxgB,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhgB,SAAS,IAAI,OAAOggB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACE,MAAM,CAAE,IAAI,CAAC1R,IAAI,CAAE,KAAKxO,SAAS,EAAG;QAE/D,OAAOggB,IAAI,CAACE,MAAM,CAAE,IAAI,CAAC1R,IAAI,CAAE;MAEhC;MAEA,IAAM2R,MAAM,GAAG;QACd3R,IAAI,EAAE,IAAI,CAACA,IAAI;QACf4R,GAAG,EAAE;MACN,CAAC;MAED,IAAMV,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAKA,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAIU,GAAG;QAEP,IAAKC,KAAK,CAACC,OAAO,CAAEZ,IAAK,CAAC,EAAG;UAE5B;;UAEAU,GAAG,GAAG,EAAE;UAER,KAAM,IAAIpnB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGolB,IAAI,CAACriB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;YAE/C,IAAK0mB,IAAI,CAAE1mB,CAAC,CAAE,CAACunB,aAAa,EAAG;cAE9BH,GAAG,CAACpjB,IAAI,CAAEwjB,cAAc,CAAEd,IAAI,CAAE1mB,CAAC,CAAE,CAACylB,KAAM,CAAE,CAAC;YAE9C,CAAC,MAAM;cAEN2B,GAAG,CAACpjB,IAAI,CAAEwjB,cAAc,CAAEd,IAAI,CAAE1mB,CAAC,CAAG,CAAE,CAAC;YAExC;UAED;QAED,CAAC,MAAM;UAEN;;UAEAonB,GAAG,GAAGI,cAAc,CAAEd,IAAK,CAAC;QAE7B;QAEAS,MAAM,CAACC,GAAG,GAAGA,GAAG;MAEjB;MAEA,IAAK,CAAEH,YAAY,EAAG;QAErBD,IAAI,CAACE,MAAM,CAAE,IAAI,CAAC1R,IAAI,CAAE,GAAG2R,MAAM;MAElC;MAEA,OAAOA,MAAM;IAEd;EAAC;EAAA,OAAAP,MAAA;AAAA;AAIF,SAASY,cAAcA,CAAE/B,KAAK,EAAG;EAEhC,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;IAEzE;;IAEA,OAAOhB,UAAU,CAACC,UAAU,CAAEC,KAAM,CAAC;EAEtC,CAAC,MAAM;IAEN,IAAKA,KAAK,CAACiB,IAAI,EAAG;MAEjB;;MAEA,OAAO;QACNA,IAAI,EAAEW,KAAK,CAACI,IAAI,CAAEhC,KAAK,CAACiB,IAAK,CAAC;QAC9Bb,KAAK,EAAEJ,KAAK,CAACI,KAAK;QAClBC,MAAM,EAAEL,KAAK,CAACK,MAAM;QACpB5kB,IAAI,EAAEukB,KAAK,CAACiB,IAAI,CAACliB,WAAW,CAACC;MAC9B,CAAC;IAEF,CAAC,MAAM;MAENyU,OAAO,CAACC,IAAI,CAAE,6CAA8C,CAAC;MAC7D,OAAO,CAAC,CAAC;IAEV;EAED;AAED;AAEA,IAAIuO,UAAU,GAAG,CAAC;AAAC,IAEbC,OAAO,GAAAvgB,OAAA,CAAAugB,OAAA,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAEZ,SAAAA,QAAalC,KAAK,GAAGkC,OAAO,CAACK,aAAa,EAAEC,OAAO,GAAGN,OAAO,CAACO,eAAe,EAAEC,KAAK,GAAG1c,mBAAmB,EAAE2c,KAAK,GAAG3c,mBAAmB,EAAE4c,SAAS,GAAGrc,YAAY,EAAEsc,SAAS,GAAGnc,wBAAwB,EAAEoc,MAAM,GAAGtb,UAAU,EAAE/L,IAAI,GAAGmL,gBAAgB,EAAEmc,UAAU,GAAGb,OAAO,CAACc,kBAAkB,EAAEjE,UAAU,GAAGzT,YAAY,EAAG;IAAA,IAAA2X,MAAA;IAAA5iB,eAAA,OAAA6hB,OAAA;IAE3Te,MAAA,GAAAZ,MAAA,CAAA1mB,IAAA;IAEAsnB,MAAA,CAAKC,SAAS,GAAG,IAAI;IAErBlpB,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAF,MAAA,GAAQ,IAAI,EAAE;MAAE3oB,KAAK,EAAE2nB,UAAU;IAAI,CAAE,CAAC;IAE7DgB,MAAA,CAAKlT,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1BwT,MAAA,CAAKjkB,IAAI,GAAG,EAAE;IAEdikB,MAAA,CAAKG,MAAM,GAAG,IAAIjC,MAAM,CAAEnB,KAAM,CAAC;IACjCiD,MAAA,CAAKI,OAAO,GAAG,EAAE;IAEjBJ,MAAA,CAAKT,OAAO,GAAGA,OAAO;IACtBS,MAAA,CAAKK,OAAO,GAAG,CAAC;IAEhBL,MAAA,CAAKP,KAAK,GAAGA,KAAK;IAClBO,MAAA,CAAKN,KAAK,GAAGA,KAAK;IAElBM,MAAA,CAAKL,SAAS,GAAGA,SAAS;IAC1BK,MAAA,CAAKJ,SAAS,GAAGA,SAAS;IAE1BI,MAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,MAAA,CAAKH,MAAM,GAAGA,MAAM;IACpBG,MAAA,CAAKM,cAAc,GAAG,IAAI;IAC1BN,MAAA,CAAKxnB,IAAI,GAAGA,IAAI;IAEhBwnB,MAAA,CAAKpL,MAAM,GAAG,IAAIvD,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAKO,MAAM,GAAG,IAAIlP,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAK7K,MAAM,GAAG,IAAI9D,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAK/G,QAAQ,GAAG,CAAC;IAEjB+G,MAAA,CAAKQ,gBAAgB,GAAG,IAAI;IAC5BR,MAAA,CAAKrG,MAAM,GAAG,IAAIrE,OAAO,CAAC,CAAC;IAE3B0K,MAAA,CAAKS,eAAe,GAAG,IAAI;IAC3BT,MAAA,CAAKU,gBAAgB,GAAG,KAAK;IAC7BV,MAAA,CAAKW,KAAK,GAAG,IAAI;IACjBX,MAAA,CAAKY,eAAe,GAAG,CAAC,CAAC,CAAC;;IAE1B,IAAK,OAAO9E,UAAU,KAAK,QAAQ,EAAG;MAErCkE,MAAA,CAAKlE,UAAU,GAAGA,UAAU;IAE7B,CAAC,MAAM;MAAE;;MAERrB,QAAQ,CAAE,qEAAsE,CAAC;MACjFuF,MAAA,CAAKlE,UAAU,GAAGA,UAAU,KAAK9T,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAE9E;IAGA2X,MAAA,CAAKa,QAAQ,GAAG,CAAC,CAAC;IAElBb,MAAA,CAAK5B,OAAO,GAAG,CAAC;IAChB4B,MAAA,CAAKc,QAAQ,GAAG,IAAI;IAEpBd,MAAA,CAAKe,qBAAqB,GAAG,KAAK,CAAC,CAAC;IACpCf,MAAA,CAAKgB,gBAAgB,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAhB,MAAA;EAEhC;EAACniB,YAAA,CAAAohB,OAAA;IAAArhB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAC2O,MAAM,CAACnC,IAAI;IAExB,CAAC;IAAAzN,GAAA,EAED,SAAAA,IAAWlZ,KAAK,GAAG,IAAI,EAAG;MAEzB,IAAI,CAAC8oB,MAAM,CAACnC,IAAI,GAAG3mB,KAAK;IAEzB;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA4pB,aAAA,EAAe;MAEd,IAAI,CAACtH,MAAM,CAACf,cAAc,CAAE,IAAI,CAAChE,MAAM,CAACtH,CAAC,EAAE,IAAI,CAACsH,MAAM,CAAC7b,CAAC,EAAE,IAAI,CAACwnB,MAAM,CAACjT,CAAC,EAAE,IAAI,CAACiT,MAAM,CAACxnB,CAAC,EAAE,IAAI,CAACkgB,QAAQ,EAAE,IAAI,CAAC9D,MAAM,CAAC7H,CAAC,EAAE,IAAI,CAAC6H,MAAM,CAACpc,CAAE,CAAC;IAEtI;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACpkB,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;MAEvB,IAAI,CAACokB,MAAM,GAAGA,MAAM,CAACA,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO,CAACzjB,KAAK,CAAE,CAAE,CAAC;MAExC,IAAI,CAAC4iB,OAAO,GAAGY,MAAM,CAACZ,OAAO;MAC7B,IAAI,CAACc,OAAO,GAAGF,MAAM,CAACE,OAAO;MAE7B,IAAI,CAACZ,KAAK,GAAGU,MAAM,CAACV,KAAK;MACzB,IAAI,CAACC,KAAK,GAAGS,MAAM,CAACT,KAAK;MAEzB,IAAI,CAACC,SAAS,GAAGQ,MAAM,CAACR,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGO,MAAM,CAACP,SAAS;MAEjC,IAAI,CAACE,UAAU,GAAGK,MAAM,CAACL,UAAU;MAEnC,IAAI,CAACD,MAAM,GAAGM,MAAM,CAACN,MAAM;MAC3B,IAAI,CAACS,cAAc,GAAGH,MAAM,CAACG,cAAc;MAC3C,IAAI,CAAC9nB,IAAI,GAAG2nB,MAAM,CAAC3nB,IAAI;MAEvB,IAAI,CAACoc,MAAM,CAAC5C,IAAI,CAAEmO,MAAM,CAACvL,MAAO,CAAC;MACjC,IAAI,CAAC2L,MAAM,CAACvO,IAAI,CAAEmO,MAAM,CAACI,MAAO,CAAC;MACjC,IAAI,CAACpL,MAAM,CAACnD,IAAI,CAAEmO,MAAM,CAAChL,MAAO,CAAC;MACjC,IAAI,CAAC8D,QAAQ,GAAGkH,MAAM,CAAClH,QAAQ;MAE/B,IAAI,CAACuH,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAC/C,IAAI,CAAC7G,MAAM,CAAC3H,IAAI,CAAEmO,MAAM,CAACxG,MAAO,CAAC;MAEjC,IAAI,CAAC8G,eAAe,GAAGN,MAAM,CAACM,eAAe;MAC7C,IAAI,CAACC,gBAAgB,GAAGP,MAAM,CAACO,gBAAgB;MAC/C,IAAI,CAACC,KAAK,GAAGR,MAAM,CAACQ,KAAK;MACzB,IAAI,CAACC,eAAe,GAAGT,MAAM,CAACS,eAAe;MAC7C,IAAI,CAAC9E,UAAU,GAAGqE,MAAM,CAACrE,UAAU;MAEnC,IAAI,CAAC+E,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,IAAI,CAACQ,WAAW,GAAG,IAAI;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhgB,SAAS,IAAI,OAAOggB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAACxU,IAAI,CAAE,KAAKxO,SAAS,EAAG;QAEjE,OAAOggB,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAACxU,IAAI,CAAE;MAElC;MAEA,IAAM2R,MAAM,GAAG;QAEd8C,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,SAAS;UACfgpB,SAAS,EAAE;QACZ,CAAC;QAED1U,IAAI,EAAE,IAAI,CAACA,IAAI;QACf/Q,IAAI,EAAE,IAAI,CAACA,IAAI;QAEfghB,KAAK,EAAE,IAAI,CAACoD,MAAM,CAAC9B,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAEtCyS,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBc,OAAO,EAAE,IAAI,CAACA,OAAO;QAErBE,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACjT,CAAC,EAAE,IAAI,CAACiT,MAAM,CAACxnB,CAAC,CAAE;QACxC6b,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACtH,CAAC,EAAE,IAAI,CAACsH,MAAM,CAAC7b,CAAC,CAAE;QACxCoc,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC7H,CAAC,EAAE,IAAI,CAAC6H,MAAM,CAACpc,CAAC,CAAE;QACxCkgB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAEvB/gB,IAAI,EAAE,CAAE,IAAI,CAACunB,KAAK,EAAE,IAAI,CAACC,KAAK,CAAE;QAEhCG,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBS,cAAc,EAAE,IAAI,CAACA,cAAc;QACnC9nB,IAAI,EAAE,IAAI,CAACA,IAAI;QACfsjB,UAAU,EAAE,IAAI,CAACA,UAAU;QAE3B8D,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBG,UAAU,EAAE,IAAI,CAACA,UAAU;QAE3Ba,KAAK,EAAE,IAAI,CAACA,KAAK;QAEjBF,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCE,eAAe,EAAE,IAAI,CAACA;MAEvB,CAAC;MAED,IAAK7pB,MAAM,CAACuF,IAAI,CAAE,IAAI,CAACukB,QAAS,CAAC,CAACllB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACoC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9E,IAAK,CAAEtC,YAAY,EAAG;QAErBD,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAACxU,IAAI,CAAE,GAAG2R,MAAM;MAEpC;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA7gB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;IAAAoF,GAAA;IAAAvG,KAAA,EAED,SAAAqqB,YAAaC,EAAE,EAAG;MAEjB,IAAK,IAAI,CAACpC,OAAO,KAAK/c,SAAS,EAAG,OAAOmf,EAAE;MAE3CA,EAAE,CAAC/O,YAAY,CAAE,IAAI,CAAC+G,MAAO,CAAC;MAE9B,IAAKgI,EAAE,CAACrU,CAAC,GAAG,CAAC,IAAIqU,EAAE,CAACrU,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAACmS,KAAK;UAElB,KAAK3c,cAAc;YAElB6e,EAAE,CAACrU,CAAC,GAAGqU,EAAE,CAACrU,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAACrU,CAAE,CAAC;YAChC;UAED,KAAKvK,mBAAmB;YAEvB4e,EAAE,CAACrU,CAAC,GAAGqU,EAAE,CAACrU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAKtK,sBAAsB;YAE1B,IAAKqJ,IAAI,CAAC6B,GAAG,CAAE7B,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAACrU,CAAE,CAAC,GAAG,CAAE,CAAC,KAAK,CAAC,EAAG;cAE/CqU,EAAE,CAACrU,CAAC,GAAGjB,IAAI,CAACgD,IAAI,CAAEsS,EAAE,CAACrU,CAAE,CAAC,GAAGqU,EAAE,CAACrU,CAAC;YAEhC,CAAC,MAAM;cAENqU,EAAE,CAACrU,CAAC,GAAGqU,EAAE,CAACrU,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAACrU,CAAE,CAAC;YAEjC;YAEA;QAEF;MAED;MAEA,IAAKqU,EAAE,CAAC5oB,CAAC,GAAG,CAAC,IAAI4oB,EAAE,CAAC5oB,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAAC2mB,KAAK;UAElB,KAAK5c,cAAc;YAElB6e,EAAE,CAAC5oB,CAAC,GAAG4oB,EAAE,CAAC5oB,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAAC5oB,CAAE,CAAC;YAChC;UAED,KAAKgK,mBAAmB;YAEvB4e,EAAE,CAAC5oB,CAAC,GAAG4oB,EAAE,CAAC5oB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAKiK,sBAAsB;YAE1B,IAAKqJ,IAAI,CAAC6B,GAAG,CAAE7B,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAAC5oB,CAAE,CAAC,GAAG,CAAE,CAAC,KAAK,CAAC,EAAG;cAE/C4oB,EAAE,CAAC5oB,CAAC,GAAGsT,IAAI,CAACgD,IAAI,CAAEsS,EAAE,CAAC5oB,CAAE,CAAC,GAAG4oB,EAAE,CAAC5oB,CAAC;YAEhC,CAAC,MAAM;cAEN4oB,EAAE,CAAC5oB,CAAC,GAAG4oB,EAAE,CAAC5oB,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAEmT,EAAE,CAAC5oB,CAAE,CAAC;YAEjC;YAEA;QAEF;MAED;MAEA,IAAK,IAAI,CAAC4nB,KAAK,EAAG;QAEjBgB,EAAE,CAAC5oB,CAAC,GAAG,CAAC,GAAG4oB,EAAE,CAAC5oB,CAAC;MAEhB;MAEA,OAAO4oB,EAAE;IAEV;EAAC;IAAA/jB,GAAA;IAAA2S,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAAC+mB,OAAO,EAAG;QACf,IAAI,CAAC+B,MAAM,CAACkB,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;IAAAzjB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAe;MAAE;;MAEhBiJ,QAAQ,CAAE,qEAAsE,CAAC;MACjF,OAAO,IAAI,CAACqB,UAAU,KAAKxT,cAAc,GAAGN,YAAY,GAAGD,cAAc;IAE1E,CAAC;IAAAwI,GAAA,EAED,SAAAA,IAAcqR,QAAQ,EAAG;MAAE;;MAE1BnH,QAAQ,CAAE,qEAAsE,CAAC;MACjF,IAAI,CAACqB,UAAU,GAAG8F,QAAQ,KAAK5Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAE5E;EAAC;EAAA,OAAA4W,OAAA;AAAA,EAlToB7T,eAAe;AAsTrC6T,OAAO,CAACK,aAAa,GAAG,IAAI;AAC5BL,OAAO,CAACO,eAAe,GAAGhd,SAAS;AACnCyc,OAAO,CAACc,kBAAkB,GAAG,CAAC;AAAC,IAEzB8B,OAAO,GAAAnjB,OAAA,CAAAmjB,OAAA,0BAAAC,iBAAA;EAEZ,SAAAD,QAAavU,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAEgpB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAA5kB,eAAA,OAAAykB,OAAA;IAEzCA,OAAO,CAAC7qB,SAAS,CAACirB,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC3U,CAAC,GAAGA,CAAC;IACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;IACV,IAAI,CAACgpB,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAACnkB,YAAA,CAAAgkB,OAAA;IAAAjkB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACuQ,CAAC;IAEd,CAAC;IAAAxR,GAAA,EAED,SAAAA,IAAWlZ,KAAK,EAAG;MAElB,IAAI,CAAC0qB,CAAC,GAAG1qB,KAAK;IAEf;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACwQ,CAAC;IAEd,CAAC;IAAAzR,GAAA,EAED,SAAAA,IAAYlZ,KAAK,EAAG;MAEnB,IAAI,CAAC2qB,CAAC,GAAG3qB,KAAK;IAEf;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAAC1U,CAAC,GAAGA,CAAC;MACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACgpB,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAoa,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACpE,CAAC,GAAGoE,MAAM;MACf,IAAI,CAAC3Y,CAAC,GAAG2Y,MAAM;MACf,IAAI,CAACqQ,CAAC,GAAGrQ,MAAM;MACf,IAAI,CAACsQ,CAAC,GAAGtQ,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM7Y,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6qB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA8qB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAwa,aAAchG,KAAK,EAAExU,KAAK,EAAG;MAE5B,QAASwU,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAACyB,CAAC,GAAGjW,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC0B,CAAC,GAAG1B,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC0qB,CAAC,GAAG1qB,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC2qB,CAAC,GAAG3qB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI6C,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAya,aAAcjG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAACyB,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACvU,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACgpB,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACC,CAAC;QACrB;UAAS,MAAM,IAAI9nB,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACwR,CAAC,EAAE,IAAI,CAACvU,CAAC,EAAE,IAAI,CAACgpB,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC;IAE9D;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM3Y,CAAC,EAAG;MAET,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC;MACZ,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC;MACZ,IAAI,CAACgpB,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC;MACZ,IAAI,CAACC,CAAC,GAAK3oB,CAAC,CAAC2oB,CAAC,KAAK1jB,SAAS,GAAKjF,CAAC,CAAC2oB,CAAC,GAAG,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAK5Y,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MACb,IAAI,CAACC,CAAC,IAAI3oB,CAAC,CAAC2oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA6a,UAAWpZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MACX,IAAI,CAACipB,CAAC,IAAIjpB,CAAC;MACX,IAAI,CAACkpB,CAAC,IAAIlpB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA8a,WAAY3a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAClB,IAAI,CAACgpB,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAClB,IAAI,CAACC,CAAC,GAAGxqB,CAAC,CAACwqB,CAAC,GAAGrS,CAAC,CAACqS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA+a,gBAAiB/Y,CAAC,EAAEP,CAAC,EAAG;MAEvB,IAAI,CAACwU,CAAC,IAAIjU,CAAC,CAACiU,CAAC,GAAGxU,CAAC;MACjB,IAAI,CAACC,CAAC,IAAIM,CAAC,CAACN,CAAC,GAAGD,CAAC;MACjB,IAAI,CAACipB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC,GAAGjpB,CAAC;MACjB,IAAI,CAACkpB,CAAC,IAAI3oB,CAAC,CAAC2oB,CAAC,GAAGlpB,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAgb,IAAKhZ,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MACb,IAAI,CAACC,CAAC,IAAI3oB,CAAC,CAAC2oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAib,UAAWxZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MACX,IAAI,CAACipB,CAAC,IAAIjpB,CAAC;MACX,IAAI,CAACkpB,CAAC,IAAIlpB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAkb,WAAY/a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAClB,IAAI,CAACgpB,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAClB,IAAI,CAACC,CAAC,GAAGxqB,CAAC,CAACwqB,CAAC,GAAGrS,CAAC,CAACqS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAUnZ,CAAC,EAAG;MAEb,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MACb,IAAI,CAACC,CAAC,IAAI3oB,CAAC,CAAC2oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgBf,MAAM,EAAG;MAExB,IAAI,CAACpE,CAAC,IAAIoE,MAAM;MAChB,IAAI,CAAC3Y,CAAC,IAAI2Y,MAAM;MAChB,IAAI,CAACqQ,CAAC,IAAIrQ,MAAM;MAChB,IAAI,CAACsQ,CAAC,IAAItQ,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAchV,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEgpB,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MACpD,IAAMprB,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAACvF,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,GAAGorB,CAAC;MAC3D,IAAI,CAACjpB,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,GAAGorB,CAAC;MAC3D,IAAI,CAACD,CAAC,GAAGnrB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,GAAGorB,CAAC;MAC5D,IAAI,CAACA,CAAC,GAAGprB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,GAAGorB,CAAC;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAsb,aAAcjB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACe,cAAc,CAAE,CAAC,GAAGf,MAAO,CAAC;IAEzC;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAgrB,2BAA4B3S,CAAC,EAAG;MAE/B;;MAEA;;MAEA,IAAI,CAACsS,CAAC,GAAG,CAAC,GAAG3V,IAAI,CAAC0H,IAAI,CAAErE,CAAC,CAACsS,CAAE,CAAC;MAE7B,IAAMlpB,CAAC,GAAGuT,IAAI,CAACmH,IAAI,CAAE,CAAC,GAAG9D,CAAC,CAACsS,CAAC,GAAGtS,CAAC,CAACsS,CAAE,CAAC;MAEpC,IAAKlpB,CAAC,GAAG,MAAM,EAAG;QAEjB,IAAI,CAACwU,CAAC,GAAG,CAAC;QACV,IAAI,CAACvU,CAAC,GAAG,CAAC;QACV,IAAI,CAACgpB,CAAC,GAAG,CAAC;MAEX,CAAC,MAAM;QAEN,IAAI,CAACzU,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAGxU,CAAC;QAChB,IAAI,CAACC,CAAC,GAAG2W,CAAC,CAAC3W,CAAC,GAAGD,CAAC;QAChB,IAAI,CAACipB,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGjpB,CAAC;MAEjB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAirB,+BAAgClV,CAAC,EAAG;MAEnC;;MAEA;;MAEA,IAAIsG,KAAK,EAAEpG,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,CAAC,CAAC;MACpB,IAAMQ,OAAO,GAAG,IAAI;QAAG;QACtBC,QAAQ,GAAG,GAAG;QAAG;;QAEjBvM,EAAE,GAAG7I,CAAC,CAACyF,QAAQ;QAEf4P,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;QAC3C2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,CAAC,CAAE;QAC3C8M,GAAG,GAAG9M,EAAE,CAAE,CAAC,CAAE;QAAE+M,GAAG,GAAG/M,EAAE,CAAE,CAAC,CAAE;QAAEgN,GAAG,GAAGhN,EAAE,CAAE,EAAE,CAAE;MAE7C,IAAO5J,IAAI,CAAC6B,GAAG,CAAEwU,GAAG,GAAGE,GAAI,CAAC,GAAGL,OAAO,IAC/BlW,IAAI,CAAC6B,GAAG,CAAEyU,GAAG,GAAGI,GAAI,CAAC,GAAGR,OAAS,IACjClW,IAAI,CAAC6B,GAAG,CAAE4U,GAAG,GAAGE,GAAI,CAAC,GAAGT,OAAS,EAAG;QAE1C;QACA;QACA;;QAEA,IAAOlW,IAAI,CAAC6B,GAAG,CAAEwU,GAAG,GAAGE,GAAI,CAAC,GAAGJ,QAAQ,IAChCnW,IAAI,CAAC6B,GAAG,CAAEyU,GAAG,GAAGI,GAAI,CAAC,GAAGP,QAAU,IAClCnW,IAAI,CAAC6B,GAAG,CAAE4U,GAAG,GAAGE,GAAI,CAAC,GAAGR,QAAU,IAClCnW,IAAI,CAAC6B,GAAG,CAAEuU,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAE,CAAC,GAAGT,QAAU,EAAG;UAErD;;UAEA,IAAI,CAACjS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;UAEtB,OAAO,IAAI,CAAC,CAAC;QAEd;;QAEA;;QAEAmD,KAAK,GAAGrH,IAAI,CAACC,EAAE;QAEf,IAAM4W,EAAE,GAAG,CAAET,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMU,EAAE,GAAG,CAAEN,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMO,EAAE,GAAG,CAAEH,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMI,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAG,IAAK,CAAC;QAC5B,IAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGI,GAAG,IAAK,CAAC;QAC5B,IAAMQ,EAAE,GAAG,CAAET,GAAG,GAAGE,GAAG,IAAK,CAAC;QAE5B,IAAOE,EAAE,GAAGC,EAAE,IAAQD,EAAE,GAAGE,EAAI,EAAG;UAEjC;;UAEA,IAAKF,EAAE,GAAGX,OAAO,EAAG;YAEnBjV,CAAC,GAAG,CAAC;YACLvU,CAAC,GAAG,WAAW;YACfgpB,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAENzU,CAAC,GAAGjB,IAAI,CAACmH,IAAI,CAAE0P,EAAG,CAAC;YACnBnqB,CAAC,GAAGsqB,EAAE,GAAG/V,CAAC;YACVyU,CAAC,GAAGuB,EAAE,GAAGhW,CAAC;UAEX;QAED,CAAC,MAAM,IAAK6V,EAAE,GAAGC,EAAE,EAAG;UAErB;;UAEA,IAAKD,EAAE,GAAGZ,OAAO,EAAG;YAEnBjV,CAAC,GAAG,WAAW;YACfvU,CAAC,GAAG,CAAC;YACLgpB,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAENhpB,CAAC,GAAGsT,IAAI,CAACmH,IAAI,CAAE2P,EAAG,CAAC;YACnB7V,CAAC,GAAG+V,EAAE,GAAGtqB,CAAC;YACVgpB,CAAC,GAAGwB,EAAE,GAAGxqB,CAAC;UAEX;QAED,CAAC,MAAM;UAEN;;UAEA,IAAKqqB,EAAE,GAAGb,OAAO,EAAG;YAEnBjV,CAAC,GAAG,WAAW;YACfvU,CAAC,GAAG,WAAW;YACfgpB,CAAC,GAAG,CAAC;UAEN,CAAC,MAAM;YAENA,CAAC,GAAG1V,IAAI,CAACmH,IAAI,CAAE4P,EAAG,CAAC;YACnB9V,CAAC,GAAGgW,EAAE,GAAGvB,CAAC;YACVhpB,CAAC,GAAGwqB,EAAE,GAAGxB,CAAC;UAEX;QAED;QAEA,IAAI,CAACxR,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAErO,KAAM,CAAC;QAE1B,OAAO,IAAI,CAAC,CAAC;MAEd;;MAEA;;MAEA,IAAI5a,CAAC,GAAGuT,IAAI,CAACmH,IAAI,CAAE,CAAEwP,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAG,CAAC,CAAC,CAAC;;MAElC,IAAKrW,IAAI,CAAC6B,GAAG,CAAEpV,CAAE,CAAC,GAAG,KAAK,EAAGA,CAAC,GAAG,CAAC;;MAElC;MACA;;MAEA,IAAI,CAACwU,CAAC,GAAG,CAAE0V,GAAG,GAAGF,GAAG,IAAKhqB,CAAC;MAC1B,IAAI,CAACC,CAAC,GAAG,CAAE4pB,GAAG,GAAGI,GAAG,IAAKjqB,CAAC;MAC1B,IAAI,CAACipB,CAAC,GAAG,CAAEa,GAAG,GAAGF,GAAG,IAAK5pB,CAAC;MAC1B,IAAI,CAACkpB,CAAC,GAAG3V,IAAI,CAAC0H,IAAI,CAAE,CAAE0O,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAArlB,GAAA;IAAAvG,KAAA,EAED,SAAA4V,IAAK5T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACY,GAAG,CAAE,IAAI,CAAClU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAChC,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC8U,CAAC,EAAE1oB,CAAC,CAAC0oB,CAAE,CAAC;MAChC,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC+U,CAAC,EAAE3oB,CAAC,CAAC2oB,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA6V,IAAK7T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACI,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE,IAAI,CAACnU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAChC,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC6U,CAAC,EAAE1oB,CAAC,CAAC0oB,CAAE,CAAC;MAChC,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC8U,CAAC,EAAE3oB,CAAC,CAAC2oB,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA2V,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACI,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACK,CAAC,EAAEjB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACI,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAED,GAAG,CAAClU,CAAC,EAAEsT,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAED,GAAG,CAAC8U,CAAC,EAAE1V,IAAI,CAACY,GAAG,CAAEC,GAAG,CAAC6U,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACa,GAAG,CAAED,GAAG,CAAC+U,CAAC,EAAE3V,IAAI,CAACY,GAAG,CAAEC,GAAG,CAAC8U,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAyb,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAAC1F,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAAC1F,CAAE,CAAE,CAAC;MACvD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAACja,CAAE,CAAE,CAAC;MACvD,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAAC+O,CAAE,CAAE,CAAC;MACvD,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAACgP,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA4b,YAAahG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMvR,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAE,CAAC,CAAC8W,cAAc,CAAEpG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEvR,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAmX,MAAA,EAAQ;MAEP,IAAI,CAAClB,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAClB,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACzV,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACuT,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACwT,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAgY,KAAA,EAAO;MAEN,IAAI,CAAC/B,CAAC,GAAGjB,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC/B,CAAE,CAAC;MAC5B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACgD,IAAI,CAAE,IAAI,CAACtW,CAAE,CAAC;MAC5B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC0S,CAAE,CAAC;MAC5B,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC2S,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA8Z,MAAA,EAAQ;MAEP,IAAI,CAAC7D,CAAC,GAAGjB,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC7D,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAACpY,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC4Q,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC6Q,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA6b,YAAA,EAAc;MAEb,IAAI,CAAC5F,CAAC,GAAGjB,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC7F,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAACpa,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC4O,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAG3V,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC6O,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA+b,OAAA,EAAS;MAER,IAAI,CAAC9F,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACvU,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACgpB,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAgc,IAAKha,CAAC,EAAG;MAER,OAAO,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG3oB,CAAC,CAAC2oB,CAAC;IAEjE;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAkc,SAAA,EAAW;MAEV,OAAO,IAAI,CAACjG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;IAE7E;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAsE,OAAA,EAAS;MAER,OAAO0Q,IAAI,CAACmH,IAAI,CAAE,IAAI,CAAClG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAE1F;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAoc,gBAAA,EAAkB;MAEjB,OAAOpH,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACZ,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACnV,CAAE,CAAC,GAAGsT,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAAC6T,CAAE,CAAC,GAAG1V,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAAC8T,CAAE,CAAC;IAEzF;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA6Z,UAAA,EAAY;MAEX,OAAO,IAAI,CAACyB,YAAY,CAAE,IAAI,CAAChX,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAgd,UAAW1Y,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACuV,SAAS,CAAC,CAAC,CAACuB,cAAc,CAAE9W,MAAO,CAAC;IAEjD;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAuW,KAAMvU,CAAC,EAAEib,KAAK,EAAG;MAEhB,IAAI,CAAChH,CAAC,IAAI,CAAEjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKgH,KAAK;MAClC,IAAI,CAACvb,CAAC,IAAI,CAAEM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKub,KAAK;MAClC,IAAI,CAACyN,CAAC,IAAI,CAAE1oB,CAAC,CAAC0oB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKzN,KAAK;MAClC,IAAI,CAAC0N,CAAC,IAAI,CAAE3oB,CAAC,CAAC2oB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK1N,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAkd,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAChH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,GAAG,CAAEmH,EAAE,CAACnH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;MACvC,IAAI,CAACvb,CAAC,GAAGyb,EAAE,CAACzb,CAAC,GAAG,CAAE0b,EAAE,CAAC1b,CAAC,GAAGyb,EAAE,CAACzb,CAAC,IAAKub,KAAK;MACvC,IAAI,CAACyN,CAAC,GAAGvN,EAAE,CAACuN,CAAC,GAAG,CAAEtN,EAAE,CAACsN,CAAC,GAAGvN,EAAE,CAACuN,CAAC,IAAKzN,KAAK;MACvC,IAAI,CAAC0N,CAAC,GAAGxN,EAAE,CAACwN,CAAC,GAAG,CAAEvN,EAAE,CAACuN,CAAC,GAAGxN,EAAE,CAACwN,CAAC,IAAK1N,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQrb,CAAC,EAAG;MAEX,OAAWA,CAAC,CAACiU,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQjU,CAAC,CAACN,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMM,CAAC,CAAC0oB,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM1oB,CAAC,CAAC2oB,CAAC,KAAK,IAAI,CAACA,CAAG;IAE9F;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACtH,CAAC,GAAGrB,KAAK,CAAE2I,MAAM,CAAE;MACxB,IAAI,CAAC7b,CAAC,GAAGkT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACmN,CAAC,GAAG9V,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACoN,CAAC,GAAG/V,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACtH,CAAC;MACxBrB,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC7b,CAAC;MAC5BkT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACmN,CAAC;MAC5B9V,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACoN,CAAC;MAE5B,OAAO/V,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAyd,oBAAqBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,CAACyB,CAAC,GAAGyH,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MAChC,IAAI,CAAC9S,CAAC,GAAGgc,SAAS,CAACE,IAAI,CAAEpJ,KAAM,CAAC;MAChC,IAAI,CAACkW,CAAC,GAAGhN,SAAS,CAACyO,IAAI,CAAE3X,KAAM,CAAC;MAChC,IAAI,CAACmW,CAAC,GAAGjN,SAAS,CAAC0O,IAAI,CAAE5X,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAqV,OAAA,EAAS;MAER,IAAI,CAACY,CAAC,GAAGjB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC3T,CAAC,GAAGsT,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACqV,CAAC,GAAG1V,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACsV,CAAC,GAAG3V,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA9O,GAAA,EAAAkkB,iBAAA;IAAAzqB,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAED,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAAsO,SAAA;QAAA,kBAAAA,SAAA,CAAAjnB,IAAA,GAAAinB,SAAA,CAAA5oB,IAAA;UAAA;YAAA4oB,SAAA,CAAA5oB,IAAA;YAEC,OAAM,IAAI,CAACwS,CAAC;UAAA;YAAAoW,SAAA,CAAA5oB,IAAA;YACZ,OAAM,IAAI,CAAC/B,CAAC;UAAA;YAAA2qB,SAAA,CAAA5oB,IAAA;YACZ,OAAM,IAAI,CAACinB,CAAC;UAAA;YAAA2B,SAAA,CAAA5oB,IAAA;YACZ,OAAM,IAAI,CAACknB,CAAC;UAAA;UAAA;YAAA,OAAA0B,SAAA,CAAA9mB,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAwqB,OAAA;AAAA,EAPEtqB,MAAM,CAACE,QAAQ;AAWnB;AACA;AACA;AACA;AACA;AAJA,IAKMksB,YAAY,GAAAjlB,OAAA,CAAAilB,YAAA,0BAAAC,iBAAA;EAAAzE,SAAA,CAAAwE,YAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAAxE,YAAA,CAAAsE,YAAA;EAEjB,SAAAA,aAAaxG,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAC,MAAA;IAAA3mB,eAAA,OAAAumB,YAAA;IAElDI,MAAA,GAAAF,OAAA,CAAAnrB,IAAA;IAEAqrB,MAAA,CAAKC,cAAc,GAAG,IAAI;IAE1BD,MAAA,CAAK5G,KAAK,GAAGA,KAAK;IAClB4G,MAAA,CAAK3G,MAAM,GAAGA,MAAM;IACpB2G,MAAA,CAAKE,KAAK,GAAG,CAAC;IAEdF,MAAA,CAAKG,OAAO,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE1E,KAAK,EAAEC,MAAO,CAAC;IACjD2G,MAAA,CAAKI,WAAW,GAAG,KAAK;IAExBJ,MAAA,CAAKK,QAAQ,GAAG,IAAIvC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE1E,KAAK,EAAEC,MAAO,CAAC;IAElD,IAAML,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA,MAAM;MAAE6G,KAAK,EAAE;IAAE,CAAC;IAExD,IAAKH,OAAO,CAAClC,QAAQ,KAAKtjB,SAAS,EAAG;MAErC;MACAmc,QAAQ,CAAE,kFAAmF,CAAC;MAC9FqJ,OAAO,CAAChI,UAAU,GAAGgI,OAAO,CAAClC,QAAQ,KAAK5Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAEvF;IAEAyb,OAAO,GAAG/sB,MAAM,CAACstB,MAAM,CAAE;MACxB5D,eAAe,EAAE,KAAK;MACtBH,cAAc,EAAE,IAAI;MACpBV,SAAS,EAAEtc,YAAY;MACvBghB,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACV,CAAC,EAAEX,OAAQ,CAAC;IAEZC,MAAA,CAAKW,OAAO,GAAG,IAAIzF,OAAO,CAAElC,KAAK,EAAE+G,OAAO,CAACvE,OAAO,EAAEuE,OAAO,CAACrE,KAAK,EAAEqE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,SAAS,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,MAAM,EAAEiE,OAAO,CAACtrB,IAAI,EAAEsrB,OAAO,CAAChE,UAAU,EAAEgE,OAAO,CAAChI,UAAW,CAAC;IAC9LiI,MAAA,CAAKW,OAAO,CAAC3D,qBAAqB,GAAG,IAAI;IAEzCgD,MAAA,CAAKW,OAAO,CAAC/D,KAAK,GAAG,KAAK;IAC1BoD,MAAA,CAAKW,OAAO,CAACjE,eAAe,GAAGqD,OAAO,CAACrD,eAAe;IACtDsD,MAAA,CAAKW,OAAO,CAACpE,cAAc,GAAGwD,OAAO,CAACxD,cAAc;IAEpDyD,MAAA,CAAKO,WAAW,GAAGR,OAAO,CAACQ,WAAW;IACtCP,MAAA,CAAKQ,aAAa,GAAGT,OAAO,CAACS,aAAa;IAE1CR,MAAA,CAAKS,YAAY,GAAGV,OAAO,CAACU,YAAY;IAExCT,MAAA,CAAKU,OAAO,GAAGX,OAAO,CAACW,OAAO;IAAC,OAAAV,MAAA;EAEhC;EAAClmB,YAAA,CAAA8lB,YAAA;IAAA/lB,GAAA;IAAAvG,KAAA,EAED,SAAAstB,QAASxH,KAAK,EAAEC,MAAM,EAAE6G,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAAC9G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC6G,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAAC9G,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC6G,KAAK,GAAGA,KAAK;QAElB,IAAI,CAACS,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAGA,KAAK;QAChC,IAAI,CAACuH,OAAO,CAAC3H,KAAK,CAACK,MAAM,GAAGA,MAAM;QAClC,IAAI,CAACsH,OAAO,CAAC3H,KAAK,CAACkH,KAAK,GAAGA,KAAK;QAEhC,IAAI,CAACxC,OAAO,CAAC,CAAC;MAEf;MAEA,IAAI,CAAC2C,QAAQ,CAAC7T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE4M,KAAK,EAAEC,MAAO,CAAC;MACxC,IAAI,CAAC8G,OAAO,CAAC3T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE4M,KAAK,EAAEC,MAAO,CAAC;IAExC;EAAC;IAAAxf,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAChD,KAAK,GAAGgD,MAAM,CAAChD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG+C,MAAM,CAAC/C,MAAM;MAC3B,IAAI,CAAC6G,KAAK,GAAG9D,MAAM,CAAC8D,KAAK;MAEzB,IAAI,CAACC,OAAO,CAAClS,IAAI,CAAEmO,MAAM,CAAC+D,OAAQ,CAAC;MACnC,IAAI,CAACC,WAAW,GAAGhE,MAAM,CAACgE,WAAW;MAErC,IAAI,CAACC,QAAQ,CAACpS,IAAI,CAAEmO,MAAM,CAACiE,QAAS,CAAC;MAErC,IAAI,CAACM,OAAO,GAAGvE,MAAM,CAACuE,OAAO,CAAC3S,KAAK,CAAC,CAAC;MACrC,IAAI,CAAC2S,OAAO,CAAC3D,qBAAqB,GAAG,IAAI;;MAEzC;;MAEA,IAAMhE,KAAK,GAAGhmB,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAACuE,OAAO,CAAC3H,KAAM,CAAC;MACvD,IAAI,CAAC2H,OAAO,CAACvE,MAAM,GAAG,IAAIjC,MAAM,CAAEnB,KAAM,CAAC;MAEzC,IAAI,CAACuH,WAAW,GAAGnE,MAAM,CAACmE,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGpE,MAAM,CAACoE,aAAa;MAEzC,IAAKpE,MAAM,CAACqE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGrE,MAAM,CAACqE,YAAY,CAACzS,KAAK,CAAC,CAAC;MAEnF,IAAI,CAAC0S,OAAO,GAAGtE,MAAM,CAACsE,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA7mB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAAmrB,YAAA;AAAA,EAlHyBvY,eAAe;AAAA,IAsHpCwZ,iBAAiB,GAAAlmB,OAAA,CAAAkmB,iBAAA,0BAAAC,aAAA;EAAA1F,SAAA,CAAAyF,iBAAA,EAAAC,aAAA;EAAA,IAAAC,OAAA,GAAAzF,YAAA,CAAAuF,iBAAA;EAEtB,SAAAA,kBAAazH,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAiB,MAAA;IAAA3nB,eAAA,OAAAwnB,iBAAA;IAElDG,MAAA,GAAAD,OAAA,CAAApsB,IAAA,OAAOykB,KAAK,EAAEC,MAAM,EAAE0G,OAAO;IAE7BiB,MAAA,CAAKC,mBAAmB,GAAG,IAAI;IAAC,OAAAD,MAAA;EAEjC;EAAC,OAAAlnB,YAAA,CAAA+mB,iBAAA;AAAA,EAR8BjB,YAAY;AAAA,IAYtCsB,gBAAgB,GAAAvmB,OAAA,CAAAumB,gBAAA,0BAAAC,QAAA;EAAA/F,SAAA,CAAA8F,gBAAA,EAAAC,QAAA;EAAA,IAAAC,OAAA,GAAA9F,YAAA,CAAA4F,gBAAA;EAErB,SAAAA,iBAAajH,IAAI,GAAG,IAAI,EAAEb,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAmB,MAAA;IAAAhoB,eAAA,OAAA6nB,gBAAA;IAE5DG,MAAA,GAAAD,OAAA,CAAAzsB,IAAA,OAAO,IAAI;IAEX0sB,MAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,MAAA,CAAKrI,KAAK,GAAG;MAAEiB,IAAI,EAAJA,IAAI;MAAEb,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAE6G,KAAK,EAALA;IAAM,CAAC;IAE3CmB,MAAA,CAAKzF,SAAS,GAAG1c,aAAa;IAC9BmiB,MAAA,CAAKxF,SAAS,GAAG3c,aAAa;IAE9BmiB,MAAA,CAAKE,KAAK,GAAGviB,mBAAmB;IAEhCqiB,MAAA,CAAK3E,eAAe,GAAG,KAAK;IAC5B2E,MAAA,CAAKzE,KAAK,GAAG,KAAK;IAClByE,MAAA,CAAKxE,eAAe,GAAG,CAAC;IAAC,OAAAwE,MAAA;EAE1B;EAAC,OAAAvnB,YAAA,CAAAonB,gBAAA;AAAA,EAnB6BhG,OAAO;AAAA,IAuBhCsG,sBAAsB,GAAA7mB,OAAA,CAAA6mB,sBAAA,0BAAAC,kBAAA;EAAArG,SAAA,CAAAoG,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,OAAA,GAAApG,YAAA,CAAAkG,sBAAA;EAE3B,SAAAA,uBAAapI,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAyB,MAAA;IAAAtoB,eAAA,OAAAmoB,sBAAA;IAE/CG,MAAA,GAAAD,OAAA,CAAA/sB,IAAA,OAAOykB,KAAK,EAAEC,MAAM;IAEpBsI,MAAA,CAAKC,wBAAwB,GAAG,IAAI;IAEpCD,MAAA,CAAKzB,KAAK,GAAGA,KAAK;IAElByB,MAAA,CAAKhB,OAAO,GAAG,IAAIO,gBAAgB,CAAE,IAAI,EAAE9H,KAAK,EAAEC,MAAM,EAAE6G,KAAM,CAAC;IAEjEyB,MAAA,CAAKhB,OAAO,CAAC3D,qBAAqB,GAAG,IAAI;IAAC,OAAA2E,MAAA;EAE3C;EAAC,OAAA7nB,YAAA,CAAA0nB,sBAAA;AAAA,EAdmCX,iBAAiB;AAAA,IAkBhDgB,aAAa,GAAAlnB,OAAA,CAAAknB,aAAA,0BAAAC,SAAA;EAAA1G,SAAA,CAAAyG,aAAA,EAAAC,SAAA;EAAA,IAAAC,OAAA,GAAAzG,YAAA,CAAAuG,aAAA;EAElB,SAAAA,cAAa5H,IAAI,GAAG,IAAI,EAAEb,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAA8B,MAAA;IAAA3oB,eAAA,OAAAwoB,aAAA;IAE5D;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAG,MAAA,GAAAD,OAAA,CAAAptB,IAAA,OAAO,IAAI;IAEXqtB,MAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,MAAA,CAAKhJ,KAAK,GAAG;MAAEiB,IAAI,EAAJA,IAAI;MAAEb,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAE6G,KAAK,EAALA;IAAM,CAAC;IAE3C8B,MAAA,CAAKpG,SAAS,GAAG1c,aAAa;IAC9B8iB,MAAA,CAAKnG,SAAS,GAAG3c,aAAa;IAE9B8iB,MAAA,CAAKT,KAAK,GAAGviB,mBAAmB;IAEhCgjB,MAAA,CAAKtF,eAAe,GAAG,KAAK;IAC5BsF,MAAA,CAAKpF,KAAK,GAAG,KAAK;IAClBoF,MAAA,CAAKnF,eAAe,GAAG,CAAC;IAAC,OAAAmF,MAAA;EAE1B;EAAC,OAAAloB,YAAA,CAAA+nB,aAAA;AAAA,EA3B0B3G,OAAO;AAAA,IA+B7BgH,mBAAmB,GAAAvnB,OAAA,CAAAunB,mBAAA,0BAAAC,mBAAA;EAAA/G,SAAA,CAAA8G,mBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA9G,YAAA,CAAA4G,mBAAA;EAExB,SAAAA,oBAAa9I,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAmC,MAAA;IAAAhpB,eAAA,OAAA6oB,mBAAA;IAE/CG,MAAA,GAAAD,OAAA,CAAAztB,IAAA,OAAOykB,KAAK,EAAEC,MAAM;IAEpBgJ,MAAA,CAAKC,qBAAqB,GAAG,IAAI;IAEjCD,MAAA,CAAKnC,KAAK,GAAGA,KAAK;IAElBmC,MAAA,CAAK1B,OAAO,GAAG,IAAIkB,aAAa,CAAE,IAAI,EAAEzI,KAAK,EAAEC,MAAM,EAAE6G,KAAM,CAAC;IAE9DmC,MAAA,CAAK1B,OAAO,CAAC3D,qBAAqB,GAAG,IAAI;IAAC,OAAAqF,MAAA;EAE3C;EAAC,OAAAvoB,YAAA,CAAAooB,mBAAA;AAAA,EAdgCrB,iBAAiB;AAAA,IAkB7C0B,0BAA0B,GAAA5nB,OAAA,CAAA4nB,0BAAA,0BAAAC,mBAAA;EAAApH,SAAA,CAAAmH,0BAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAnH,YAAA,CAAAiH,0BAAA;EAE/B,SAAAA,2BAAanJ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEqJ,KAAK,GAAG,CAAC,EAAE3C,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAA4C,MAAA;IAAAtpB,eAAA,OAAAkpB,0BAAA;IAE7DI,MAAA,GAAAF,OAAA,CAAA9tB,IAAA,OAAOykB,KAAK,EAAEC,MAAM,EAAE0G,OAAO;IAE7B4C,MAAA,CAAKC,4BAA4B,GAAG,IAAI;IAExC,IAAMjC,OAAO,GAAGgC,MAAA,CAAKhC,OAAO;IAE5BgC,MAAA,CAAKhC,OAAO,GAAG,EAAE;IAEjB,KAAM,IAAIptB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;MAElCovB,MAAA,CAAKhC,OAAO,CAAEptB,CAAC,CAAE,GAAGotB,OAAO,CAAC3S,KAAK,CAAC,CAAC;MACnC2U,MAAA,CAAKhC,OAAO,CAAEptB,CAAC,CAAE,CAACypB,qBAAqB,GAAG,IAAI;IAE/C;IAAC,OAAA2F,MAAA;EAEF;EAAC7oB,YAAA,CAAAyoB,0BAAA;IAAA1oB,GAAA;IAAAvG,KAAA,EAED,SAAAstB,QAASxH,KAAK,EAAEC,MAAM,EAAE6G,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAAC9G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC6G,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAAC9G,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC6G,KAAK,GAAGA,KAAK;QAElB,KAAM,IAAI3sB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG,IAAI,CAAClC,OAAO,CAAC/oB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAEzD,IAAI,CAACotB,OAAO,CAAEptB,CAAC,CAAE,CAACylB,KAAK,CAACI,KAAK,GAAGA,KAAK;UACrC,IAAI,CAACuH,OAAO,CAAEptB,CAAC,CAAE,CAACylB,KAAK,CAACK,MAAM,GAAGA,MAAM;UACvC,IAAI,CAACsH,OAAO,CAAEptB,CAAC,CAAE,CAACylB,KAAK,CAACkH,KAAK,GAAGA,KAAK;QAEtC;QAEA,IAAI,CAACxC,OAAO,CAAC,CAAC;MAEf;MAEA,IAAI,CAAC2C,QAAQ,CAAC7T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE4M,KAAK,EAAEC,MAAO,CAAC;MACxC,IAAI,CAAC8G,OAAO,CAAC3T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE4M,KAAK,EAAEC,MAAO,CAAC;IAExC;EAAC;IAAAxf,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACsB,OAAO,CAAC,CAAC;MAEd,IAAI,CAACtE,KAAK,GAAGgD,MAAM,CAAChD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG+C,MAAM,CAAC/C,MAAM;MAC3B,IAAI,CAAC6G,KAAK,GAAG9D,MAAM,CAAC8D,KAAK;MAEzB,IAAI,CAACC,OAAO,CAAClS,IAAI,CAAEmO,MAAM,CAAC+D,OAAQ,CAAC;MACnC,IAAI,CAACC,WAAW,GAAGhE,MAAM,CAACgE,WAAW;MAErC,IAAI,CAACC,QAAQ,CAACpS,IAAI,CAAEmO,MAAM,CAACiE,QAAS,CAAC;MAErC,IAAI,CAACE,WAAW,GAAGnE,MAAM,CAACmE,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGpE,MAAM,CAACoE,aAAa;MAEzC,IAAKpE,MAAM,CAACqE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGrE,MAAM,CAACqE,YAAY,CAACzS,KAAK,CAAC,CAAC;MAEnF,IAAI,CAAC2S,OAAO,CAAC/oB,MAAM,GAAG,CAAC;MAEvB,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGzG,MAAM,CAACuE,OAAO,CAAC/oB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAE3D,IAAI,CAACotB,OAAO,CAAEptB,CAAC,CAAE,GAAG6oB,MAAM,CAACuE,OAAO,CAAEptB,CAAC,CAAE,CAACya,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC2S,OAAO,CAAEptB,CAAC,CAAE,CAACypB,qBAAqB,GAAG,IAAI;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAuF,0BAAA;AAAA,EA3EuC1B,iBAAiB;AAAA,IA+EpDiC,UAAU,GAAAnoB,OAAA,CAAAmoB,UAAA,0BAAAC,iBAAA;EAEf,SAAAD,WAAavZ,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAEgpB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAA5kB,eAAA,OAAAypB,UAAA;IAEzC,IAAI,CAACE,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,EAAE,GAAG1Z,CAAC;IACX,IAAI,CAAC2Z,EAAE,GAAGluB,CAAC;IACX,IAAI,CAACmuB,EAAE,GAAGnF,CAAC;IACX,IAAI,CAACoF,EAAE,GAAGnF,CAAC;EAEZ;EAACnkB,YAAA,CAAAgpB,UAAA;IAAAjpB,GAAA;IAAA4T,GAAA,EAuGD,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwV,EAAE;IAEf,CAAC;IAAAzW,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC2vB,EAAE,GAAG3vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyV,EAAE;IAEf,CAAC;IAAA1W,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC4vB,EAAE,GAAG5vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC0V,EAAE;IAEf,CAAC;IAAA3W,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC6vB,EAAE,GAAG7vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC2V,EAAE;IAEf,CAAC;IAAA5W,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC8vB,EAAE,GAAG9vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAACgF,EAAE,GAAG1Z,CAAC;MACX,IAAI,CAAC2Z,EAAE,GAAGluB,CAAC;MACX,IAAI,CAACmuB,EAAE,GAAGnF,CAAC;MACX,IAAI,CAACoF,EAAE,GAAGnF,CAAC;MAEX,IAAI,CAACoF,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACkrB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAG,CAAC;IAElE;EAAC;IAAAvpB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMqV,UAAU,EAAG;MAElB,IAAI,CAACL,EAAE,GAAGK,UAAU,CAAC/Z,CAAC;MACtB,IAAI,CAAC2Z,EAAE,GAAGI,UAAU,CAACtuB,CAAC;MACtB,IAAI,CAACmuB,EAAE,GAAGG,UAAU,CAACtF,CAAC;MACtB,IAAI,CAACoF,EAAE,GAAGE,UAAU,CAACrF,CAAC;MAEtB,IAAI,CAACoF,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAiwB,aAAcC,KAAK,EAAEC,MAAM,EAAG;MAE7B,IAAMla,CAAC,GAAGia,KAAK,CAACP,EAAE;QAAEjuB,CAAC,GAAGwuB,KAAK,CAACN,EAAE;QAAElF,CAAC,GAAGwF,KAAK,CAACL,EAAE;QAAEtX,KAAK,GAAG2X,KAAK,CAACE,MAAM;;MAEpE;MACA;MACA;;MAEA,IAAM5X,GAAG,GAAGxD,IAAI,CAACwD,GAAG;MACpB,IAAMC,GAAG,GAAGzD,IAAI,CAACyD,GAAG;MAEpB,IAAM4X,EAAE,GAAG7X,GAAG,CAAEvC,CAAC,GAAG,CAAE,CAAC;MACvB,IAAMyC,EAAE,GAAGF,GAAG,CAAE9W,CAAC,GAAG,CAAE,CAAC;MACvB,IAAM4uB,EAAE,GAAG9X,GAAG,CAAEkS,CAAC,GAAG,CAAE,CAAC;MAEvB,IAAM6F,EAAE,GAAG9X,GAAG,CAAExC,CAAC,GAAG,CAAE,CAAC;MACvB,IAAM0C,EAAE,GAAGF,GAAG,CAAE/W,CAAC,GAAG,CAAE,CAAC;MACvB,IAAM8uB,EAAE,GAAG/X,GAAG,CAAEiS,CAAC,GAAG,CAAE,CAAC;MAEvB,QAASnS,KAAK;QAEb,KAAK,KAAK;UACT,IAAI,CAACoX,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG7X,EAAE,GAAG4X,EAAE,GAAGD,EAAE,GAAG1X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG7X,EAAE,GAAG8X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG3X,EAAE,GAAG8X,EAAE,GAAGD,EAAE,GAAG5X,EAAE,GAAG2X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG3X,EAAE,GAAG4X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC;QAED;UACCrX,OAAO,CAACC,IAAI,CAAE,kEAAkE,GAAGb,KAAM,CAAC;MAE5F;MAEA,IAAK4X,MAAM,KAAK,KAAK,EAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;MAEhD,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAywB,iBAAkBC,IAAI,EAAErU,KAAK,EAAG;MAE/B;;MAEA;;MAEA,IAAMsU,SAAS,GAAGtU,KAAK,GAAG,CAAC;QAAE5a,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEkY,SAAU,CAAC;MAEtD,IAAI,CAAChB,EAAE,GAAGe,IAAI,CAACza,CAAC,GAAGxU,CAAC;MACpB,IAAI,CAACmuB,EAAE,GAAGc,IAAI,CAAChvB,CAAC,GAAGD,CAAC;MACpB,IAAI,CAACouB,EAAE,GAAGa,IAAI,CAAChG,CAAC,GAAGjpB,CAAC;MACpB,IAAI,CAACquB,EAAE,GAAG9a,IAAI,CAACwD,GAAG,CAAEmY,SAAU,CAAC;MAE/B,IAAI,CAACZ,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAA4wB,sBAAuB7a,CAAC,EAAG;MAE1B;;MAEA;;MAEA,IAAM6I,EAAE,GAAG7I,CAAC,CAACyF,QAAQ;QAEpB4P,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;QAC3C2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,CAAC,CAAE;QAC3C8M,GAAG,GAAG9M,EAAE,CAAE,CAAC,CAAE;QAAE+M,GAAG,GAAG/M,EAAE,CAAE,CAAC,CAAE;QAAEgN,GAAG,GAAGhN,EAAE,CAAE,EAAE,CAAE;QAE5CiS,KAAK,GAAGzF,GAAG,GAAGI,GAAG,GAAGI,GAAG;MAExB,IAAKiF,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAMpvB,CAAC,GAAG,GAAG,GAAGuT,IAAI,CAACmH,IAAI,CAAE0U,KAAK,GAAG,GAAI,CAAC;QAExC,IAAI,CAACf,EAAE,GAAG,IAAI,GAAGruB,CAAC;QAClB,IAAI,CAACkuB,EAAE,GAAG,CAAEhE,GAAG,GAAGF,GAAG,IAAKhqB,CAAC;QAC3B,IAAI,CAACmuB,EAAE,GAAG,CAAEtE,GAAG,GAAGI,GAAG,IAAKjqB,CAAC;QAC3B,IAAI,CAACouB,EAAE,GAAG,CAAEtE,GAAG,GAAGF,GAAG,IAAK5pB,CAAC;MAE5B,CAAC,MAAM,IAAK2pB,GAAG,GAAGI,GAAG,IAAIJ,GAAG,GAAGQ,GAAG,EAAG;QAEpC,IAAMnqB,EAAC,GAAG,GAAG,GAAGuT,IAAI,CAACmH,IAAI,CAAE,GAAG,GAAGiP,GAAG,GAAGI,GAAG,GAAGI,GAAI,CAAC;QAElD,IAAI,CAACkE,EAAE,GAAG,CAAEnE,GAAG,GAAGF,GAAG,IAAKhqB,EAAC;QAC3B,IAAI,CAACkuB,EAAE,GAAG,IAAI,GAAGluB,EAAC;QAClB,IAAI,CAACmuB,EAAE,GAAG,CAAEvE,GAAG,GAAGE,GAAG,IAAK9pB,EAAC;QAC3B,IAAI,CAACouB,EAAE,GAAG,CAAEvE,GAAG,GAAGI,GAAG,IAAKjqB,EAAC;MAE5B,CAAC,MAAM,IAAK+pB,GAAG,GAAGI,GAAG,EAAG;QAEvB,IAAMnqB,GAAC,GAAG,GAAG,GAAGuT,IAAI,CAACmH,IAAI,CAAE,GAAG,GAAGqP,GAAG,GAAGJ,GAAG,GAAGQ,GAAI,CAAC;QAElD,IAAI,CAACkE,EAAE,GAAG,CAAExE,GAAG,GAAGI,GAAG,IAAKjqB,GAAC;QAC3B,IAAI,CAACkuB,EAAE,GAAG,CAAEtE,GAAG,GAAGE,GAAG,IAAK9pB,GAAC;QAC3B,IAAI,CAACmuB,EAAE,GAAG,IAAI,GAAGnuB,GAAC;QAClB,IAAI,CAACouB,EAAE,GAAG,CAAEpE,GAAG,GAAGE,GAAG,IAAKlqB,GAAC;MAE5B,CAAC,MAAM;QAEN,IAAMA,GAAC,GAAG,GAAG,GAAGuT,IAAI,CAACmH,IAAI,CAAE,GAAG,GAAGyP,GAAG,GAAGR,GAAG,GAAGI,GAAI,CAAC;QAElD,IAAI,CAACsE,EAAE,GAAG,CAAEvE,GAAG,GAAGF,GAAG,IAAK5pB,GAAC;QAC3B,IAAI,CAACkuB,EAAE,GAAG,CAAErE,GAAG,GAAGI,GAAG,IAAKjqB,GAAC;QAC3B,IAAI,CAACmuB,EAAE,GAAG,CAAEnE,GAAG,GAAGE,GAAG,IAAKlqB,GAAC;QAC3B,IAAI,CAACouB,EAAE,GAAG,IAAI,GAAGpuB,GAAC;MAEnB;MAEA,IAAI,CAACsuB,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAA8wB,mBAAoBC,KAAK,EAAEC,GAAG,EAAG;MAEhC;;MAEA,IAAIvxB,CAAC,GAAGsxB,KAAK,CAAC/U,GAAG,CAAEgV,GAAI,CAAC,GAAG,CAAC;MAE5B,IAAKvxB,CAAC,GAAG0H,MAAM,CAAC8pB,OAAO,EAAG;QAEzB;;QAEAxxB,CAAC,GAAG,CAAC;QAEL,IAAKuV,IAAI,CAAC6B,GAAG,CAAEka,KAAK,CAAC9a,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAEka,KAAK,CAACrG,CAAE,CAAC,EAAG;UAEhD,IAAI,CAACiF,EAAE,GAAG,CAAEoB,KAAK,CAACrvB,CAAC;UACnB,IAAI,CAACkuB,EAAE,GAAGmB,KAAK,CAAC9a,CAAC;UACjB,IAAI,CAAC4Z,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAGrwB,CAAC;QAEZ,CAAC,MAAM;UAEN,IAAI,CAACkwB,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAEmB,KAAK,CAACrG,CAAC;UACnB,IAAI,CAACmF,EAAE,GAAGkB,KAAK,CAACrvB,CAAC;UACjB,IAAI,CAACouB,EAAE,GAAGrwB,CAAC;QAEZ;MAED,CAAC,MAAM;QAEN;;QAEA,IAAI,CAACkwB,EAAE,GAAGoB,KAAK,CAACrvB,CAAC,GAAGsvB,GAAG,CAACtG,CAAC,GAAGqG,KAAK,CAACrG,CAAC,GAAGsG,GAAG,CAACtvB,CAAC;QAC3C,IAAI,CAACkuB,EAAE,GAAGmB,KAAK,CAACrG,CAAC,GAAGsG,GAAG,CAAC/a,CAAC,GAAG8a,KAAK,CAAC9a,CAAC,GAAG+a,GAAG,CAACtG,CAAC;QAC3C,IAAI,CAACmF,EAAE,GAAGkB,KAAK,CAAC9a,CAAC,GAAG+a,GAAG,CAACtvB,CAAC,GAAGqvB,KAAK,CAACrvB,CAAC,GAAGsvB,GAAG,CAAC/a,CAAC;QAC3C,IAAI,CAAC6Z,EAAE,GAAGrwB,CAAC;MAEZ;MAEA,OAAO,IAAI,CAACoa,SAAS,CAAC,CAAC;IAExB;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAAuc,QAASlE,CAAC,EAAG;MAEZ,OAAO,CAAC,GAAGrD,IAAI,CAAC0H,IAAI,CAAE1H,IAAI,CAAC6B,GAAG,CAAElB,KAAK,CAAE,IAAI,CAACqG,GAAG,CAAE3D,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAE,CAAC;IAEnE;EAAC;IAAA9R,GAAA;IAAAvG,KAAA,EAED,SAAAkxB,cAAe7Y,CAAC,EAAE8Y,IAAI,EAAG;MAExB,IAAM9U,KAAK,GAAG,IAAI,CAACE,OAAO,CAAElE,CAAE,CAAC;MAE/B,IAAKgE,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;MAE9B,IAAM7c,CAAC,GAAGwV,IAAI,CAACY,GAAG,CAAE,CAAC,EAAEub,IAAI,GAAG9U,KAAM,CAAC;MAErC,IAAI,CAAC+U,KAAK,CAAE/Y,CAAC,EAAE7Y,CAAE,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAA6e,SAAA,EAAW;MAEV,OAAO,IAAI,CAAC3F,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9B;EAAC;IAAA3S,GAAA;IAAAvG,KAAA,EAED,SAAA4gB,OAAA,EAAS;MAER;;MAEA,OAAO,IAAI,CAACyQ,SAAS,CAAC,CAAC;IAExB;EAAC;IAAA9qB,GAAA;IAAAvG,KAAA,EAED,SAAAqxB,UAAA,EAAY;MAEX,IAAI,CAAC1B,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MAEd,IAAI,CAACE,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAgc,IAAKha,CAAC,EAAG;MAER,OAAO,IAAI,CAAC2tB,EAAE,GAAG3tB,CAAC,CAAC2tB,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG5tB,CAAC,CAAC4tB,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG7tB,CAAC,CAAC6tB,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG9tB,CAAC,CAAC8tB,EAAE;IAEzE;EAAC;IAAAvpB,GAAA;IAAAvG,KAAA,EAED,SAAAkc,SAAA,EAAW;MAEV,OAAO,IAAI,CAACyT,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE;IAErF;EAAC;IAAAvpB,GAAA;IAAAvG,KAAA,EAED,SAAAsE,OAAA,EAAS;MAER,OAAO0Q,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACwT,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAG,CAAC;IAElG;EAAC;IAAAvpB,GAAA;IAAAvG,KAAA,EAED,SAAA6Z,UAAA,EAAY;MAEX,IAAItY,CAAC,GAAG,IAAI,CAAC+C,MAAM,CAAC,CAAC;MAErB,IAAK/C,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAACouB,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;MAEZ,CAAC,MAAM;QAENvuB,CAAC,GAAG,CAAC,GAAGA,CAAC;QAET,IAAI,CAACouB,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGpuB,CAAC;QACrB,IAAI,CAACquB,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGruB,CAAC;QACrB,IAAI,CAACsuB,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGtuB,CAAC;QACrB,IAAI,CAACuuB,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGvuB,CAAC;MAEtB;MAEA,IAAI,CAACwuB,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAU9C,CAAC,EAAG;MAEb,OAAO,IAAI,CAACiZ,mBAAmB,CAAE,IAAI,EAAEjZ,CAAE,CAAC;IAE3C;EAAC;IAAA9R,GAAA;IAAAvG,KAAA,EAED,SAAAsf,YAAajH,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACiZ,mBAAmB,CAAEjZ,CAAC,EAAE,IAAK,CAAC;IAE3C;EAAC;IAAA9R,GAAA;IAAAvG,KAAA,EAED,SAAAsxB,oBAAqBnxB,CAAC,EAAEmY,CAAC,EAAG;MAE3B;;MAEA,IAAMiZ,GAAG,GAAGpxB,CAAC,CAACwvB,EAAE;QAAE6B,GAAG,GAAGrxB,CAAC,CAACyvB,EAAE;QAAE6B,GAAG,GAAGtxB,CAAC,CAAC0vB,EAAE;QAAE6B,GAAG,GAAGvxB,CAAC,CAAC2vB,EAAE;MACpD,IAAM6B,GAAG,GAAGrZ,CAAC,CAACqX,EAAE;QAAEiC,GAAG,GAAGtZ,CAAC,CAACsX,EAAE;QAAEiC,GAAG,GAAGvZ,CAAC,CAACuX,EAAE;QAAEiC,GAAG,GAAGxZ,CAAC,CAACwX,EAAE;MAEpD,IAAI,CAACH,EAAE,GAAG4B,GAAG,GAAGO,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGM,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGM,GAAG;MACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGN,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAC7B,EAAE,GAAG4B,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG;MAEvD,IAAI,CAAC9B,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAoxB,MAAOW,EAAE,EAAEvyB,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI;MAC1B,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAACmb,IAAI,CAAEoX,EAAG,CAAC;MAErC,IAAM9b,CAAC,GAAG,IAAI,CAAC0Z,EAAE;QAAEjuB,CAAC,GAAG,IAAI,CAACkuB,EAAE;QAAElF,CAAC,GAAG,IAAI,CAACmF,EAAE;QAAElF,CAAC,GAAG,IAAI,CAACmF,EAAE;;MAExD;;MAEA,IAAIkC,YAAY,GAAGrH,CAAC,GAAGoH,EAAE,CAACjC,EAAE,GAAG7Z,CAAC,GAAG8b,EAAE,CAACpC,EAAE,GAAGjuB,CAAC,GAAGqwB,EAAE,CAACnC,EAAE,GAAGlF,CAAC,GAAGqH,EAAE,CAAClC,EAAE;MAEhE,IAAKmC,YAAY,GAAG,CAAC,EAAG;QAEvB,IAAI,CAAClC,EAAE,GAAG,CAAEiC,EAAE,CAACjC,EAAE;QACjB,IAAI,CAACH,EAAE,GAAG,CAAEoC,EAAE,CAACpC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEmC,EAAE,CAACnC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEkC,EAAE,CAAClC,EAAE;QAEjBmC,YAAY,GAAG,CAAEA,YAAY;MAE9B,CAAC,MAAM;QAEN,IAAI,CAACrX,IAAI,CAAEoX,EAAG,CAAC;MAEhB;MAEA,IAAKC,YAAY,IAAI,GAAG,EAAG;QAE1B,IAAI,CAAClC,EAAE,GAAGnF,CAAC;QACX,IAAI,CAACgF,EAAE,GAAG1Z,CAAC;QACX,IAAI,CAAC2Z,EAAE,GAAGluB,CAAC;QACX,IAAI,CAACmuB,EAAE,GAAGnF,CAAC;QAEX,OAAO,IAAI;MAEZ;MAEA,IAAMuH,eAAe,GAAG,GAAG,GAAGD,YAAY,GAAGA,YAAY;MAEzD,IAAKC,eAAe,IAAI9qB,MAAM,CAAC8pB,OAAO,EAAG;QAExC,IAAMxvB,CAAC,GAAG,CAAC,GAAGjC,CAAC;QACf,IAAI,CAACswB,EAAE,GAAGruB,CAAC,GAAGkpB,CAAC,GAAGnrB,CAAC,GAAG,IAAI,CAACswB,EAAE;QAC7B,IAAI,CAACH,EAAE,GAAGluB,CAAC,GAAGwU,CAAC,GAAGzW,CAAC,GAAG,IAAI,CAACmwB,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGnuB,CAAC,GAAGC,CAAC,GAAGlC,CAAC,GAAG,IAAI,CAACowB,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGpuB,CAAC,GAAGipB,CAAC,GAAGlrB,CAAC,GAAG,IAAI,CAACqwB,EAAE;QAE7B,IAAI,CAAChW,SAAS,CAAC,CAAC;QAChB,IAAI,CAACkW,iBAAiB,CAAC,CAAC;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAMmC,YAAY,GAAGld,IAAI,CAACmH,IAAI,CAAE8V,eAAgB,CAAC;MACjD,IAAME,SAAS,GAAGnd,IAAI,CAACsH,KAAK,CAAE4V,YAAY,EAAEF,YAAa,CAAC;MAC1D,IAAMI,MAAM,GAAGpd,IAAI,CAACyD,GAAG,CAAE,CAAE,CAAC,GAAGjZ,CAAC,IAAK2yB,SAAU,CAAC,GAAGD,YAAY;QAC9DG,MAAM,GAAGrd,IAAI,CAACyD,GAAG,CAAEjZ,CAAC,GAAG2yB,SAAU,CAAC,GAAGD,YAAY;MAElD,IAAI,CAACpC,EAAE,GAAKnF,CAAC,GAAGyH,MAAM,GAAG,IAAI,CAACtC,EAAE,GAAGuC,MAAQ;MAC3C,IAAI,CAAC1C,EAAE,GAAK1Z,CAAC,GAAGmc,MAAM,GAAG,IAAI,CAACzC,EAAE,GAAG0C,MAAQ;MAC3C,IAAI,CAACzC,EAAE,GAAKluB,CAAC,GAAG0wB,MAAM,GAAG,IAAI,CAACxC,EAAE,GAAGyC,MAAQ;MAC3C,IAAI,CAACxC,EAAE,GAAKnF,CAAC,GAAG0H,MAAM,GAAG,IAAI,CAACvC,EAAE,GAAGwC,MAAQ;MAE3C,IAAI,CAACtC,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAsyB,iBAAkBC,EAAE,EAAER,EAAE,EAAEvyB,CAAC,EAAG;MAE7B,OAAO,IAAI,CAACmb,IAAI,CAAE4X,EAAG,CAAC,CAACnB,KAAK,CAAEW,EAAE,EAAEvyB,CAAE,CAAC;IAEtC;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAAqV,OAAA,EAAS;MAER;MACA;MACA;;MAEA,IAAMmd,EAAE,GAAGxd,IAAI,CAACK,MAAM,CAAC,CAAC;MACxB,IAAMod,OAAO,GAAGzd,IAAI,CAACmH,IAAI,CAAE,CAAC,GAAGqW,EAAG,CAAC;MACnC,IAAME,MAAM,GAAG1d,IAAI,CAACmH,IAAI,CAAEqW,EAAG,CAAC;MAE9B,IAAMG,EAAE,GAAG,CAAC,GAAG3d,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtC,IAAMud,EAAE,GAAG,CAAC,GAAG5d,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtC,OAAO,IAAI,CAAC6D,GAAG,CACduZ,OAAO,GAAGzd,IAAI,CAACwD,GAAG,CAAEma,EAAG,CAAC,EACxBD,MAAM,GAAG1d,IAAI,CAACyD,GAAG,CAAEma,EAAG,CAAC,EACvBF,MAAM,GAAG1d,IAAI,CAACwD,GAAG,CAAEoa,EAAG,CAAC,EACvBH,OAAO,GAAGzd,IAAI,CAACyD,GAAG,CAAEka,EAAG,CACxB,CAAC;IAEF;EAAC;IAAApsB,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ2S,UAAU,EAAG;MAEpB,OAASA,UAAU,CAACL,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQK,UAAU,CAACJ,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMI,UAAU,CAACH,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMG,UAAU,CAACF,EAAE,KAAK,IAAI,CAACA,EAAI;IAExI;EAAC;IAAAvpB,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACoS,EAAE,GAAG/a,KAAK,CAAE2I,MAAM,CAAE;MACzB,IAAI,CAACqS,EAAE,GAAGhb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAACsS,EAAE,GAAGjb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAACuS,EAAE,GAAGlb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE7B,IAAI,CAACwS,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACoS,EAAE;MACzB/a,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACqS,EAAE;MAC7Bhb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACsS,EAAE;MAC7Bjb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuS,EAAE;MAE7B,OAAOlb,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAyd,oBAAqBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,CAACmb,EAAE,GAAGjS,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MACjC,IAAI,CAACob,EAAE,GAAGlS,SAAS,CAACE,IAAI,CAAEpJ,KAAM,CAAC;MACjC,IAAI,CAACqb,EAAE,GAAGnS,SAAS,CAACyO,IAAI,CAAE3X,KAAM,CAAC;MACjC,IAAI,CAACsb,EAAE,GAAGpS,SAAS,CAAC0O,IAAI,CAAE5X,KAAM,CAAC;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,OAAO,IAAI,CAACxJ,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAjX,GAAA;IAAAvG,KAAA,EAED,SAAA6yB,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAA+vB,kBAAA,EAAoB,CAAC;EAAC;IAAAxpB,GAAA,EAAAkpB,iBAAA;IAAAzvB,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAEtB,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAAgV,SAAA;QAAA,kBAAAA,SAAA,CAAA3tB,IAAA,GAAA2tB,SAAA,CAAAtvB,IAAA;UAAA;YAAAsvB,SAAA,CAAAtvB,IAAA;YAEC,OAAM,IAAI,CAACksB,EAAE;UAAA;YAAAoD,SAAA,CAAAtvB,IAAA;YACb,OAAM,IAAI,CAACmsB,EAAE;UAAA;YAAAmD,SAAA,CAAAtvB,IAAA;YACb,OAAM,IAAI,CAACosB,EAAE;UAAA;YAAAkD,SAAA,CAAAtvB,IAAA;YACb,OAAM,IAAI,CAACqsB,EAAE;UAAA;UAAA;YAAA,OAAAiD,SAAA,CAAAxtB,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEb;EAAA;IAAAuG,GAAA;IAAAvG,KAAA,EAxpBD,SAAAgzB,UAAkBC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAE9zB,CAAC,EAAG;MAEzE;;MAEA,IAAI+zB,EAAE,GAAGJ,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC9BI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAChCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAK9zB,CAAC,KAAK,CAAC,EAAG;QAEdyzB,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGK,EAAE;QACzBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;QACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;QACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;QACzB;MAED;MAEA,IAAKl0B,CAAC,KAAK,CAAC,EAAG;QAEdyzB,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGS,EAAE;QACzBV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGU,EAAE;QACzBX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGW,EAAE;QACzBZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGY,EAAE;QACzB;MAED;MAEA,IAAKJ,EAAE,KAAKI,EAAE,IAAIP,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,EAAG;QAEvD,IAAIpyB,CAAC,GAAG,CAAC,GAAGjC,CAAC;QACb,IAAMgZ,GAAG,GAAG+a,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;UAChDC,GAAG,GAAKvb,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAG;UAC5Bwb,MAAM,GAAG,CAAC,GAAGxb,GAAG,GAAGA,GAAG;;QAEvB;QACA,IAAKwb,MAAM,GAAG7sB,MAAM,CAAC8pB,OAAO,EAAG;UAE9B,IAAMxY,GAAG,GAAGzD,IAAI,CAACmH,IAAI,CAAE6X,MAAO,CAAC;YAC9BC,GAAG,GAAGjf,IAAI,CAACsH,KAAK,CAAE7D,GAAG,EAAED,GAAG,GAAGub,GAAI,CAAC;UAEnCtyB,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEhX,CAAC,GAAGwyB,GAAI,CAAC,GAAGxb,GAAG;UAC7BjZ,CAAC,GAAGwV,IAAI,CAACyD,GAAG,CAAEjZ,CAAC,GAAGy0B,GAAI,CAAC,GAAGxb,GAAG;QAE9B;QAEA,IAAMyb,IAAI,GAAG10B,CAAC,GAAGu0B,GAAG;QAEpBR,EAAE,GAAGA,EAAE,GAAG9xB,CAAC,GAAGkyB,EAAE,GAAGO,IAAI;QACvBV,EAAE,GAAGA,EAAE,GAAG/xB,CAAC,GAAGmyB,EAAE,GAAGM,IAAI;QACvBT,EAAE,GAAGA,EAAE,GAAGhyB,CAAC,GAAGoyB,EAAE,GAAGK,IAAI;QACvBR,EAAE,GAAGA,EAAE,GAAGjyB,CAAC,GAAGqyB,EAAE,GAAGI,IAAI;;QAEvB;QACA,IAAKzyB,CAAC,KAAK,CAAC,GAAGjC,CAAC,EAAG;UAElB,IAAMgC,CAAC,GAAG,CAAC,GAAGwT,IAAI,CAACmH,IAAI,CAAEoX,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAG,CAAC;UAEhEH,EAAE,IAAI/xB,CAAC;UACPgyB,EAAE,IAAIhyB,CAAC;UACPiyB,EAAE,IAAIjyB,CAAC;UACPkyB,EAAE,IAAIlyB,CAAC;QAER;MAED;MAEAyxB,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE;MACrBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;MACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;MACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;IAE1B;EAAC;IAAAntB,GAAA;IAAAvG,KAAA,EAED,SAAAm0B,wBAAgClB,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAG;MAEpF,IAAMC,EAAE,GAAGJ,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjC,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjCL,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE,GAAGO,EAAE,GAAGJ,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MACxDX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGE,EAAE,GAAGJ,EAAE,GAAGM,EAAE;MAC5DZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE,GAAGN,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MAC5DV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE,GAAGI,EAAE,GAAGP,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;MAE5D,OAAOZ,GAAG;IAEX;EAAC;EAAA,OAAAzD,UAAA;AAAA,EA8iBEtvB,MAAM,CAACE,QAAQ;AAAA,IAWbg0B,OAAO,GAAA/sB,OAAA,CAAA+sB,OAAA,0BAAAC,iBAAA;EAEZ,SAAAD,QAAane,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAEgpB,CAAC,GAAG,CAAC,EAAG;IAAA3kB,eAAA,OAAAquB,OAAA;IAElCA,OAAO,CAACz0B,SAAS,CAAC20B,SAAS,GAAG,IAAI;IAElC,IAAI,CAACre,CAAC,GAAGA,CAAC;IACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;IACV,IAAI,CAACgpB,CAAC,GAAGA,CAAC;EAEX;EAAClkB,YAAA,CAAA4tB,OAAA;IAAA7tB,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAKzjB,SAAS,EAAGyjB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,CAAC;;MAEnC,IAAI,CAACzU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACgpB,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAoa,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACpE,CAAC,GAAGoE,MAAM;MACf,IAAI,CAAC3Y,CAAC,GAAG2Y,MAAM;MACf,IAAI,CAACqQ,CAAC,GAAGrQ,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM7Y,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6qB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAwa,aAAchG,KAAK,EAAExU,KAAK,EAAG;MAE5B,QAASwU,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAACyB,CAAC,GAAGjW,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC0B,CAAC,GAAG1B,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC0qB,CAAC,GAAG1qB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI6C,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAya,aAAcjG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAACyB,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACvU,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACgpB,CAAC;QACrB;UAAS,MAAM,IAAI7nB,KAAK,CAAE,yBAAyB,GAAG2R,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACwR,CAAC,EAAE,IAAI,CAACvU,CAAC,EAAE,IAAI,CAACgpB,CAAE,CAAC;IAEtD;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM3Y,CAAC,EAAG;MAET,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC;MACZ,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC;MACZ,IAAI,CAACgpB,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAK5Y,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6a,UAAWpZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MACX,IAAI,CAACipB,CAAC,IAAIjpB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA8a,WAAY3a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAClB,IAAI,CAACgpB,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA+a,gBAAiB/Y,CAAC,EAAEP,CAAC,EAAG;MAEvB,IAAI,CAACwU,CAAC,IAAIjU,CAAC,CAACiU,CAAC,GAAGxU,CAAC;MACjB,IAAI,CAACC,CAAC,IAAIM,CAAC,CAACN,CAAC,GAAGD,CAAC;MACjB,IAAI,CAACipB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC,GAAGjpB,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAgb,IAAKhZ,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAib,UAAWxZ,CAAC,EAAG;MAEd,IAAI,CAACwU,CAAC,IAAIxU,CAAC;MACX,IAAI,CAACC,CAAC,IAAID,CAAC;MACX,IAAI,CAACipB,CAAC,IAAIjpB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAkb,WAAY/a,CAAC,EAAEmY,CAAC,EAAG;MAElB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAClB,IAAI,CAACgpB,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAUnZ,CAAC,EAAG;MAEb,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgBf,MAAM,EAAG;MAExB,IAAI,CAACpE,CAAC,IAAIoE,MAAM;MAChB,IAAI,CAAC3Y,CAAC,IAAI2Y,MAAM;MAChB,IAAI,CAACqQ,CAAC,IAAIrQ,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAu0B,gBAAiBp0B,CAAC,EAAEmY,CAAC,EAAG;MAEvB,IAAI,CAACrC,CAAC,GAAG9V,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;MAClB,IAAI,CAACvU,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;MAClB,IAAI,CAACgpB,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAw0B,WAAYtE,KAAK,EAAG;MAEnB,OAAO,IAAI,CAACuE,eAAe,CAAEC,aAAa,CAACzE,YAAY,CAAEC,KAAM,CAAE,CAAC;IAEnE;EAAC;IAAA3pB,GAAA;IAAAvG,KAAA,EAED,SAAA20B,eAAgBjE,IAAI,EAAErU,KAAK,EAAG;MAE7B,OAAO,IAAI,CAACoY,eAAe,CAAEC,aAAa,CAACjE,gBAAgB,CAAEC,IAAI,EAAErU,KAAM,CAAE,CAAC;IAE7E;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAAub,aAAcxF,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEgpB,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMnrB,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAACvF,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC;MAC7C,IAAI,CAAChpB,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGnrB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA40B,kBAAmB7e,CAAC,EAAG;MAEtB,OAAO,IAAI,CAACwF,YAAY,CAAExF,CAAE,CAAC,CAAC8D,SAAS,CAAC,CAAC;IAE1C;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAchV,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEgpB,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMnrB,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAMmP,CAAC,GAAG,CAAC,IAAKprB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,CAAE;MAEjE,IAAI,CAAC0W,CAAC,GAAG,CAAE1W,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,IAAKorB,CAAC;MAC/D,IAAI,CAACjpB,CAAC,GAAG,CAAEnC,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,IAAKorB,CAAC;MAC/D,IAAI,CAACD,CAAC,GAAG,CAAEnrB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE,IAAKorB,CAAC;MAEhE,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAy0B,gBAAiBpc,CAAC,EAAG;MAEpB,IAAMpC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEgpB,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMmK,EAAE,GAAGxc,CAAC,CAACpC,CAAC;QAAE6e,EAAE,GAAGzc,CAAC,CAAC3W,CAAC;QAAEqzB,EAAE,GAAG1c,CAAC,CAACqS,CAAC;QAAEsK,EAAE,GAAG3c,CAAC,CAACsS,CAAC;;MAE5C;;MAEA,IAAMsK,EAAE,GAAGD,EAAE,GAAG/e,CAAC,GAAG6e,EAAE,GAAGpK,CAAC,GAAGqK,EAAE,GAAGrzB,CAAC;MACnC,IAAMwzB,EAAE,GAAGF,EAAE,GAAGtzB,CAAC,GAAGqzB,EAAE,GAAG9e,CAAC,GAAG4e,EAAE,GAAGnK,CAAC;MACnC,IAAMyK,EAAE,GAAGH,EAAE,GAAGtK,CAAC,GAAGmK,EAAE,GAAGnzB,CAAC,GAAGozB,EAAE,GAAG7e,CAAC;MACnC,IAAMmf,EAAE,GAAG,CAAEP,EAAE,GAAG5e,CAAC,GAAG6e,EAAE,GAAGpzB,CAAC,GAAGqzB,EAAE,GAAGrK,CAAC;;MAErC;;MAEA,IAAI,CAACzU,CAAC,GAAGgf,EAAE,GAAGD,EAAE,GAAGI,EAAE,GAAG,CAAEP,EAAE,GAAGK,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MACpD,IAAI,CAACpzB,CAAC,GAAGwzB,EAAE,GAAGF,EAAE,GAAGI,EAAE,GAAG,CAAEN,EAAE,GAAGK,EAAE,GAAG,CAAEN,EAAE,GAAGI,EAAE,GAAG,CAAEF,EAAE;MACpD,IAAI,CAACrK,CAAC,GAAGyK,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE,GAAGE,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MAEpD,OAAO,IAAI;IAEZ;EAAC;IAAAtuB,GAAA;IAAAvG,KAAA,EAED,SAAAq1B,QAASC,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACvK,YAAY,CAAEuK,MAAM,CAACC,kBAAmB,CAAC,CAACxK,YAAY,CAAEuK,MAAM,CAACE,gBAAiB,CAAC;IAE9F;EAAC;IAAAjvB,GAAA;IAAAvG,KAAA,EAED,SAAAy1B,UAAWH,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACvK,YAAY,CAAEuK,MAAM,CAACI,uBAAwB,CAAC,CAAC3K,YAAY,CAAEuK,MAAM,CAACK,WAAY,CAAC;IAE9F;EAAC;IAAApvB,GAAA;IAAAvG,KAAA,EAED,SAAA41B,mBAAoB7f,CAAC,EAAG;MAEvB;MACA;;MAEA,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEvU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEgpB,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMnrB,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAACvF,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC;MAC7C,IAAI,CAAChpB,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGmrB,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGnrB,CAAC,CAAE,CAAC,CAAE,GAAG0W,CAAC,GAAG1W,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGmrB,CAAC;MAE9C,OAAO,IAAI,CAAC7Q,SAAS,CAAC,CAAC;IAExB;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAAqb,OAAQrZ,CAAC,EAAG;MAEX,IAAI,CAACiU,CAAC,IAAIjU,CAAC,CAACiU,CAAC;MACb,IAAI,CAACvU,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,IAAI,CAACgpB,CAAC,IAAI1oB,CAAC,CAAC0oB,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAsb,aAAcjB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACe,cAAc,CAAE,CAAC,GAAGf,MAAO,CAAC;IAEzC;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAA4V,IAAK5T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACY,GAAG,CAAE,IAAI,CAAClU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAChC,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC8U,CAAC,EAAE1oB,CAAC,CAAC0oB,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6V,IAAK7T,CAAC,EAAG;MAER,IAAI,CAACiU,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACI,CAAC,EAAEjU,CAAC,CAACiU,CAAE,CAAC;MAChC,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE,IAAI,CAACnU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAChC,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC6U,CAAC,EAAE1oB,CAAC,CAAC0oB,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA2V,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACI,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACK,CAAC,EAAEjB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACI,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAED,GAAG,CAAClU,CAAC,EAAEsT,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAED,GAAG,CAAC8U,CAAC,EAAE1V,IAAI,CAACY,GAAG,CAAEC,GAAG,CAAC6U,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAyb,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAAC1F,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAAC1F,CAAE,CAAE,CAAC;MACvD,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAACja,CAAE,CAAE,CAAC;MACvD,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACa,GAAG,CAAE6F,MAAM,EAAE1G,IAAI,CAACY,GAAG,CAAE+F,MAAM,EAAE,IAAI,CAAC+O,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA4b,YAAahG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMvR,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAE,CAAC,CAAC8W,cAAc,CAAEpG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEvR,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAmX,MAAA,EAAQ;MAEP,IAAI,CAAClB,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAClB,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACzV,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACmC,KAAK,CAAE,IAAI,CAACuT,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAgY,KAAA,EAAO;MAEN,IAAI,CAAC/B,CAAC,GAAGjB,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC/B,CAAE,CAAC;MAC5B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAACgD,IAAI,CAAE,IAAI,CAACtW,CAAE,CAAC;MAC5B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAACgD,IAAI,CAAE,IAAI,CAAC0S,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA8Z,MAAA,EAAQ;MAEP,IAAI,CAAC7D,CAAC,GAAGjB,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC7D,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAACpY,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAAC8E,KAAK,CAAE,IAAI,CAAC4Q,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6b,YAAA,EAAc;MAEb,IAAI,CAAC5F,CAAC,GAAGjB,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC7F,CAAE,CAAC;MAC7B,IAAI,CAACvU,CAAC,GAAGsT,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAACpa,CAAE,CAAC;MAC7B,IAAI,CAACgpB,CAAC,GAAG1V,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC4O,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA+b,OAAA,EAAS;MAER,IAAI,CAAC9F,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACvU,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACgpB,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAgc,IAAKha,CAAC,EAAG;MAER,OAAO,IAAI,CAACiU,CAAC,GAAGjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAGM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC;IAElD;;IAEA;EAAA;IAAAnkB,GAAA;IAAAvG,KAAA,EAEA,SAAAkc,SAAA,EAAW;MAEV,OAAO,IAAI,CAACjG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG,IAAI,CAACA,CAAC;IAE3D;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAsE,OAAA,EAAS;MAER,OAAO0Q,IAAI,CAACmH,IAAI,CAAE,IAAI,CAAClG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACvU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACgpB,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAExE;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAoc,gBAAA,EAAkB;MAEjB,OAAOpH,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACZ,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACnV,CAAE,CAAC,GAAGsT,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAAC6T,CAAE,CAAC;IAEpE;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6Z,UAAA,EAAY;MAEX,OAAO,IAAI,CAACyB,YAAY,CAAE,IAAI,CAAChX,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAgd,UAAW1Y,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACuV,SAAS,CAAC,CAAC,CAACuB,cAAc,CAAE9W,MAAO,CAAC;IAEjD;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAuW,KAAMvU,CAAC,EAAEib,KAAK,EAAG;MAEhB,IAAI,CAAChH,CAAC,IAAI,CAAEjU,CAAC,CAACiU,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKgH,KAAK;MAClC,IAAI,CAACvb,CAAC,IAAI,CAAEM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKub,KAAK;MAClC,IAAI,CAACyN,CAAC,IAAI,CAAE1oB,CAAC,CAAC0oB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKzN,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAkd,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAChH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,GAAG,CAAEmH,EAAE,CAACnH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;MACvC,IAAI,CAACvb,CAAC,GAAGyb,EAAE,CAACzb,CAAC,GAAG,CAAE0b,EAAE,CAAC1b,CAAC,GAAGyb,EAAE,CAACzb,CAAC,IAAKub,KAAK;MACvC,IAAI,CAACyN,CAAC,GAAGvN,EAAE,CAACuN,CAAC,GAAG,CAAEtN,EAAE,CAACsN,CAAC,GAAGvN,EAAE,CAACuN,CAAC,IAAKzN,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAic,MAAOja,CAAC,EAAG;MAEV,OAAO,IAAI,CAAC6zB,YAAY,CAAE,IAAI,EAAE7zB,CAAE,CAAC;IAEpC;EAAC;IAAAuE,GAAA;IAAAvG,KAAA,EAED,SAAA61B,aAAc11B,CAAC,EAAEmY,CAAC,EAAG;MAEpB,IAAMwd,EAAE,GAAG31B,CAAC,CAAC8V,CAAC;QAAE8f,EAAE,GAAG51B,CAAC,CAACuB,CAAC;QAAEs0B,EAAE,GAAG71B,CAAC,CAACuqB,CAAC;MAClC,IAAMuL,EAAE,GAAG3d,CAAC,CAACrC,CAAC;QAAEigB,EAAE,GAAG5d,CAAC,CAAC5W,CAAC;QAAEy0B,EAAE,GAAG7d,CAAC,CAACoS,CAAC;MAElC,IAAI,CAACzU,CAAC,GAAG8f,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAC1B,IAAI,CAACx0B,CAAC,GAAGs0B,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE;MAC1B,IAAI,CAACzL,CAAC,GAAGoL,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAE1B,OAAO,IAAI;IAEZ;EAAC;IAAA1vB,GAAA;IAAAvG,KAAA,EAED,SAAAo2B,gBAAiBp0B,CAAC,EAAG;MAEpB,IAAMwa,WAAW,GAAGxa,CAAC,CAACka,QAAQ,CAAC,CAAC;MAEhC,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAACtD,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEnD,IAAMmB,MAAM,GAAGrY,CAAC,CAACga,GAAG,CAAE,IAAK,CAAC,GAAGQ,WAAW;MAE1C,OAAO,IAAI,CAAC7B,IAAI,CAAE3Y,CAAE,CAAC,CAACoZ,cAAc,CAAEf,MAAO,CAAC;IAE/C;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAq2B,eAAgBC,WAAW,EAAG;MAE7BC,SAAS,CAAC5b,IAAI,CAAE,IAAK,CAAC,CAACyb,eAAe,CAAEE,WAAY,CAAC;MAErD,OAAO,IAAI,CAACtb,GAAG,CAAEub,SAAU,CAAC;IAE7B;EAAC;IAAAhwB,GAAA;IAAAvG,KAAA,EAED,SAAAw2B,QAASC,MAAM,EAAG;MAEjB;MACA;;MAEA,OAAO,IAAI,CAACzb,GAAG,CAAEub,SAAS,CAAC5b,IAAI,CAAE8b,MAAO,CAAC,CAACrb,cAAc,CAAE,CAAC,GAAG,IAAI,CAACY,GAAG,CAAEya,MAAO,CAAE,CAAE,CAAC;IAErF;EAAC;IAAAlwB,GAAA;IAAAvG,KAAA,EAED,SAAAuc,QAASva,CAAC,EAAG;MAEZ,IAAMwa,WAAW,GAAGxH,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGla,CAAC,CAACka,QAAQ,CAAC,CAAE,CAAC;MAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAOxH,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMwH,KAAK,GAAG,IAAI,CAACT,GAAG,CAAEha,CAAE,CAAC,GAAGwa,WAAW;;MAEzC;;MAEA,OAAOxH,IAAI,CAAC0H,IAAI,CAAE/G,KAAK,CAAE8G,KAAK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAA2c,WAAY3a,CAAC,EAAG;MAEf,OAAOgT,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAE5a,CAAE,CAAE,CAAC;IAEhD;EAAC;IAAAuE,GAAA;IAAAvG,KAAA,EAED,SAAA4c,kBAAmB5a,CAAC,EAAG;MAEtB,IAAM6a,EAAE,GAAG,IAAI,CAAC5G,CAAC,GAAGjU,CAAC,CAACiU,CAAC;QAAE6G,EAAE,GAAG,IAAI,CAACpb,CAAC,GAAGM,CAAC,CAACN,CAAC;QAAEg1B,EAAE,GAAG,IAAI,CAAChM,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC;MAE7D,OAAO7N,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAG4Z,EAAE,GAAGA,EAAE;IAEnC;EAAC;IAAAnwB,GAAA;IAAAvG,KAAA,EAED,SAAA+c,oBAAqB/a,CAAC,EAAG;MAExB,OAAOgT,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACZ,CAAC,GAAGjU,CAAC,CAACiU,CAAE,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAACnV,CAAC,GAAGM,CAAC,CAACN,CAAE,CAAC,GAAGsT,IAAI,CAAC6B,GAAG,CAAE,IAAI,CAAC6T,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAE,CAAC;IAEtF;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA22B,iBAAkBl1B,CAAC,EAAG;MAErB,OAAO,IAAI,CAACm1B,sBAAsB,CAAEn1B,CAAC,CAACo1B,MAAM,EAAEp1B,CAAC,CAACq1B,GAAG,EAAEr1B,CAAC,CAACgb,KAAM,CAAC;IAE/D;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAA42B,uBAAwBC,MAAM,EAAEC,GAAG,EAAEra,KAAK,EAAG;MAE5C,IAAMsa,YAAY,GAAG/hB,IAAI,CAACyD,GAAG,CAAEqe,GAAI,CAAC,GAAGD,MAAM;MAE7C,IAAI,CAAC5gB,CAAC,GAAG8gB,YAAY,GAAG/hB,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MACzC,IAAI,CAAC/a,CAAC,GAAGsT,IAAI,CAACwD,GAAG,CAAEse,GAAI,CAAC,GAAGD,MAAM;MACjC,IAAI,CAACnM,CAAC,GAAGqM,YAAY,GAAG/hB,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAAg3B,mBAAoB32B,CAAC,EAAG;MAEvB,OAAO,IAAI,CAAC42B,wBAAwB,CAAE52B,CAAC,CAACw2B,MAAM,EAAEx2B,CAAC,CAACoc,KAAK,EAAEpc,CAAC,CAACqB,CAAE,CAAC;IAE/D;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAi3B,yBAA0BJ,MAAM,EAAEpa,KAAK,EAAE/a,CAAC,EAAG;MAE5C,IAAI,CAACuU,CAAC,GAAG4gB,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MACnC,IAAI,CAAC/a,CAAC,GAAGA,CAAC;MACV,IAAI,CAACgpB,CAAC,GAAGmM,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAAk3B,sBAAuBnhB,CAAC,EAAG;MAE1B,IAAMxW,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAACvF,CAAC,GAAG1W,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACmrB,CAAC,GAAGnrB,CAAC,CAAE,EAAE,CAAE;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAAgH,GAAA;IAAAvG,KAAA,EAED,SAAAm3B,mBAAoBphB,CAAC,EAAG;MAEvB,IAAM2L,EAAE,GAAG,IAAI,CAAC0V,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MACpD,IAAMqd,EAAE,GAAG,IAAI,CAACyV,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MACpD,IAAM+yB,EAAE,GAAG,IAAI,CAACD,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MAEpD,IAAI,CAAC2R,CAAC,GAAGyL,EAAE;MACX,IAAI,CAAChgB,CAAC,GAAGigB,EAAE;MACX,IAAI,CAAC+I,CAAC,GAAG2M,EAAE;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA9wB,GAAA;IAAAvG,KAAA,EAED,SAAAo3B,oBAAqBrhB,CAAC,EAAEvB,KAAK,EAAG;MAE/B,OAAO,IAAI,CAAC8I,SAAS,CAAEvH,CAAC,CAACyF,QAAQ,EAAEhH,KAAK,GAAG,CAAE,CAAC;IAE/C;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAmf,qBAAsBpJ,CAAC,EAAEvB,KAAK,EAAG;MAEhC,OAAO,IAAI,CAAC8I,SAAS,CAAEvH,CAAC,CAACyF,QAAQ,EAAEhH,KAAK,GAAG,CAAE,CAAC;IAE/C;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAiwB,aAAc1wB,CAAC,EAAG;MAEjB,IAAI,CAAC0W,CAAC,GAAG1W,CAAC,CAACowB,EAAE;MACb,IAAI,CAACjuB,CAAC,GAAGnC,CAAC,CAACqwB,EAAE;MACb,IAAI,CAAClF,CAAC,GAAGnrB,CAAC,CAACswB,EAAE;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAtpB,GAAA;IAAAvG,KAAA,EAED,SAAAs3B,aAAcj3B,CAAC,EAAG;MAEjB,IAAI,CAAC4V,CAAC,GAAG5V,CAAC,CAACZ,CAAC;MACZ,IAAI,CAACiC,CAAC,GAAGrB,CAAC,CAAC6B,CAAC;MACZ,IAAI,CAACwoB,CAAC,GAAGrqB,CAAC,CAACiY,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQrb,CAAC,EAAG;MAEX,OAAWA,CAAC,CAACiU,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQjU,CAAC,CAACN,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMM,CAAC,CAAC0oB,CAAC,KAAK,IAAI,CAACA,CAAG;IAExE;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACtH,CAAC,GAAGrB,KAAK,CAAE2I,MAAM,CAAE;MACxB,IAAI,CAAC7b,CAAC,GAAGkT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACmN,CAAC,GAAG9V,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACtH,CAAC;MACxBrB,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC7b,CAAC;MAC5BkT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACmN,CAAC;MAE5B,OAAO9V,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAyd,oBAAqBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,CAACyB,CAAC,GAAGyH,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MAChC,IAAI,CAAC9S,CAAC,GAAGgc,SAAS,CAACE,IAAI,CAAEpJ,KAAM,CAAC;MAChC,IAAI,CAACkW,CAAC,GAAGhN,SAAS,CAACyO,IAAI,CAAE3X,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAqV,OAAA,EAAS;MAER,IAAI,CAACY,CAAC,GAAGjB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC3T,CAAC,GAAGsT,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACqV,CAAC,GAAG1V,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA9O,GAAA;IAAAvG,KAAA,EAED,SAAAu3B,gBAAA,EAAkB;MAEjB;;MAEA,IAAMh3B,CAAC,GAAG,CAAEyU,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,GAAG,IAAK,CAAC;MACrC,IAAM7V,CAAC,GAAGwV,IAAI,CAACK,MAAM,CAAC,CAAC,GAAGL,IAAI,CAACC,EAAE,GAAG,CAAC;MACrC,IAAMzT,CAAC,GAAGwT,IAAI,CAACmH,IAAI,CAAE,CAAC,GAAAnH,IAAA,CAAA+C,GAAA,CAAGxX,CAAC,EAAI,CAAC,CAAC,CAAC;MAEjC,IAAI,CAAC0V,CAAC,GAAGzU,CAAC,GAAGwT,IAAI,CAACwD,GAAG,CAAEhZ,CAAE,CAAC;MAC1B,IAAI,CAACkC,CAAC,GAAGF,CAAC,GAAGwT,IAAI,CAACyD,GAAG,CAAEjZ,CAAE,CAAC;MAC1B,IAAI,CAACkrB,CAAC,GAAGnqB,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAgG,GAAA,EAAA8tB,iBAAA;IAAAr0B,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAED,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAAyZ,SAAA;QAAA,kBAAAA,SAAA,CAAApyB,IAAA,GAAAoyB,SAAA,CAAA/zB,IAAA;UAAA;YAAA+zB,SAAA,CAAA/zB,IAAA;YAEC,OAAM,IAAI,CAACwS,CAAC;UAAA;YAAAuhB,SAAA,CAAA/zB,IAAA;YACZ,OAAM,IAAI,CAAC/B,CAAC;UAAA;YAAA81B,SAAA,CAAA/zB,IAAA;YACZ,OAAM,IAAI,CAACinB,CAAC;UAAA;UAAA;YAAA,OAAA8M,SAAA,CAAAjyB,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAo0B,OAAA;AAAA,EANEl0B,MAAM,CAACE,QAAQ;AAUnB,IAAMm2B,SAAS,GAAG,aAAc,IAAInC,OAAO,CAAC,CAAC;AAC7C,IAAMM,aAAa,GAAG,aAAc,IAAIlF,UAAU,CAAC,CAAC;AAAC,IAE/CiI,IAAI,GAAApwB,OAAA,CAAAowB,IAAA;EAET,SAAAA,KAAa7hB,GAAG,GAAG,IAAIwe,OAAO,CAAE,CAAEsD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAE7hB,GAAG,GAAG,IAAIue,OAAO,CAAE,CAAEsD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAG;IAAA3xB,eAAA,OAAA0xB,IAAA;IAE/H,IAAI,CAACE,MAAM,GAAG,IAAI;IAElB,IAAI,CAAC/hB,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAACrP,YAAA,CAAAixB,IAAA;IAAAlxB,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKtD,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAAC+E,IAAI,CAAE/E,GAAI,CAAC;MACpB,IAAI,CAACC,GAAG,CAAC8E,IAAI,CAAE9E,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAA43B,aAAchjB,KAAK,EAAG;MAErB,IAAI,CAACijB,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG3a,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,IAAI,CAAC,EAAG;QAEpD,IAAI,CAAC63B,aAAa,CAAEC,SAAS,CAACza,SAAS,CAAE1I,KAAK,EAAE3U,CAAE,CAAE,CAAC;MAEtD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAg4B,uBAAwBta,SAAS,EAAG;MAEnC,IAAI,CAACma,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG7R,SAAS,CAAC0R,KAAK,EAAEnvB,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAErD,IAAI,CAAC63B,aAAa,CAAEC,SAAS,CAACta,mBAAmB,CAAEC,SAAS,EAAEzd,CAAE,CAAE,CAAC;MAEpE;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAi4B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACL,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG2I,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAAC63B,aAAa,CAAEI,MAAM,CAAEj4B,CAAC,CAAG,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAm4B,qBAAsBra,MAAM,EAAEsa,IAAI,EAAG;MAEpC,IAAMC,QAAQ,GAAGN,SAAS,CAACpd,IAAI,CAAEyd,IAAK,CAAC,CAAChd,cAAc,CAAE,GAAI,CAAC;MAE7D,IAAI,CAACxF,GAAG,CAAC+E,IAAI,CAAEmD,MAAO,CAAC,CAAC9C,GAAG,CAAEqd,QAAS,CAAC;MACvC,IAAI,CAACxiB,GAAG,CAAC8E,IAAI,CAAEmD,MAAO,CAAC,CAAClD,GAAG,CAAEyd,QAAS,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA9xB,GAAA;IAAAvG,KAAA,EAED,SAAAs4B,cAAeC,MAAM,EAAEC,OAAO,GAAG,KAAK,EAAG;MAExC,IAAI,CAACX,SAAS,CAAC,CAAC;MAEhB,OAAO,IAAI,CAACY,cAAc,CAAEF,MAAM,EAAEC,OAAQ,CAAC;IAE9C;EAAC;IAAAjyB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM+d,GAAG,EAAG;MAEX,IAAI,CAAC9iB,GAAG,CAAC+E,IAAI,CAAE+d,GAAG,CAAC9iB,GAAI,CAAC;MACxB,IAAI,CAACC,GAAG,CAAC8E,IAAI,CAAE+d,GAAG,CAAC7iB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAA63B,UAAA,EAAY;MAEX,IAAI,CAACjiB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAAClU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAC8U,CAAC,GAAG,CAAEgN,QAAQ;MACjD,IAAI,CAAC7hB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACmU,GAAG,CAAC6U,CAAC,GAAG,CAAEgN,QAAQ;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAnxB,GAAA;IAAAvG,KAAA,EAED,SAAA24B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAAC9iB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAQ,IAAI,CAACJ,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAG,IAAM,IAAI,CAACmU,GAAG,CAAC6U,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAG;IAEjG;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA44B,UAAWzyB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACwyB,OAAO,CAAC,CAAC,GAAGxyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC2U,UAAU,CAAE,IAAI,CAAClF,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC,CAACuF,cAAc,CAAE,GAAI,CAAC;IAE9G;EAAC;IAAA7U,GAAA;IAAAvG,KAAA,EAED,SAAA64B,QAAS1yB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACwyB,OAAO,CAAC,CAAC,GAAGxyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC+U,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE,IAAI,CAACD,GAAI,CAAC;IAExF;EAAC;IAAArP,GAAA;IAAAvG,KAAA,EAED,SAAA83B,cAAegB,KAAK,EAAG;MAEtB,IAAI,CAACljB,GAAG,CAACA,GAAG,CAAEkjB,KAAM,CAAC;MACrB,IAAI,CAACjjB,GAAG,CAACA,GAAG,CAAEijB,KAAM,CAAC;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA+4B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACpjB,GAAG,CAACoF,GAAG,CAAEge,MAAO,CAAC;MACtB,IAAI,CAACnjB,GAAG,CAAC+E,GAAG,CAAEoe,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAzyB,GAAA;IAAAvG,KAAA,EAED,SAAAi5B,eAAgB5e,MAAM,EAAG;MAExB,IAAI,CAACzE,GAAG,CAACiF,SAAS,CAAE,CAAER,MAAO,CAAC;MAC9B,IAAI,CAACxE,GAAG,CAACgF,SAAS,CAAER,MAAO,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAy4B,eAAgBF,MAAM,EAAEC,OAAO,GAAG,KAAK,EAAG;MAEzC;MACA;;MAEAD,MAAM,CAACW,iBAAiB,CAAE,KAAK,EAAE,KAAM,CAAC;MAExC,IAAKX,MAAM,CAACY,WAAW,KAAKlyB,SAAS,EAAG;QAEvC,IAAKsxB,MAAM,CAACY,WAAW,KAAK,IAAI,EAAG;UAElCZ,MAAM,CAACa,kBAAkB,CAAC,CAAC;QAE5B;QAEAC,MAAM,CAAC1e,IAAI,CAAE4d,MAAM,CAACY,WAAY,CAAC;QACjCE,MAAM,CAACtO,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;QAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAO,CAAC;MAErB,CAAC,MAAM;QAEN,IAAME,QAAQ,GAAGhB,MAAM,CAACgB,QAAQ;QAEhC,IAAKA,QAAQ,KAAKtyB,SAAS,EAAG;UAE7B,IAAKuxB,OAAO,IAAIe,QAAQ,CAACC,UAAU,KAAKvyB,SAAS,IAAIsyB,QAAQ,CAACC,UAAU,CAACC,QAAQ,KAAKxyB,SAAS,EAAG;YAEjG,IAAMwyB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;YAC7C,KAAM,IAAIx5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGk4B,QAAQ,CAACrK,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;cAElD83B,SAAS,CAACta,mBAAmB,CAAEgc,QAAQ,EAAEx5B,CAAE,CAAC,CAAC8qB,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;cAC/E,IAAI,CAACmC,aAAa,CAAEC,SAAU,CAAC;YAEhC;UAED,CAAC,MAAM;YAEN,IAAKwB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;cAEpCI,QAAQ,CAACH,kBAAkB,CAAC,CAAC;YAE9B;YAEAC,MAAM,CAAC1e,IAAI,CAAE4e,QAAQ,CAACJ,WAAY,CAAC;YACnCE,MAAM,CAACtO,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;YAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAO,CAAC;UAErB;QAED;MAED;MAEA,IAAMK,QAAQ,GAAGnB,MAAM,CAACmB,QAAQ;MAEhC,KAAM,IAAIz5B,GAAC,GAAG,CAAC,EAAEsB,EAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,GAAC,GAAGsB,EAAC,EAAEtB,GAAC,EAAG,EAAG;QAEnD,IAAI,CAACw4B,cAAc,CAAEiB,QAAQ,CAAEz5B,GAAC,CAAE,EAAEu4B,OAAQ,CAAC;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjyB,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAI6iB,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC,IAClD6iB,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAAIo3B,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC,IAC5Co3B,KAAK,CAACpO,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC,IAAIoO,KAAK,CAACpO,CAAC,GAAG,IAAI,CAAC7U,GAAG,CAAC6U,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA45B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAAC9iB,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC9iB,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC7iB,GAAG,CAACI,CAAC,IAAI,IAAI,CAACJ,GAAG,CAACI,CAAC,IACxD,IAAI,CAACL,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,IAAI,IAAI,CAACmU,GAAG,CAACnU,CAAC,IAClD,IAAI,CAACkU,GAAG,CAAC8U,CAAC,IAAIgO,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC,IAAIgO,GAAG,CAAC7iB,GAAG,CAAC6U,CAAC,IAAI,IAAI,CAAC7U,GAAG,CAAC6U,CAAC;IAEpD;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA65B,aAAcf,KAAK,EAAE3yB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+S,GAAG,CAChB,CAAE4f,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,KAAO,IAAI,CAACJ,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,CAAE,EACtD,CAAE6iB,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,KAAO,IAAI,CAACmU,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,CAAE,EACtD,CAAEo3B,KAAK,CAACpO,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC,KAAO,IAAI,CAAC7U,GAAG,CAAC6U,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC,CACrD,CAAC;IAEF;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB;MACA,OAAOA,GAAG,CAAC7iB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC9iB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC,IACtDyiB,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC,IAChDg3B,GAAG,CAAC7iB,GAAG,CAAC6U,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC,IAAIgO,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC,GAAG,IAAI,CAAC7U,GAAG,CAAC6U,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA+5B,iBAAkBC,MAAM,EAAG;MAE1B;MACA,IAAI,CAACC,UAAU,CAAED,MAAM,CAAClc,MAAM,EAAEia,SAAU,CAAC;;MAE3C;MACA,OAAOA,SAAS,CAACnb,iBAAiB,CAAEod,MAAM,CAAClc,MAAO,CAAC,IAAMkc,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;IAEzF;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAk6B,gBAAiBC,KAAK,EAAG;MAExB;MACA;;MAEA,IAAIvkB,GAAG,EAAEC,GAAG;MAEZ,IAAKskB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,CAAC,EAAG;QAEzBL,GAAG,GAAGukB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;QACjCJ,GAAG,GAAGskB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC;MAElC,CAAC,MAAM;QAENL,GAAG,GAAGukB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC;QACjCJ,GAAG,GAAGskB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;MAElC;MAEA,IAAKkkB,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,CAAC,EAAG;QAEzBkU,GAAG,IAAIukB,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC;QAClCmU,GAAG,IAAIskB,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC;MAEnC,CAAC,MAAM;QAENkU,GAAG,IAAIukB,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC;QAClCmU,GAAG,IAAIskB,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC;MAEnC;MAEA,IAAKy4B,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,CAAC,EAAG;QAEzB9U,GAAG,IAAIukB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC;QAClC7U,GAAG,IAAIskB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAC7U,GAAG,CAAC6U,CAAC;MAEnC,CAAC,MAAM;QAEN9U,GAAG,IAAIukB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAC7U,GAAG,CAAC6U,CAAC;QAClC7U,GAAG,IAAIskB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAC9U,GAAG,CAAC8U,CAAC;MAEnC;MAEA,OAAS9U,GAAG,IAAI,CAAEukB,KAAK,CAACC,QAAQ,IAAIvkB,GAAG,IAAI,CAAEskB,KAAK,CAACC,QAAQ;IAE5D;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAAq6B,mBAAoBC,QAAQ,EAAG;MAE9B,IAAK,IAAI,CAAC3B,OAAO,CAAC,CAAC,EAAG;QAErB,OAAO,KAAK;MAEb;;MAEA;MACA,IAAI,CAACC,SAAS,CAAE2B,OAAQ,CAAC;MACzBC,QAAQ,CAACtf,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE0kB,OAAQ,CAAC;;MAExC;MACAE,KAAK,CAACvf,UAAU,CAAEof,QAAQ,CAACn6B,CAAC,EAAEo6B,OAAQ,CAAC;MACvCG,KAAK,CAACxf,UAAU,CAAEof,QAAQ,CAAChiB,CAAC,EAAEiiB,OAAQ,CAAC;MACvCI,KAAK,CAACzf,UAAU,CAAEof,QAAQ,CAACj6B,CAAC,EAAEk6B,OAAQ,CAAC;;MAEvC;MACAK,GAAG,CAAC1f,UAAU,CAAEwf,KAAK,EAAED,KAAM,CAAC;MAC9BI,GAAG,CAAC3f,UAAU,CAAEyf,KAAK,EAAED,KAAM,CAAC;MAC9BI,GAAG,CAAC5f,UAAU,CAAEuf,KAAK,EAAEE,KAAM,CAAC;;MAE9B;MACA;MACA;MACA,IAAII,IAAI,GAAG,CACV,CAAC,EAAE,CAAEH,GAAG,CAAClQ,CAAC,EAAEkQ,GAAG,CAACl5B,CAAC,EAAE,CAAC,EAAE,CAAEm5B,GAAG,CAACnQ,CAAC,EAAEmQ,GAAG,CAACn5B,CAAC,EAAE,CAAC,EAAE,CAAEo5B,GAAG,CAACpQ,CAAC,EAAEoQ,GAAG,CAACp5B,CAAC,EACvDk5B,GAAG,CAAClQ,CAAC,EAAE,CAAC,EAAE,CAAEkQ,GAAG,CAAC3kB,CAAC,EAAE4kB,GAAG,CAACnQ,CAAC,EAAE,CAAC,EAAE,CAAEmQ,GAAG,CAAC5kB,CAAC,EAAE6kB,GAAG,CAACpQ,CAAC,EAAE,CAAC,EAAE,CAAEoQ,GAAG,CAAC7kB,CAAC,EACvD,CAAE2kB,GAAG,CAACl5B,CAAC,EAAEk5B,GAAG,CAAC3kB,CAAC,EAAE,CAAC,EAAE,CAAE4kB,GAAG,CAACn5B,CAAC,EAAEm5B,GAAG,CAAC5kB,CAAC,EAAE,CAAC,EAAE,CAAE6kB,GAAG,CAACp5B,CAAC,EAAEo5B,GAAG,CAAC7kB,CAAC,EAAE,CAAC,CACvD;MACD,IAAK,CAAE+kB,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACAO,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpC,IAAK,CAAEC,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACA;MACAS,eAAe,CAACpF,YAAY,CAAE+E,GAAG,EAAEC,GAAI,CAAC;MACxCE,IAAI,GAAG,CAAEE,eAAe,CAAChlB,CAAC,EAAEglB,eAAe,CAACv5B,CAAC,EAAEu5B,eAAe,CAACvQ,CAAC,CAAE;MAElE,OAAOsQ,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC;IAEzD;EAAC;IAAAj0B,GAAA;IAAAvG,KAAA,EAED,SAAAi6B,WAAYnB,KAAK,EAAE3yB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwU,IAAI,CAAEme,KAAM,CAAC,CAACnjB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC;IAExD;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAAk7B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAEf,SAAU,CAAC,CAACpb,UAAU,CAAEmc,KAAM,CAAC;IAE/D;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAAm7B,kBAAmBh1B,MAAM,EAAG;MAE3B,IAAK,IAAI,CAACwyB,OAAO,CAAC,CAAC,EAAG;QAErBxyB,MAAM,CAAC0xB,SAAS,CAAC,CAAC;MAEnB,CAAC,MAAM;QAEN,IAAI,CAACe,SAAS,CAAEzyB,MAAM,CAAC2X,MAAO,CAAC;QAE/B3X,MAAM,CAAC0wB,MAAM,GAAG,IAAI,CAACgC,OAAO,CAAEd,SAAU,CAAC,CAACzzB,MAAM,CAAC,CAAC,GAAG,GAAG;MAEzD;MAEA,OAAO6B,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAo7B,UAAW1C,GAAG,EAAG;MAEhB,IAAI,CAAC9iB,GAAG,CAACC,GAAG,CAAE6iB,GAAG,CAAC9iB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAE8iB,GAAG,CAAC7iB,GAAI,CAAC;;MAEvB;MACA,IAAK,IAAI,CAAC8iB,OAAO,CAAC,CAAC,EAAG,IAAI,CAACd,SAAS,CAAC,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAtxB,GAAA;IAAAvG,KAAA,EAED,SAAAs5B,MAAOZ,GAAG,EAAG;MAEZ,IAAI,CAAC9iB,GAAG,CAACA,GAAG,CAAE8iB,GAAG,CAAC9iB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAE6iB,GAAG,CAAC7iB,GAAI,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAczI,MAAM,EAAG;MAEtB;MACA,IAAK,IAAI,CAACqW,OAAO,CAAC,CAAC,EAAG,OAAO,IAAI;;MAEjC;MACA0C,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACtD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAAC8U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACtD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACmU,GAAG,CAAC6U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACtD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACJ,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAAC8U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACtD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACJ,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACmU,GAAG,CAAC6U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACrD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACL,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAAC8U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACrD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACL,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACmU,GAAG,CAAC6U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACrD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACJ,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAAC8U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;MAC/E+Y,OAAO,CAAE,CAAC,CAAE,CAACniB,GAAG,CAAE,IAAI,CAACrD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACJ,GAAG,CAACnU,CAAC,EAAE,IAAI,CAACmU,GAAG,CAAC6U,CAAE,CAAC,CAACK,YAAY,CAAEzI,MAAO,CAAC,CAAC,CAAC;;MAE/E,IAAI,CAAC2V,aAAa,CAAEoD,OAAQ,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA90B,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAW7E,MAAM,EAAG;MAEnB,IAAI,CAAC3H,GAAG,CAACgF,GAAG,CAAE2C,MAAO,CAAC;MACtB,IAAI,CAAC1H,GAAG,CAAC+E,GAAG,CAAE2C,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQqb,GAAG,EAAG;MAEb,OAAOA,GAAG,CAAC9iB,GAAG,CAACyH,MAAM,CAAE,IAAI,CAACzH,GAAI,CAAC,IAAI8iB,GAAG,CAAC7iB,GAAG,CAACwH,MAAM,CAAE,IAAI,CAACxH,GAAI,CAAC;IAEhE;EAAC;EAAA,OAAA4hB,IAAA;AAAA;AAIF,IAAM4D,OAAO,GAAG,CACf,aAAc,IAAIjH,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,CAC3B;AAED,IAAM2D,SAAS,GAAG,aAAc,IAAI3D,OAAO,CAAC,CAAC;AAE7C,IAAMiF,MAAM,GAAG,aAAc,IAAI5B,IAAI,CAAC,CAAC;;AAEvC;;AAEA,IAAMgD,KAAK,GAAG,aAAc,IAAIrG,OAAO,CAAC,CAAC;AACzC,IAAMsG,KAAK,GAAG,aAAc,IAAItG,OAAO,CAAC,CAAC;AACzC,IAAMuG,KAAK,GAAG,aAAc,IAAIvG,OAAO,CAAC,CAAC;;AAEzC;;AAEA,IAAMwG,GAAG,GAAG,aAAc,IAAIxG,OAAO,CAAC,CAAC;AACvC,IAAMyG,GAAG,GAAG,aAAc,IAAIzG,OAAO,CAAC,CAAC;AACvC,IAAM0G,GAAG,GAAG,aAAc,IAAI1G,OAAO,CAAC,CAAC;AAEvC,IAAMmG,OAAO,GAAG,aAAc,IAAInG,OAAO,CAAC,CAAC;AAC3C,IAAMoG,QAAQ,GAAG,aAAc,IAAIpG,OAAO,CAAC,CAAC;AAC5C,IAAM6G,eAAe,GAAG,aAAc,IAAI7G,OAAO,CAAC,CAAC;AACnD,IAAMkH,SAAS,GAAG,aAAc,IAAIlH,OAAO,CAAC,CAAC;AAE7C,SAAS4G,UAAUA,CAAED,IAAI,EAAEQ,EAAE,EAAEpe,EAAE,EAAEC,EAAE,EAAEoe,OAAO,EAAG;EAEhD,KAAM,IAAIv7B,CAAC,GAAG,CAAC,EAAEw7B,CAAC,GAAGV,IAAI,CAACz2B,MAAM,GAAG,CAAC,EAAErE,CAAC,IAAIw7B,CAAC,EAAEx7B,CAAC,IAAI,CAAC,EAAG;IAEtDq7B,SAAS,CAAChe,SAAS,CAAEyd,IAAI,EAAE96B,CAAE,CAAC;IAC9B;IACA,IAAMR,CAAC,GAAG+7B,OAAO,CAACvlB,CAAC,GAAGjB,IAAI,CAAC6B,GAAG,CAAEykB,SAAS,CAACrlB,CAAE,CAAC,GAAGulB,OAAO,CAAC95B,CAAC,GAAGsT,IAAI,CAAC6B,GAAG,CAAEykB,SAAS,CAAC55B,CAAE,CAAC,GAAG85B,OAAO,CAAC9Q,CAAC,GAAG1V,IAAI,CAAC6B,GAAG,CAAEykB,SAAS,CAAC5Q,CAAE,CAAC;IACzH;IACA,IAAMgR,EAAE,GAAGH,EAAE,CAACvf,GAAG,CAAEsf,SAAU,CAAC;IAC9B,IAAMK,EAAE,GAAGxe,EAAE,CAACnB,GAAG,CAAEsf,SAAU,CAAC;IAC9B,IAAMM,EAAE,GAAGxe,EAAE,CAACpB,GAAG,CAAEsf,SAAU,CAAC;IAC9B;IACA,IAAKtmB,IAAI,CAACa,GAAG,CAAE,CAAEb,IAAI,CAACa,GAAG,CAAE6lB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC,EAAE5mB,IAAI,CAACY,GAAG,CAAE8lB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAE,CAAC,GAAGn8B,CAAC,EAAG;MAEvE;MACA;MACA,OAAO,KAAK;IAEb;EAED;EAEA,OAAO,IAAI;AAEZ;AAEA,IAAMo8B,MAAM,GAAG,aAAc,IAAIpE,IAAI,CAAC,CAAC;AACvC,IAAMqE,KAAK,GAAG,aAAc,IAAI1H,OAAO,CAAC,CAAC;AACzC,IAAM2H,KAAK,GAAG,aAAc,IAAI3H,OAAO,CAAC,CAAC;AAAC,IAEpC4H,MAAM,GAAA30B,OAAA,CAAA20B,MAAA;EAEX,SAAAA,OAAale,MAAM,GAAG,IAAIsW,OAAO,CAAC,CAAC,EAAEyC,MAAM,GAAG,CAAE,CAAC,EAAG;IAAA9wB,eAAA,OAAAi2B,MAAA;IAEnD,IAAI,CAACle,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC+Y,MAAM,GAAGA,MAAM;EAErB;EAACrwB,YAAA,CAAAw1B,MAAA;IAAAz1B,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK4E,MAAM,EAAE+Y,MAAM,EAAG;MAErB,IAAI,CAAC/Y,MAAM,CAACnD,IAAI,CAAEmD,MAAO,CAAC;MAC1B,IAAI,CAAC+Y,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAi4B,cAAeC,MAAM,EAAE+D,cAAc,EAAG;MAEvC,IAAMne,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKme,cAAc,KAAKh1B,SAAS,EAAG;QAEnC6W,MAAM,CAACnD,IAAI,CAAEshB,cAAe,CAAC;MAE9B,CAAC,MAAM;QAENJ,MAAM,CAAC5D,aAAa,CAAEC,MAAO,CAAC,CAACU,SAAS,CAAE9a,MAAO,CAAC;MAEnD;MAEA,IAAIoe,WAAW,GAAG,CAAC;MAEnB,KAAM,IAAIj8B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG2I,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEnDi8B,WAAW,GAAGlnB,IAAI,CAACa,GAAG,CAAEqmB,WAAW,EAAEpe,MAAM,CAAClB,iBAAiB,CAAEsb,MAAM,CAAEj4B,CAAC,CAAG,CAAE,CAAC;MAE/E;MAEA,IAAI,CAAC42B,MAAM,GAAG7hB,IAAI,CAACmH,IAAI,CAAE+f,WAAY,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAA31B,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMqf,MAAM,EAAG;MAEd,IAAI,CAAClc,MAAM,CAACnD,IAAI,CAAEqf,MAAM,CAAClc,MAAO,CAAC;MACjC,IAAI,CAAC+Y,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA24B,QAAA,EAAU;MAET,OAAS,IAAI,CAAC9B,MAAM,GAAG,CAAC;IAEzB;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA63B,UAAA,EAAY;MAEX,IAAI,CAAC/Z,MAAM,CAAC5E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAC1B,IAAI,CAAC2d,MAAM,GAAG,CAAE,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAeb,KAAK,EAAG;MAEtB,OAASA,KAAK,CAAClc,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAM,IAAI,CAAC+Y,MAAM,GAAG,IAAI,CAACA,MAAQ;IAEjF;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAk7B,gBAAiBpC,KAAK,EAAG;MAExB,OAASA,KAAK,CAACnc,UAAU,CAAE,IAAI,CAACmB,MAAO,CAAC,GAAG,IAAI,CAAC+Y,MAAM;IAEvD;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA+5B,iBAAkBC,MAAM,EAAG;MAE1B,IAAMmC,SAAS,GAAG,IAAI,CAACtF,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE7C,OAAOmD,MAAM,CAAClc,MAAM,CAAClB,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAMqe,SAAS,GAAGA,SAAW;IAEnF;EAAC;IAAA51B,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACqB,gBAAgB,CAAE,IAAK,CAAC;IAEpC;EAAC;IAAAxzB,GAAA;IAAAvG,KAAA,EAED,SAAAk6B,gBAAiBC,KAAK,EAAG;MAExB,OAAOnlB,IAAI,CAAC6B,GAAG,CAAEsjB,KAAK,CAACe,eAAe,CAAE,IAAI,CAACpd,MAAO,CAAE,CAAC,IAAI,IAAI,CAAC+Y,MAAM;IAEvE;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAi6B,WAAYnB,KAAK,EAAE3yB,MAAM,EAAG;MAE3B,IAAMi2B,aAAa,GAAG,IAAI,CAACte,MAAM,CAAClB,iBAAiB,CAAEkc,KAAM,CAAC;MAE5D3yB,MAAM,CAACwU,IAAI,CAAEme,KAAM,CAAC;MAEpB,IAAKsD,aAAa,GAAK,IAAI,CAACvF,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAEpD1wB,MAAM,CAAC6U,GAAG,CAAE,IAAI,CAAC8C,MAAO,CAAC,CAACjE,SAAS,CAAC,CAAC;QACrC1T,MAAM,CAACiV,cAAc,CAAE,IAAI,CAACyb,MAAO,CAAC,CAACjc,GAAG,CAAE,IAAI,CAACkD,MAAO,CAAC;MAExD;MAEA,OAAO3X,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAq8B,eAAgBl2B,MAAM,EAAG;MAExB,IAAK,IAAI,CAACwyB,OAAO,CAAC,CAAC,EAAG;QAErB;QACAxyB,MAAM,CAAC0xB,SAAS,CAAC,CAAC;QAClB,OAAO1xB,MAAM;MAEd;MAEAA,MAAM,CAAC+S,GAAG,CAAE,IAAI,CAAC4E,MAAM,EAAE,IAAI,CAACA,MAAO,CAAC;MACtC3X,MAAM,CAAC8yB,cAAc,CAAE,IAAI,CAACpC,MAAO,CAAC;MAEpC,OAAO1wB,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAczI,MAAM,EAAG;MAEtB,IAAI,CAACxE,MAAM,CAACiN,YAAY,CAAEzI,MAAO,CAAC;MAClC,IAAI,CAACuU,MAAM,GAAG,IAAI,CAACA,MAAM,GAAGvU,MAAM,CAACga,iBAAiB,CAAC,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAA/1B,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAW7E,MAAM,EAAG;MAEnB,IAAI,CAACO,MAAM,CAAClD,GAAG,CAAE2C,MAAO,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAA83B,cAAegB,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACH,OAAO,CAAC,CAAC,EAAG;QAErB,IAAI,CAAC7a,MAAM,CAACnD,IAAI,CAAEme,KAAM,CAAC;QAEzB,IAAI,CAACjC,MAAM,GAAG,CAAC;QAEf,OAAO,IAAI;MAEZ;MAEAiF,KAAK,CAAC5gB,UAAU,CAAE4d,KAAK,EAAE,IAAI,CAAChb,MAAO,CAAC;MAEtC,IAAM5B,QAAQ,GAAG4f,KAAK,CAAC5f,QAAQ,CAAC,CAAC;MAEjC,IAAKA,QAAQ,GAAK,IAAI,CAAC2a,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAE/C;;QAEA,IAAMvyB,MAAM,GAAG0Q,IAAI,CAACmH,IAAI,CAAED,QAAS,CAAC;QAEpC,IAAMqgB,KAAK,GAAG,CAAEj4B,MAAM,GAAG,IAAI,CAACuyB,MAAM,IAAK,GAAG;QAE5C,IAAI,CAAC/Y,MAAM,CAAC/C,eAAe,CAAE+gB,KAAK,EAAES,KAAK,GAAGj4B,MAAO,CAAC;QAEpD,IAAI,CAACuyB,MAAM,IAAI0F,KAAK;MAErB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAh2B,GAAA;IAAAvG,KAAA,EAED,SAAAs5B,MAAOU,MAAM,EAAG;MAEf,IAAKA,MAAM,CAACrB,OAAO,CAAC,CAAC,EAAG;QAEvB,OAAO,IAAI;MAEZ;MAEA,IAAK,IAAI,CAACA,OAAO,CAAC,CAAC,EAAG;QAErB,IAAI,CAAChe,IAAI,CAAEqf,MAAO,CAAC;QAEnB,OAAO,IAAI;MAEZ;MAEA,IAAK,IAAI,CAAClc,MAAM,CAACT,MAAM,CAAE2c,MAAM,CAAClc,MAAO,CAAC,KAAK,IAAI,EAAG;QAElD,IAAI,CAAC+Y,MAAM,GAAG7hB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACghB,MAAM,EAAEmD,MAAM,CAACnD,MAAO,CAAC;MAEtD,CAAC,MAAM;QAENkF,KAAK,CAAC7gB,UAAU,CAAE8e,MAAM,CAAClc,MAAM,EAAE,IAAI,CAACA,MAAO,CAAC,CAACd,SAAS,CAAEgd,MAAM,CAACnD,MAAO,CAAC;QAEzE,IAAI,CAACiB,aAAa,CAAEgE,KAAK,CAACnhB,IAAI,CAAEqf,MAAM,CAAClc,MAAO,CAAC,CAAClD,GAAG,CAAEmhB,KAAM,CAAE,CAAC;QAE9D,IAAI,CAACjE,aAAa,CAAEgE,KAAK,CAACnhB,IAAI,CAAEqf,MAAM,CAAClc,MAAO,CAAC,CAAC9C,GAAG,CAAE+gB,KAAM,CAAE,CAAC;MAE/D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAx1B,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ2c,MAAM,EAAG;MAEhB,OAAOA,MAAM,CAAClc,MAAM,CAACT,MAAM,CAAE,IAAI,CAACS,MAAO,CAAC,IAAMkc,MAAM,CAACnD,MAAM,KAAK,IAAI,CAACA,MAAQ;IAEhF;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAqhB,MAAA;AAAA;AAIF,IAAMQ,SAAS,GAAG,aAAc,IAAIpI,OAAO,CAAC,CAAC;AAC7C,IAAMqI,UAAU,GAAG,aAAc,IAAIrI,OAAO,CAAC,CAAC;AAC9C,IAAMsI,OAAO,GAAG,aAAc,IAAItI,OAAO,CAAC,CAAC;AAC3C,IAAMuI,KAAK,GAAG,aAAc,IAAIvI,OAAO,CAAC,CAAC;AAEzC,IAAMwI,MAAM,GAAG,aAAc,IAAIxI,OAAO,CAAC,CAAC;AAC1C,IAAMyI,MAAM,GAAG,aAAc,IAAIzI,OAAO,CAAC,CAAC;AAC1C,IAAM0I,SAAS,GAAG,aAAc,IAAI1I,OAAO,CAAC,CAAC;AAAC,IAExC2I,GAAG,GAAA11B,OAAA,CAAA01B,GAAA;EAER,SAAAA,IAAaC,MAAM,GAAG,IAAI5I,OAAO,CAAC,CAAC,EAAE6I,SAAS,GAAG,IAAI7I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAG;IAAAruB,eAAA,OAAAg3B,GAAA;IAE3E,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAACz2B,YAAA,CAAAu2B,GAAA;IAAAx2B,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK8jB,MAAM,EAAEC,SAAS,EAAG;MAExB,IAAI,CAACD,MAAM,CAACriB,IAAI,CAAEqiB,MAAO,CAAC;MAC1B,IAAI,CAACC,SAAS,CAACtiB,IAAI,CAAEsiB,SAAU,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA12B,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMuiB,GAAG,EAAG;MAEX,IAAI,CAACF,MAAM,CAACriB,IAAI,CAAEuiB,GAAG,CAACF,MAAO,CAAC;MAC9B,IAAI,CAACC,SAAS,CAACtiB,IAAI,CAAEuiB,GAAG,CAACD,SAAU,CAAC;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAA12B,GAAA;IAAAvG,KAAA,EAED,SAAAm9B,GAAI39B,CAAC,EAAE2G,MAAM,EAAG;MAEf,OAAOA,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC,CAACjiB,eAAe,CAAE,IAAI,CAACkiB,SAAS,EAAEz9B,CAAE,CAAC;IAEvE;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAAo9B,OAAQp7B,CAAC,EAAG;MAEX,IAAI,CAACi7B,SAAS,CAACtiB,IAAI,CAAE3Y,CAAE,CAAC,CAACgZ,GAAG,CAAE,IAAI,CAACgiB,MAAO,CAAC,CAACnjB,SAAS,CAAC,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAAq9B,OAAQ79B,CAAC,EAAG;MAEX,IAAI,CAACw9B,MAAM,CAACriB,IAAI,CAAE,IAAI,CAACwiB,EAAE,CAAE39B,CAAC,EAAEg9B,SAAU,CAAE,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAj2B,GAAA;IAAAvG,KAAA,EAED,SAAAs9B,oBAAqBxE,KAAK,EAAE3yB,MAAM,EAAG;MAEpCA,MAAM,CAAC+U,UAAU,CAAE4d,KAAK,EAAE,IAAI,CAACkE,MAAO,CAAC;MAEvC,IAAMO,iBAAiB,GAAGp3B,MAAM,CAAC6V,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;MAEtD,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAOp3B,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC;MAElC;MAEA,OAAO72B,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC,CAACjiB,eAAe,CAAE,IAAI,CAACkiB,SAAS,EAAEM,iBAAkB,CAAC;IAEvF;EAAC;IAAAh3B,GAAA;IAAAvG,KAAA,EAED,SAAAk7B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO9jB,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACqhB,iBAAiB,CAAE1E,KAAM,CAAE,CAAC;IAEpD;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAAw9B,kBAAmB1E,KAAK,EAAG;MAE1B,IAAMyE,iBAAiB,GAAGf,SAAS,CAACthB,UAAU,CAAE4d,KAAK,EAAE,IAAI,CAACkE,MAAO,CAAC,CAAChhB,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;;MAE1F;;MAEA,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAO,IAAI,CAACP,MAAM,CAACpgB,iBAAiB,CAAEkc,KAAM,CAAC;MAE9C;MAEA0D,SAAS,CAAC7hB,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC,CAACjiB,eAAe,CAAE,IAAI,CAACkiB,SAAS,EAAEM,iBAAkB,CAAC;MAElF,OAAOf,SAAS,CAAC5f,iBAAiB,CAAEkc,KAAM,CAAC;IAE5C;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAAy9B,oBAAqBlC,EAAE,EAAEpe,EAAE,EAAEugB,kBAAkB,EAAEC,sBAAsB,EAAG;MAEzE;MACA;MACA;MACA;MACA;MACA;;MAEAlB,UAAU,CAAC9hB,IAAI,CAAE4gB,EAAG,CAAC,CAAC3gB,GAAG,CAAEuC,EAAG,CAAC,CAAC/B,cAAc,CAAE,GAAI,CAAC;MACrDshB,OAAO,CAAC/hB,IAAI,CAAEwC,EAAG,CAAC,CAACnC,GAAG,CAAEugB,EAAG,CAAC,CAAC1hB,SAAS,CAAC,CAAC;MACxC8iB,KAAK,CAAChiB,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC,CAAChiB,GAAG,CAAEyhB,UAAW,CAAC;MAE3C,IAAMmB,SAAS,GAAGrC,EAAE,CAAC5e,UAAU,CAAEQ,EAAG,CAAC,GAAG,GAAG;MAC3C,IAAM0gB,GAAG,GAAG,CAAE,IAAI,CAACZ,SAAS,CAACjhB,GAAG,CAAE0gB,OAAQ,CAAC;MAC3C,IAAMoB,EAAE,GAAGnB,KAAK,CAAC3gB,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;MACtC,IAAM7mB,EAAE,GAAG,CAAEumB,KAAK,CAAC3gB,GAAG,CAAE0gB,OAAQ,CAAC;MACjC,IAAMr8B,CAAC,GAAGs8B,KAAK,CAACzgB,QAAQ,CAAC,CAAC;MAC1B,IAAM8E,GAAG,GAAGhM,IAAI,CAAC6B,GAAG,CAAE,CAAC,GAAGgnB,GAAG,GAAGA,GAAI,CAAC;MACrC,IAAIE,EAAE,EAAExN,EAAE,EAAEyN,OAAO,EAAEC,MAAM;MAE3B,IAAKjd,GAAG,GAAG,CAAC,EAAG;QAEd;;QAEA+c,EAAE,GAAGF,GAAG,GAAGznB,EAAE,GAAG0nB,EAAE;QAClBvN,EAAE,GAAGsN,GAAG,GAAGC,EAAE,GAAG1nB,EAAE;QAClB6nB,MAAM,GAAGL,SAAS,GAAG5c,GAAG;QAExB,IAAK+c,EAAE,IAAI,CAAC,EAAG;UAEd,IAAKxN,EAAE,IAAI,CAAE0N,MAAM,EAAG;YAErB,IAAK1N,EAAE,IAAI0N,MAAM,EAAG;cAEnB;cACA;;cAEA,IAAMC,MAAM,GAAG,CAAC,GAAGld,GAAG;cACtB+c,EAAE,IAAIG,MAAM;cACZ3N,EAAE,IAAI2N,MAAM;cACZF,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAGtN,EAAE,GAAG,CAAC,GAAGuN,EAAE,CAAE,GAAGvN,EAAE,IAAKsN,GAAG,GAAGE,EAAE,GAAGxN,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;YAEhF,CAAC,MAAM;cAEN;;cAEAkwB,EAAE,GAAGqN,SAAS;cACdG,EAAE,GAAG/oB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIgoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;cACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;YAE/C;UAED,CAAC,MAAM;YAEN;;YAEAkwB,EAAE,GAAG,CAAEqN,SAAS;YAChBG,EAAE,GAAG/oB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIgoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;YACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;UAE/C;QAED,CAAC,MAAM;UAEN,IAAKkwB,EAAE,IAAI,CAAE0N,MAAM,EAAG;YAErB;;YAEAF,EAAE,GAAG/oB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI,CAAEgoB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAG,CAAC;YAChDvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAK,CAAEH,SAAS,GAAG5oB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE+nB,SAAS,EAAE,CAAExnB,EAAG,CAAC,EAAEwnB,SAAU,CAAC;YACpFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;UAE/C,CAAC,MAAM,IAAKkwB,EAAE,IAAI0N,MAAM,EAAG;YAE1B;;YAEAF,EAAE,GAAG,CAAC;YACNxN,EAAE,GAAGvb,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE+nB,SAAS,EAAE,CAAExnB,EAAG,CAAC,EAAEwnB,SAAU,CAAC;YACzDI,OAAO,GAAGzN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;UAEnC,CAAC,MAAM;YAEN;;YAEA09B,EAAE,GAAG/oB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIgoB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAG,CAAC;YAC9CvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAKH,SAAS,GAAG5oB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE+nB,SAAS,EAAE,CAAExnB,EAAG,CAAC,EAAEwnB,SAAU,CAAC;YAClFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;UAE/C;QAED;MAED,CAAC,MAAM;QAEN;;QAEAkwB,EAAE,GAAKsN,GAAG,GAAG,CAAC,GAAK,CAAED,SAAS,GAAGA,SAAS;QAC1CG,EAAE,GAAG/oB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIgoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;QACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGna,EAAE,CAAE,GAAG/V,CAAC;MAE/C;MAEA,IAAKq9B,kBAAkB,EAAG;QAEzBA,kBAAkB,CAAC/iB,IAAI,CAAE,IAAI,CAACqiB,MAAO,CAAC,CAACjiB,eAAe,CAAE,IAAI,CAACkiB,SAAS,EAAEc,EAAG,CAAC;MAE7E;MAEA,IAAKJ,sBAAsB,EAAG;QAE7BA,sBAAsB,CAAChjB,IAAI,CAAE8hB,UAAW,CAAC,CAAC1hB,eAAe,CAAE2hB,OAAO,EAAEnM,EAAG,CAAC;MAEzE;MAEA,OAAOyN,OAAO;IAEf;EAAC;IAAAz3B,GAAA;IAAAvG,KAAA,EAED,SAAAm+B,gBAAiBnE,MAAM,EAAE7zB,MAAM,EAAG;MAEjCq2B,SAAS,CAACthB,UAAU,CAAE8e,MAAM,CAAClc,MAAM,EAAE,IAAI,CAACkf,MAAO,CAAC;MAClD,IAAMoB,GAAG,GAAG5B,SAAS,CAACxgB,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;MAC3C,IAAM1nB,EAAE,GAAGinB,SAAS,CAACxgB,GAAG,CAAEwgB,SAAU,CAAC,GAAG4B,GAAG,GAAGA,GAAG;MACjD,IAAMC,OAAO,GAAGrE,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE7C,IAAKthB,EAAE,GAAG8oB,OAAO,EAAG,OAAO,IAAI;MAE/B,IAAMC,GAAG,GAAGtpB,IAAI,CAACmH,IAAI,CAAEkiB,OAAO,GAAG9oB,EAAG,CAAC;;MAErC;MACA,IAAMgpB,EAAE,GAAGH,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAME,EAAE,GAAGJ,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAKE,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI;;MAEzB;MACA;MACA;MACA,IAAKD,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAACpB,EAAE,CAAEqB,EAAE,EAAEr4B,MAAO,CAAC;;MAE1C;MACA,OAAO,IAAI,CAACg3B,EAAE,CAAEoB,EAAE,EAAEp4B,MAAO,CAAC;IAE7B;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA+5B,iBAAkBC,MAAM,EAAG;MAE1B,OAAO,IAAI,CAACwD,iBAAiB,CAAExD,MAAM,CAAClc,MAAO,CAAC,IAAMkc,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;IAEpF;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAy+B,gBAAiBtE,KAAK,EAAG;MAExB,IAAM3d,WAAW,GAAG2d,KAAK,CAAC1D,MAAM,CAACza,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;MAEtD,IAAKzgB,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAK2d,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAO,CAAC,KAAK,CAAC,EAAG;UAEjD,OAAO,CAAC;QAET;;QAEA;;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAMx9B,CAAC,GAAG,EAAI,IAAI,CAACw9B,MAAM,CAAChhB,GAAG,CAAEme,KAAK,CAAC1D,MAAO,CAAC,GAAG0D,KAAK,CAACC,QAAQ,CAAE,GAAG5d,WAAW;;MAE9E;;MAEA,OAAOhd,CAAC,IAAI,CAAC,GAAGA,CAAC,GAAG,IAAI;IAEzB;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAA0+B,eAAgBvE,KAAK,EAAEh0B,MAAM,EAAG;MAE/B,IAAM3G,CAAC,GAAG,IAAI,CAACi/B,eAAe,CAAEtE,KAAM,CAAC;MAEvC,IAAK36B,CAAC,KAAK,IAAI,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,OAAO,IAAI,CAAC29B,EAAE,CAAE39B,CAAC,EAAE2G,MAAO,CAAC;IAE5B;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAk6B,gBAAiBC,KAAK,EAAG;MAExB;;MAEA,IAAMwE,WAAW,GAAGxE,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAO,CAAC;MAExD,IAAK2B,WAAW,KAAK,CAAC,EAAG;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAMniB,WAAW,GAAG2d,KAAK,CAAC1D,MAAM,CAACza,GAAG,CAAE,IAAI,CAACihB,SAAU,CAAC;MAEtD,IAAKzgB,WAAW,GAAGmiB,WAAW,GAAG,CAAC,EAAG;QAEpC,OAAO,IAAI;MAEZ;;MAEA;;MAEA,OAAO,KAAK;IAEb;EAAC;IAAAp4B,GAAA;IAAAvG,KAAA,EAED,SAAA4+B,aAAclG,GAAG,EAAEvyB,MAAM,EAAG;MAE3B,IAAI04B,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK;MAE1C,IAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAClC,SAAS,CAAChnB,CAAC;QACnCmpB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACnC,SAAS,CAACv7B,CAAC;QAC9B29B,OAAO,GAAG,CAAC,GAAG,IAAI,CAACpC,SAAS,CAACvS,CAAC;MAE/B,IAAMsS,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKmC,OAAO,IAAI,CAAC,EAAG;QAEnBN,IAAI,GAAG,CAAEnG,GAAG,CAAC9iB,GAAG,CAACK,CAAC,GAAG+mB,MAAM,CAAC/mB,CAAC,IAAKkpB,OAAO;QACzCL,IAAI,GAAG,CAAEpG,GAAG,CAAC7iB,GAAG,CAACI,CAAC,GAAG+mB,MAAM,CAAC/mB,CAAC,IAAKkpB,OAAO;MAE1C,CAAC,MAAM;QAENN,IAAI,GAAG,CAAEnG,GAAG,CAAC7iB,GAAG,CAACI,CAAC,GAAG+mB,MAAM,CAAC/mB,CAAC,IAAKkpB,OAAO;QACzCL,IAAI,GAAG,CAAEpG,GAAG,CAAC9iB,GAAG,CAACK,CAAC,GAAG+mB,MAAM,CAAC/mB,CAAC,IAAKkpB,OAAO;MAE1C;MAEA,IAAKC,OAAO,IAAI,CAAC,EAAG;QAEnBL,KAAK,GAAG,CAAErG,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,GAAGs7B,MAAM,CAACt7B,CAAC,IAAK09B,OAAO;QAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,GAAGs7B,MAAM,CAACt7B,CAAC,IAAK09B,OAAO;MAE3C,CAAC,MAAM;QAENL,KAAK,GAAG,CAAErG,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,GAAGs7B,MAAM,CAACt7B,CAAC,IAAK09B,OAAO;QAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,GAAGs7B,MAAM,CAACt7B,CAAC,IAAK09B,OAAO;MAE3C;MAEA,IAAOP,IAAI,GAAGG,KAAK,IAAQD,KAAK,GAAGD,IAAM,EAAG,OAAO,IAAI;MAEvD,IAAKC,KAAK,GAAGF,IAAI,IAAIx6B,KAAK,CAAEw6B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKC,KAAK,GAAGF,IAAI,IAAIz6B,KAAK,CAAEy6B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKK,OAAO,IAAI,CAAC,EAAG;QAEnBJ,KAAK,GAAG,CAAEvG,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;QAC1CH,KAAK,GAAG,CAAExG,GAAG,CAAC7iB,GAAG,CAAC6U,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;MAE3C,CAAC,MAAM;QAENJ,KAAK,GAAG,CAAEvG,GAAG,CAAC7iB,GAAG,CAAC6U,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;QAC1CH,KAAK,GAAG,CAAExG,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;MAE3C;MAEA,IAAOR,IAAI,GAAGK,KAAK,IAAQD,KAAK,GAAGH,IAAM,EAAG,OAAO,IAAI;MAEvD,IAAKG,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;MAEjD,IAAKC,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;;MAEjD;;MAEA,IAAKJ,IAAI,GAAG,CAAC,EAAG,OAAO,IAAI;MAE3B,OAAO,IAAI,CAAC3B,EAAE,CAAE0B,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAGC,IAAI,EAAE34B,MAAO,CAAC;IAElD;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB,OAAO,IAAI,CAACkG,YAAY,CAAElG,GAAG,EAAE8D,SAAU,CAAC,KAAK,IAAI;IAEpD;EAAC;IAAAj2B,GAAA;IAAAvG,KAAA,EAED,SAAAs/B,kBAAmBn/B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEk/B,eAAe,EAAEp5B,MAAM,EAAG;MAErD;;MAEA;;MAEAy2B,MAAM,CAAC1hB,UAAU,CAAE5C,CAAC,EAAEnY,CAAE,CAAC;MACzB08B,MAAM,CAAC3hB,UAAU,CAAE7a,CAAC,EAAEF,CAAE,CAAC;MACzB28B,SAAS,CAACjH,YAAY,CAAE+G,MAAM,EAAEC,MAAO,CAAC;;MAExC;MACA;MACA;MACA;MACA;MACA,IAAI2C,GAAG,GAAG,IAAI,CAACvC,SAAS,CAACjhB,GAAG,CAAE8gB,SAAU,CAAC;MACzC,IAAI2C,IAAI;MAER,IAAKD,GAAG,GAAG,CAAC,EAAG;QAEd,IAAKD,eAAe,EAAG,OAAO,IAAI;QAClCE,IAAI,GAAG,CAAC;MAET,CAAC,MAAM,IAAKD,GAAG,GAAG,CAAC,EAAG;QAErBC,IAAI,GAAG,CAAE,CAAC;QACVD,GAAG,GAAG,CAAEA,GAAG;MAEZ,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;MAEA7C,KAAK,CAACzhB,UAAU,CAAE,IAAI,CAAC8hB,MAAM,EAAE78B,CAAE,CAAC;MAClC,IAAMu/B,MAAM,GAAGD,IAAI,GAAG,IAAI,CAACxC,SAAS,CAACjhB,GAAG,CAAE6gB,MAAM,CAAChH,YAAY,CAAE8G,KAAK,EAAEE,MAAO,CAAE,CAAC;;MAEhF;MACA,IAAK6C,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,IAAMC,MAAM,GAAGF,IAAI,GAAG,IAAI,CAACxC,SAAS,CAACjhB,GAAG,CAAE4gB,MAAM,CAAC3gB,KAAK,CAAE0gB,KAAM,CAAE,CAAC;;MAEjE;MACA,IAAKgD,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAKD,MAAM,GAAGC,MAAM,GAAGH,GAAG,EAAG;QAE5B,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAMI,GAAG,GAAG,CAAEH,IAAI,GAAG9C,KAAK,CAAC3gB,GAAG,CAAE8gB,SAAU,CAAC;;MAE3C;MACA,IAAK8C,GAAG,GAAG,CAAC,EAAG;QAEd,OAAO,IAAI;MAEZ;;MAEA;MACA,OAAO,IAAI,CAACzC,EAAE,CAAEyC,GAAG,GAAGJ,GAAG,EAAEr5B,MAAO,CAAC;IAEpC;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAc1J,OAAO,EAAG;MAEvB,IAAI,CAAC2b,MAAM,CAACjS,YAAY,CAAE1J,OAAQ,CAAC;MACnC,IAAI,CAAC4b,SAAS,CAACrH,kBAAkB,CAAEvU,OAAQ,CAAC;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAA9a,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ6f,GAAG,EAAG;MAEb,OAAOA,GAAG,CAACF,MAAM,CAAC3f,MAAM,CAAE,IAAI,CAAC2f,MAAO,CAAC,IAAIE,GAAG,CAACD,SAAS,CAAC5f,MAAM,CAAE,IAAI,CAAC4f,SAAU,CAAC;IAElF;EAAC;IAAA12B,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAoiB,GAAA;AAAA;AAAA,IAII8C,OAAO,GAAAx4B,OAAA,CAAAw4B,OAAA;EAEZ,SAAAA,QAAa3hB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE0hB,GAAG,EAAEzhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEwhB,GAAG,EAAEvhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEshB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;IAAAr6B,eAAA,OAAA85B,OAAA;IAE7FA,OAAO,CAAClgC,SAAS,CAAC0gC,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC7kB,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;IAED,IAAK0C,GAAG,KAAKjX,SAAS,EAAG;MAExB,IAAI,CAACiS,GAAG,CAAEgF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE0hB,GAAG,EAAEzhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEwhB,GAAG,EAAEvhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEshB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAE3F;EAED;EAAC55B,YAAA,CAAAq5B,OAAA;IAAAt5B,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKgF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE0hB,GAAG,EAAEzhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEwhB,GAAG,EAAEvhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEshB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAErF,IAAMxhB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,GAAGV,GAAG;MAAEU,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,EAAE,CAAE,GAAGkhB,GAAG;MAC3DlhB,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,EAAE,CAAE,GAAGmhB,GAAG;MAC3DnhB,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAAEI,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAAEG,EAAE,CAAE,EAAE,CAAE,GAAGF,GAAG;MAAEE,EAAE,CAAE,EAAE,CAAE,GAAGohB,GAAG;MAC5DphB,EAAE,CAAE,CAAC,CAAE,GAAGqhB,GAAG;MAAErhB,EAAE,CAAE,CAAC,CAAE,GAAGshB,GAAG;MAAEthB,EAAE,CAAE,EAAE,CAAE,GAAGuhB,GAAG;MAAEvhB,EAAE,CAAE,EAAE,CAAE,GAAGwhB,GAAG;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAA75B,GAAA;IAAAvG,KAAA,EAED,SAAA6e,SAAA,EAAW;MAEV,IAAI,CAAC3F,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA3S,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAImlB,OAAO,CAAC,CAAC,CAACviB,SAAS,CAAE,IAAI,CAAC9B,QAAS,CAAC;IAEhD;EAAC;IAAAjV,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM5E,CAAC,EAAG;MAET,IAAM6I,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAErBoD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAC9EF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAElF,OAAO,IAAI;IAEZ;EAAC;IAAAvY,GAAA;IAAAvG,KAAA,EAED,SAAAsgC,aAAcvqB,CAAC,EAAG;MAEjB,IAAM6I,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAAEsD,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAEzCoD,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAEnB,OAAO,IAAI;IAEZ;EAAC;IAAAvY,GAAA;IAAAvG,KAAA,EAED,SAAAugC,eAAgBxqB,CAAC,EAAG;MAEnB,IAAM+I,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAErB,IAAI,CAACtC,GAAG,CAEP4F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAvY,GAAA;IAAAvG,KAAA,EAED,SAAA+e,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAACoY,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MACpCnY,KAAK,CAACmY,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MACpClY,KAAK,CAACkY,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAA7wB,GAAA;IAAAvG,KAAA,EAED,SAAAwgC,UAAWxhB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEhC,IAAI,CAAChG,GAAG,CACP8F,KAAK,CAAC/I,CAAC,EAAEgJ,KAAK,CAAChJ,CAAC,EAAEiJ,KAAK,CAACjJ,CAAC,EAAE,CAAC,EAC5B+I,KAAK,CAACtd,CAAC,EAAEud,KAAK,CAACvd,CAAC,EAAEwd,KAAK,CAACxd,CAAC,EAAE,CAAC,EAC5Bsd,KAAK,CAAC0L,CAAC,EAAEzL,KAAK,CAACyL,CAAC,EAAExL,KAAK,CAACwL,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAygC,gBAAiB1qB,CAAC,EAAG;MAEpB;;MAEA,IAAM6I,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MAErB,IAAMklB,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACvJ,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MAC7D,IAAMs8B,MAAM,GAAG,CAAC,GAAGD,KAAK,CAACvJ,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MAC7D,IAAMu8B,MAAM,GAAG,CAAC,GAAGF,KAAK,CAACvJ,mBAAmB,CAAErhB,CAAC,EAAE,CAAE,CAAC,CAACzR,MAAM,CAAC,CAAC;MAE7Dsa,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG4hB,MAAM;MAC1B9hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG4hB,MAAM;MAC1B9hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG4hB,MAAM;MAC1B9hB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG8hB,MAAM;MAC1BhiB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG8hB,MAAM;MAC1BhiB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG8hB,MAAM;MAC1BhiB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG+hB,MAAM;MAC1BjiB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG+hB,MAAM;MAC1BjiB,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE,GAAG+hB,MAAM;MAC5BjiB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAArY,GAAA;IAAAvG,KAAA,EAED,SAAA8gC,sBAAuB5Q,KAAK,EAAG;MAE9B,IAAMtR,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMvF,CAAC,GAAGia,KAAK,CAACja,CAAC;QAAEvU,CAAC,GAAGwuB,KAAK,CAACxuB,CAAC;QAAEgpB,CAAC,GAAGwF,KAAK,CAACxF,CAAC;MAC3C,IAAMvqB,CAAC,GAAG6U,IAAI,CAACwD,GAAG,CAAEvC,CAAE,CAAC;QAAEqC,CAAC,GAAGtD,IAAI,CAACyD,GAAG,CAAExC,CAAE,CAAC;MAC1C,IAAM5V,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAE9W,CAAE,CAAC;QAAEI,CAAC,GAAGkT,IAAI,CAACyD,GAAG,CAAE/W,CAAE,CAAC;MAC1C,IAAMnC,CAAC,GAAGyV,IAAI,CAACwD,GAAG,CAAEkS,CAAE,CAAC;QAAElpB,CAAC,GAAGwT,IAAI,CAACyD,GAAG,CAAEiS,CAAE,CAAC;MAE1C,IAAKwF,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAE5B,IAAMgH,EAAE,GAAGpf,CAAC,GAAGZ,CAAC;UAAEwhC,EAAE,GAAG5gC,CAAC,GAAGqB,CAAC;UAAEge,EAAE,GAAGlH,CAAC,GAAG/Y,CAAC;UAAEyhC,EAAE,GAAG1oB,CAAC,GAAG9W,CAAC;QAEpDod,EAAE,CAAE,CAAC,CAAE,GAAGve,CAAC,GAAGd,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEve,CAAC,GAAGmB,CAAC;QACjBod,EAAE,CAAE,CAAC,CAAE,GAAG9c,CAAC;QAEX8c,EAAE,CAAE,CAAC,CAAE,GAAGmiB,EAAE,GAAGvhB,EAAE,GAAG1d,CAAC;QACrB8c,EAAE,CAAE,CAAC,CAAE,GAAGW,EAAE,GAAGyhB,EAAE,GAAGl/B,CAAC;QACrB8c,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEtG,CAAC,GAAGjY,CAAC;QAEjBue,EAAE,CAAE,CAAC,CAAE,GAAGoiB,EAAE,GAAGzhB,EAAE,GAAGzd,CAAC;QACrB8c,EAAE,CAAE,CAAC,CAAE,GAAGY,EAAE,GAAGuhB,EAAE,GAAGj/B,CAAC;QACrB8c,EAAE,CAAE,EAAE,CAAE,GAAGze,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK6vB,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM0oB,EAAE,GAAG5gC,CAAC,GAAGd,CAAC;UAAE2hC,EAAE,GAAG7gC,CAAC,GAAGmB,CAAC;UAAE2/B,EAAE,GAAGr/B,CAAC,GAAGvC,CAAC;UAAE6hC,EAAE,GAAGt/B,CAAC,GAAGN,CAAC;QAEpDod,EAAE,CAAE,CAAC,CAAE,GAAGqiB,EAAE,GAAGG,EAAE,GAAG9oB,CAAC;QACrBsG,EAAE,CAAE,CAAC,CAAE,GAAGuiB,EAAE,GAAG7oB,CAAC,GAAG4oB,EAAE;QACrBtiB,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAG2B,CAAC;QAEf8c,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAGqB,CAAC;QACfod,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAGZ,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEtG,CAAC;QAEbsG,EAAE,CAAE,CAAC,CAAE,GAAGsiB,EAAE,GAAG5oB,CAAC,GAAG6oB,EAAE;QACrBviB,EAAE,CAAE,CAAC,CAAE,GAAGwiB,EAAE,GAAGH,EAAE,GAAG3oB,CAAC;QACrBsG,EAAE,CAAE,EAAE,CAAE,GAAGze,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK6vB,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM0oB,GAAE,GAAG5gC,CAAC,GAAGd,CAAC;UAAE2hC,GAAE,GAAG7gC,CAAC,GAAGmB,CAAC;UAAE2/B,GAAE,GAAGr/B,CAAC,GAAGvC,CAAC;UAAE6hC,GAAE,GAAGt/B,CAAC,GAAGN,CAAC;QAEpDod,EAAE,CAAE,CAAC,CAAE,GAAGqiB,GAAE,GAAGG,GAAE,GAAG9oB,CAAC;QACrBsG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEze,CAAC,GAAGqB,CAAC;QACjBod,EAAE,CAAE,CAAC,CAAE,GAAGuiB,GAAE,GAAGD,GAAE,GAAG5oB,CAAC;QAErBsG,EAAE,CAAE,CAAC,CAAE,GAAGsiB,GAAE,GAAGC,GAAE,GAAG7oB,CAAC;QACrBsG,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAGZ,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAGwiB,GAAE,GAAGH,GAAE,GAAG3oB,CAAC;QAErBsG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEze,CAAC,GAAG2B,CAAC;QACjB8c,EAAE,CAAE,CAAC,CAAE,GAAGtG,CAAC;QACXsG,EAAE,CAAE,EAAE,CAAE,GAAGze,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK6vB,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMgH,GAAE,GAAGpf,CAAC,GAAGZ,CAAC;UAAEwhC,GAAE,GAAG5gC,CAAC,GAAGqB,CAAC;UAAEge,GAAE,GAAGlH,CAAC,GAAG/Y,CAAC;UAAEyhC,GAAE,GAAG1oB,CAAC,GAAG9W,CAAC;QAEpDod,EAAE,CAAE,CAAC,CAAE,GAAGve,CAAC,GAAGd,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAGY,GAAE,GAAG1d,CAAC,GAAGi/B,GAAE;QACrBniB,EAAE,CAAE,CAAC,CAAE,GAAGW,GAAE,GAAGzd,CAAC,GAAGk/B,GAAE;QAErBpiB,EAAE,CAAE,CAAC,CAAE,GAAGve,CAAC,GAAGmB,CAAC;QACfod,EAAE,CAAE,CAAC,CAAE,GAAGoiB,GAAE,GAAGl/B,CAAC,GAAGyd,GAAE;QACrBX,EAAE,CAAE,CAAC,CAAE,GAAGmiB,GAAE,GAAGj/B,CAAC,GAAG0d,GAAE;QAErBZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE9c,CAAC;QACb8c,EAAE,CAAE,CAAC,CAAE,GAAGtG,CAAC,GAAGjY,CAAC;QACfue,EAAE,CAAE,EAAE,CAAE,GAAGze,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK6vB,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM8oB,EAAE,GAAGlhC,CAAC,GAAGE,CAAC;UAAEihC,EAAE,GAAGnhC,CAAC,GAAG2B,CAAC;UAAEy/B,EAAE,GAAGjpB,CAAC,GAAGjY,CAAC;UAAEmhC,EAAE,GAAGlpB,CAAC,GAAGxW,CAAC;QAEpD8c,EAAE,CAAE,CAAC,CAAE,GAAGve,CAAC,GAAGd,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG4iB,EAAE,GAAGH,EAAE,GAAG7/B,CAAC;QACrBod,EAAE,CAAE,CAAC,CAAE,GAAG2iB,EAAE,GAAG//B,CAAC,GAAG8/B,EAAE;QAErB1iB,EAAE,CAAE,CAAC,CAAE,GAAGpd,CAAC;QACXod,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAGZ,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEtG,CAAC,GAAG/Y,CAAC;QAEjBqf,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE9c,CAAC,GAAGvC,CAAC;QACjBqf,EAAE,CAAE,CAAC,CAAE,GAAG0iB,EAAE,GAAG9/B,CAAC,GAAG+/B,EAAE;QACrB3iB,EAAE,CAAE,EAAE,CAAE,GAAGyiB,EAAE,GAAGG,EAAE,GAAGhgC,CAAC;MAEvB,CAAC,MAAM,IAAK0uB,KAAK,CAAC3X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM8oB,GAAE,GAAGlhC,CAAC,GAAGE,CAAC;UAAEihC,GAAE,GAAGnhC,CAAC,GAAG2B,CAAC;UAAEy/B,GAAE,GAAGjpB,CAAC,GAAGjY,CAAC;UAAEmhC,GAAE,GAAGlpB,CAAC,GAAGxW,CAAC;QAEpD8c,EAAE,CAAE,CAAC,CAAE,GAAGve,CAAC,GAAGd,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpd,CAAC;QACbod,EAAE,CAAE,CAAC,CAAE,GAAG9c,CAAC,GAAGvC,CAAC;QAEfqf,EAAE,CAAE,CAAC,CAAE,GAAGyiB,GAAE,GAAG7/B,CAAC,GAAGggC,GAAE;QACrB5iB,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC,GAAGZ,CAAC;QACfqf,EAAE,CAAE,CAAC,CAAE,GAAG0iB,GAAE,GAAG9/B,CAAC,GAAG+/B,GAAE;QAErB3iB,EAAE,CAAE,CAAC,CAAE,GAAG2iB,GAAE,GAAG//B,CAAC,GAAG8/B,GAAE;QACrB1iB,EAAE,CAAE,CAAC,CAAE,GAAGtG,CAAC,GAAG/Y,CAAC;QACfqf,EAAE,CAAE,EAAE,CAAE,GAAG4iB,GAAE,GAAGhgC,CAAC,GAAG6/B,GAAE;MAEvB;;MAEA;MACAziB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;;MAEZ;MACAA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAArY,GAAA;IAAAvG,KAAA,EAED,SAAAyhC,2BAA4BppB,CAAC,EAAG;MAE/B,OAAO,IAAI,CAACqpB,OAAO,CAAEC,KAAK,EAAEtpB,CAAC,EAAEupB,IAAK,CAAC;IAEtC;EAAC;IAAAr7B,GAAA;IAAAvG,KAAA,EAED,SAAAo9B,OAAQyE,GAAG,EAAE17B,MAAM,EAAE27B,EAAE,EAAG;MAEzB,IAAMljB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBqU,EAAE,CAAC3U,UAAU,CAAE2mB,GAAG,EAAE17B,MAAO,CAAC;MAE5B,IAAK0pB,EAAE,CAAC3T,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAG;QAE1B;;QAEA2T,EAAE,CAACnF,CAAC,GAAG,CAAC;MAET;MAEAmF,EAAE,CAAChW,SAAS,CAAC,CAAC;MACd8V,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAG,CAAC;MAEzB,IAAKF,EAAE,CAACzT,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAG;QAE1B;;QAEA,IAAKlH,IAAI,CAAC6B,GAAG,CAAEirB,EAAE,CAACpX,CAAE,CAAC,KAAK,CAAC,EAAG;UAE7BmF,EAAE,CAAC5Z,CAAC,IAAI,MAAM;QAEf,CAAC,MAAM;UAEN4Z,EAAE,CAACnF,CAAC,IAAI,MAAM;QAEf;QAEAmF,EAAE,CAAChW,SAAS,CAAC,CAAC;QACd8V,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAG,CAAC;MAE1B;MAEAF,EAAE,CAAC9V,SAAS,CAAC,CAAC;MACd+V,EAAE,CAACiG,YAAY,CAAEhG,EAAE,EAAEF,EAAG,CAAC;MAEzB/Q,EAAE,CAAE,CAAC,CAAE,GAAG+Q,EAAE,CAAC1Z,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,GAAGgR,EAAE,CAAC3Z,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,GAAGiR,EAAE,CAAC5Z,CAAC;MAC9C2I,EAAE,CAAE,CAAC,CAAE,GAAG+Q,EAAE,CAACjuB,CAAC;MAAEkd,EAAE,CAAE,CAAC,CAAE,GAAGgR,EAAE,CAACluB,CAAC;MAAEkd,EAAE,CAAE,CAAC,CAAE,GAAGiR,EAAE,CAACnuB,CAAC;MAC9Ckd,EAAE,CAAE,CAAC,CAAE,GAAG+Q,EAAE,CAACjF,CAAC;MAAE9L,EAAE,CAAE,CAAC,CAAE,GAAGgR,EAAE,CAAClF,CAAC;MAAE9L,EAAE,CAAE,EAAE,CAAE,GAAGiR,EAAE,CAACnF,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAUpF,CAAC,EAAG;MAEb,OAAO,IAAI,CAACsJ,gBAAgB,CAAE,IAAI,EAAEtJ,CAAE,CAAC;IAExC;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAsf,YAAavJ,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACsJ,gBAAgB,CAAEtJ,CAAC,EAAE,IAAK,CAAC;IAExC;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAqf,iBAAkBlf,CAAC,EAAEmY,CAAC,EAAG;MAExB,IAAMiH,EAAE,GAAGpf,CAAC,CAACqb,QAAQ;MACrB,IAAMgE,EAAE,GAAGlH,CAAC,CAACkD,QAAQ;MACrB,IAAMoD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMiE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;QAAEwiB,GAAG,GAAGxiB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;QAAEyiB,GAAG,GAAGziB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,EAAE,CAAE;QAAE0iB,GAAG,GAAG1iB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAM2iB,GAAG,GAAG3iB,EAAE,CAAE,CAAC,CAAE;QAAE4iB,GAAG,GAAG5iB,EAAE,CAAE,CAAC,CAAE;QAAE6iB,GAAG,GAAG7iB,EAAE,CAAE,EAAE,CAAE;QAAE8iB,GAAG,GAAG9iB,EAAE,CAAE,EAAE,CAAE;MAElE,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;QAAE8iB,GAAG,GAAG9iB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;QAAE+iB,GAAG,GAAG/iB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,EAAE,CAAE;QAAEgjB,GAAG,GAAGhjB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMijB,GAAG,GAAGjjB,EAAE,CAAE,CAAC,CAAE;QAAEkjB,GAAG,GAAGljB,EAAE,CAAE,CAAC,CAAE;QAAEmjB,GAAG,GAAGnjB,EAAE,CAAE,EAAE,CAAE;QAAEojB,GAAG,GAAGpjB,EAAE,CAAE,EAAE,CAAE;MAElEZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGuhB,GAAG,GAAGU,GAAG;MACvD7jB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG,GAAGshB,GAAG,GAAGW,GAAG;MACvD9jB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG,GAAGqhB,GAAG,GAAGY,GAAG;MACvD/jB,EAAE,CAAE,EAAE,CAAE,GAAGa,GAAG,GAAG6iB,GAAG,GAAG5iB,GAAG,GAAG6iB,GAAG,GAAG5iB,GAAG,GAAG6iB,GAAG,GAAGT,GAAG,GAAGa,GAAG;MAExDhkB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGwhB,GAAG,GAAGS,GAAG;MACvD7jB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGuhB,GAAG,GAAGU,GAAG;MACvD9jB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGshB,GAAG,GAAGW,GAAG;MACvD/jB,EAAE,CAAE,EAAE,CAAE,GAAGgB,GAAG,GAAG0iB,GAAG,GAAGziB,GAAG,GAAG0iB,GAAG,GAAGziB,GAAG,GAAG0iB,GAAG,GAAGR,GAAG,GAAGY,GAAG;MAExDhkB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGyhB,GAAG,GAAGQ,GAAG;MACvD7jB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGwhB,GAAG,GAAGS,GAAG;MACvD9jB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGuhB,GAAG,GAAGU,GAAG;MACxD/jB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGuiB,GAAG,GAAGtiB,GAAG,GAAGuiB,GAAG,GAAGtiB,GAAG,GAAGuiB,GAAG,GAAGP,GAAG,GAAGW,GAAG;MAExDhkB,EAAE,CAAE,CAAC,CAAE,GAAGsjB,GAAG,GAAGhiB,GAAG,GAAGiiB,GAAG,GAAG9hB,GAAG,GAAG+hB,GAAG,GAAG5hB,GAAG,GAAG6hB,GAAG,GAAGI,GAAG;MACvD7jB,EAAE,CAAE,CAAC,CAAE,GAAGsjB,GAAG,GAAG/hB,GAAG,GAAGgiB,GAAG,GAAG7hB,GAAG,GAAG8hB,GAAG,GAAG3hB,GAAG,GAAG4hB,GAAG,GAAGK,GAAG;MACvD9jB,EAAE,CAAE,EAAE,CAAE,GAAGsjB,GAAG,GAAG9hB,GAAG,GAAG+hB,GAAG,GAAG5hB,GAAG,GAAG6hB,GAAG,GAAG1hB,GAAG,GAAG2hB,GAAG,GAAGM,GAAG;MACxD/jB,EAAE,CAAE,EAAE,CAAE,GAAGsjB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGO,GAAG;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAr8B,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgB3Z,CAAC,EAAG;MAEnB,IAAMmd,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MACvDmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MACvDmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MACxDmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,CAAC,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MAAEmd,EAAE,CAAE,EAAE,CAAE,IAAInd,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA2gB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAM0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAET,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAER,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEkhB,GAAG,GAAGlhB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEmhB,GAAG,GAAGnhB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEohB,GAAG,GAAGphB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMqhB,GAAG,GAAGrhB,EAAE,CAAE,CAAC,CAAE;QAAEshB,GAAG,GAAGthB,EAAE,CAAE,CAAC,CAAE;QAAEuhB,GAAG,GAAGvhB,EAAE,CAAE,EAAE,CAAE;QAAEwhB,GAAG,GAAGxhB,EAAE,CAAE,EAAE,CAAE;;MAElE;MACA;;MAEA,OACCqhB,GAAG,IACF,CAAEH,GAAG,GAAGvhB,GAAG,GAAGE,GAAG,GACdL,GAAG,GAAG2hB,GAAG,GAAGthB,GAAG,GACfqhB,GAAG,GAAGxhB,GAAG,GAAGI,GAAG,GACfP,GAAG,GAAG4hB,GAAG,GAAGrhB,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG0hB,GAAG,GACf7hB,GAAG,GAAGI,GAAG,GAAGyhB,GAAG,CAClB,GACDE,GAAG,IACF,CAAEhiB,GAAG,GAAGK,GAAG,GAAGyhB,GAAG,GACd9hB,GAAG,GAAG6hB,GAAG,GAAGrhB,GAAG,GACfohB,GAAG,GAAGzhB,GAAG,GAAGK,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAG2hB,GAAG,GACf5hB,GAAG,GAAG2hB,GAAG,GAAGvhB,GAAG,GACfshB,GAAG,GAAGvhB,GAAG,GAAGC,GAAG,CAClB,GACD2hB,GAAG,IACF,CAAEjiB,GAAG,GAAG6hB,GAAG,GAAGthB,GAAG,GACdP,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,GACfF,GAAG,GAAGzhB,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GACfF,GAAG,GAAGxhB,GAAG,GAAGE,GAAG,GACfL,GAAG,GAAG4hB,GAAG,GAAGvhB,GAAG,CAClB,GACD4hB,GAAG,IACF,CAAEhiB,GAAG,GAAGE,GAAG,GAAGE,GAAG,GACdN,GAAG,GAAGK,GAAG,GAAGE,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGC,GAAG,CAClB;IAIH;EAAC;IAAAjY,GAAA;IAAAvG,KAAA,EAED,SAAAkhB,UAAA,EAAY;MAEX,IAAMtC,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAI2F,GAAG;MAEPA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG;MAC/CA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG;MAC/CA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG;MAE/CA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGuC,GAAG;MACjDA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGuC,GAAG;MACjDA,GAAG,GAAGvC,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGuC,GAAG;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAvG,KAAA,EAED,SAAA6iC,YAAa5sB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEtB,IAAM9L,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAKvF,CAAC,CAACqe,SAAS,EAAG;QAElB1V,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC,CAACA,CAAC;QACd2I,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC,CAACvU,CAAC;QACdkd,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC,CAACyU,CAAC;MAEf,CAAC,MAAM;QAEN9L,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC;QACZ2I,EAAE,CAAE,EAAE,CAAE,GAAGld,CAAC;QACZkd,EAAE,CAAE,EAAE,CAAE,GAAG8L,CAAC;MAEb;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA4gB,OAAA,EAAS;MAER;MACA,IAAMhC,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAEvB0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAEqhB,GAAG,GAAGrhB,EAAE,CAAE,CAAC,CAAE;QAC1DT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEshB,GAAG,GAAGthB,EAAE,CAAE,CAAC,CAAE;QAC1DR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEuhB,GAAG,GAAGvhB,EAAE,CAAE,EAAE,CAAE;QAC5DkhB,GAAG,GAAGlhB,EAAE,CAAE,EAAE,CAAE;QAAEmhB,GAAG,GAAGnhB,EAAE,CAAE,EAAE,CAAE;QAAEohB,GAAG,GAAGphB,EAAE,CAAE,EAAE,CAAE;QAAEwhB,GAAG,GAAGxhB,EAAE,CAAE,EAAE,CAAE;QAE9DiC,GAAG,GAAGtC,GAAG,GAAGyhB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGrhB,GAAG,GAAGwhB,GAAG,GAAGH,GAAG,GAAGthB,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAG0hB,GAAG,GAAGG,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG;QAC/Gtf,GAAG,GAAGgf,GAAG,GAAGphB,GAAG,GAAGwhB,GAAG,GAAG9hB,GAAG,GAAG4hB,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGrhB,GAAG,GAAG0hB,GAAG,GAAGhiB,GAAG,GAAG6hB,GAAG,GAAGG,GAAG,GAAG/hB,GAAG,GAAGK,GAAG,GAAG2hB,GAAG,GAAGjiB,GAAG,GAAGO,GAAG,GAAG0hB,GAAG;QAC/Grf,GAAG,GAAG3C,GAAG,GAAG2hB,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGvhB,GAAG,GAAG2hB,GAAG,GAAGJ,GAAG,GAAGxhB,GAAG,GAAG6hB,GAAG,GAAGhiB,GAAG,GAAG4hB,GAAG,GAAGI,GAAG,GAAG/hB,GAAG,GAAGE,GAAG,GAAG8hB,GAAG,GAAGjiB,GAAG,GAAGI,GAAG,GAAG6hB,GAAG;QAC/G0C,GAAG,GAAGhD,GAAG,GAAGvhB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAG2hB,GAAG,GAAGthB,GAAG,GAAGqhB,GAAG,GAAGxhB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG4hB,GAAG,GAAGrhB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAGI,GAAG,GAAGyhB,GAAG;MAEhH,IAAMhf,GAAG,GAAG9C,GAAG,GAAG2C,GAAG,GAAGxC,GAAG,GAAGyC,GAAG,GAAGtC,GAAG,GAAGuC,GAAG,GAAGkf,GAAG,GAAG6C,GAAG;MAEzD,IAAK9hB,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC9H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElF,IAAM+H,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBpC,EAAE,CAAE,CAAC,CAAE,GAAGiC,GAAG,GAAGI,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEmhB,GAAG,GAAGrhB,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGyhB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGvhB,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAG2hB,GAAG,GAAGG,GAAG,GAAG5hB,GAAG,GAAGC,GAAG,GAAG4hB,GAAG,GAAG/hB,GAAG,GAAGK,GAAG,GAAG0hB,GAAG,IAAKnf,MAAM;MAChIrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAG0hB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGthB,GAAG,GAAGwhB,GAAG,GAAGF,GAAG,GAAGvhB,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAG2hB,GAAG,GAAGE,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG4hB,GAAG,GAAG/hB,GAAG,GAAGI,GAAG,GAAG2hB,GAAG,IAAKnf,MAAM;MAChIrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGC,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAGK,GAAG,GAAGwhB,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,IAAKlf,MAAM;MAEhIrC,EAAE,CAAE,CAAC,CAAE,GAAGkC,GAAG,GAAGG,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAER,GAAG,GAAG4hB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGphB,GAAG,GAAGuhB,GAAG,GAAGH,GAAG,GAAGthB,GAAG,GAAG2hB,GAAG,GAAGjiB,GAAG,GAAG8hB,GAAG,GAAGG,GAAG,GAAG/hB,GAAG,GAAGI,GAAG,GAAG4hB,GAAG,GAAGliB,GAAG,GAAGQ,GAAG,GAAG0hB,GAAG,IAAKnf,MAAM;MAChIrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEkhB,GAAG,GAAGrhB,GAAG,GAAGwhB,GAAG,GAAG9hB,GAAG,GAAG6hB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGthB,GAAG,GAAG0hB,GAAG,GAAGhiB,GAAG,GAAG8hB,GAAG,GAAGE,GAAG,GAAG/hB,GAAG,GAAGK,GAAG,GAAG4hB,GAAG,GAAGliB,GAAG,GAAGO,GAAG,GAAG2hB,GAAG,IAAKnf,MAAM;MAChIrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAET,GAAG,GAAGO,GAAG,GAAGuhB,GAAG,GAAG7hB,GAAG,GAAGK,GAAG,GAAGwhB,GAAG,GAAG7hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,GAAGhiB,GAAG,GAAGQ,GAAG,GAAGwhB,GAAG,GAAG/hB,GAAG,GAAGK,GAAG,GAAG2hB,GAAG,GAAGjiB,GAAG,GAAGO,GAAG,GAAG0hB,GAAG,IAAKlf,MAAM;MAEhIrC,EAAE,CAAE,CAAC,CAAE,GAAGmC,GAAG,GAAGE,MAAM;MACtBrC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEkhB,GAAG,GAAGvhB,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAG2hB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGzhB,GAAG,GAAG8hB,GAAG,GAAGjiB,GAAG,GAAG6hB,GAAG,GAAGI,GAAG,GAAG/hB,GAAG,GAAGC,GAAG,GAAG+hB,GAAG,GAAGliB,GAAG,GAAGK,GAAG,GAAG6hB,GAAG,IAAKnf,MAAM;MAChIrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAG4hB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGxhB,GAAG,GAAG2hB,GAAG,GAAGH,GAAG,GAAGzhB,GAAG,GAAG6hB,GAAG,GAAGhiB,GAAG,GAAG6hB,GAAG,GAAGG,GAAG,GAAG/hB,GAAG,GAAGE,GAAG,GAAG+hB,GAAG,GAAGliB,GAAG,GAAGI,GAAG,GAAG8hB,GAAG,IAAKnf,MAAM;MACjIrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAGC,GAAG,GAAG6hB,GAAG,GAAGhiB,GAAG,GAAGK,GAAG,GAAG2hB,GAAG,GAAG/hB,GAAG,GAAGE,GAAG,GAAG8hB,GAAG,GAAGjiB,GAAG,GAAGI,GAAG,GAAG6hB,GAAG,IAAKlf,MAAM;MAEjIrC,EAAE,CAAE,EAAE,CAAE,GAAGkkB,GAAG,GAAG7hB,MAAM;MACvBrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAG2hB,GAAG,GAAGvhB,GAAG,GAAGshB,GAAG,GAAGvhB,GAAG,GAAGC,GAAG,GAAGshB,GAAG,GAAGzhB,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAG6hB,GAAG,GAAGrhB,GAAG,GAAGN,GAAG,GAAGC,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGK,GAAG,GAAGyhB,GAAG,IAAK/e,MAAM;MACjIrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEkhB,GAAG,GAAGxhB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAG4hB,GAAG,GAAGvhB,GAAG,GAAGshB,GAAG,GAAGzhB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG6hB,GAAG,GAAGthB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,IAAK/e,MAAM;MACjIrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAGI,GAAG,GAAGC,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGK,GAAG,GAAGE,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGI,GAAG,GAAGI,GAAG,IAAKuC,MAAM;MAEjI,OAAO,IAAI;IAEZ;EAAC;IAAA1a,GAAA;IAAAvG,KAAA,EAED,SAAA+hB,MAAO/f,CAAC,EAAG;MAEV,IAAM4c,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMvF,CAAC,GAAGjU,CAAC,CAACiU,CAAC;QAAEvU,CAAC,GAAGM,CAAC,CAACN,CAAC;QAAEgpB,CAAC,GAAG1oB,CAAC,CAAC0oB,CAAC;MAE/B9L,EAAE,CAAE,CAAC,CAAE,IAAI3I,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,IAAIld,CAAC;MAAEkd,EAAE,CAAE,CAAC,CAAE,IAAI8L,CAAC;MACxC9L,EAAE,CAAE,CAAC,CAAE,IAAI3I,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,IAAIld,CAAC;MAAEkd,EAAE,CAAE,CAAC,CAAE,IAAI8L,CAAC;MACxC9L,EAAE,CAAE,CAAC,CAAE,IAAI3I,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,IAAIld,CAAC;MAAEkd,EAAE,CAAE,EAAE,CAAE,IAAI8L,CAAC;MACzC9L,EAAE,CAAE,CAAC,CAAE,IAAI3I,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,IAAIld,CAAC;MAAEkd,EAAE,CAAE,EAAE,CAAE,IAAI8L,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAs8B,kBAAA,EAAoB;MAEnB,IAAM1d,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMunB,QAAQ,GAAGnkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMokB,QAAQ,GAAGpkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMqkB,QAAQ,GAAGrkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAE5E,OAAO5J,IAAI,CAACmH,IAAI,CAAEnH,IAAI,CAACa,GAAG,CAAEktB,QAAQ,EAAEC,QAAQ,EAAEC,QAAS,CAAE,CAAC;IAE7D;EAAC;IAAA18B,GAAA;IAAAvG,KAAA,EAED,SAAAqiB,gBAAiBpM,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAE1B,IAAKzU,CAAC,CAACqe,SAAS,EAAG;QAElB,IAAI,CAACpb,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEjD,CAAC,CAACA,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,CAAC,CAACvU,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuU,CAAC,CAACyU,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAEF,CAAC,MAAM;QAEN,IAAI,CAACxR,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEjD,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEvU,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEgpB,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAEF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAkjC,cAAezmB,KAAK,EAAG;MAEtB,IAAMpc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;QAAEhb,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MAElD,IAAI,CAACvD,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE7Y,CAAC,EAAE,CAAEoB,CAAC,EAAE,CAAC,EACZ,CAAC,EAAEA,CAAC,EAAEpB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAmjC,cAAe1mB,KAAK,EAAG;MAEtB,IAAMpc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;QAAEhb,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MAElD,IAAI,CAACvD,GAAG,CAEN7Y,CAAC,EAAE,CAAC,EAAEoB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAEA,CAAC,EAAE,CAAC,EAAEpB,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEX,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAojC,cAAe3mB,KAAK,EAAG;MAEtB,IAAMpc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;QAAEhb,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;MAElD,IAAI,CAACvD,GAAG,CAEP7Y,CAAC,EAAE,CAAEoB,CAAC,EAAE,CAAC,EAAE,CAAC,EACZA,CAAC,EAAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAqjC,iBAAkB3S,IAAI,EAAErU,KAAK,EAAG;MAE/B;;MAEA,IAAMhc,CAAC,GAAG2U,IAAI,CAACwD,GAAG,CAAE6D,KAAM,CAAC;MAC3B,IAAM5a,CAAC,GAAGuT,IAAI,CAACyD,GAAG,CAAE4D,KAAM,CAAC;MAC3B,IAAM7c,CAAC,GAAG,CAAC,GAAGa,CAAC;MACf,IAAM4V,CAAC,GAAGya,IAAI,CAACza,CAAC;QAAEvU,CAAC,GAAGgvB,IAAI,CAAChvB,CAAC;QAAEgpB,CAAC,GAAGgG,IAAI,CAAChG,CAAC;MACxC,IAAMlJ,EAAE,GAAGhiB,CAAC,GAAGyW,CAAC;QAAEwL,EAAE,GAAGjiB,CAAC,GAAGkC,CAAC;MAE5B,IAAI,CAACwX,GAAG,CAEPsI,EAAE,GAAGvL,CAAC,GAAG5V,CAAC,EAAEmhB,EAAE,GAAG9f,CAAC,GAAGD,CAAC,GAAGipB,CAAC,EAAElJ,EAAE,GAAGkJ,CAAC,GAAGjpB,CAAC,GAAGC,CAAC,EAAE,CAAC,EAC7C8f,EAAE,GAAG9f,CAAC,GAAGD,CAAC,GAAGipB,CAAC,EAAEjJ,EAAE,GAAG/f,CAAC,GAAGrB,CAAC,EAAEohB,EAAE,GAAGiJ,CAAC,GAAGjpB,CAAC,GAAGwU,CAAC,EAAE,CAAC,EAC7CuL,EAAE,GAAGkJ,CAAC,GAAGjpB,CAAC,GAAGC,CAAC,EAAE+f,EAAE,GAAGiJ,CAAC,GAAGjpB,CAAC,GAAGwU,CAAC,EAAEzW,CAAC,GAAGkrB,CAAC,GAAGA,CAAC,GAAGrqB,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAiiB,UAAWhM,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEpB,IAAI,CAACxR,GAAG,CAEPjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEvU,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAEgpB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAsjC,UAAWtX,EAAE,EAAEC,EAAE,EAAEsX,EAAE,EAAErX,EAAE,EAAEsX,EAAE,EAAEC,EAAE,EAAG;MAEnC,IAAI,CAACvqB,GAAG,CAEP,CAAC,EAAEqqB,EAAE,EAAEC,EAAE,EAAE,CAAC,EACZxX,EAAE,EAAE,CAAC,EAAEyX,EAAE,EAAE,CAAC,EACZxX,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA3lB,GAAA;IAAAvG,KAAA,EAED,SAAA0hC,QAASjI,QAAQ,EAAEzJ,UAAU,EAAEjO,KAAK,EAAG;MAEtC,IAAMnD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMvF,CAAC,GAAG+Z,UAAU,CAACL,EAAE;QAAEjuB,CAAC,GAAGsuB,UAAU,CAACJ,EAAE;QAAElF,CAAC,GAAGsF,UAAU,CAACH,EAAE;QAAElF,CAAC,GAAGqF,UAAU,CAACF,EAAE;MAChF,IAAM4T,EAAE,GAAGztB,CAAC,GAAGA,CAAC;QAAE0tB,EAAE,GAAGjiC,CAAC,GAAGA,CAAC;QAAEkiC,EAAE,GAAGlZ,CAAC,GAAGA,CAAC;MACxC,IAAMmB,EAAE,GAAG5V,CAAC,GAAGytB,EAAE;QAAE1X,EAAE,GAAG/V,CAAC,GAAG0tB,EAAE;QAAE1X,EAAE,GAAGhW,CAAC,GAAG2tB,EAAE;MAC3C,IAAM9X,EAAE,GAAGpqB,CAAC,GAAGiiC,EAAE;QAAEzX,EAAE,GAAGxqB,CAAC,GAAGkiC,EAAE;QAAE7X,EAAE,GAAGrB,CAAC,GAAGkZ,EAAE;MAC3C,IAAMC,EAAE,GAAGlZ,CAAC,GAAG+Y,EAAE;QAAEI,EAAE,GAAGnZ,CAAC,GAAGgZ,EAAE;QAAEI,EAAE,GAAGpZ,CAAC,GAAGiZ,EAAE;MAE3C,IAAMliB,EAAE,GAAGK,KAAK,CAAC9L,CAAC;QAAE0L,EAAE,GAAGI,KAAK,CAACrgB,CAAC;QAAE21B,EAAE,GAAGtV,KAAK,CAAC2I,CAAC;MAE9C9L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAKkN,EAAE,GAAGC,EAAE,CAAE,IAAKrK,EAAE;MAClC9C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEoN,EAAE,GAAG+X,EAAE,IAAKriB,EAAE;MAC1B9C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEqN,EAAE,GAAG6X,EAAE,IAAKpiB,EAAE;MAC1B9C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEoN,EAAE,GAAG+X,EAAE,IAAKpiB,EAAE;MAC1B/C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAKiN,EAAE,GAAGE,EAAE,CAAE,IAAKpK,EAAE;MAClC/C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEsN,EAAE,GAAG2X,EAAE,IAAKliB,EAAE;MAC1B/C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEqN,EAAE,GAAG6X,EAAE,IAAKzM,EAAE;MAC1BzY,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEsN,EAAE,GAAG2X,EAAE,IAAKxM,EAAE;MAC1BzY,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,IAAKiN,EAAE,GAAGC,EAAE,CAAE,IAAKuL,EAAE;MACnCzY,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAG6a,QAAQ,CAACxjB,CAAC;MACrB2I,EAAE,CAAE,EAAE,CAAE,GAAG6a,QAAQ,CAAC/3B,CAAC;MACrBkd,EAAE,CAAE,EAAE,CAAE,GAAG6a,QAAQ,CAAC/O,CAAC;MACrB9L,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAArY,GAAA;IAAAvG,KAAA,EAED,SAAAgkC,UAAWvK,QAAQ,EAAEzJ,UAAU,EAAEjO,KAAK,EAAG;MAExC,IAAMnD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAIkG,EAAE,GAAGif,KAAK,CAACznB,GAAG,CAAE0F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAG,CAAC,CAACta,MAAM,CAAC,CAAC;MACxD,IAAMqd,EAAE,GAAGgf,KAAK,CAACznB,GAAG,CAAE0F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAG,CAAC,CAACta,MAAM,CAAC,CAAC;MAC1D,IAAM+yB,EAAE,GAAGsJ,KAAK,CAACznB,GAAG,CAAE0F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAG,CAAC,CAACta,MAAM,CAAC,CAAC;;MAE3D;MACA,IAAM0c,GAAG,GAAG,IAAI,CAACL,WAAW,CAAC,CAAC;MAC9B,IAAKK,GAAG,GAAG,CAAC,EAAGU,EAAE,GAAG,CAAEA,EAAE;MAExB+X,QAAQ,CAACxjB,CAAC,GAAG2I,EAAE,CAAE,EAAE,CAAE;MACrB6a,QAAQ,CAAC/3B,CAAC,GAAGkd,EAAE,CAAE,EAAE,CAAE;MACrB6a,QAAQ,CAAC/O,CAAC,GAAG9L,EAAE,CAAE,EAAE,CAAE;;MAErB;MACAqlB,KAAK,CAACtpB,IAAI,CAAE,IAAK,CAAC;MAElB,IAAMupB,KAAK,GAAG,CAAC,GAAGxiB,EAAE;MACpB,IAAMyiB,KAAK,GAAG,CAAC,GAAGxiB,EAAE;MACpB,IAAMyiB,KAAK,GAAG,CAAC,GAAG/M,EAAE;MAEpB4M,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI0oB,KAAK;MAC5BD,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI0oB,KAAK;MAC5BD,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI0oB,KAAK;MAE5BD,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI2oB,KAAK;MAC5BF,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI2oB,KAAK;MAC5BF,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI2oB,KAAK;MAE5BF,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI4oB,KAAK;MAC5BH,KAAK,CAACzoB,QAAQ,CAAE,CAAC,CAAE,IAAI4oB,KAAK;MAC5BH,KAAK,CAACzoB,QAAQ,CAAE,EAAE,CAAE,IAAI4oB,KAAK;MAE7BpU,UAAU,CAACY,qBAAqB,CAAEqT,KAAM,CAAC;MAEzCliB,KAAK,CAAC9L,CAAC,GAAGyL,EAAE;MACZK,KAAK,CAACrgB,CAAC,GAAGigB,EAAE;MACZI,KAAK,CAAC2I,CAAC,GAAG2M,EAAE;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA9wB,GAAA;IAAAvG,KAAA,EAED,SAAAqkC,gBAAiBC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,gBAAgB,GAAG/wB,qBAAqB,EAAG;MAEhG,IAAM+K,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMvF,CAAC,GAAG,CAAC,GAAGyuB,IAAI,IAAKH,KAAK,GAAGD,IAAI,CAAE;MACrC,IAAM5iC,CAAC,GAAG,CAAC,GAAGgjC,IAAI,IAAKF,GAAG,GAAGC,MAAM,CAAE;MAErC,IAAMtkC,CAAC,GAAG,CAAEokC,KAAK,GAAGD,IAAI,KAAOC,KAAK,GAAGD,IAAI,CAAE;MAC7C,IAAMhsB,CAAC,GAAG,CAAEksB,GAAG,GAAGC,MAAM,KAAOD,GAAG,GAAGC,MAAM,CAAE;MAE7C,IAAIpkC,CAAC,EAAEyB,CAAC;MAER,IAAK8iC,gBAAgB,KAAK/wB,qBAAqB,EAAG;QAEjDxT,CAAC,GAAG,EAAIskC,GAAG,GAAGD,IAAI,CAAE,IAAKC,GAAG,GAAGD,IAAI,CAAE;QACrC5iC,CAAC,GAAK,CAAE,CAAC,GAAG6iC,GAAG,GAAGD,IAAI,IAAOC,GAAG,GAAGD,IAAI,CAAE;MAE1C,CAAC,MAAM,IAAKE,gBAAgB,KAAK9wB,sBAAsB,EAAG;QAEzDzT,CAAC,GAAG,CAAEskC,GAAG,IAAKA,GAAG,GAAGD,IAAI,CAAE;QAC1B5iC,CAAC,GAAK,CAAE6iC,GAAG,GAAGD,IAAI,IAAOC,GAAG,GAAGD,IAAI,CAAE;MAEtC,CAAC,MAAM;QAEN,MAAM,IAAI7hC,KAAK,CAAE,8DAA8D,GAAG+hC,gBAAiB,CAAC;MAErG;MAEAhmB,EAAE,CAAE,CAAC,CAAE,GAAG3I,CAAC;MAAE2I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGze,CAAC;MAAGye,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACpDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGld,CAAC;MAAEkd,EAAE,CAAE,CAAC,CAAE,GAAGtG,CAAC;MAAGsG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACpDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGve,CAAC;MAAGue,EAAE,CAAE,EAAE,CAAE,GAAG9c,CAAC;MACrD8c,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAArY,GAAA;IAAAvG,KAAA,EAED,SAAA6kC,iBAAkBP,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,gBAAgB,GAAG/wB,qBAAqB,EAAG;MAEjG,IAAM+K,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMmP,CAAC,GAAG,GAAG,IAAK4Z,KAAK,GAAGD,IAAI,CAAE;MAChC,IAAMhjC,CAAC,GAAG,GAAG,IAAKkjC,GAAG,GAAGC,MAAM,CAAE;MAChC,IAAM5iC,CAAC,GAAG,GAAG,IAAK8iC,GAAG,GAAGD,IAAI,CAAE;MAE9B,IAAMzuB,CAAC,GAAG,CAAEsuB,KAAK,GAAGD,IAAI,IAAK3Z,CAAC;MAC9B,IAAMjpB,CAAC,GAAG,CAAE8iC,GAAG,GAAGC,MAAM,IAAKnjC,CAAC;MAE9B,IAAIopB,CAAC,EAAEoa,IAAI;MAEX,IAAKF,gBAAgB,KAAK/wB,qBAAqB,EAAG;QAEjD6W,CAAC,GAAG,CAAEia,GAAG,GAAGD,IAAI,IAAK7iC,CAAC;QACtBijC,IAAI,GAAG,CAAE,CAAC,GAAGjjC,CAAC;MAEf,CAAC,MAAM,IAAK+iC,gBAAgB,KAAK9wB,sBAAsB,EAAG;QAEzD4W,CAAC,GAAGga,IAAI,GAAG7iC,CAAC;QACZijC,IAAI,GAAG,CAAE,CAAC,GAAGjjC,CAAC;MAEf,CAAC,MAAM;QAEN,MAAM,IAAIgB,KAAK,CAAE,+DAA+D,GAAG+hC,gBAAiB,CAAC;MAEtG;MAEAhmB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG+L,CAAC;MAAE/L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE3I,CAAC;MAC5D2I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGtd,CAAC;MAAEsd,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEld,CAAC;MAC7Dkd,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAGkmB,IAAI;MAAElmB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE8L,CAAC;MAC5D9L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAArY,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQiF,MAAM,EAAG;MAEhB,IAAM1D,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAGwD,MAAM,CAAC9G,QAAQ;MAE1B,KAAM,IAAIvb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAK2e,EAAE,CAAE3e,CAAC,CAAE,KAAK6e,EAAE,CAAE7e,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAItd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAI,CAACub,QAAQ,CAAEvb,CAAC,CAAE,GAAG2U,KAAK,CAAE3U,CAAC,GAAGsd,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB5G,KAAK,CAAE2I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/B,OAAOhK,KAAK;IAEb;EAAC;EAAA,OAAAirB,OAAA;AAAA;AAIF,IAAMc,KAAK,GAAG,aAAc,IAAIvM,OAAO,CAAC,CAAC;AACzC,IAAM6P,KAAK,GAAG,aAAc,IAAIpE,OAAO,CAAC,CAAC;AACzC,IAAM8B,KAAK,GAAG,aAAc,IAAIvN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAClD,IAAMwN,IAAI,GAAG,aAAc,IAAIxN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACjD,IAAMzE,EAAE,GAAG,aAAc,IAAIyE,OAAO,CAAC,CAAC;AACtC,IAAMxE,EAAE,GAAG,aAAc,IAAIwE,OAAO,CAAC,CAAC;AACtC,IAAMvE,EAAE,GAAG,aAAc,IAAIuE,OAAO,CAAC,CAAC;AAEtC,IAAM2Q,OAAO,GAAG,aAAc,IAAIlF,OAAO,CAAC,CAAC;AAC3C,IAAMmF,aAAa,GAAG,aAAc,IAAIxV,UAAU,CAAC,CAAC;AAAC,IAE/CyV,KAAK,GAAA59B,OAAA,CAAA49B,KAAA,0BAAAC,iBAAA;EAEV,SAAAD,MAAahvB,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAEgpB,CAAC,GAAG,CAAC,EAAEnS,KAAK,GAAG0sB,KAAK,CAACE,aAAa,EAAG;IAAAp/B,eAAA,OAAAk/B,KAAA;IAE/D,IAAI,CAACG,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACzV,EAAE,GAAG1Z,CAAC;IACX,IAAI,CAAC2Z,EAAE,GAAGluB,CAAC;IACX,IAAI,CAACmuB,EAAE,GAAGnF,CAAC;IACX,IAAI,CAAC0F,MAAM,GAAG7X,KAAK;EAEpB;EAAC/R,YAAA,CAAAy+B,KAAA;IAAA1+B,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwV,EAAE;IAEf,CAAC;IAAAzW,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC2vB,EAAE,GAAG3vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyV,EAAE;IAEf,CAAC;IAAA1W,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC4vB,EAAE,GAAG5vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC0V,EAAE;IAEf,CAAC;IAAA3W,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;MAEd,IAAI,CAAC6vB,EAAE,GAAG7vB,KAAK;MACf,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACiW,MAAM;IAEnB,CAAC;IAAAlX,GAAA,EAED,SAAAA,IAAWlZ,KAAK,EAAG;MAElB,IAAI,CAACowB,MAAM,GAAGpwB,KAAK;MACnB,IAAI,CAAC+vB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEnS,KAAK,GAAG,IAAI,CAAC6X,MAAM,EAAG;MAEnC,IAAI,CAACT,EAAE,GAAG1Z,CAAC;MACX,IAAI,CAAC2Z,EAAE,GAAGluB,CAAC;MACX,IAAI,CAACmuB,EAAE,GAAGnF,CAAC;MACX,IAAI,CAAC0F,MAAM,GAAG7X,KAAK;MAEnB,IAAI,CAACwX,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACkrB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACO,MAAO,CAAC;IAEtE;EAAC;IAAA7pB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMuV,KAAK,EAAG;MAEb,IAAI,CAACP,EAAE,GAAGO,KAAK,CAACP,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGM,KAAK,CAACN,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;MAClB,IAAI,CAACO,MAAM,GAAGF,KAAK,CAACE,MAAM;MAE1B,IAAI,CAACL,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAA4wB,sBAAuB7a,CAAC,EAAEwC,KAAK,GAAG,IAAI,CAAC6X,MAAM,EAAED,MAAM,GAAG,IAAI,EAAG;MAE9D;;MAEA,IAAMvR,EAAE,GAAG7I,CAAC,CAACyF,QAAQ;MACrB,IAAM4P,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;MACjD,IAAM2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,CAAC,CAAE;MACjD,IAAM8M,GAAG,GAAG9M,EAAE,CAAE,CAAC,CAAE;QAAE+M,GAAG,GAAG/M,EAAE,CAAE,CAAC,CAAE;QAAEgN,GAAG,GAAGhN,EAAE,CAAE,EAAE,CAAE;MAElD,QAASrG,KAAK;QAEb,KAAK,KAAK;UAET,IAAI,CAACqX,EAAE,GAAG5a,IAAI,CAACqwB,IAAI,CAAE1vB,KAAK,CAAE2V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAKtW,IAAI,CAAC6B,GAAG,CAAEyU,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACqE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAE,CAAEmP,GAAG,EAAEG,GAAI,CAAC;YAClC,IAAI,CAACiE,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAE,CAAE+O,GAAG,EAAED,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAEqP,GAAG,EAAEH,GAAI,CAAC;YAChC,IAAI,CAACqE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAG3a,IAAI,CAACqwB,IAAI,CAAE,CAAE1vB,KAAK,CAAE8V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAKzW,IAAI,CAAC6B,GAAG,CAAE4U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACmE,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAEgP,GAAG,EAAEM,GAAI,CAAC;YAChC,IAAI,CAACiE,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAEiP,GAAG,EAAEC,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACoE,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAE,CAAEoP,GAAG,EAAEN,GAAI,CAAC;YAClC,IAAI,CAACyE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAG3a,IAAI,CAACqwB,IAAI,CAAE1vB,KAAK,CAAEgW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAK3W,IAAI,CAAC6B,GAAG,CAAE8U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACiE,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAE,CAAEoP,GAAG,EAAEE,GAAI,CAAC;YAClC,IAAI,CAACiE,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAE,CAAE+O,GAAG,EAAEG,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACoE,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAEiP,GAAG,EAAEH,GAAI,CAAC;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACwE,EAAE,GAAG5a,IAAI,CAACqwB,IAAI,CAAE,CAAE1vB,KAAK,CAAE+V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAK1W,IAAI,CAAC6B,GAAG,CAAE6U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACiE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAEqP,GAAG,EAAEC,GAAI,CAAC;YAChC,IAAI,CAACiE,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAEiP,GAAG,EAAEH,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG,CAAC;YACX,IAAI,CAACE,EAAE,GAAG7a,IAAI,CAACsH,KAAK,CAAE,CAAE+O,GAAG,EAAEG,GAAI,CAAC;UAEnC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACqE,EAAE,GAAG7a,IAAI,CAACqwB,IAAI,CAAE1vB,KAAK,CAAE4V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAKvW,IAAI,CAAC6B,GAAG,CAAE0U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACoE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAE,CAAEmP,GAAG,EAAED,GAAI,CAAC;YAClC,IAAI,CAACoE,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAE,CAAEoP,GAAG,EAAEN,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAEgP,GAAG,EAAEM,GAAI,CAAC;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACiE,EAAE,GAAG7a,IAAI,CAACqwB,IAAI,CAAE,CAAE1vB,KAAK,CAAE0V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAKrW,IAAI,CAAC6B,GAAG,CAAEwU,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACsE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAEqP,GAAG,EAAEH,GAAI,CAAC;YAChC,IAAI,CAACoE,EAAE,GAAG5a,IAAI,CAACsH,KAAK,CAAEgP,GAAG,EAAEF,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG3a,IAAI,CAACsH,KAAK,CAAE,CAAEmP,GAAG,EAAEG,GAAI,CAAC;YAClC,IAAI,CAACgE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED;UAECzW,OAAO,CAACC,IAAI,CAAE,sEAAsE,GAAGb,KAAM,CAAC;MAEhG;MAEA,IAAI,CAAC6X,MAAM,GAAG7X,KAAK;MAEnB,IAAK4X,MAAM,KAAK,IAAI,EAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAslC,kBAAmBjtB,CAAC,EAAEE,KAAK,EAAE4X,MAAM,EAAG;MAErC4U,OAAO,CAACtD,0BAA0B,CAAEppB,CAAE,CAAC;MAEvC,OAAO,IAAI,CAACuY,qBAAqB,CAAEmU,OAAO,EAAExsB,KAAK,EAAE4X,MAAO,CAAC;IAE5D;EAAC;IAAA5pB,GAAA;IAAAvG,KAAA,EAED,SAAAulC,eAAgBvjC,CAAC,EAAEuW,KAAK,GAAG,IAAI,CAAC6X,MAAM,EAAG;MAExC,OAAO,IAAI,CAAClX,GAAG,CAAElX,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAC,EAAEnS,KAAM,CAAC;IAExC;EAAC;IAAAhS,GAAA;IAAAvG,KAAA,EAED,SAAAwlC,QAASC,QAAQ,EAAG;MAEnB;;MAEAT,aAAa,CAAC/U,YAAY,CAAE,IAAK,CAAC;MAElC,OAAO,IAAI,CAACqV,iBAAiB,CAAEN,aAAa,EAAES,QAAS,CAAC;IAEzD;EAAC;IAAAl/B,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ6S,KAAK,EAAG;MAEf,OAASA,KAAK,CAACP,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQO,KAAK,CAACN,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMM,KAAK,CAACL,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMK,KAAK,CAACE,MAAM,KAAK,IAAI,CAACA,MAAQ;IAE5H;EAAC;IAAA7pB,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAG;MAElB,IAAI,CAAC+a,EAAE,GAAG/a,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACgb,EAAE,GAAGhb,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACib,EAAE,GAAGjb,KAAK,CAAE,CAAC,CAAE;MACpB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAK3N,SAAS,EAAG,IAAI,CAACmpB,MAAM,GAAGxb,KAAK,CAAE,CAAC,CAAE;MAExD,IAAI,CAACmb,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAxpB,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACoS,EAAE;MACzB/a,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACqS,EAAE;MAC7Bhb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACsS,EAAE;MAC7Bjb,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC6S,MAAM;MAEjC,OAAOxb,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAA6yB,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAA+vB,kBAAA,EAAoB,CAAC;EAAC;IAAAxpB,GAAA,EAAA2+B,iBAAA;IAAAllC,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAEtB,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAA2nB,SAAA;QAAA,kBAAAA,SAAA,CAAAtgC,IAAA,GAAAsgC,SAAA,CAAAjiC,IAAA;UAAA;YAAAiiC,SAAA,CAAAjiC,IAAA;YAEC,OAAM,IAAI,CAACksB,EAAE;UAAA;YAAA+V,SAAA,CAAAjiC,IAAA;YACb,OAAM,IAAI,CAACmsB,EAAE;UAAA;YAAA8V,SAAA,CAAAjiC,IAAA;YACb,OAAM,IAAI,CAACosB,EAAE;UAAA;YAAA6V,SAAA,CAAAjiC,IAAA;YACb,OAAM,IAAI,CAAC2sB,MAAM;UAAA;UAAA;YAAA,OAAAsV,SAAA,CAAAngC,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEjB;EAAA;EAAA,OAAAilC,KAAA;AAAA,EAPE/kC,MAAM,CAACE,QAAQ;AAWnB6kC,KAAK,CAACE,aAAa,GAAG,KAAK;AAAC,IAEtBQ,MAAM,GAAAt+B,OAAA,CAAAs+B,MAAA;EAEX,SAAAA,OAAA,EAAc;IAAA5/B,eAAA,OAAA4/B,MAAA;IAEb,IAAI,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC;EAElB;EAACp/B,YAAA,CAAAm/B,MAAA;IAAAp/B,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK8P,OAAO,EAAG;MAEd,IAAI,CAAC4c,IAAI,GAAG,CAAE,CAAC,IAAI5c,OAAO,GAAG,CAAC,MAAO,CAAC;IAEvC;EAAC;IAAAziB,GAAA;IAAAvG,KAAA,EAED,SAAA6lC,OAAQ7c,OAAO,EAAG;MAEjB,IAAI,CAAC4c,IAAI,IAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAAziB,GAAA;IAAAvG,KAAA,EAED,SAAA8lC,UAAA,EAAY;MAEX,IAAI,CAACF,IAAI,GAAG,UAAU,GAAG,CAAC;IAE3B;EAAC;IAAAr/B,GAAA;IAAAvG,KAAA,EAED,SAAA+lC,OAAQ/c,OAAO,EAAG;MAEjB,IAAI,CAAC4c,IAAI,IAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAAziB,GAAA;IAAAvG,KAAA,EAED,SAAAgmC,QAAShd,OAAO,EAAG;MAElB,IAAI,CAAC4c,IAAI,IAAI,EAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC,CAAE;IAEpC;EAAC;IAAAziB,GAAA;IAAAvG,KAAA,EAED,SAAAimC,WAAA,EAAa;MAEZ,IAAI,CAACL,IAAI,GAAG,CAAC;IAEd;EAAC;IAAAr/B,GAAA;IAAAvG,KAAA,EAED,SAAA2lB,KAAMugB,MAAM,EAAG;MAEd,OAAO,CAAE,IAAI,CAACN,IAAI,GAAGM,MAAM,CAACN,IAAI,MAAO,CAAC;IAEzC;EAAC;IAAAr/B,GAAA;IAAAvG,KAAA,EAED,SAAAmmC,UAAWnd,OAAO,EAAG;MAEpB,OAAO,CAAE,IAAI,CAAC4c,IAAI,IAAK,CAAC,IAAI5c,OAAO,GAAG,CAAC,CAAE,MAAO,CAAC;IAElD;EAAC;EAAA,OAAA2c,MAAA;AAAA;AAIF,IAAIS,WAAW,GAAG,CAAC;AAEnB,IAAMC,KAAK,GAAG,aAAc,IAAIjS,OAAO,CAAC,CAAC;AACzC,IAAMkS,GAAG,GAAG,aAAc,IAAI9W,UAAU,CAAC,CAAC;AAC1C,IAAM+W,KAAK,GAAG,aAAc,IAAI1G,OAAO,CAAC,CAAC;AACzC,IAAM2G,OAAO,GAAG,aAAc,IAAIpS,OAAO,CAAC,CAAC;AAE3C,IAAMqS,WAAW,GAAG,aAAc,IAAIrS,OAAO,CAAC,CAAC;AAC/C,IAAMsS,QAAQ,GAAG,aAAc,IAAItS,OAAO,CAAC,CAAC;AAC5C,IAAMuS,aAAa,GAAG,aAAc,IAAInX,UAAU,CAAC,CAAC;AAEpD,IAAMoX,MAAM,GAAG,aAAc,IAAIxS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,IAAMyS,MAAM,GAAG,aAAc,IAAIzS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,IAAM0S,MAAM,GAAG,aAAc,IAAI1S,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAEnD,IAAM2S,WAAW,GAAG;EAAE5lC,IAAI,EAAE;AAAQ,CAAC;AACrC,IAAM6lC,aAAa,GAAG;EAAE7lC,IAAI,EAAE;AAAU,CAAC;AAAC,IAEpC8lC,QAAQ,GAAA5/B,OAAA,CAAA4/B,QAAA,0BAAAC,iBAAA;EAAApf,SAAA,CAAAmf,QAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAAnf,YAAA,CAAAif,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,OAAA;IAAArhC,eAAA,OAAAkhC,QAAA;IAEbG,OAAA,GAAAD,OAAA,CAAA9lC,IAAA;IAEA+lC,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtB3nC,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAue,OAAA,GAAQ,IAAI,EAAE;MAAEpnC,KAAK,EAAEomC,WAAW;IAAI,CAAE,CAAC;IAE9DgB,OAAA,CAAK3xB,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1BiyB,OAAA,CAAK1iC,IAAI,GAAG,EAAE;IACd0iC,OAAA,CAAKjmC,IAAI,GAAG,UAAU;IAEtBimC,OAAA,CAAKE,MAAM,GAAG,IAAI;IAClBF,OAAA,CAAK1N,QAAQ,GAAG,EAAE;IAElB0N,OAAA,CAAKtF,EAAE,GAAGmF,QAAQ,CAACM,UAAU,CAAC7sB,KAAK,CAAC,CAAC;IAErC,IAAM+e,QAAQ,GAAG,IAAIrF,OAAO,CAAC,CAAC;IAC9B,IAAMxS,QAAQ,GAAG,IAAIqjB,KAAK,CAAC,CAAC;IAC5B,IAAMjV,UAAU,GAAG,IAAIR,UAAU,CAAC,CAAC;IACnC,IAAMzN,KAAK,GAAG,IAAIqS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEpC,SAASoT,gBAAgBA,CAAA,EAAG;MAE3BxX,UAAU,CAACC,YAAY,CAAErO,QAAQ,EAAE,KAAM,CAAC;IAE3C;IAEA,SAAS6lB,kBAAkBA,CAAA,EAAG;MAE7B7lB,QAAQ,CAAC0jB,iBAAiB,CAAEtV,UAAU,EAAE/oB,SAAS,EAAE,KAAM,CAAC;IAE3D;IAEA2a,QAAQ,CAACiR,SAAS,CAAE2U,gBAAiB,CAAC;IACtCxX,UAAU,CAAC6C,SAAS,CAAE4U,kBAAmB,CAAC;IAE1C/nC,MAAM,CAACgoC,gBAAgB,CAAA7e,sBAAA,CAAAue,OAAA,GAAQ;MAC9B3N,QAAQ,EAAE;QACT94B,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEy5B;MACR,CAAC;MACD7X,QAAQ,EAAE;QACTjhB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE4hB;MACR,CAAC;MACDoO,UAAU,EAAE;QACXrvB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEgwB;MACR,CAAC;MACDjO,KAAK,EAAE;QACNphB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE+hB;MACR,CAAC;MACD4lB,eAAe,EAAE;QAChB3nC,KAAK,EAAE,IAAI6/B,OAAO,CAAC;MACpB,CAAC;MACD+H,YAAY,EAAE;QACb5nC,KAAK,EAAE,IAAIie,OAAO,CAAC;MACpB;IACD,CAAE,CAAC;IAEHmpB,OAAA,CAAK9kB,MAAM,GAAG,IAAIud,OAAO,CAAC,CAAC;IAC3BuH,OAAA,CAAKzR,WAAW,GAAG,IAAIkK,OAAO,CAAC,CAAC;IAEhCuH,OAAA,CAAKje,gBAAgB,GAAG8d,QAAQ,CAACY,0BAA0B;IAC3DT,OAAA,CAAKU,sBAAsB,GAAG,KAAK;IAEnCV,OAAA,CAAKW,qBAAqB,GAAGd,QAAQ,CAACe,gCAAgC,CAAC,CAAC;;IAExEZ,OAAA,CAAKlB,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAC1ByB,OAAA,CAAKa,OAAO,GAAG,IAAI;IAEnBb,OAAA,CAAKc,UAAU,GAAG,KAAK;IACvBd,OAAA,CAAKe,aAAa,GAAG,KAAK;IAE1Bf,OAAA,CAAKgB,aAAa,GAAG,IAAI;IACzBhB,OAAA,CAAKiB,WAAW,GAAG,CAAC;IAEpBjB,OAAA,CAAKkB,UAAU,GAAG,EAAE;IAEpBlB,OAAA,CAAK5d,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAA4d,OAAA;EAEpB;EAAC5gC,YAAA,CAAAygC,QAAA;IAAA1gC,GAAA;IAAAvG,KAAA,EAED,SAAAuoC,eAAA,CAAgB,0DAA2D,CAAC;EAAC;IAAAhiC,GAAA;IAAAvG,KAAA,EAE7E,SAAAwoC,cAAA,CAAe,0DAA2D,CAAC;EAAC;IAAAjiC,GAAA;IAAAvG,KAAA,EAE5E,SAAA+qB,aAAczI,MAAM,EAAG;MAEtB,IAAK,IAAI,CAAC6G,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAI,CAACtH,MAAM,CAAChD,WAAW,CAAEgD,MAAO,CAAC;MAEjC,IAAI,CAACA,MAAM,CAAC0hB,SAAS,CAAE,IAAI,CAACvK,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAACjO,KAAM,CAAC;IAEpE;EAAC;IAAAxb,GAAA;IAAAvG,KAAA,EAED,SAAAy0B,gBAAiBpc,CAAC,EAAG;MAEpB,IAAI,CAAC2X,UAAU,CAAC1Q,WAAW,CAAEjH,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA9R,GAAA;IAAAvG,KAAA,EAED,SAAAyoC,yBAA0B/X,IAAI,EAAErU,KAAK,EAAG;MAEvC;;MAEA,IAAI,CAAC2T,UAAU,CAACS,gBAAgB,CAAEC,IAAI,EAAErU,KAAM,CAAC;IAEhD;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAA0oC,qBAAsBxY,KAAK,EAAG;MAE7B,IAAI,CAACF,UAAU,CAACC,YAAY,CAAEC,KAAK,EAAE,IAAK,CAAC;IAE5C;EAAC;IAAA3pB,GAAA;IAAAvG,KAAA,EAED,SAAA2oC,sBAAuB5yB,CAAC,EAAG;MAE1B;;MAEA,IAAI,CAACia,UAAU,CAACY,qBAAqB,CAAE7a,CAAE,CAAC;IAE3C;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAA4oC,0BAA2BvwB,CAAC,EAAG;MAE9B;;MAEA,IAAI,CAAC2X,UAAU,CAACrV,IAAI,CAAEtC,CAAE,CAAC;IAE1B;EAAC;IAAA9R,GAAA;IAAAvG,KAAA,EAED,SAAA6oC,aAAcnY,IAAI,EAAErU,KAAK,EAAG;MAE3B;MACA;;MAEAiqB,GAAG,CAAC7V,gBAAgB,CAAEC,IAAI,EAAErU,KAAM,CAAC;MAEnC,IAAI,CAAC2T,UAAU,CAAC7U,QAAQ,CAAEmrB,GAAI,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA//B,GAAA;IAAAvG,KAAA,EAED,SAAA8oC,kBAAmBpY,IAAI,EAAErU,KAAK,EAAG;MAEhC;MACA;MACA;;MAEAiqB,GAAG,CAAC7V,gBAAgB,CAAEC,IAAI,EAAErU,KAAM,CAAC;MAEnC,IAAI,CAAC2T,UAAU,CAAC1Q,WAAW,CAAEgnB,GAAI,CAAC;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA//B,GAAA;IAAAvG,KAAA,EAED,SAAA+oC,QAAS1sB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACwsB,YAAY,CAAEjC,MAAM,EAAEvqB,KAAM,CAAC;IAE1C;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAAgpC,QAAS3sB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACwsB,YAAY,CAAEhC,MAAM,EAAExqB,KAAM,CAAC;IAE1C;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAAipC,QAAS5sB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACwsB,YAAY,CAAE/B,MAAM,EAAEzqB,KAAM,CAAC;IAE1C;EAAC;IAAA9V,GAAA;IAAAvG,KAAA,EAED,SAAAkpC,gBAAiBxY,IAAI,EAAEyY,QAAQ,EAAG;MAEjC;MACA;;MAEA9C,KAAK,CAAC1rB,IAAI,CAAE+V,IAAK,CAAC,CAAC+D,eAAe,CAAE,IAAI,CAACzE,UAAW,CAAC;MAErD,IAAI,CAACyJ,QAAQ,CAAC7e,GAAG,CAAEyrB,KAAK,CAACjrB,cAAc,CAAE+tB,QAAS,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAopC,WAAYD,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEtC,MAAM,EAAEuC,QAAS,CAAC;IAEhD;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAqpC,WAAYF,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAErC,MAAM,EAAEsC,QAAS,CAAC;IAEhD;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAspC,WAAYH,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEpC,MAAM,EAAEqC,QAAS,CAAC;IAEhD;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAupC,aAAcvQ,MAAM,EAAG;MAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAOF,MAAM,CAACjO,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;IAE/C;EAAC;IAAApvB,GAAA;IAAAvG,KAAA,EAED,SAAAwpC,aAAcxQ,MAAM,EAAG;MAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAOF,MAAM,CAACjO,YAAY,CAAEwb,KAAK,CAAC5rB,IAAI,CAAE,IAAI,CAACgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAE,CAAC;IAEtE;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAAo9B,OAAQnnB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEjB;;MAEA,IAAKzU,CAAC,CAACqe,SAAS,EAAG;QAElBkS,OAAO,CAAC7rB,IAAI,CAAE1E,CAAE,CAAC;MAElB,CAAC,MAAM;QAENuwB,OAAO,CAACttB,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC;MAEvB;MAEA,IAAM4c,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI,CAACpO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErCuN,WAAW,CAACvP,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;MAErD,IAAK,IAAI,CAAC8T,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAG;QAEpCnD,KAAK,CAACnJ,MAAM,CAAEqJ,WAAW,EAAED,OAAO,EAAE,IAAI,CAAC1E,EAAG,CAAC;MAE9C,CAAC,MAAM;QAENyE,KAAK,CAACnJ,MAAM,CAAEoJ,OAAO,EAAEC,WAAW,EAAE,IAAI,CAAC3E,EAAG,CAAC;MAE9C;MAEA,IAAI,CAAC9R,UAAU,CAACY,qBAAqB,CAAE2V,KAAM,CAAC;MAE9C,IAAKe,MAAM,EAAG;QAEbf,KAAK,CAAC9F,eAAe,CAAE6G,MAAM,CAAC3R,WAAY,CAAC;QAC3C2Q,GAAG,CAAC1V,qBAAqB,CAAE2V,KAAM,CAAC;QAClC,IAAI,CAACvW,UAAU,CAAC1Q,WAAW,CAAEgnB,GAAG,CAAC1lB,MAAM,CAAC,CAAE,CAAC;MAE5C;IAED;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAK2d,MAAM,EAAG;MAEb,IAAKoR,SAAS,CAACrlC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE7C,IAAI,CAAC2a,GAAG,CAAE+uB,SAAS,CAAE1pC,CAAC,CAAG,CAAC;QAE3B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAKs4B,MAAM,KAAK,IAAI,EAAG;QAEtBpf,OAAO,CAACywB,KAAK,CAAE,kEAAkE,EAAErR,MAAO,CAAC;QAC3F,OAAO,IAAI;MAEZ;MAEA,IAAKA,MAAM,IAAIA,MAAM,CAAC8O,UAAU,EAAG;QAElC,IAAK9O,MAAM,CAAC+O,MAAM,KAAK,IAAI,EAAG;UAE7B/O,MAAM,CAAC+O,MAAM,CAACuC,MAAM,CAAEtR,MAAO,CAAC;QAE/B;QAEAA,MAAM,CAAC+O,MAAM,GAAG,IAAI;QACpB,IAAI,CAAC5N,QAAQ,CAACz1B,IAAI,CAAEs0B,MAAO,CAAC;QAE5BA,MAAM,CAAC7jB,aAAa,CAAEqyB,WAAY,CAAC;MAEpC,CAAC,MAAM;QAEN5tB,OAAO,CAACywB,KAAK,CAAE,+DAA+D,EAAErR,MAAO,CAAC;MAEzF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAA6pC,OAAQtR,MAAM,EAAG;MAEhB,IAAKoR,SAAS,CAACrlC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE7C,IAAI,CAAC4pC,MAAM,CAAEF,SAAS,CAAE1pC,CAAC,CAAG,CAAC;QAE9B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAMuU,KAAK,GAAG,IAAI,CAACklB,QAAQ,CAACtlB,OAAO,CAAEmkB,MAAO,CAAC;MAE7C,IAAK/jB,KAAK,KAAK,CAAE,CAAC,EAAG;QAEpB+jB,MAAM,CAAC+O,MAAM,GAAG,IAAI;QACpB,IAAI,CAAC5N,QAAQ,CAACjlB,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;QAEhC+jB,MAAM,CAAC7jB,aAAa,CAAEsyB,aAAc,CAAC;MAEtC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAzgC,GAAA;IAAAvG,KAAA,EAED,SAAA8pC,iBAAA,EAAmB;MAElB,IAAMxC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBA,MAAM,CAACuC,MAAM,CAAE,IAAK,CAAC;MAEtB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtjC,GAAA;IAAAvG,KAAA,EAED,SAAA+pC,MAAA,EAAQ;MAEP,OAAO,IAAI,CAACF,MAAM,CAAAG,KAAA,CAAX,IAAI,EAAAC,kBAAA,CAAa,IAAI,CAACvQ,QAAQ,CAAC,CAAC;IAExC;EAAC;IAAAnzB,GAAA;IAAAvG,KAAA,EAED,SAAAkqC,OAAQ3R,MAAM,EAAG;MAEhB;;MAEA;;MAEA,IAAI,CAACW,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErCqN,KAAK,CAAC5rB,IAAI,CAAE,IAAI,CAACgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAEvC,IAAK2X,MAAM,CAAC+O,MAAM,KAAK,IAAI,EAAG;QAE7B/O,MAAM,CAAC+O,MAAM,CAACpO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;QAE9CqN,KAAK,CAACprB,QAAQ,CAAEod,MAAM,CAAC+O,MAAM,CAAC3R,WAAY,CAAC;MAE5C;MAEA4C,MAAM,CAACxN,YAAY,CAAEwb,KAAM,CAAC;MAE5B,IAAI,CAAC3rB,GAAG,CAAE2d,MAAO,CAAC;MAElBA,MAAM,CAACW,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA3yB,GAAA;IAAAvG,KAAA,EAED,SAAAmqC,cAAeC,EAAE,EAAG;MAEnB,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAG,CAAC;IAE5C;EAAC;IAAA7jC,GAAA;IAAAvG,KAAA,EAED,SAAAsqC,gBAAiB5lC,IAAI,EAAG;MAEvB,OAAO,IAAI,CAAC2lC,mBAAmB,CAAE,MAAM,EAAE3lC,IAAK,CAAC;IAEhD;EAAC;IAAA6B,GAAA;IAAAvG,KAAA,EAED,SAAAqqC,oBAAqB3lC,IAAI,EAAE1E,KAAK,EAAG;MAElC,IAAK,IAAI,CAAE0E,IAAI,CAAE,KAAK1E,KAAK,EAAG,OAAO,IAAI;MAEzC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAExD,IAAMsqC,KAAK,GAAG,IAAI,CAAC7Q,QAAQ,CAAEz5B,CAAC,CAAE;QAChC,IAAMs4B,MAAM,GAAGgS,KAAK,CAACF,mBAAmB,CAAE3lC,IAAI,EAAE1E,KAAM,CAAC;QAEvD,IAAKu4B,MAAM,KAAKtxB,SAAS,EAAG;UAE3B,OAAOsxB,MAAM;QAEd;MAED;MAEA,OAAOtxB,SAAS;IAEjB;EAAC;IAAAV,GAAA;IAAAvG,KAAA,EAED,SAAAwqC,qBAAsB9lC,IAAI,EAAE1E,KAAK,EAAG;MAEnC,IAAIyqC,MAAM,GAAG,EAAE;MAEf,IAAK,IAAI,CAAE/lC,IAAI,CAAE,KAAK1E,KAAK,EAAGyqC,MAAM,CAACxmC,IAAI,CAAE,IAAK,CAAC;MAEjD,KAAM,IAAIhE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAExD,IAAMyqC,WAAW,GAAG,IAAI,CAAChR,QAAQ,CAAEz5B,CAAC,CAAE,CAACuqC,oBAAoB,CAAE9lC,IAAI,EAAE1E,KAAM,CAAC;QAE1E,IAAK0qC,WAAW,CAACpmC,MAAM,GAAG,CAAC,EAAG;UAE7BmmC,MAAM,GAAGA,MAAM,CAAC9lB,MAAM,CAAE+lB,WAAY,CAAC;QAEtC;MAED;MAEA,OAAOD,MAAM;IAEd;EAAC;IAAAlkC,GAAA;IAAAvG,KAAA,EAED,SAAA2qC,iBAAkBxkC,MAAM,EAAG;MAE1B,IAAI,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAO/yB,MAAM,CAAC+wB,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;IAExD;EAAC;IAAApvB,GAAA;IAAAvG,KAAA,EAED,SAAA4qC,mBAAoBzkC,MAAM,EAAG;MAE5B,IAAI,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAEyC,WAAW,EAAEtgC,MAAM,EAAEugC,QAAS,CAAC;MAE3D,OAAOvgC,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA6qC,cAAe1kC,MAAM,EAAG;MAEvB,IAAI,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAEyC,WAAW,EAAEE,aAAa,EAAExgC,MAAO,CAAC;MAEhE,OAAOA,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA8qC,kBAAmB3kC,MAAM,EAAG;MAE3B,IAAI,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAM35B,CAAC,GAAG,IAAI,CAACo2B,WAAW,CAACna,QAAQ;MAEnC,OAAOrV,MAAM,CAAC+S,GAAG,CAAE3Z,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,EAAE,CAAG,CAAC,CAACsa,SAAS,CAAC,CAAC;IAEzD;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAAA,CAAS,6BAA8B,CAAC;EAAC;IAAAxkC,GAAA;IAAAvG,KAAA,EAEzC,SAAAgrC,SAAUlY,QAAQ,EAAG;MAEpBA,QAAQ,CAAE,IAAK,CAAC;MAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEnDy5B,QAAQ,CAAEz5B,CAAC,CAAE,CAAC+qC,QAAQ,CAAElY,QAAS,CAAC;MAEnC;IAED;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAAirC,gBAAiBnY,QAAQ,EAAG;MAE3B,IAAK,IAAI,CAACmV,OAAO,KAAK,KAAK,EAAG;MAE9BnV,QAAQ,CAAE,IAAK,CAAC;MAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEnDy5B,QAAQ,CAAEz5B,CAAC,CAAE,CAACgrC,eAAe,CAAEnY,QAAS,CAAC;MAE1C;IAED;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAAkrC,kBAAmBpY,QAAQ,EAAG;MAE7B,IAAMwU,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBxU,QAAQ,CAAEwU,MAAO,CAAC;QAElBA,MAAM,CAAC4D,iBAAiB,CAAEpY,QAAS,CAAC;MAErC;IAED;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAA4pB,aAAA,EAAe;MAEd,IAAI,CAACtH,MAAM,CAACof,OAAO,CAAE,IAAI,CAACjI,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAACjO,KAAM,CAAC;MAEjE,IAAI,CAAC+lB,sBAAsB,GAAG,IAAI;IAEnC;EAAC;IAAAvhC,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1B,IAAK,IAAI,CAACjiB,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAK,IAAI,CAACke,sBAAsB,IAAIsD,KAAK,EAAG;QAE3C,IAAK,IAAI,CAAC9D,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAAC3R,WAAW,CAAChb,IAAI,CAAE,IAAI,CAAC2H,MAAO,CAAC;QAErC,CAAC,MAAM;UAEN,IAAI,CAACqT,WAAW,CAACtW,gBAAgB,CAAE,IAAI,CAACioB,MAAM,CAAC3R,WAAW,EAAE,IAAI,CAACrT,MAAO,CAAC;QAE1E;QAEA,IAAI,CAACwlB,sBAAsB,GAAG,KAAK;QAEnCsD,KAAK,GAAG,IAAI;MAEb;;MAEA;;MAEA,IAAM1R,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEnD,IAAMsqC,KAAK,GAAG7Q,QAAQ,CAAEz5B,CAAC,CAAE;QAE3B,IAAKsqC,KAAK,CAACxC,qBAAqB,KAAK,IAAI,IAAIqD,KAAK,KAAK,IAAI,EAAG;UAE7Db,KAAK,CAACY,iBAAiB,CAAEC,KAAM,CAAC;QAEjC;MAED;IAED;EAAC;IAAA7kC,GAAA;IAAAvG,KAAA,EAED,SAAAk5B,kBAAmBmS,aAAa,EAAEC,cAAc,EAAG;MAElD,IAAMhE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAK+D,aAAa,KAAK,IAAI,IAAI/D,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACS,qBAAqB,KAAK,IAAI,EAAG;QAEzFT,MAAM,CAACpO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAExC;MAEA,IAAK,IAAI,CAAC/P,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAK,IAAI,CAAC0d,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC3R,WAAW,CAAChb,IAAI,CAAE,IAAI,CAAC2H,MAAO,CAAC;MAErC,CAAC,MAAM;QAEN,IAAI,CAACqT,WAAW,CAACtW,gBAAgB,CAAE,IAAI,CAACioB,MAAM,CAAC3R,WAAW,EAAE,IAAI,CAACrT,MAAO,CAAC;MAE1E;;MAEA;;MAEA,IAAKgpB,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAM5R,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEnD,IAAMsqC,KAAK,GAAG7Q,QAAQ,CAAEz5B,CAAC,CAAE;UAE3B,IAAKsqC,KAAK,CAACxC,qBAAqB,KAAK,IAAI,EAAG;YAE3CwC,KAAK,CAACrR,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;UAEvC;QAED;MAED;IAED;EAAC;IAAA3yB,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd;MACA,IAAMC,YAAY,GAAKD,IAAI,KAAKhgB,SAAS,IAAI,OAAOggB,IAAI,KAAK,QAAU;MAEvE,IAAMG,MAAM,GAAG,CAAC,CAAC;;MAEjB;MACA;MACA;MACA,IAAKF,YAAY,EAAG;QAEnB;QACAD,IAAI,GAAG;UACNskB,UAAU,EAAE,CAAC,CAAC;UACdC,SAAS,EAAE,CAAC,CAAC;UACbvhB,QAAQ,EAAE,CAAC,CAAC;UACZ9C,MAAM,EAAE,CAAC,CAAC;UACVskB,MAAM,EAAE,CAAC,CAAC;UACVC,SAAS,EAAE,CAAC,CAAC;UACbpD,UAAU,EAAE,CAAC,CAAC;UACdqD,KAAK,EAAE,CAAC;QACT,CAAC;QAEDvkB,MAAM,CAAC8C,QAAQ,GAAG;UACjBnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,QAAQ;UACdgpB,SAAS,EAAE;QACZ,CAAC;MAEF;;MAEA;;MAEA,IAAMoO,MAAM,GAAG,CAAC,CAAC;MAEjBA,MAAM,CAAC9iB,IAAI,GAAG,IAAI,CAACA,IAAI;MACvB8iB,MAAM,CAACp3B,IAAI,GAAG,IAAI,CAACA,IAAI;MAEvB,IAAK,IAAI,CAACuD,IAAI,KAAK,EAAE,EAAG6zB,MAAM,CAAC7zB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC/C,IAAK,IAAI,CAACwjC,UAAU,KAAK,IAAI,EAAG3P,MAAM,CAAC2P,UAAU,GAAG,IAAI;MACxD,IAAK,IAAI,CAACC,aAAa,KAAK,IAAI,EAAG5P,MAAM,CAAC4P,aAAa,GAAG,IAAI;MAC9D,IAAK,IAAI,CAACF,OAAO,KAAK,KAAK,EAAG1P,MAAM,CAAC0P,OAAO,GAAG,KAAK;MACpD,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAG7P,MAAM,CAAC6P,aAAa,GAAG,KAAK;MAChE,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAG9P,MAAM,CAAC8P,WAAW,GAAG,IAAI,CAACA,WAAW;MACnE,IAAK3oC,MAAM,CAACuF,IAAI,CAAE,IAAI,CAACukB,QAAS,CAAC,CAACllB,MAAM,GAAG,CAAC,EAAGi0B,MAAM,CAAC/O,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9E+O,MAAM,CAAC2N,MAAM,GAAG,IAAI,CAACA,MAAM,CAACN,IAAI;MAChCrN,MAAM,CAACjW,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC9E,OAAO,CAAC,CAAC;MACrC+a,MAAM,CAACuJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACtkB,OAAO,CAAC,CAAC;MAE7B,IAAK,IAAI,CAAC2L,gBAAgB,KAAK,KAAK,EAAGoP,MAAM,CAACpP,gBAAgB,GAAG,KAAK;;MAEtE;;MAEA,IAAK,IAAI,CAACyiB,eAAe,EAAG;QAE3BrT,MAAM,CAACp3B,IAAI,GAAG,eAAe;QAC7Bo3B,MAAM,CAACnJ,KAAK,GAAG,IAAI,CAACA,KAAK;QACzBmJ,MAAM,CAACsT,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC7kB,MAAM,CAAC,CAAC;QACpD,IAAK,IAAI,CAAC8kB,aAAa,KAAK,IAAI,EAAGvT,MAAM,CAACuT,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC9kB,MAAM,CAAC,CAAC;MAEtF;;MAEA;;MAEA,SAAS+kB,SAASA,CAAEC,OAAO,EAAEC,OAAO,EAAG;QAEtC,IAAKD,OAAO,CAAEC,OAAO,CAACx2B,IAAI,CAAE,KAAKxO,SAAS,EAAG;UAE5C+kC,OAAO,CAAEC,OAAO,CAACx2B,IAAI,CAAE,GAAGw2B,OAAO,CAACjlB,MAAM,CAAEC,IAAK,CAAC;QAEjD;QAEA,OAAOglB,OAAO,CAACx2B,IAAI;MAEpB;MAEA,IAAK,IAAI,CAACy2B,OAAO,EAAG;QAEnB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtB,IAAK,IAAI,CAACA,UAAU,CAACC,OAAO,EAAG;YAE9B7T,MAAM,CAAC4T,UAAU,GAAG,IAAI,CAACA,UAAU,CAACnlB,MAAM,CAAC,CAAC;UAE7C,CAAC,MAAM,IAAK,IAAI,CAACmlB,UAAU,CAACvjB,SAAS,EAAG;YAEvC2P,MAAM,CAAC4T,UAAU,GAAG,IAAI,CAACA,UAAU,CAACnlB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;UAExD;QAED;QAEA,IAAK,IAAI,CAAC42B,WAAW,IAAI,IAAI,CAACA,WAAW,CAACzjB,SAAS,IAAI,IAAI,CAACyjB,WAAW,CAAC3iB,qBAAqB,KAAK,IAAI,EAAG;UAExG6O,MAAM,CAAC8T,WAAW,GAAG,IAAI,CAACA,WAAW,CAACrlB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAE1D;MAED,CAAC,MAAM,IAAK,IAAI,CAAC62B,MAAM,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;QAEzDjU,MAAM,CAACgB,QAAQ,GAAGwS,SAAS,CAAE9kB,IAAI,CAACskB,UAAU,EAAE,IAAI,CAAChS,QAAS,CAAC;QAE7D,IAAMkT,UAAU,GAAG,IAAI,CAAClT,QAAQ,CAACkT,UAAU;QAE3C,IAAKA,UAAU,KAAKxlC,SAAS,IAAIwlC,UAAU,CAAChB,MAAM,KAAKxkC,SAAS,EAAG;UAElE,IAAMwkC,MAAM,GAAGgB,UAAU,CAAChB,MAAM;UAEhC,IAAKnkB,KAAK,CAACC,OAAO,CAAEkkB,MAAO,CAAC,EAAG;YAE9B,KAAM,IAAIxrC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkqC,MAAM,CAACnnC,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;cAEjD,IAAMysC,KAAK,GAAGjB,MAAM,CAAExrC,CAAC,CAAE;cAEzB8rC,SAAS,CAAE9kB,IAAI,CAACwkB,MAAM,EAAEiB,KAAM,CAAC;YAEhC;UAED,CAAC,MAAM;YAENX,SAAS,CAAE9kB,IAAI,CAACwkB,MAAM,EAAEA,MAAO,CAAC;UAEjC;QAED;MAED;MAEA,IAAK,IAAI,CAACkB,aAAa,EAAG;QAEzBpU,MAAM,CAACqU,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC/BrU,MAAM,CAACsU,UAAU,GAAG,IAAI,CAACA,UAAU,CAACrvB,OAAO,CAAC,CAAC;QAE7C,IAAK,IAAI,CAACsvB,QAAQ,KAAK7lC,SAAS,EAAG;UAElC8kC,SAAS,CAAE9kB,IAAI,CAACykB,SAAS,EAAE,IAAI,CAACoB,QAAS,CAAC;UAE1CvU,MAAM,CAACuU,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACr3B,IAAI;QAErC;MAED;MAEA,IAAK,IAAI,CAACs3B,QAAQ,KAAK9lC,SAAS,EAAG;QAElC,IAAKqgB,KAAK,CAACC,OAAO,CAAE,IAAI,CAACwlB,QAAS,CAAC,EAAG;UAErC,IAAMC,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI/sC,GAAC,GAAG,CAAC,EAAEsB,GAAC,GAAG,IAAI,CAACwrC,QAAQ,CAACzoC,MAAM,EAAErE,GAAC,GAAGsB,GAAC,EAAEtB,GAAC,EAAG,EAAG;YAExD+sC,KAAK,CAAC/oC,IAAI,CAAE8nC,SAAS,CAAE9kB,IAAI,CAACukB,SAAS,EAAE,IAAI,CAACuB,QAAQ,CAAE9sC,GAAC,CAAG,CAAE,CAAC;UAE9D;UAEAs4B,MAAM,CAACwU,QAAQ,GAAGC,KAAK;QAExB,CAAC,MAAM;UAENzU,MAAM,CAACwU,QAAQ,GAAGhB,SAAS,CAAE9kB,IAAI,CAACukB,SAAS,EAAE,IAAI,CAACuB,QAAS,CAAC;QAE7D;MAED;;MAEA;;MAEA,IAAK,IAAI,CAACrT,QAAQ,CAACp1B,MAAM,GAAG,CAAC,EAAG;QAE/Bi0B,MAAM,CAACmB,QAAQ,GAAG,EAAE;QAEpB,KAAM,IAAIz5B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACy5B,QAAQ,CAACp1B,MAAM,EAAErE,GAAC,EAAG,EAAG;UAEjDs4B,MAAM,CAACmB,QAAQ,CAACz1B,IAAI,CAAE,IAAI,CAACy1B,QAAQ,CAAEz5B,GAAC,CAAE,CAAC+mB,MAAM,CAAEC,IAAK,CAAC,CAACsR,MAAO,CAAC;QAEjE;MAED;;MAEA;;MAEA,IAAK,IAAI,CAAC+P,UAAU,CAAChkC,MAAM,GAAG,CAAC,EAAG;QAEjCi0B,MAAM,CAAC+P,UAAU,GAAG,EAAE;QAEtB,KAAM,IAAIroC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACqoC,UAAU,CAAChkC,MAAM,EAAErE,GAAC,EAAG,EAAG;UAEnD,IAAMgtC,SAAS,GAAG,IAAI,CAAC3E,UAAU,CAAEroC,GAAC,CAAE;UAEtCs4B,MAAM,CAAC+P,UAAU,CAACrkC,IAAI,CAAE8nC,SAAS,CAAE9kB,IAAI,CAACqhB,UAAU,EAAE2E,SAAU,CAAE,CAAC;QAElE;MAED;MAEA,IAAK/lB,YAAY,EAAG;QAEnB,IAAMqkB,UAAU,GAAG2B,gBAAgB,CAAEjmB,IAAI,CAACskB,UAAW,CAAC;QACtD,IAAMC,SAAS,GAAG0B,gBAAgB,CAAEjmB,IAAI,CAACukB,SAAU,CAAC;QACpD,IAAMvhB,QAAQ,GAAGijB,gBAAgB,CAAEjmB,IAAI,CAACgD,QAAS,CAAC;QAClD,IAAM9C,MAAM,GAAG+lB,gBAAgB,CAAEjmB,IAAI,CAACE,MAAO,CAAC;QAC9C,IAAMskB,OAAM,GAAGyB,gBAAgB,CAAEjmB,IAAI,CAACwkB,MAAO,CAAC;QAC9C,IAAMC,SAAS,GAAGwB,gBAAgB,CAAEjmB,IAAI,CAACykB,SAAU,CAAC;QACpD,IAAMpD,UAAU,GAAG4E,gBAAgB,CAAEjmB,IAAI,CAACqhB,UAAW,CAAC;QACtD,IAAMqD,KAAK,GAAGuB,gBAAgB,CAAEjmB,IAAI,CAAC0kB,KAAM,CAAC;QAE5C,IAAKJ,UAAU,CAACjnC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACmkB,UAAU,GAAGA,UAAU;QAC3D,IAAKC,SAAS,CAAClnC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACokB,SAAS,GAAGA,SAAS;QACxD,IAAKvhB,QAAQ,CAAC3lB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC6C,QAAQ,GAAGA,QAAQ;QACrD,IAAK9C,MAAM,CAAC7iB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACD,MAAM,GAAGA,MAAM;QAC/C,IAAKskB,OAAM,CAACnnC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACqkB,MAAM,GAAGA,OAAM;QAC/C,IAAKC,SAAS,CAACpnC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACskB,SAAS,GAAGA,SAAS;QACxD,IAAKpD,UAAU,CAAChkC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACkhB,UAAU,GAAGA,UAAU;QAC3D,IAAKqD,KAAK,CAACrnC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACukB,KAAK,GAAGA,KAAK;MAE7C;MAEAvkB,MAAM,CAACmR,MAAM,GAAGA,MAAM;MAEtB,OAAOnR,MAAM;;MAEb;MACA;MACA;MACA,SAAS8lB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAMlrC,MAAM,GAAG,EAAE;QACjB,KAAM,IAAMsE,GAAG,IAAI4mC,KAAK,EAAG;UAE1B,IAAMxmB,IAAI,GAAGwmB,KAAK,CAAE5mC,GAAG,CAAE;UACzB,OAAOogB,IAAI,CAACuD,QAAQ;UACpBjoB,MAAM,CAACgC,IAAI,CAAE0iB,IAAK,CAAC;QAEpB;QAEA,OAAO1kB,MAAM;MAEd;IAED;EAAC;IAAAsE,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAO0yB,SAAS,EAAG;MAElB,OAAO,IAAI,IAAI,CAAC3oC,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAI,EAAEyyB,SAAU,CAAC;IAEtD;EAAC;IAAA7mC,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,GAAG,IAAI,EAAG;MAEhC,IAAI,CAAC1oC,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;MAEvB,IAAI,CAACo9B,EAAE,CAACnnB,IAAI,CAAEmO,MAAM,CAACgZ,EAAG,CAAC;MAEzB,IAAI,CAACrI,QAAQ,CAAC9e,IAAI,CAAEmO,MAAM,CAAC2Q,QAAS,CAAC;MACrC,IAAI,CAAC7X,QAAQ,CAACrJ,KAAK,GAAGuQ,MAAM,CAAClH,QAAQ,CAACrJ,KAAK;MAC3C,IAAI,CAACyX,UAAU,CAACrV,IAAI,CAAEmO,MAAM,CAACkH,UAAW,CAAC;MACzC,IAAI,CAACjO,KAAK,CAACpH,IAAI,CAAEmO,MAAM,CAAC/G,KAAM,CAAC;MAE/B,IAAI,CAACO,MAAM,CAAC3H,IAAI,CAAEmO,MAAM,CAACxG,MAAO,CAAC;MACjC,IAAI,CAACqT,WAAW,CAAChb,IAAI,CAAEmO,MAAM,CAAC6M,WAAY,CAAC;MAE3C,IAAI,CAACxM,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAC/C,IAAI,CAAC2e,sBAAsB,GAAGhf,MAAM,CAACgf,sBAAsB;MAE3D,IAAI,CAACC,qBAAqB,GAAGjf,MAAM,CAACif,qBAAqB;MAEzD,IAAI,CAAC7B,MAAM,CAACN,IAAI,GAAG9c,MAAM,CAACod,MAAM,CAACN,IAAI;MACrC,IAAI,CAACqC,OAAO,GAAGnf,MAAM,CAACmf,OAAO;MAE7B,IAAI,CAACC,UAAU,GAAGpf,MAAM,CAACof,UAAU;MACnC,IAAI,CAACC,aAAa,GAAGrf,MAAM,CAACqf,aAAa;MAEzC,IAAI,CAACC,aAAa,GAAGtf,MAAM,CAACsf,aAAa;MACzC,IAAI,CAACC,WAAW,GAAGvf,MAAM,CAACuf,WAAW;MAErC,IAAI,CAACC,UAAU,GAAGxf,MAAM,CAACwf,UAAU,CAAChjC,KAAK,CAAC,CAAC;MAE3C,IAAI,CAACkkB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,IAAK4jB,SAAS,KAAK,IAAI,EAAG;QAEzB,KAAM,IAAIntC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6oB,MAAM,CAAC4Q,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,EAAG,EAAG;UAEnD,IAAMsqC,KAAK,GAAGzhB,MAAM,CAAC4Q,QAAQ,CAAEz5B,CAAC,CAAE;UAClC,IAAI,CAAC2a,GAAG,CAAE2vB,KAAK,CAAC7vB,KAAK,CAAC,CAAE,CAAC;QAE1B;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAusB,QAAA;AAAA,EA55BqBlzB,eAAe;AAg6BtCkzB,QAAQ,CAACM,UAAU,GAAG,aAAc,IAAInT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAC1D6S,QAAQ,CAACY,0BAA0B,GAAG,IAAI;AAC1CZ,QAAQ,CAACe,gCAAgC,GAAG,IAAI;AAEhD,IAAMqF,KAAK,GAAG,aAAc,IAAIjZ,OAAO,CAAC,CAAC;AACzC,IAAMkZ,KAAK,GAAG,aAAc,IAAIlZ,OAAO,CAAC,CAAC;AACzC,IAAMmZ,KAAK,GAAG,aAAc,IAAInZ,OAAO,CAAC,CAAC;AACzC,IAAMoZ,KAAK,GAAG,aAAc,IAAIpZ,OAAO,CAAC,CAAC;AAEzC,IAAMqZ,IAAI,GAAG,aAAc,IAAIrZ,OAAO,CAAC,CAAC;AACxC,IAAMsZ,IAAI,GAAG,aAAc,IAAItZ,OAAO,CAAC,CAAC;AACxC,IAAMuZ,IAAI,GAAG,aAAc,IAAIvZ,OAAO,CAAC,CAAC;AACxC,IAAMwZ,IAAI,GAAG,aAAc,IAAIxZ,OAAO,CAAC,CAAC;AACxC,IAAMyZ,IAAI,GAAG,aAAc,IAAIzZ,OAAO,CAAC,CAAC;AACxC,IAAM0Z,IAAI,GAAG,aAAc,IAAI1Z,OAAO,CAAC,CAAC;AAExC,IAAI2Z,WAAW,GAAG,KAAK;AAAC,IAElBC,QAAQ,GAAA3mC,OAAA,CAAA2mC,QAAA;EAEb,SAAAA,SAAa7tC,CAAC,GAAG,IAAIi0B,OAAO,CAAC,CAAC,EAAE9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC,EAAE/zB,CAAC,GAAG,IAAI+zB,OAAO,CAAC,CAAC,EAAG;IAAAruB,eAAA,OAAAioC,QAAA;IAEtE,IAAI,CAAC7tC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACmY,CAAC,GAAGA,CAAC;IACV,IAAI,CAACjY,CAAC,GAAGA,CAAC;EAEX;EAACmG,YAAA,CAAAwnC,QAAA;IAAAznC,GAAA;IAAAvG,KAAA,EAkGD,SAAAkZ,IAAK/Y,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;MAEd,IAAI,CAACF,CAAC,CAACwa,IAAI,CAAExa,CAAE,CAAC;MAChB,IAAI,CAACmY,CAAC,CAACqC,IAAI,CAAErC,CAAE,CAAC;MAChB,IAAI,CAACjY,CAAC,CAACsa,IAAI,CAAEta,CAAE,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAiuC,wBAAyB/V,MAAM,EAAEgW,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAE7C,IAAI,CAACjuC,CAAC,CAACwa,IAAI,CAAEud,MAAM,CAAEgW,EAAE,CAAG,CAAC;MAC3B,IAAI,CAAC51B,CAAC,CAACqC,IAAI,CAAEud,MAAM,CAAEiW,EAAE,CAAG,CAAC;MAC3B,IAAI,CAAC9tC,CAAC,CAACsa,IAAI,CAAEud,MAAM,CAAEkW,EAAE,CAAG,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA7nC,GAAA;IAAAvG,KAAA,EAED,SAAAquC,2BAA4B3wB,SAAS,EAAEwwB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAACjuC,CAAC,CAACsd,mBAAmB,CAAEC,SAAS,EAAEwwB,EAAG,CAAC;MAC3C,IAAI,CAAC51B,CAAC,CAACmF,mBAAmB,CAAEC,SAAS,EAAEywB,EAAG,CAAC;MAC3C,IAAI,CAAC9tC,CAAC,CAACod,mBAAmB,CAAEC,SAAS,EAAE0wB,EAAG,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA7nC,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM2f,QAAQ,EAAG;MAEhB,IAAI,CAACn6B,CAAC,CAACwa,IAAI,CAAE2f,QAAQ,CAACn6B,CAAE,CAAC;MACzB,IAAI,CAACmY,CAAC,CAACqC,IAAI,CAAE2f,QAAQ,CAAChiB,CAAE,CAAC;MACzB,IAAI,CAACjY,CAAC,CAACsa,IAAI,CAAE2f,QAAQ,CAACj6B,CAAE,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAsuC,QAAA,EAAU;MAETjB,KAAK,CAACnyB,UAAU,CAAE,IAAI,CAAC7a,CAAC,EAAE,IAAI,CAACiY,CAAE,CAAC;MAClCg1B,KAAK,CAACpyB,UAAU,CAAE,IAAI,CAAC/a,CAAC,EAAE,IAAI,CAACmY,CAAE,CAAC;MAElC,OAAO+0B,KAAK,CAACpxB,KAAK,CAAEqxB,KAAM,CAAC,CAAChpC,MAAM,CAAC,CAAC,GAAG,GAAG;IAE3C;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAuuC,YAAapoC,MAAM,EAAG;MAErB,OAAOA,MAAM,CAAC2U,UAAU,CAAE,IAAI,CAAC3a,CAAC,EAAE,IAAI,CAACmY,CAAE,CAAC,CAACsC,GAAG,CAAE,IAAI,CAACva,CAAE,CAAC,CAAC+a,cAAc,CAAE,CAAC,GAAG,CAAE,CAAC;IAEjF;EAAC;IAAA7U,GAAA;IAAAvG,KAAA,EAED,SAAAwuC,UAAWroC,MAAM,EAAG;MAEnB,OAAO6nC,QAAQ,CAACQ,SAAS,CAAE,IAAI,CAACruC,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAE8F,MAAO,CAAC;IAE5D;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAyuC,SAAUtoC,MAAM,EAAG;MAElB,OAAOA,MAAM,CAACuoC,qBAAqB,CAAE,IAAI,CAACvuC,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAE,CAAC;IAE9D;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAA2uC,aAAc7V,KAAK,EAAE3yB,MAAM,EAAG;MAE7B,OAAO6nC,QAAQ,CAACW,YAAY,CAAE7V,KAAK,EAAE,IAAI,CAAC34B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAE8F,MAAO,CAAC;IAEtE;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA4uC,MAAO9V,KAAK,EAAE+V,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE5oC,MAAM,EAAG;MAAE;;MAEvC,IAAK4nC,WAAW,KAAK,KAAK,EAAG;QAE5B50B,OAAO,CAACC,IAAI,CAAE,+EAAgF,CAAC;QAE/F20B,WAAW,GAAG,IAAI;MAEnB;MAEA,OAAOC,QAAQ,CAACgB,gBAAgB,CAAElW,KAAK,EAAE,IAAI,CAAC34B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAEwuC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE5oC,MAAO,CAAC;IAEzF;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAgvC,iBAAkBlW,KAAK,EAAE3b,EAAE,EAAEC,EAAE,EAAE6xB,EAAE,EAAE9oC,MAAM,EAAG;MAE7C,OAAO6nC,QAAQ,CAACgB,gBAAgB,CAAElW,KAAK,EAAE,IAAI,CAAC34B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAE8c,EAAE,EAAEC,EAAE,EAAE6xB,EAAE,EAAE9oC,MAAO,CAAC;IAEtF;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAeb,KAAK,EAAG;MAEtB,OAAOkV,QAAQ,CAACrU,aAAa,CAAEb,KAAK,EAAE,IAAI,CAAC34B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAE,CAAC;IAE/D;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EAED,SAAAkvC,cAAejS,SAAS,EAAG;MAE1B,OAAO+Q,QAAQ,CAACkB,aAAa,CAAE,IAAI,CAAC/uC,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAE48B,SAAU,CAAC;IAEnE;EAAC;IAAA12B,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAAC2B,kBAAkB,CAAE,IAAK,CAAC;IAEtC;EAAC;IAAA9zB,GAAA;IAAAvG,KAAA,EAED,SAAAs9B,oBAAqBz7B,CAAC,EAAEsE,MAAM,EAAG;MAEhC,IAAMhG,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEmY,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEjY,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAI2B,CAAC,EAAE2oB,CAAC;;MAER;MACA;MACA;MACA;MACA;;MAEA8iB,IAAI,CAACvyB,UAAU,CAAE5C,CAAC,EAAEnY,CAAE,CAAC;MACvButC,IAAI,CAACxyB,UAAU,CAAE7a,CAAC,EAAEF,CAAE,CAAC;MACvBytC,IAAI,CAAC1yB,UAAU,CAAErZ,CAAC,EAAE1B,CAAE,CAAC;MACvB,IAAMmV,EAAE,GAAGm4B,IAAI,CAACzxB,GAAG,CAAE4xB,IAAK,CAAC;MAC3B,IAAMr4B,EAAE,GAAGm4B,IAAI,CAAC1xB,GAAG,CAAE4xB,IAAK,CAAC;MAC3B,IAAKt4B,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAG;QAEzB;QACA,OAAOpP,MAAM,CAACwU,IAAI,CAAExa,CAAE,CAAC;MAExB;MAEA0tC,IAAI,CAAC3yB,UAAU,CAAErZ,CAAC,EAAEyW,CAAE,CAAC;MACvB,IAAM9C,EAAE,GAAGi4B,IAAI,CAACzxB,GAAG,CAAE6xB,IAAK,CAAC;MAC3B,IAAMsB,EAAE,GAAGzB,IAAI,CAAC1xB,GAAG,CAAE6xB,IAAK,CAAC;MAC3B,IAAKr4B,EAAE,IAAI,CAAC,IAAI25B,EAAE,IAAI35B,EAAE,EAAG;QAE1B;QACA,OAAOrP,MAAM,CAACwU,IAAI,CAAErC,CAAE,CAAC;MAExB;MAEA,IAAM82B,EAAE,GAAG95B,EAAE,GAAG65B,EAAE,GAAG35B,EAAE,GAAGD,EAAE;MAC5B,IAAK65B,EAAE,IAAI,CAAC,IAAI95B,EAAE,IAAI,CAAC,IAAIE,EAAE,IAAI,CAAC,EAAG;QAEpCxT,CAAC,GAAGsT,EAAE,IAAKA,EAAE,GAAGE,EAAE,CAAE;QACpB;QACA,OAAOrP,MAAM,CAACwU,IAAI,CAAExa,CAAE,CAAC,CAAC4a,eAAe,CAAE0yB,IAAI,EAAEzrC,CAAE,CAAC;MAEnD;MAEA8rC,IAAI,CAAC5yB,UAAU,CAAErZ,CAAC,EAAExB,CAAE,CAAC;MACvB,IAAMgvC,EAAE,GAAG5B,IAAI,CAACzxB,GAAG,CAAE8xB,IAAK,CAAC;MAC3B,IAAMwB,EAAE,GAAG5B,IAAI,CAAC1xB,GAAG,CAAE8xB,IAAK,CAAC;MAC3B,IAAKwB,EAAE,IAAI,CAAC,IAAID,EAAE,IAAIC,EAAE,EAAG;QAE1B;QACA,OAAOnpC,MAAM,CAACwU,IAAI,CAAEta,CAAE,CAAC;MAExB;MAEA,IAAMkvC,EAAE,GAAGF,EAAE,GAAG95B,EAAE,GAAGD,EAAE,GAAGg6B,EAAE;MAC5B,IAAKC,EAAE,IAAI,CAAC,IAAIh6B,EAAE,IAAI,CAAC,IAAI+5B,EAAE,IAAI,CAAC,EAAG;QAEpC3kB,CAAC,GAAGpV,EAAE,IAAKA,EAAE,GAAG+5B,EAAE,CAAE;QACpB;QACA,OAAOnpC,MAAM,CAACwU,IAAI,CAAExa,CAAE,CAAC,CAAC4a,eAAe,CAAE2yB,IAAI,EAAE/iB,CAAE,CAAC;MAEnD;MAEA,IAAM6kB,EAAE,GAAGh6B,EAAE,GAAG85B,EAAE,GAAGD,EAAE,GAAGF,EAAE;MAC5B,IAAKK,EAAE,IAAI,CAAC,IAAML,EAAE,GAAG35B,EAAE,IAAM,CAAC,IAAM65B,EAAE,GAAGC,EAAE,IAAM,CAAC,EAAG;QAEtD3B,IAAI,CAACzyB,UAAU,CAAE7a,CAAC,EAAEiY,CAAE,CAAC;QACvBqS,CAAC,GAAG,CAAEwkB,EAAE,GAAG35B,EAAE,KAAS25B,EAAE,GAAG35B,EAAE,IAAO65B,EAAE,GAAGC,EAAE,CAAE,CAAE;QAC/C;QACA,OAAOnpC,MAAM,CAACwU,IAAI,CAAErC,CAAE,CAAC,CAACyC,eAAe,CAAE4yB,IAAI,EAAEhjB,CAAE,CAAC,CAAC,CAAC;MAErD;;MAEA;MACA,IAAM8kB,KAAK,GAAG,CAAC,IAAKD,EAAE,GAAGD,EAAE,GAAGH,EAAE,CAAE;MAClC;MACAptC,CAAC,GAAGutC,EAAE,GAAGE,KAAK;MACd9kB,CAAC,GAAGykB,EAAE,GAAGK,KAAK;MAEd,OAAOtpC,MAAM,CAACwU,IAAI,CAAExa,CAAE,CAAC,CAAC4a,eAAe,CAAE0yB,IAAI,EAAEzrC,CAAE,CAAC,CAAC+Y,eAAe,CAAE2yB,IAAI,EAAE/iB,CAAE,CAAC;IAE9E;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQid,QAAQ,EAAG;MAElB,OAAOA,QAAQ,CAACn6B,CAAC,CAACkd,MAAM,CAAE,IAAI,CAACld,CAAE,CAAC,IAAIm6B,QAAQ,CAAChiB,CAAC,CAAC+E,MAAM,CAAE,IAAI,CAAC/E,CAAE,CAAC,IAAIgiB,QAAQ,CAACj6B,CAAC,CAACgd,MAAM,CAAE,IAAI,CAAChd,CAAE,CAAC;IAEjG;EAAC;IAAAkG,GAAA;IAAAvG,KAAA,EA1SD,SAAAwuC,UAAkBruC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE8F,MAAM,EAAG;MAEnCA,MAAM,CAAC+U,UAAU,CAAE7a,CAAC,EAAEiY,CAAE,CAAC;MACzB+0B,KAAK,CAACnyB,UAAU,CAAE/a,CAAC,EAAEmY,CAAE,CAAC;MACxBnS,MAAM,CAAC8V,KAAK,CAAEoxB,KAAM,CAAC;MAErB,IAAMqC,cAAc,GAAGvpC,MAAM,CAAC+V,QAAQ,CAAC,CAAC;MACxC,IAAKwzB,cAAc,GAAG,CAAC,EAAG;QAEzB,OAAOvpC,MAAM,CAACiV,cAAc,CAAE,CAAC,GAAGpG,IAAI,CAACmH,IAAI,CAAEuzB,cAAe,CAAE,CAAC;MAEhE;MAEA,OAAOvpC,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE7B;;IAEA;IACA;EAAA;IAAA3S,GAAA;IAAAvG,KAAA,EACA,SAAA2uC,aAAqB7V,KAAK,EAAE34B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE8F,MAAM,EAAG;MAE7CknC,KAAK,CAACnyB,UAAU,CAAE7a,CAAC,EAAEF,CAAE,CAAC;MACxBmtC,KAAK,CAACpyB,UAAU,CAAE5C,CAAC,EAAEnY,CAAE,CAAC;MACxBotC,KAAK,CAACryB,UAAU,CAAE4d,KAAK,EAAE34B,CAAE,CAAC;MAE5B,IAAMwvC,KAAK,GAAGtC,KAAK,CAACrxB,GAAG,CAAEqxB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGvC,KAAK,CAACrxB,GAAG,CAAEsxB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAACrxB,GAAG,CAAEuxB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAACtxB,GAAG,CAAEsxB,KAAM,CAAC;MAChC,IAAMyC,KAAK,GAAGzC,KAAK,CAACtxB,GAAG,CAAEuxB,KAAM,CAAC;MAEhC,IAAMkC,KAAK,GAAKE,KAAK,GAAGG,KAAK,GAAGF,KAAK,GAAGA,KAAO;;MAE/C;MACA,IAAKH,KAAK,KAAK,CAAC,EAAG;QAElB;QACA;QACA,OAAOtpC,MAAM,CAAC+S,GAAG,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAEnC;MAEA,IAAM82B,QAAQ,GAAG,CAAC,GAAGP,KAAK;MAC1B,IAAMlvC,CAAC,GAAG,CAAEuvC,KAAK,GAAGD,KAAK,GAAGD,KAAK,GAAGG,KAAK,IAAKC,QAAQ;MACtD,IAAMhuC,CAAC,GAAG,CAAE2tC,KAAK,GAAGI,KAAK,GAAGH,KAAK,GAAGC,KAAK,IAAKG,QAAQ;;MAEtD;MACA,OAAO7pC,MAAM,CAAC+S,GAAG,CAAE,CAAC,GAAG3Y,CAAC,GAAGyB,CAAC,EAAEA,CAAC,EAAEzB,CAAE,CAAC;IAErC;EAAC;IAAAgG,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAsBb,KAAK,EAAE34B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;MAEtC,IAAI,CAACsuC,YAAY,CAAE7V,KAAK,EAAE34B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEmtC,KAAM,CAAC;MAE1C,OAASA,KAAK,CAACv3B,CAAC,IAAI,CAAC,IAAQu3B,KAAK,CAAC9rC,CAAC,IAAI,CAAG,IAAQ8rC,KAAK,CAACv3B,CAAC,GAAGu3B,KAAK,CAAC9rC,CAAC,IAAM,CAAG;IAE9E;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA4uC,MAAc9V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE5oC,MAAM,EAAG;MAAE;;MAE1D,IAAK4nC,WAAW,KAAK,KAAK,EAAG;QAE5B50B,OAAO,CAACC,IAAI,CAAE,+EAAgF,CAAC;QAE/F20B,WAAW,GAAG,IAAI;MAEnB;MAEA,OAAO,IAAI,CAACiB,gBAAgB,CAAElW,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE5oC,MAAO,CAAC;IAEzE;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAgvC,iBAAyBlW,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAE9yB,EAAE,EAAEC,EAAE,EAAE6xB,EAAE,EAAE9oC,MAAM,EAAG;MAEhE,IAAI,CAACwoC,YAAY,CAAE7V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAEzC,KAAM,CAAC;MAE7CrnC,MAAM,CAACiU,SAAS,CAAE,CAAE,CAAC;MACrBjU,MAAM,CAAC4U,eAAe,CAAEoC,EAAE,EAAEqwB,KAAK,CAACv3B,CAAE,CAAC;MACrC9P,MAAM,CAAC4U,eAAe,CAAEqC,EAAE,EAAEowB,KAAK,CAAC9rC,CAAE,CAAC;MACrCyE,MAAM,CAAC4U,eAAe,CAAEk0B,EAAE,EAAEzB,KAAK,CAAC9iB,CAAE,CAAC;MAErC,OAAOvkB,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAkvC,cAAsB/uC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE48B,SAAS,EAAG;MAE1CoQ,KAAK,CAACnyB,UAAU,CAAE7a,CAAC,EAAEiY,CAAE,CAAC;MACxBg1B,KAAK,CAACpyB,UAAU,CAAE/a,CAAC,EAAEmY,CAAE,CAAC;;MAExB;MACA,OAAS+0B,KAAK,CAACpxB,KAAK,CAAEqxB,KAAM,CAAC,CAACtxB,GAAG,CAAEihB,SAAU,CAAC,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;IAEpE;EAAC;EAAA,OAAA+Q,QAAA;AAAA;AAgNF,IAAIkC,WAAW,GAAG,CAAC;AAAC,IAEdC,QAAQ,GAAA9oC,OAAA,CAAA8oC,QAAA,0BAAAC,iBAAA;EAAAtoB,SAAA,CAAAqoB,QAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAroB,YAAA,CAAAmoB,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,OAAA;IAAAvqC,eAAA,OAAAoqC,QAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAhvC,IAAA;IAEAivC,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtB7wC,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAynB,OAAA,GAAQ,IAAI,EAAE;MAAEtwC,KAAK,EAAEkwC,WAAW;IAAI,CAAE,CAAC;IAE9DI,OAAA,CAAK76B,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1Bm7B,OAAA,CAAK5rC,IAAI,GAAG,EAAE;IACd4rC,OAAA,CAAKnvC,IAAI,GAAG,UAAU;IAEtBmvC,OAAA,CAAKE,QAAQ,GAAG3nC,cAAc;IAC9BynC,OAAA,CAAKG,IAAI,GAAGjoC,SAAS;IACrB8nC,OAAA,CAAKI,YAAY,GAAG,KAAK;IAEzBJ,OAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,OAAA,CAAKM,WAAW,GAAG,KAAK;IACxBN,OAAA,CAAKO,SAAS,GAAG,KAAK;IAEtBP,OAAA,CAAKQ,QAAQ,GAAGnnC,cAAc;IAC9B2mC,OAAA,CAAKS,QAAQ,GAAGnnC,sBAAsB;IACtC0mC,OAAA,CAAKU,aAAa,GAAG9nC,WAAW;IAChConC,OAAA,CAAKW,aAAa,GAAG,IAAI;IACzBX,OAAA,CAAKY,aAAa,GAAG,IAAI;IACzBZ,OAAA,CAAKa,kBAAkB,GAAG,IAAI;IAE9Bb,OAAA,CAAKc,SAAS,GAAG/mC,cAAc;IAC/BimC,OAAA,CAAKe,SAAS,GAAG,IAAI;IACrBf,OAAA,CAAKgB,UAAU,GAAG,IAAI;IAEtBhB,OAAA,CAAKiB,gBAAgB,GAAG,IAAI;IAC5BjB,OAAA,CAAKkB,WAAW,GAAGh/B,iBAAiB;IACpC89B,OAAA,CAAKmB,UAAU,GAAG,CAAC;IACnBnB,OAAA,CAAKoB,eAAe,GAAG,IAAI;IAC3BpB,OAAA,CAAKqB,WAAW,GAAGjgC,aAAa;IAChC4+B,OAAA,CAAKsB,YAAY,GAAGlgC,aAAa;IACjC4+B,OAAA,CAAKuB,YAAY,GAAGngC,aAAa;IACjC4+B,OAAA,CAAKwB,YAAY,GAAG,KAAK;IAEzBxB,OAAA,CAAKyB,cAAc,GAAG,IAAI;IAC1BzB,OAAA,CAAK0B,gBAAgB,GAAG,KAAK;IAC7B1B,OAAA,CAAK2B,WAAW,GAAG,KAAK;IAExB3B,OAAA,CAAK4B,UAAU,GAAG,IAAI;IAEtB5B,OAAA,CAAK6B,UAAU,GAAG,IAAI;IAEtB7B,OAAA,CAAK8B,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEvB9B,OAAA,CAAK+B,aAAa,GAAG,KAAK;IAC1B/B,OAAA,CAAKgC,mBAAmB,GAAG,CAAC;IAC5BhC,OAAA,CAAKiC,kBAAkB,GAAG,CAAC;IAE3BjC,OAAA,CAAKkC,SAAS,GAAG,KAAK;IAEtBlC,OAAA,CAAKmC,eAAe,GAAG,KAAK;IAC5BnC,OAAA,CAAKoC,kBAAkB,GAAG,KAAK;IAC/BpC,OAAA,CAAKqC,eAAe,GAAG,KAAK;IAE5BrC,OAAA,CAAKrI,OAAO,GAAG,IAAI;IAEnBqI,OAAA,CAAKsC,UAAU,GAAG,IAAI;IAEtBtC,OAAA,CAAK9mB,QAAQ,GAAG,CAAC,CAAC;IAElB8mB,OAAA,CAAKvpB,OAAO,GAAG,CAAC;IAEhBupB,OAAA,CAAKuC,UAAU,GAAG,CAAC;IAAC,OAAAvC,OAAA;EAErB;EAAC9pC,YAAA,CAAA2pC,QAAA;IAAA5pC,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAAC04B,UAAU;IAEvB,CAAC;IAAA35B,GAAA,EAED,SAAAA,IAAelZ,KAAK,EAAG;MAEtB,IAAK,IAAI,CAAC6yC,UAAU,GAAG,CAAC,KAAK7yC,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAAC8rB,UAAU,GAAG7yC,KAAK;IAExB;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA8yC,QAAA,CAAS,8BAA+B,CAAC;EAAC;IAAAvsC,GAAA;IAAAvG,KAAA,EAE1C,SAAAuoC,eAAA,CAAgB,wDAAyD,CAAC;EAAC;IAAAhiC,GAAA;IAAAvG,KAAA,EAE3E,SAAA+yC,gBAAA,CAAiB,8BAA+B,CAAC;EAAC;IAAAxsC,GAAA;IAAAvG,KAAA,EAElD,SAAAgzC,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAACD,eAAe,CAACE,QAAQ,CAAC,CAAC;IAEvC;EAAC;IAAA1sC,GAAA;IAAAvG,KAAA,EAED,SAAAkzC,UAAWjxC,MAAM,EAAG;MAEnB,IAAKA,MAAM,KAAKgF,SAAS,EAAG;MAE5B,KAAM,IAAMV,GAAG,IAAItE,MAAM,EAAG;QAE3B,IAAMkxC,QAAQ,GAAGlxC,MAAM,CAAEsE,GAAG,CAAE;QAE9B,IAAK4sC,QAAQ,KAAKlsC,SAAS,EAAG;UAE7BkS,OAAO,CAACC,IAAI,+BAAAuL,MAAA,CAAiCpe,GAAG,8BAA6B,CAAC;UAC9E;QAED;QAEA,IAAM6sC,YAAY,GAAG,IAAI,CAAE7sC,GAAG,CAAE;QAEhC,IAAK6sC,YAAY,KAAKnsC,SAAS,EAAG;UAEjCkS,OAAO,CAACC,IAAI,qBAAAuL,MAAA,CAAuBpe,GAAG,mCAAAoe,MAAA,CAAkC,IAAI,CAACxjB,IAAI,MAAK,CAAC;UACvF;QAED;QAEA,IAAKiyC,YAAY,IAAIA,YAAY,CAAChH,OAAO,EAAG;UAE3CgH,YAAY,CAACl6B,GAAG,CAAEi6B,QAAS,CAAC;QAE7B,CAAC,MAAM,IAAOC,YAAY,IAAIA,YAAY,CAAC9e,SAAS,IAAQ6e,QAAQ,IAAIA,QAAQ,CAAC7e,SAAW,EAAG;UAE9F8e,YAAY,CAACz4B,IAAI,CAAEw4B,QAAS,CAAC;QAE9B,CAAC,MAAM;UAEN,IAAI,CAAE5sC,GAAG,CAAE,GAAG4sC,QAAQ;QAEvB;MAED;IAED;EAAC;IAAA5sC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhgB,SAAS,IAAI,OAAOggB,IAAI,KAAK,QAAU;MAEvE,IAAKC,YAAY,EAAG;QAEnBD,IAAI,GAAG;UACNgD,QAAQ,EAAE,CAAC,CAAC;UACZ9C,MAAM,EAAE,CAAC;QACV,CAAC;MAEF;MAEA,IAAMR,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,UAAU;UAChBgpB,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;MACAxD,IAAI,CAAClR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBkR,IAAI,CAACxlB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAK,IAAI,CAACuD,IAAI,KAAK,EAAE,EAAGiiB,IAAI,CAACjiB,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7C,IAAK,IAAI,CAACof,KAAK,IAAI,IAAI,CAACA,KAAK,CAACsoB,OAAO,EAAGzlB,IAAI,CAAC7C,KAAK,GAAG,IAAI,CAACA,KAAK,CAACuvB,MAAM,CAAC,CAAC;MAExE,IAAK,IAAI,CAACC,SAAS,KAAKrsC,SAAS,EAAG0f,IAAI,CAAC2sB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAKtsC,SAAS,EAAG0f,IAAI,CAAC4sB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEnE,IAAK,IAAI,CAACC,KAAK,KAAKvsC,SAAS,EAAG0f,IAAI,CAAC6sB,KAAK,GAAG,IAAI,CAACA,KAAK;MACvD,IAAK,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACrH,OAAO,EAAGzlB,IAAI,CAAC8sB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACJ,MAAM,CAAC,CAAC;MAC5F,IAAK,IAAI,CAACK,cAAc,KAAKzsC,SAAS,EAAG0f,IAAI,CAAC+sB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACvH,OAAO,EAAGzlB,IAAI,CAACgtB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACN,MAAM,CAAC,CAAC;MACpF,IAAK,IAAI,CAACO,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,KAAK,CAAC,EAAGjtB,IAAI,CAACitB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAE7G,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACzH,OAAO,EAAGzlB,IAAI,CAACktB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACR,MAAM,CAAC,CAAC;MACpF,IAAK,IAAI,CAACS,iBAAiB,KAAK7sC,SAAS,EAAG0f,IAAI,CAACmtB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAC3F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC3H,OAAO,EAAGzlB,IAAI,CAACotB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACV,MAAM,CAAC,CAAC;MACxG,IAAK,IAAI,CAACW,SAAS,KAAK/sC,SAAS,EAAG0f,IAAI,CAACqtB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAKhtC,SAAS,EAAG0f,IAAI,CAACstB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,kBAAkB,KAAKjtC,SAAS,EAAG0f,IAAI,CAACutB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAE9F,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACvrB,SAAS,EAAG;QAEvDjC,IAAI,CAACwtB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACntB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAE1D;MAEA,IAAK,IAAI,CAAC2+B,qBAAqB,IAAI,IAAI,CAACA,qBAAqB,CAACxrB,SAAS,EAAG;QAEzEjC,IAAI,CAACytB,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACptB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAE5E;MAEA,IAAK,IAAI,CAAC4+B,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAACzrB,SAAS,EAAG;QAEnEjC,IAAI,CAAC0tB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACrtB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QACrEkR,IAAI,CAAC2tB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC92B,OAAO,CAAC,CAAC;MAEhE;MAEA,IAAK,IAAI,CAAC+2B,WAAW,KAAKttC,SAAS,EAAG0f,IAAI,CAAC4tB,WAAW,GAAG,IAAI,CAACA,WAAW;MACzE,IAAK,IAAI,CAACC,cAAc,KAAKvtC,SAAS,EAAG0f,IAAI,CAAC6tB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,yBAAyB,KAAKxtC,SAAS,EAAG0f,IAAI,CAAC8tB,yBAAyB,GAAG,IAAI,CAACA,yBAAyB;MAEnH,IAAK,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAAC9rB,SAAS,EAAG;QAE3DjC,IAAI,CAAC+tB,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC1tB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAE9D;MAEA,IAAK,IAAI,CAACk/B,uBAAuB,IAAI,IAAI,CAACA,uBAAuB,CAAC/rB,SAAS,EAAG;QAE7EjC,IAAI,CAACguB,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAAC3tB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAEhF;MAEA,IAAK,IAAI,CAACgT,UAAU,KAAKxhB,SAAS,EAAG0f,IAAI,CAAC8B,UAAU,GAAG,IAAI,CAACA,UAAU;MACtE,IAAK,IAAI,CAACmsB,kBAAkB,KAAK3tC,SAAS,EAAG0f,IAAI,CAACiuB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAE9F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAACjsB,SAAS,EAAG;QAEzDjC,IAAI,CAACkuB,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC7tB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAE5D;MAEA,IAAK,IAAI,CAACq/B,GAAG,IAAI,IAAI,CAACA,GAAG,CAAClsB,SAAS,EAAGjC,IAAI,CAACmuB,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC9tB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAC7E,IAAK,IAAI,CAACs/B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACnsB,SAAS,EAAGjC,IAAI,CAACouB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC/tB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MACzF,IAAK,IAAI,CAACu/B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACpsB,SAAS,EAAGjC,IAAI,CAACquB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAChuB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAEjG,IAAK,IAAI,CAACw/B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACrsB,SAAS,EAAG;QAE/CjC,IAAI,CAACsuB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACjuB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QACjDkR,IAAI,CAACuuB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD;MAEA,IAAK,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACvsB,SAAS,EAAG;QAEzCjC,IAAI,CAACwuB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACnuB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAC3CkR,IAAI,CAACyuB,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C;MAEA,IAAK,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAACzsB,SAAS,EAAG;QAE7CjC,IAAI,CAAC0uB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACruB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAC/CkR,IAAI,CAAC2uB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEhC;MAEA,IAAK,IAAI,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC3sB,SAAS,EAAG;QAEjDjC,IAAI,CAAC4uB,SAAS,GAAG,IAAI,CAACA,SAAS,CAACvuB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QACnDkR,IAAI,CAAC6uB,aAAa,GAAG,IAAI,CAACA,aAAa;QACvC7uB,IAAI,CAAC8uB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACj4B,OAAO,CAAC,CAAC;MAE9C;MAEA,IAAK,IAAI,CAACk4B,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC9sB,SAAS,EAAG;QAE7DjC,IAAI,CAAC+uB,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC1uB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAC/DkR,IAAI,CAACgvB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAC/ChvB,IAAI,CAACivB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE9C;MAEA,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACjtB,SAAS,EAAGjC,IAAI,CAACkvB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC7uB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MACjH,IAAK,IAAI,CAACqgC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACltB,SAAS,EAAGjC,IAAI,CAACmvB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC9uB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAEjH,IAAK,IAAI,CAACsgC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACntB,SAAS,EAAGjC,IAAI,CAACovB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC/uB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAC7G,IAAK,IAAI,CAACugC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACptB,SAAS,EAAGjC,IAAI,CAACqvB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAChvB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAC7G,IAAK,IAAI,CAACwgC,oBAAoB,IAAI,IAAI,CAACA,oBAAoB,CAACrtB,SAAS,EAAGjC,IAAI,CAACsvB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACjvB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MACjJ,IAAK,IAAI,CAACygC,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,CAACttB,SAAS,EAAGjC,IAAI,CAACuvB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAAClvB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAEjI,IAAK,IAAI,CAAC0gC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACvtB,SAAS,EAAG;QAE3CjC,IAAI,CAACwvB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACnvB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;QAE7C,IAAK,IAAI,CAAC2gC,OAAO,KAAKnvC,SAAS,EAAG0f,IAAI,CAACyvB,OAAO,GAAG,IAAI,CAACA,OAAO;MAE9D;MAEA,IAAK,IAAI,CAACC,eAAe,KAAKpvC,SAAS,EAAG0f,IAAI,CAAC0vB,eAAe,GAAG,IAAI,CAACA,eAAe;MACrF,IAAK,IAAI,CAACC,YAAY,KAAKrvC,SAAS,EAAG0f,IAAI,CAAC2vB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,KAAKtvC,SAAS,EAAG0f,IAAI,CAAC4vB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,CAAC5tB,SAAS,EAAG;QAErDjC,IAAI,CAAC6vB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACxvB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAExD;MAEA,IAAK,IAAI,CAACghC,YAAY,KAAKxvC,SAAS,EAAG0f,IAAI,CAAC8vB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC9tB,SAAS,EAAGjC,IAAI,CAAC+vB,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC1vB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MAC7H,IAAK,IAAI,CAACkhC,SAAS,KAAK1vC,SAAS,EAAG0f,IAAI,CAACgwB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAChuB,SAAS,EAAGjC,IAAI,CAACiwB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC5vB,MAAM,CAAEC,IAAK,CAAC,CAACxR,IAAI;MACjH,IAAK,IAAI,CAACohC,mBAAmB,KAAK5vC,SAAS,IAAI,IAAI,CAAC4vC,mBAAmB,KAAKnf,QAAQ,EAAG/Q,IAAI,CAACkwB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MAC1I,IAAK,IAAI,CAACC,gBAAgB,KAAK7vC,SAAS,EAAG0f,IAAI,CAACmwB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACzD,MAAM,CAAC,CAAC;MAEjG,IAAK,IAAI,CAACjb,IAAI,KAAKnxB,SAAS,EAAG0f,IAAI,CAACyR,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAAC8Z,UAAU,KAAK,IAAI,EAAGvrB,IAAI,CAACurB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjE,IAAK,IAAI,CAAC6E,eAAe,KAAK9vC,SAAS,EAAG0f,IAAI,CAACowB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAACvG,QAAQ,KAAK3nC,cAAc,EAAG8d,IAAI,CAAC6pB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACrE,IAAK,IAAI,CAACC,IAAI,KAAKjoC,SAAS,EAAGme,IAAI,CAAC8pB,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAACC,YAAY,KAAK,IAAI,EAAG/pB,IAAI,CAAC+pB,YAAY,GAAG,IAAI;MAE1D,IAAK,IAAI,CAACC,OAAO,GAAG,CAAC,EAAGhqB,IAAI,CAACgqB,OAAO,GAAG,IAAI,CAACA,OAAO;MACnD,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAGjqB,IAAI,CAACiqB,WAAW,GAAG,IAAI;MAExDjqB,IAAI,CAACyqB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/BzqB,IAAI,CAAC0qB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/B1qB,IAAI,CAAC2qB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjC3qB,IAAI,CAACwrB,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjCxrB,IAAI,CAACmrB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCnrB,IAAI,CAAC4qB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAC7C5qB,IAAI,CAAC6qB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC7qB,IAAI,CAAC8qB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjC9qB,IAAI,CAAC+qB,eAAe,GAAG,IAAI,CAACA,eAAe;MAC3C/qB,IAAI,CAACgrB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnChrB,IAAI,CAACirB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCjrB,IAAI,CAACkrB,YAAY,GAAG,IAAI,CAACA,YAAY;;MAErC;MACA,IAAK,IAAI,CAACjwB,QAAQ,KAAK3a,SAAS,IAAI,IAAI,CAAC2a,QAAQ,KAAK,CAAC,EAAG+E,IAAI,CAAC/E,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvF,IAAK,IAAI,CAACywB,aAAa,KAAK,IAAI,EAAG1rB,IAAI,CAAC0rB,aAAa,GAAG,IAAI;MAC5D,IAAK,IAAI,CAACC,mBAAmB,KAAK,CAAC,EAAG3rB,IAAI,CAAC2rB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MACzF,IAAK,IAAI,CAACC,kBAAkB,KAAK,CAAC,EAAG5rB,IAAI,CAAC4rB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAEtF,IAAK,IAAI,CAACyE,SAAS,KAAK/vC,SAAS,IAAI,IAAI,CAAC+vC,SAAS,KAAK,CAAC,EAAGrwB,IAAI,CAACqwB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC3F,IAAK,IAAI,CAACC,QAAQ,KAAKhwC,SAAS,EAAG0f,IAAI,CAACswB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAChE,IAAK,IAAI,CAACC,OAAO,KAAKjwC,SAAS,EAAG0f,IAAI,CAACuwB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7D,IAAK,IAAI,CAACn1B,KAAK,KAAK9a,SAAS,EAAG0f,IAAI,CAAC5E,KAAK,GAAG,IAAI,CAACA,KAAK;MAEvD,IAAK,IAAI,CAACywB,SAAS,KAAK,IAAI,EAAG7rB,IAAI,CAAC6rB,SAAS,GAAG,IAAI;MAEpD,IAAK,IAAI,CAAC2E,SAAS,GAAG,CAAC,EAAGxwB,IAAI,CAACwwB,SAAS,GAAG,IAAI,CAACA,SAAS;MACzD,IAAK,IAAI,CAACtG,SAAS,KAAK,IAAI,EAAGlqB,IAAI,CAACkqB,SAAS,GAAG,IAAI;MACpD,IAAK,IAAI,CAAC4B,eAAe,KAAK,IAAI,EAAG9rB,IAAI,CAAC8rB,eAAe,GAAG,IAAI;MAChE,IAAK,IAAI,CAACC,kBAAkB,KAAK,IAAI,EAAG/rB,IAAI,CAAC+rB,kBAAkB,GAAG,IAAI;MACtE,IAAK,IAAI,CAACC,eAAe,KAAK,IAAI,EAAGhsB,IAAI,CAACgsB,eAAe,GAAG,IAAI;MAEhE,IAAK,IAAI,CAACyE,SAAS,KAAK,IAAI,EAAGzwB,IAAI,CAACywB,SAAS,GAAG,IAAI;MACpD,IAAK,IAAI,CAACC,kBAAkB,GAAG,CAAC,EAAG1wB,IAAI,CAAC0wB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACpF,IAAK,IAAI,CAACC,gBAAgB,KAAK,OAAO,EAAG3wB,IAAI,CAAC2wB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MACtF,IAAK,IAAI,CAACC,iBAAiB,KAAK,OAAO,EAAG5wB,IAAI,CAAC4wB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEzF,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAG7wB,IAAI,CAAC6wB,WAAW,GAAG,IAAI;MAExD,IAAK,IAAI,CAACvP,OAAO,KAAK,KAAK,EAAGthB,IAAI,CAACshB,OAAO,GAAG,KAAK;MAElD,IAAK,IAAI,CAAC2K,UAAU,KAAK,KAAK,EAAGjsB,IAAI,CAACisB,UAAU,GAAG,KAAK;MAExD,IAAK,IAAI,CAAC6E,GAAG,KAAK,KAAK,EAAG9wB,IAAI,CAAC8wB,GAAG,GAAG,KAAK;MAE1C,IAAK/3C,MAAM,CAACuF,IAAI,CAAE,IAAI,CAACukB,QAAS,CAAC,CAACllB,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE5E;;MAEA,SAAS0jB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAMlrC,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAMsE,GAAG,IAAI4mC,KAAK,EAAG;UAE1B,IAAMxmB,MAAI,GAAGwmB,KAAK,CAAE5mC,GAAG,CAAE;UACzB,OAAOogB,MAAI,CAACuD,QAAQ;UACpBjoB,MAAM,CAACgC,IAAI,CAAE0iB,MAAK,CAAC;QAEpB;QAEA,OAAO1kB,MAAM;MAEd;MAEA,IAAKilB,YAAY,EAAG;QAEnB,IAAM+C,QAAQ,GAAGijB,gBAAgB,CAAEjmB,IAAI,CAACgD,QAAS,CAAC;QAClD,IAAM9C,MAAM,GAAG+lB,gBAAgB,CAAEjmB,IAAI,CAACE,MAAO,CAAC;QAE9C,IAAK8C,QAAQ,CAAC3lB,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAACsD,QAAQ,GAAGA,QAAQ;QACnD,IAAK9C,MAAM,CAAC7iB,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAACQ,MAAM,GAAGA,MAAM;MAE9C;MAEA,OAAOR,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACpkB,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;MAEvB,IAAI,CAAC8rC,QAAQ,GAAG1nB,MAAM,CAAC0nB,QAAQ;MAC/B,IAAI,CAACC,IAAI,GAAG3nB,MAAM,CAAC2nB,IAAI;MACvB,IAAI,CAACC,YAAY,GAAG5nB,MAAM,CAAC4nB,YAAY;MAEvC,IAAI,CAACC,OAAO,GAAG7nB,MAAM,CAAC6nB,OAAO;MAC7B,IAAI,CAACC,WAAW,GAAG9nB,MAAM,CAAC8nB,WAAW;MAErC,IAAI,CAACE,QAAQ,GAAGhoB,MAAM,CAACgoB,QAAQ;MAC/B,IAAI,CAACC,QAAQ,GAAGjoB,MAAM,CAACioB,QAAQ;MAC/B,IAAI,CAACC,aAAa,GAAGloB,MAAM,CAACkoB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAGnoB,MAAM,CAACmoB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAGpoB,MAAM,CAACooB,aAAa;MACzC,IAAI,CAACC,kBAAkB,GAAGroB,MAAM,CAACqoB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAGtoB,MAAM,CAACsoB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGvoB,MAAM,CAACuoB,SAAS;MACjC,IAAI,CAACC,UAAU,GAAGxoB,MAAM,CAACwoB,UAAU;MAEnC,IAAI,CAACC,gBAAgB,GAAGzoB,MAAM,CAACyoB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAG1oB,MAAM,CAAC0oB,WAAW;MACrC,IAAI,CAACC,UAAU,GAAG3oB,MAAM,CAAC2oB,UAAU;MACnC,IAAI,CAACC,eAAe,GAAG5oB,MAAM,CAAC4oB,eAAe;MAC7C,IAAI,CAACC,WAAW,GAAG7oB,MAAM,CAAC6oB,WAAW;MACrC,IAAI,CAACC,YAAY,GAAG9oB,MAAM,CAAC8oB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAG/oB,MAAM,CAAC+oB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAGhpB,MAAM,CAACgpB,YAAY;MAEvC,IAAM4F,SAAS,GAAG5uB,MAAM,CAACipB,cAAc;MACvC,IAAI4F,SAAS,GAAG,IAAI;MAEpB,IAAKD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAM93C,CAAC,GAAG83C,SAAS,CAACpzC,MAAM;QAC1BqzC,SAAS,GAAG,IAAIrwB,KAAK,CAAE1nB,CAAE,CAAC;QAE1B,KAAM,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAEhC03C,SAAS,CAAE13C,CAAC,CAAE,GAAGy3C,SAAS,CAAEz3C,CAAC,CAAE,CAACya,KAAK,CAAC,CAAC;QAExC;MAED;MAEA,IAAI,CAACq3B,cAAc,GAAG4F,SAAS;MAC/B,IAAI,CAAC3F,gBAAgB,GAAGlpB,MAAM,CAACkpB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAGnpB,MAAM,CAACmpB,WAAW;MAErC,IAAI,CAACC,UAAU,GAAGppB,MAAM,CAACopB,UAAU;MAEnC,IAAI,CAACC,UAAU,GAAGrpB,MAAM,CAACqpB,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAGtpB,MAAM,CAACspB,SAAS;MAEjC,IAAI,CAACC,aAAa,GAAGvpB,MAAM,CAACupB,aAAa;MACzC,IAAI,CAACC,mBAAmB,GAAGxpB,MAAM,CAACwpB,mBAAmB;MACrD,IAAI,CAACC,kBAAkB,GAAGzpB,MAAM,CAACypB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAG1pB,MAAM,CAAC0pB,SAAS;MAEjC,IAAI,CAAC2E,SAAS,GAAGruB,MAAM,CAACquB,SAAS;MACjC,IAAI,CAACtG,SAAS,GAAG/nB,MAAM,CAAC+nB,SAAS;MACjC,IAAI,CAAC4B,eAAe,GAAG3pB,MAAM,CAAC2pB,eAAe;MAC7C,IAAI,CAACC,kBAAkB,GAAG5pB,MAAM,CAAC4pB,kBAAkB;MACnD,IAAI,CAACC,eAAe,GAAG7pB,MAAM,CAAC6pB,eAAe;MAE7C,IAAI,CAAC1K,OAAO,GAAGnf,MAAM,CAACmf,OAAO;MAE7B,IAAI,CAAC2K,UAAU,GAAG9pB,MAAM,CAAC8pB,UAAU;MAEnC,IAAI,CAACppB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAAjjB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;IAAAoF,GAAA;IAAA2S,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC+mB,OAAO,EAAG;IAEtC;EAAC;EAAA,OAAAopB,QAAA;AAAA,EAjfqBp8B,eAAe;AAqftC,IAAM6jC,cAAc,GAAG;EAAE,WAAW,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACpI,OAAO,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAC9H,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACjI,gBAAgB,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACnI,eAAe,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAC5I,gBAAgB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EACjJ,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAClI,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACtI,aAAa,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EACtI,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAChJ,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,sBAAsB,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAClJ,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACpJ,OAAO,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,kBAAkB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAC1I,cAAc,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAAE,mBAAmB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAC7I,iBAAiB,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAClJ,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAC9I,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACrJ,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACnK,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACtI,QAAQ,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAClJ,aAAa,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACjJ,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,aAAa,EAAE;AAAS,CAAC;AAEhI,IAAMC,KAAK,GAAG;EAAEv2C,CAAC,EAAE,CAAC;EAAEG,CAAC,EAAE,CAAC;EAAEF,CAAC,EAAE;AAAE,CAAC;AAClC,IAAMu2C,KAAK,GAAG;EAAEx2C,CAAC,EAAE,CAAC;EAAEG,CAAC,EAAE,CAAC;EAAEF,CAAC,EAAE;AAAE,CAAC;AAElC,SAASw2C,OAAOA,CAAEl2C,CAAC,EAAEwW,CAAC,EAAE7Y,CAAC,EAAG;EAE3B,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOqC,CAAC,GAAG,CAAEwW,CAAC,GAAGxW,CAAC,IAAK,CAAC,GAAGrC,CAAC;EAC7C,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAO6Y,CAAC;EACzB,IAAK7Y,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOqC,CAAC,GAAG,CAAEwW,CAAC,GAAGxW,CAAC,IAAK,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGrC,CAAC,CAAE;EACzD,OAAOqC,CAAC;AAET;AAAC,IAEKm2C,KAAK,GAAA3wC,OAAA,CAAA2wC,KAAA,0BAAAC,iBAAA;EAEV,SAAAD,MAAav4C,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAG;IAAAvS,eAAA,OAAAiyC,KAAA;IAEtB,IAAI,CAAC5L,OAAO,GAAG,IAAI;IAEnB,IAAI,CAAC3sC,CAAC,GAAG,CAAC;IACV,IAAI,CAACyC,CAAC,GAAG,CAAC;IACV,IAAI,CAACoW,CAAC,GAAG,CAAC;IAEV,OAAO,IAAI,CAACY,GAAG,CAAEzZ,CAAC,EAAEyC,CAAC,EAAEoW,CAAE,CAAC;EAE3B;EAAC9R,YAAA,CAAAwxC,KAAA;IAAAzxC,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKzZ,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAG;MAEd,IAAKpW,CAAC,KAAK+E,SAAS,IAAIqR,CAAC,KAAKrR,SAAS,EAAG;QAEzC;;QAEA,IAAMjH,MAAK,GAAGP,CAAC;QAEf,IAAKO,MAAK,IAAIA,MAAK,CAACosC,OAAO,EAAG;UAE7B,IAAI,CAACzxB,IAAI,CAAE3a,MAAM,CAAC;QAEnB,CAAC,MAAM,IAAK,OAAOA,MAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAACk4C,MAAM,CAAEl4C,MAAM,CAAC;QAErB,CAAC,MAAM,IAAK,OAAOA,MAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAACm4C,QAAQ,CAAEn4C,MAAM,CAAC;QAEvB;MAED,CAAC,MAAM;QAEN,IAAI,CAACo4C,MAAM,CAAE34C,CAAC,EAAEyC,CAAC,EAAEoW,CAAE,CAAC;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAoa,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAAC5a,CAAC,GAAG4a,MAAM;MACf,IAAI,CAACnY,CAAC,GAAGmY,MAAM;MACf,IAAI,CAAC/B,CAAC,GAAG+B,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAAk4C,OAAQG,GAAG,EAAE5zB,UAAU,GAAGxT,cAAc,EAAG;MAE1ConC,GAAG,GAAGrjC,IAAI,CAACmC,KAAK,CAAEkhC,GAAI,CAAC;MAEvB,IAAI,CAAC54C,CAAC,GAAG,CAAE44C,GAAG,IAAI,EAAE,GAAG,GAAG,IAAK,GAAG;MAClC,IAAI,CAACn2C,CAAC,GAAG,CAAEm2C,GAAG,IAAI,CAAC,GAAG,GAAG,IAAK,GAAG;MACjC,IAAI,CAAC//B,CAAC,GAAG,CAAE+/B,GAAG,GAAG,GAAG,IAAK,GAAG;MAE5Bj0B,eAAe,CAACc,mBAAmB,CAAE,IAAI,EAAET,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAle,GAAA;IAAAvG,KAAA,EAED,SAAAo4C,OAAQ34C,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAEmM,UAAU,GAAGL,eAAe,CAACI,iBAAiB,EAAG;MAEjE,IAAI,CAAC/kB,CAAC,GAAGA,CAAC;MACV,IAAI,CAACyC,CAAC,GAAGA,CAAC;MACV,IAAI,CAACoW,CAAC,GAAGA,CAAC;MAEV8L,eAAe,CAACc,mBAAmB,CAAE,IAAI,EAAET,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAle,GAAA;IAAAvG,KAAA,EAED,SAAAs4C,OAAQh3C,CAAC,EAAEG,CAAC,EAAEF,CAAC,EAAEkjB,UAAU,GAAGL,eAAe,CAACI,iBAAiB,EAAG;MAEjE;MACAljB,CAAC,GAAGwU,eAAe,CAAExU,CAAC,EAAE,CAAE,CAAC;MAC3BG,CAAC,GAAGkU,KAAK,CAAElU,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACpBF,CAAC,GAAGoU,KAAK,CAAEpU,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEpB,IAAKE,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAAChC,CAAC,GAAG,IAAI,CAACyC,CAAC,GAAG,IAAI,CAACoW,CAAC,GAAG/W,CAAC;MAE7B,CAAC,MAAM;QAEN,IAAMM,CAAC,GAAGN,CAAC,IAAI,GAAG,GAAGA,CAAC,IAAK,CAAC,GAAGE,CAAC,CAAE,GAAGF,CAAC,GAAGE,CAAC,GAAKF,CAAC,GAAGE,CAAG;QACtD,IAAM4W,CAAC,GAAK,CAAC,GAAG9W,CAAC,GAAKM,CAAC;QAEvB,IAAI,CAACpC,CAAC,GAAGs4C,OAAO,CAAE1/B,CAAC,EAAExW,CAAC,EAAEP,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;QACnC,IAAI,CAACY,CAAC,GAAG61C,OAAO,CAAE1/B,CAAC,EAAExW,CAAC,EAAEP,CAAE,CAAC;QAC3B,IAAI,CAACgX,CAAC,GAAGy/B,OAAO,CAAE1/B,CAAC,EAAExW,CAAC,EAAEP,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAEpC;MAEA8iB,eAAe,CAACc,mBAAmB,CAAE,IAAI,EAAET,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAle,GAAA;IAAAvG,KAAA,EAED,SAAAm4C,SAAUl1B,KAAK,EAAEwB,UAAU,GAAGxT,cAAc,EAAG;MAE9C,SAASsnC,WAAWA,CAAEC,MAAM,EAAG;QAE9B,IAAKA,MAAM,KAAKvxC,SAAS,EAAG;QAE5B,IAAKwxC,UAAU,CAAED,MAAO,CAAC,GAAG,CAAC,EAAG;UAE/Br/B,OAAO,CAACC,IAAI,CAAE,kCAAkC,GAAG6J,KAAK,GAAG,mBAAoB,CAAC;QAEjF;MAED;MAGA,IAAIlN,CAAC;MAEL,IAAKA,CAAC,GAAG,oBAAoB,CAAC2iC,IAAI,CAAEz1B,KAAM,CAAC,EAAG;QAE7C;;QAEA,IAAIa,KAAK;QACT,IAAMpf,IAAI,GAAGqR,CAAC,CAAE,CAAC,CAAE;QACnB,IAAM4iC,UAAU,GAAG5iC,CAAC,CAAE,CAAC,CAAE;QAEzB,QAASrR,IAAI;UAEZ,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAKof,KAAK,GAAG,8DAA8D,CAAC40B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEhG;;cAEAJ,WAAW,CAAEz0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACs0B,MAAM,CACjBpjC,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjD9O,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjD9O,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDW,UACD,CAAC;YAEF;YAEA,IAAKX,KAAK,GAAG,oEAAoE,CAAC40B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEtG;;cAEAJ,WAAW,CAAEz0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACs0B,MAAM,CACjBpjC,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjD9O,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjD9O,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEgjC,QAAQ,CAAE90B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDW,UACD,CAAC;YAEF;YAEA;UAED,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAKX,KAAK,GAAG,oFAAoF,CAAC40B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEtH;;cAEAJ,WAAW,CAAEz0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACw0B,MAAM,CACjBG,UAAU,CAAE30B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9B20B,UAAU,CAAE30B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9B20B,UAAU,CAAE30B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9BW,UACD,CAAC;YAEF;YAEA;UAED;YAECtL,OAAO,CAACC,IAAI,CAAE,mCAAmC,GAAG6J,KAAM,CAAC;QAE7D;MAED,CAAC,MAAM,IAAKlN,CAAC,GAAG,mBAAmB,CAAC2iC,IAAI,CAAEz1B,KAAM,CAAC,EAAG;QAEnD;;QAEA,IAAMo1B,GAAG,GAAGtiC,CAAC,CAAE,CAAC,CAAE;QAClB,IAAMqiB,IAAI,GAAGigB,GAAG,CAAC/zC,MAAM;QAEvB,IAAK8zB,IAAI,KAAK,CAAC,EAAG;UAEjB;UACA,OAAO,IAAI,CAACggB,MAAM,CACjBQ,QAAQ,CAAEP,GAAG,CAAChzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpCuzC,QAAQ,CAAEP,GAAG,CAAChzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpCuzC,QAAQ,CAAEP,GAAG,CAAChzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpCof,UACD,CAAC;QAEF,CAAC,MAAM,IAAK2T,IAAI,KAAK,CAAC,EAAG;UAExB;UACA,OAAO,IAAI,CAAC8f,MAAM,CAAEU,QAAQ,CAAEP,GAAG,EAAE,EAAG,CAAC,EAAE5zB,UAAW,CAAC;QAEtD,CAAC,MAAM;UAENtL,OAAO,CAACC,IAAI,CAAE,iCAAiC,GAAG6J,KAAM,CAAC;QAE1D;MAED,CAAC,MAAM,IAAKA,KAAK,IAAIA,KAAK,CAAC3e,MAAM,GAAG,CAAC,EAAG;QAEvC,OAAO,IAAI,CAACu0C,YAAY,CAAE51B,KAAK,EAAEwB,UAAW,CAAC;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAle,GAAA;IAAAvG,KAAA,EAED,SAAA64C,aAAc51B,KAAK,EAAEwB,UAAU,GAAGxT,cAAc,EAAG;MAElD;MACA,IAAMonC,GAAG,GAAGT,cAAc,CAAE30B,KAAK,CAACvN,WAAW,CAAC,CAAC,CAAE;MAEjD,IAAK2iC,GAAG,KAAKpxC,SAAS,EAAG;QAExB;QACA,IAAI,CAACixC,MAAM,CAAEG,GAAG,EAAE5zB,UAAW,CAAC;MAE/B,CAAC,MAAM;QAEN;QACAtL,OAAO,CAACC,IAAI,CAAE,6BAA6B,GAAG6J,KAAM,CAAC;MAEtD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1c,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAAChF,CAAC,EAAE,IAAI,CAACyC,CAAC,EAAE,IAAI,CAACoW,CAAE,CAAC;IAEtD;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmJ,KAAK,EAAG;MAEb,IAAI,CAACrkB,CAAC,GAAGqkB,KAAK,CAACrkB,CAAC;MAChB,IAAI,CAACyC,CAAC,GAAG4hB,KAAK,CAAC5hB,CAAC;MAChB,IAAI,CAACoW,CAAC,GAAGwL,KAAK,CAACxL,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAA84C,iBAAkBh1B,KAAK,EAAG;MAEzB,IAAI,CAACrkB,CAAC,GAAG4lB,YAAY,CAAEvB,KAAK,CAACrkB,CAAE,CAAC;MAChC,IAAI,CAACyC,CAAC,GAAGmjB,YAAY,CAAEvB,KAAK,CAAC5hB,CAAE,CAAC;MAChC,IAAI,CAACoW,CAAC,GAAG+M,YAAY,CAAEvB,KAAK,CAACxL,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAA+4C,iBAAkBj1B,KAAK,EAAG;MAEzB,IAAI,CAACrkB,CAAC,GAAG6lB,YAAY,CAAExB,KAAK,CAACrkB,CAAE,CAAC;MAChC,IAAI,CAACyC,CAAC,GAAGojB,YAAY,CAAExB,KAAK,CAAC5hB,CAAE,CAAC;MAChC,IAAI,CAACoW,CAAC,GAAGgN,YAAY,CAAExB,KAAK,CAACxL,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAgkB,oBAAA,EAAsB;MAErB,IAAI,CAAC80B,gBAAgB,CAAE,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAvyC,GAAA;IAAAvG,KAAA,EAED,SAAAikB,oBAAA,EAAsB;MAErB,IAAI,CAAC80B,gBAAgB,CAAE,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAxyC,GAAA;IAAAvG,KAAA,EAED,SAAAqzC,OAAQ5uB,UAAU,GAAGxT,cAAc,EAAG;MAErCmT,eAAe,CAACa,qBAAqB,CAAE+zB,MAAM,CAACr+B,IAAI,CAAE,IAAK,CAAC,EAAE8J,UAAW,CAAC;MAExE,OAAOzP,IAAI,CAAC8E,KAAK,CAAEnE,KAAK,CAAEqjC,MAAM,CAACv5C,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC,GAAG,KAAK,GAAGuV,IAAI,CAAC8E,KAAK,CAAEnE,KAAK,CAAEqjC,MAAM,CAAC92C,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC,GAAG,GAAG,GAAG8S,IAAI,CAAC8E,KAAK,CAAEnE,KAAK,CAAEqjC,MAAM,CAAC1gC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC;IAEnK;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAi5C,aAAcx0B,UAAU,GAAGxT,cAAc,EAAG;MAE3C,OAAO,CAAE,QAAQ,GAAG,IAAI,CAACoiC,MAAM,CAAE5uB,UAAW,CAAC,CAACwuB,QAAQ,CAAE,EAAG,CAAC,EAAG3tC,KAAK,CAAE,CAAE,CAAE,CAAC;IAE5E;EAAC;IAAAiB,GAAA;IAAAvG,KAAA,EAED,SAAAk5C,OAAQ/yC,MAAM,EAAEse,UAAU,GAAGL,eAAe,CAACI,iBAAiB,EAAG;MAEhE;;MAEAJ,eAAe,CAACa,qBAAqB,CAAE+zB,MAAM,CAACr+B,IAAI,CAAE,IAAK,CAAC,EAAE8J,UAAW,CAAC;MAExE,IAAMhlB,CAAC,GAAGu5C,MAAM,CAACv5C,CAAC;QAAEyC,CAAC,GAAG82C,MAAM,CAAC92C,CAAC;QAAEoW,CAAC,GAAG0gC,MAAM,CAAC1gC,CAAC;MAE9C,IAAMzC,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAEpW,CAAC,EAAEyC,CAAC,EAAEoW,CAAE,CAAC;MAC/B,IAAM1C,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEnW,CAAC,EAAEyC,CAAC,EAAEoW,CAAE,CAAC;MAE/B,IAAI6gC,GAAG,EAAEC,UAAU;MACnB,IAAMC,SAAS,GAAG,CAAEzjC,GAAG,GAAGC,GAAG,IAAK,GAAG;MAErC,IAAKD,GAAG,KAAKC,GAAG,EAAG;QAElBsjC,GAAG,GAAG,CAAC;QACPC,UAAU,GAAG,CAAC;MAEf,CAAC,MAAM;QAEN,IAAM7c,KAAK,GAAG1mB,GAAG,GAAGD,GAAG;QAEvBwjC,UAAU,GAAGC,SAAS,IAAI,GAAG,GAAG9c,KAAK,IAAK1mB,GAAG,GAAGD,GAAG,CAAE,GAAG2mB,KAAK,IAAK,CAAC,GAAG1mB,GAAG,GAAGD,GAAG,CAAE;QAEjF,QAASC,GAAG;UAEX,KAAKpW,CAAC;YAAE05C,GAAG,GAAG,CAAEj3C,CAAC,GAAGoW,CAAC,IAAKikB,KAAK,IAAKr6B,CAAC,GAAGoW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;YAAE;UACrD,KAAKpW,CAAC;YAAEi3C,GAAG,GAAG,CAAE7gC,CAAC,GAAG7Y,CAAC,IAAK88B,KAAK,GAAG,CAAC;YAAE;UACrC,KAAKjkB,CAAC;YAAE6gC,GAAG,GAAG,CAAE15C,CAAC,GAAGyC,CAAC,IAAKq6B,KAAK,GAAG,CAAC;YAAE;QAEtC;QAEA4c,GAAG,IAAI,CAAC;MAET;MAEAhzC,MAAM,CAAC7E,CAAC,GAAG63C,GAAG;MACdhzC,MAAM,CAAC1E,CAAC,GAAG23C,UAAU;MACrBjzC,MAAM,CAAC5E,CAAC,GAAG83C,SAAS;MAEpB,OAAOlzC,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAs5C,OAAQnzC,MAAM,EAAEse,UAAU,GAAGL,eAAe,CAACI,iBAAiB,EAAG;MAEhEJ,eAAe,CAACa,qBAAqB,CAAE+zB,MAAM,CAACr+B,IAAI,CAAE,IAAK,CAAC,EAAE8J,UAAW,CAAC;MAExEte,MAAM,CAAC1G,CAAC,GAAGu5C,MAAM,CAACv5C,CAAC;MACnB0G,MAAM,CAACjE,CAAC,GAAG82C,MAAM,CAAC92C,CAAC;MACnBiE,MAAM,CAACmS,CAAC,GAAG0gC,MAAM,CAAC1gC,CAAC;MAEnB,OAAOnS,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAu5C,SAAU90B,UAAU,GAAGxT,cAAc,EAAG;MAEvCmT,eAAe,CAACa,qBAAqB,CAAE+zB,MAAM,CAACr+B,IAAI,CAAE,IAAK,CAAC,EAAE8J,UAAW,CAAC;MAExE,IAAMhlB,CAAC,GAAGu5C,MAAM,CAACv5C,CAAC;QAAEyC,CAAC,GAAG82C,MAAM,CAAC92C,CAAC;QAAEoW,CAAC,GAAG0gC,MAAM,CAAC1gC,CAAC;MAE9C,IAAKmM,UAAU,KAAKxT,cAAc,EAAG;QAEpC;QACA,gBAAA0T,MAAA,CAAiBF,UAAU,OAAAE,MAAA,CAAMllB,CAAC,CAAC+5C,OAAO,CAAE,CAAE,CAAC,OAAA70B,MAAA,CAAMziB,CAAC,CAACs3C,OAAO,CAAE,CAAE,CAAC,OAAA70B,MAAA,CAAMrM,CAAC,CAACkhC,OAAO,CAAE,CAAE,CAAC;MAExF;MAEA,cAAA70B,MAAA,CAAe3P,IAAI,CAAC8E,KAAK,CAAEra,CAAC,GAAG,GAAI,CAAC,OAAAklB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAE5X,CAAC,GAAG,GAAI,CAAC,OAAAyiB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAExB,CAAC,GAAG,GAAI,CAAC;IAE3F;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAy5C,UAAWn4C,CAAC,EAAEG,CAAC,EAAEF,CAAC,EAAG;MAEpB,IAAI,CAAC23C,MAAM,CAAErB,KAAM,CAAC;MAEpB,OAAO,IAAI,CAACS,MAAM,CAAET,KAAK,CAACv2C,CAAC,GAAGA,CAAC,EAAEu2C,KAAK,CAACp2C,CAAC,GAAGA,CAAC,EAAEo2C,KAAK,CAACt2C,CAAC,GAAGA,CAAE,CAAC;IAE5D;EAAC;IAAAgF,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAKkJ,KAAK,EAAG;MAEZ,IAAI,CAACrkB,CAAC,IAAIqkB,KAAK,CAACrkB,CAAC;MACjB,IAAI,CAACyC,CAAC,IAAI4hB,KAAK,CAAC5hB,CAAC;MACjB,IAAI,CAACoW,CAAC,IAAIwL,KAAK,CAACxL,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAA05C,UAAWC,MAAM,EAAEC,MAAM,EAAG;MAE3B,IAAI,CAACn6C,CAAC,GAAGk6C,MAAM,CAACl6C,CAAC,GAAGm6C,MAAM,CAACn6C,CAAC;MAC5B,IAAI,CAACyC,CAAC,GAAGy3C,MAAM,CAACz3C,CAAC,GAAG03C,MAAM,CAAC13C,CAAC;MAC5B,IAAI,CAACoW,CAAC,GAAGqhC,MAAM,CAACrhC,CAAC,GAAGshC,MAAM,CAACthC,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAA6a,UAAWpZ,CAAC,EAAG;MAEd,IAAI,CAAChC,CAAC,IAAIgC,CAAC;MACX,IAAI,CAACS,CAAC,IAAIT,CAAC;MACX,IAAI,CAAC6W,CAAC,IAAI7W,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAgb,IAAK8I,KAAK,EAAG;MAEZ,IAAI,CAACrkB,CAAC,GAAGuV,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACpW,CAAC,GAAGqkB,KAAK,CAACrkB,CAAE,CAAC;MACxC,IAAI,CAACyC,CAAC,GAAG8S,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC3T,CAAC,GAAG4hB,KAAK,CAAC5hB,CAAE,CAAC;MACxC,IAAI,CAACoW,CAAC,GAAGtD,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACyC,CAAC,GAAGwL,KAAK,CAACxL,CAAE,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAmb,SAAU2I,KAAK,EAAG;MAEjB,IAAI,CAACrkB,CAAC,IAAIqkB,KAAK,CAACrkB,CAAC;MACjB,IAAI,CAACyC,CAAC,IAAI4hB,KAAK,CAAC5hB,CAAC;MACjB,IAAI,CAACoW,CAAC,IAAIwL,KAAK,CAACxL,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAob,eAAgB3Z,CAAC,EAAG;MAEnB,IAAI,CAAChC,CAAC,IAAIgC,CAAC;MACX,IAAI,CAACS,CAAC,IAAIT,CAAC;MACX,IAAI,CAAC6W,CAAC,IAAI7W,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAuW,KAAMuN,KAAK,EAAE7G,KAAK,EAAG;MAEpB,IAAI,CAACxd,CAAC,IAAI,CAAEqkB,KAAK,CAACrkB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKwd,KAAK;MACtC,IAAI,CAAC/a,CAAC,IAAI,CAAE4hB,KAAK,CAAC5hB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK+a,KAAK;MACtC,IAAI,CAAC3E,CAAC,IAAI,CAAEwL,KAAK,CAACxL,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK2E,KAAK;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAA65C,WAAYF,MAAM,EAAEC,MAAM,EAAE38B,KAAK,EAAG;MAEnC,IAAI,CAACxd,CAAC,GAAGk6C,MAAM,CAACl6C,CAAC,GAAG,CAAEm6C,MAAM,CAACn6C,CAAC,GAAGk6C,MAAM,CAACl6C,CAAC,IAAKwd,KAAK;MACnD,IAAI,CAAC/a,CAAC,GAAGy3C,MAAM,CAACz3C,CAAC,GAAG,CAAE03C,MAAM,CAAC13C,CAAC,GAAGy3C,MAAM,CAACz3C,CAAC,IAAK+a,KAAK;MACnD,IAAI,CAAC3E,CAAC,GAAGqhC,MAAM,CAACrhC,CAAC,GAAG,CAAEshC,MAAM,CAACthC,CAAC,GAAGqhC,MAAM,CAACrhC,CAAC,IAAK2E,KAAK;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAA85C,QAASh2B,KAAK,EAAE7G,KAAK,EAAG;MAEvB,IAAI,CAACi8B,MAAM,CAAErB,KAAM,CAAC;MACpB/zB,KAAK,CAACo1B,MAAM,CAAEpB,KAAM,CAAC;MAErB,IAAMx2C,CAAC,GAAGiV,IAAI,CAAEshC,KAAK,CAACv2C,CAAC,EAAEw2C,KAAK,CAACx2C,CAAC,EAAE2b,KAAM,CAAC;MACzC,IAAMxb,CAAC,GAAG8U,IAAI,CAAEshC,KAAK,CAACp2C,CAAC,EAAEq2C,KAAK,CAACr2C,CAAC,EAAEwb,KAAM,CAAC;MACzC,IAAM1b,CAAC,GAAGgV,IAAI,CAAEshC,KAAK,CAACt2C,CAAC,EAAEu2C,KAAK,CAACv2C,CAAC,EAAE0b,KAAM,CAAC;MAEzC,IAAI,CAACq7B,MAAM,CAAEh3C,CAAC,EAAEG,CAAC,EAAEF,CAAE,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAgF,GAAA;IAAAvG,KAAA,EAED,SAAAulC,eAAgBvjC,CAAC,EAAG;MAEnB,IAAI,CAACvC,CAAC,GAAGuC,CAAC,CAACiU,CAAC;MACZ,IAAI,CAAC/T,CAAC,GAAGF,CAAC,CAACN,CAAC;MACZ,IAAI,CAAC4W,CAAC,GAAGtW,CAAC,CAAC0oB,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAub,aAAcxF,CAAC,EAAG;MAEjB,IAAMtW,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEyC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEoW,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAM/Y,CAAC,GAAGwW,CAAC,CAACyF,QAAQ;MAEpB,IAAI,CAAC/b,CAAC,GAAGF,CAAC,CAAE,CAAC,CAAE,GAAGE,CAAC,GAAGF,CAAC,CAAE,CAAC,CAAE,GAAG2C,CAAC,GAAG3C,CAAC,CAAE,CAAC,CAAE,GAAG+Y,CAAC;MAC7C,IAAI,CAACpW,CAAC,GAAG3C,CAAC,CAAE,CAAC,CAAE,GAAGE,CAAC,GAAGF,CAAC,CAAE,CAAC,CAAE,GAAG2C,CAAC,GAAG3C,CAAC,CAAE,CAAC,CAAE,GAAG+Y,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAG/Y,CAAC,CAAE,CAAC,CAAE,GAAGE,CAAC,GAAGF,CAAC,CAAE,CAAC,CAAE,GAAG2C,CAAC,GAAG3C,CAAC,CAAE,CAAC,CAAE,GAAG+Y,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQhd,CAAC,EAAG;MAEX,OAASA,CAAC,CAACZ,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQY,CAAC,CAAC6B,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM7B,CAAC,CAACiY,CAAC,KAAK,IAAI,CAACA,CAAG;IAEtE;EAAC;IAAA/R,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAAC9d,CAAC,GAAGmV,KAAK,CAAE2I,MAAM,CAAE;MACxB,IAAI,CAACrb,CAAC,GAAG0S,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACjF,CAAC,GAAG1D,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC3I,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAAC9d,CAAC;MACxBmV,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACrb,CAAC;MAC5B0S,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACjF,CAAC;MAE5B,OAAO1D,KAAK;IAEb;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAyd,oBAAqBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,CAAC/U,CAAC,GAAGie,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MAChC,IAAI,CAACtS,CAAC,GAAGwb,SAAS,CAACE,IAAI,CAAEpJ,KAAM,CAAC;MAChC,IAAI,CAAC8D,CAAC,GAAGoF,SAAS,CAACyO,IAAI,CAAE3X,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,OAAO,IAAI,CAACqsB,MAAM,CAAC,CAAC;IAErB;EAAC;IAAA9sC,GAAA,EAAA0xC,iBAAA;IAAAj4C,KAAA,eAAAV,mBAAA,GAAAqF,IAAA,CAED,SAAA3E,MAAA;MAAA,OAAAV,mBAAA,GAAAuB,IAAA,UAAAkd,OAAAg8B,SAAA;QAAA,kBAAAA,SAAA,CAAA30C,IAAA,GAAA20C,SAAA,CAAAt2C,IAAA;UAAA;YAAAs2C,SAAA,CAAAt2C,IAAA;YAEC,OAAM,IAAI,CAAChE,CAAC;UAAA;YAAAs6C,SAAA,CAAAt2C,IAAA;YACZ,OAAM,IAAI,CAACvB,CAAC;UAAA;YAAA63C,SAAA,CAAAt2C,IAAA;YACZ,OAAM,IAAI,CAAC6U,CAAC;UAAA;UAAA;YAAA,OAAAyhC,SAAA,CAAAx0C,IAAA;QAAA;MAAA,GAAAvF,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAg4C,KAAA;AAAA,EANE93C,MAAM,CAACE,QAAQ;AAUnB,IAAM44C,MAAM,GAAG,aAAc,IAAIhB,KAAK,CAAC,CAAC;AAExCA,KAAK,CAACgC,KAAK,GAAGpC,cAAc;AAAC,IAEvBqC,iBAAiB,GAAA5yC,OAAA,CAAA4yC,iBAAA,0BAAAC,SAAA;EAAApyB,SAAA,CAAAmyB,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAnyB,YAAA,CAAAiyB,iBAAA;EAEtB,SAAAA,kBAAaxN,UAAU,EAAG;IAAA,IAAA2N,OAAA;IAAAr0C,eAAA,OAAAk0C,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAA94C,IAAA;IAEA+4C,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKj5C,IAAI,GAAG,mBAAmB;IAE/Bi5C,OAAA,CAAKt2B,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpCoC,OAAA,CAAKtF,GAAG,GAAG,IAAI;IAEfsF,OAAA,CAAKnF,QAAQ,GAAG,IAAI;IACpBmF,OAAA,CAAKlF,iBAAiB,GAAG,GAAG;IAE5BkF,OAAA,CAAKjF,KAAK,GAAG,IAAI;IACjBiF,OAAA,CAAKhF,cAAc,GAAG,GAAG;IAEzBgF,OAAA,CAAKpE,WAAW,GAAG,IAAI;IAEvBoE,OAAA,CAAKpF,QAAQ,GAAG,IAAI;IAEpBoF,OAAA,CAAKjE,MAAM,GAAG,IAAI;IAClBiE,OAAA,CAAKhE,OAAO,GAAG1rC,iBAAiB;IAChC0vC,OAAA,CAAK9D,YAAY,GAAG,CAAC;IACrB8D,OAAA,CAAK7D,eAAe,GAAG,IAAI;IAE3B6D,OAAA,CAAKhD,SAAS,GAAG,KAAK;IACtBgD,OAAA,CAAK/C,kBAAkB,GAAG,CAAC;IAC3B+C,OAAA,CAAK9C,gBAAgB,GAAG,OAAO;IAC/B8C,OAAA,CAAK7C,iBAAiB,GAAG,OAAO;IAEhC6C,OAAA,CAAK3C,GAAG,GAAG,IAAI;IAEf2C,OAAA,CAAKlH,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA2N,OAAA;EAE9B;EAAC5zC,YAAA,CAAAyzC,iBAAA;IAAA1zC,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAN,iBAAA,CAAAt6C,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGnsB,MAAM,CAACmsB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGpsB,MAAM,CAACosB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGrsB,MAAM,CAACqsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGtsB,MAAM,CAACssB,cAAc;MAE3C,IAAI,CAACY,WAAW,GAAGltB,MAAM,CAACktB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGrtB,MAAM,CAACqtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGttB,MAAM,CAACstB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGxtB,MAAM,CAACwtB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGztB,MAAM,CAACytB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGzuB,MAAM,CAACyuB,iBAAiB;MAEjD,IAAI,CAACE,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAwC,iBAAA;AAAA,EAxE8B9J,QAAQ,GA4ExC;AAEA,IAAMqK,OAAO,GAAG,aAAcC,eAAe,CAAC,CAAC;AAE/C,SAASA,eAAeA,CAAA,EAAG;EAE1B;;EAEA,IAAM73B,MAAM,GAAG,IAAI83B,WAAW,CAAE,CAAE,CAAC;EACnC,IAAMC,SAAS,GAAG,IAAIrhC,YAAY,CAAEsJ,MAAO,CAAC;EAC5C,IAAMg4B,UAAU,GAAG,IAAIrhC,WAAW,CAAEqJ,MAAO,CAAC;EAE5C,IAAMi4B,SAAS,GAAG,IAAIthC,WAAW,CAAE,GAAI,CAAC;EACxC,IAAMuhC,UAAU,GAAG,IAAIvhC,WAAW,CAAE,GAAI,CAAC;EAEzC,KAAM,IAAItZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAGA,CAAC,EAAG;IAEhC,IAAMV,CAAC,GAAGU,CAAC,GAAG,GAAG;;IAEjB;;IAEA,IAAKV,CAAC,GAAG,CAAE,EAAE,EAAG;MAEfs7C,SAAS,CAAE56C,CAAC,CAAE,GAAG,MAAM;MACvB46C,SAAS,CAAE56C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B66C,UAAU,CAAE76C,CAAC,CAAE,GAAG,EAAE;MACpB66C,UAAU,CAAE76C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKV,CAAC,GAAG,CAAE,EAAE,EAAG;MAEtBs7C,SAAS,CAAE56C,CAAC,CAAE,GAAG,MAAM,IAAM,CAAEV,CAAC,GAAG,EAAI;MACvCs7C,SAAS,CAAE56C,CAAC,GAAG,KAAK,CAAE,GAAK,MAAM,IAAM,CAAEV,CAAC,GAAG,EAAI,GAAK,MAAM;MAC5Du7C,UAAU,CAAE76C,CAAC,CAAE,GAAG,CAAEV,CAAC,GAAG,CAAC;MACzBu7C,UAAU,CAAE76C,CAAC,GAAG,KAAK,CAAE,GAAG,CAAEV,CAAC,GAAG,CAAC;;MAEjC;IAED,CAAC,MAAM,IAAKA,CAAC,IAAI,EAAE,EAAG;MAErBs7C,SAAS,CAAE56C,CAAC,CAAE,GAAKV,CAAC,GAAG,EAAE,IAAM,EAAE;MACjCs7C,SAAS,CAAE56C,CAAC,GAAG,KAAK,CAAE,GAAOV,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,MAAM;MACtDu7C,UAAU,CAAE76C,CAAC,CAAE,GAAG,EAAE;MACpB66C,UAAU,CAAE76C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKV,CAAC,GAAG,GAAG,EAAG;MAErBs7C,SAAS,CAAE56C,CAAC,CAAE,GAAG,MAAM;MACvB46C,SAAS,CAAE56C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B66C,UAAU,CAAE76C,CAAC,CAAE,GAAG,EAAE;MACpB66C,UAAU,CAAE76C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM;MAEN46C,SAAS,CAAE56C,CAAC,CAAE,GAAG,MAAM;MACvB46C,SAAS,CAAE56C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B66C,UAAU,CAAE76C,CAAC,CAAE,GAAG,EAAE;MACpB66C,UAAU,CAAE76C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;IAE7B;EAED;;EAEA;;EAEA,IAAM86C,aAAa,GAAG,IAAIxhC,WAAW,CAAE,IAAK,CAAC;EAC7C,IAAMyhC,aAAa,GAAG,IAAIzhC,WAAW,CAAE,EAAG,CAAC;EAC3C,IAAM0hC,WAAW,GAAG,IAAI1hC,WAAW,CAAE,EAAG,CAAC;EAEzC,KAAM,IAAItZ,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;IAEjC,IAAI8V,CAAC,GAAG9V,GAAC,IAAI,EAAE,CAAC,CAAC;IACjB,IAAIV,EAAC,GAAG,CAAC,CAAC,CAAC;;IAEX;IACA,OAAQ,CAAEwW,CAAC,GAAG,UAAU,MAAO,CAAC,EAAG;MAElCA,CAAC,KAAK,CAAC;MACPxW,EAAC,IAAI,UAAU,CAAC,CAAC;IAElB;;IAEAwW,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC;IACnBxW,EAAC,IAAI,UAAU,CAAC,CAAC;;IAEjBw7C,aAAa,CAAE96C,GAAC,CAAE,GAAG8V,CAAC,GAAGxW,EAAC;EAE3B;EAEA,KAAM,IAAIU,GAAC,GAAG,IAAI,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;IAEpC86C,aAAa,CAAE96C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,IAAI,IAAM,EAAE,CAAE;EAEzD;EAEA,KAAM,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;IAE/B+6C,aAAa,CAAE/6C,GAAC,CAAE,GAAGA,GAAC,IAAI,EAAE;EAE7B;EAEA+6C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAChCA,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAI/6C,GAAC,GAAG,EAAE,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;IAEhC+6C,aAAa,CAAE/6C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,EAAE,IAAM,EAAE,CAAE;EAEvD;EAEA+6C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAI/6C,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;IAE/B,IAAKA,IAAC,KAAK,EAAE,EAAG;MAEfg7C,WAAW,CAAEh7C,IAAC,CAAE,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IACN06C,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,WAAW,EAAEA;EACd,CAAC;AAEF;;AAEA;;AAEA,SAASC,WAAWA,CAAEC,GAAG,EAAG;EAE3B,IAAKnmC,IAAI,CAAC6B,GAAG,CAAEskC,GAAI,CAAC,GAAG,KAAK,EAAGhiC,OAAO,CAACC,IAAI,CAAE,oDAAqD,CAAC;EAEnG+hC,GAAG,GAAGxlC,KAAK,CAAEwlC,GAAG,EAAE,CAAE,KAAK,EAAE,KAAM,CAAC;EAElCX,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE,GAAGQ,GAAG;EAC5B,IAAM35C,CAAC,GAAGg5C,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE;EACjC,IAAMr7C,CAAC,GAAKiC,CAAC,IAAI,EAAE,GAAK,KAAK;EAC7B,OAAOg5C,OAAO,CAACK,SAAS,CAAEt7C,CAAC,CAAE,IAAK,CAAEiC,CAAC,GAAG,UAAU,KAAMg5C,OAAO,CAACM,UAAU,CAAEv7C,CAAC,CAAE,CAAE;AAElF;;AAEA;;AAEA,SAAS67C,aAAaA,CAAED,GAAG,EAAG;EAE7B,IAAMplC,CAAC,GAAGolC,GAAG,IAAI,EAAE;EACnBX,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE,GAAGJ,OAAO,CAACO,aAAa,CAAEP,OAAO,CAACS,WAAW,CAAEllC,CAAC,CAAE,IAAKolC,GAAG,GAAG,KAAK,CAAE,CAAE,GAAGX,OAAO,CAACQ,aAAa,CAAEjlC,CAAC,CAAE;EAC1H,OAAOykC,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE;AAE9B;AAEA,IAAMU,SAAS,GAAAh0C,OAAA,CAAAg0C,SAAA,GAAG;EACjBH,WAAW,EAAEA,WAAW;EACxBE,aAAa,EAAEA;AAChB,CAAC;AAED,IAAME,SAAS,GAAG,aAAc,IAAIlnB,OAAO,CAAC,CAAC;AAC7C,IAAMmnB,UAAU,GAAG,aAAc,IAAIvhC,OAAO,CAAC,CAAC;AAAC,IAEzCwhC,eAAe,GAAAn0C,OAAA,CAAAm0C,eAAA;EAEpB,SAAAA,gBAAa5mC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,GAAG,KAAK,EAAG;IAAA31C,eAAA,OAAAy1C,eAAA;IAElD,IAAKl0B,KAAK,CAACC,OAAO,CAAE3S,KAAM,CAAC,EAAG;MAE7B,MAAM,IAAIrR,SAAS,CAAE,uDAAwD,CAAC;IAE/E;IAEA,IAAI,CAACo4C,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACj3C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACkQ,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6mC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACrsB,KAAK,GAAGxa,KAAK,KAAK3N,SAAS,GAAG2N,KAAK,CAACtQ,MAAM,GAAGm3C,QAAQ,GAAG,CAAC;IAC9D,IAAI,CAACC,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACE,KAAK,GAAG3oC,eAAe;IAC5B,IAAI,CAAC4oC,WAAW,GAAG;MAAEt+B,MAAM,EAAE,CAAC;MAAE6R,KAAK,EAAE,CAAE;IAAE,CAAC;IAC5C,IAAI,CAAC0sB,OAAO,GAAGlvC,SAAS;IAExB,IAAI,CAACma,OAAO,GAAG,CAAC;EAEjB;EAACvgB,YAAA,CAAAg1C,eAAA;IAAAj1C,GAAA;IAAAvG,KAAA,EAED,SAAA+7C,iBAAA,EAAmB,CAAC;EAAC;IAAAx1C,GAAA;IAAA2S,GAAA,EAErB,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC+mB,OAAO,EAAG;IAEtC;EAAC;IAAAxgB,GAAA;IAAAvG,KAAA,EAED,SAAAg8C,SAAUh8C,KAAK,EAAG;MAEjB,IAAI,CAAC47C,KAAK,GAAG57C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACpkB,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;MACvB,IAAI,CAACkQ,KAAK,GAAG,IAAIkU,MAAM,CAAClU,KAAK,CAACnQ,WAAW,CAAEqkB,MAAM,CAAClU,KAAM,CAAC;MACzD,IAAI,CAAC6mC,QAAQ,GAAG3yB,MAAM,CAAC2yB,QAAQ;MAC/B,IAAI,CAACrsB,KAAK,GAAGtG,MAAM,CAACsG,KAAK;MACzB,IAAI,CAACssB,UAAU,GAAG5yB,MAAM,CAAC4yB,UAAU;MAEnC,IAAI,CAACE,KAAK,GAAG9yB,MAAM,CAAC8yB,KAAK;MACzB,IAAI,CAACE,OAAO,GAAGhzB,MAAM,CAACgzB,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAv1C,GAAA;IAAAvG,KAAA,EAED,SAAAi8C,OAAQC,MAAM,EAAEx+B,SAAS,EAAEy+B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAACT,QAAQ;MACvBU,MAAM,IAAIz+B,SAAS,CAAC+9B,QAAQ;MAE5B,KAAM,IAAIx7C,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACk6C,QAAQ,EAAEx7C,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,IAAI,CAAC2U,KAAK,CAAEsnC,MAAM,GAAGj8C,CAAC,CAAE,GAAGyd,SAAS,CAAC9I,KAAK,CAAEunC,MAAM,GAAGl8C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAo8C,UAAWxnC,KAAK,EAAG;MAElB,IAAI,CAACA,KAAK,CAACsE,GAAG,CAAEtE,KAAM,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAArO,GAAA;IAAAvG,KAAA,EAED,SAAAub,aAAcxF,CAAC,EAAG;MAEjB,IAAK,IAAI,CAAC0lC,QAAQ,KAAK,CAAC,EAAG;QAE1B,KAAM,IAAIx7C,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE9Cs7C,UAAU,CAAC99B,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;UACzCs7C,UAAU,CAAChgC,YAAY,CAAExF,CAAE,CAAC;UAE5B,IAAI,CAACsmC,KAAK,CAAEp8C,CAAC,EAAEs7C,UAAU,CAACtlC,CAAC,EAAEslC,UAAU,CAAC75C,CAAE,CAAC;QAE5C;MAED,CAAC,MAAM,IAAK,IAAI,CAAC+5C,QAAQ,KAAK,CAAC,EAAG;QAEjC,KAAM,IAAIx7C,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;UAE9Cq7C,SAAS,CAAC79B,mBAAmB,CAAE,IAAI,EAAExd,IAAE,CAAC;UACxCq7C,SAAS,CAAC//B,YAAY,CAAExF,CAAE,CAAC;UAE3B,IAAI,CAACumC,MAAM,CAAEr8C,IAAC,EAAEq7C,SAAS,CAACrlC,CAAC,EAAEqlC,SAAS,CAAC55C,CAAC,EAAE45C,SAAS,CAAC5wB,CAAE,CAAC;QAExD;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAchV,CAAC,EAAG;MAEjB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9Cq7C,SAAS,CAAC79B,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCq7C,SAAS,CAACvwB,YAAY,CAAEhV,CAAE,CAAC;QAE3B,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEq7C,SAAS,CAACrlC,CAAC,EAAEqlC,SAAS,CAAC55C,CAAC,EAAE45C,SAAS,CAAC5wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA40B,kBAAmB7e,CAAC,EAAG;MAEtB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9Cq7C,SAAS,CAAC79B,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCq7C,SAAS,CAAC1mB,iBAAiB,CAAE7e,CAAE,CAAC;QAEhC,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEq7C,SAAS,CAACrlC,CAAC,EAAEqlC,SAAS,CAAC55C,CAAC,EAAE45C,SAAS,CAAC5wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA41B,mBAAoB7f,CAAC,EAAG;MAEvB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9Cq7C,SAAS,CAAC79B,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCq7C,SAAS,CAAC1lB,kBAAkB,CAAE7f,CAAE,CAAC;QAEjC,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEq7C,SAAS,CAACrlC,CAAC,EAAEqlC,SAAS,CAAC55C,CAAC,EAAE45C,SAAS,CAAC5wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKlZ,KAAK,EAAEud,MAAM,GAAG,CAAC,EAAG;MAExB;MACA,IAAI,CAAC3I,KAAK,CAACsE,GAAG,CAAElZ,KAAK,EAAEud,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAya,aAAcjG,KAAK,EAAE+nC,SAAS,EAAG;MAEhC,IAAIv8C,KAAK,GAAG,IAAI,CAAC4U,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAGc,SAAS,CAAE;MAE3D,IAAK,IAAI,CAACb,UAAU,EAAG17C,KAAK,GAAGqZ,WAAW,CAAErZ,KAAK,EAAE,IAAI,CAAC4U,KAAM,CAAC;MAE/D,OAAO5U,KAAK;IAEb;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAwa,aAAchG,KAAK,EAAE+nC,SAAS,EAAEv8C,KAAK,EAAG;MAEvC,IAAK,IAAI,CAAC07C,UAAU,EAAG17C,KAAK,GAAG6Z,SAAS,CAAE7Z,KAAK,EAAE,IAAI,CAAC4U,KAAM,CAAC;MAE7D,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAGc,SAAS,CAAE,GAAGv8C,KAAK;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA2d,KAAMnJ,KAAK,EAAG;MAEb,IAAIyB,CAAC,GAAG,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,CAAE;MAE3C,IAAK,IAAI,CAACC,UAAU,EAAGzlC,CAAC,GAAGoD,WAAW,CAAEpD,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAEvD,OAAOqB,CAAC;IAET;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAM9F,KAAK,EAAEyB,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACylC,UAAU,EAAGzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,CAAE,GAAGxlC,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAA4d,KAAMpJ,KAAK,EAAG;MAEb,IAAI9S,CAAC,GAAG,IAAI,CAACkT,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAGh6C,CAAC,GAAG2X,WAAW,CAAE3X,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAEvD,OAAOlT,CAAC;IAET;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM/F,KAAK,EAAE9S,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACg6C,UAAU,EAAGh6C,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAG/5C,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAmsB,KAAM3X,KAAK,EAAG;MAEb,IAAIkW,CAAC,GAAG,IAAI,CAAC9V,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAGhxB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAEvD,OAAO8V,CAAC;IAET;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6qB,KAAMrW,KAAK,EAAEkW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACgxB,UAAU,EAAGhxB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAG/wB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAosB,KAAM5X,KAAK,EAAG;MAEb,IAAImW,CAAC,GAAG,IAAI,CAAC/V,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAG/wB,CAAC,GAAGtR,WAAW,CAAEsR,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAEvD,OAAO+V,CAAC;IAET;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA8qB,KAAMtW,KAAK,EAAEmW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC+wB,UAAU,EAAG/wB,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAG9wB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAq8C,MAAO7nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAG;MAEpB8S,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAC3B,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAs8C,OAAQ9nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAExBlW,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAC3B,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAC3B,IAAI,CAACkT,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGkW,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAw8C,QAAShoC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAE5BnW,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;QAC9B+V,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAC3B,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAC3B,IAAI,CAACkT,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGkW,CAAC;MAC3B,IAAI,CAAC9V,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGmW,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAy8C,SAAU3pB,QAAQ,EAAG;MAEpB,IAAI,CAACipB,gBAAgB,GAAGjpB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACmQ,KAAK,EAAE,IAAI,CAAC6mC,QAAS,CAAC,CAAC9gC,IAAI,CAAE,IAAK,CAAC;IAEtE;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZ80B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBt6C,IAAI,EAAE,IAAI,CAACyT,KAAK,CAACnQ,WAAW,CAACC,IAAI;QACjCkQ,KAAK,EAAE0S,KAAK,CAACI,IAAI,CAAE,IAAI,CAAC9S,KAAM,CAAC;QAC/B8mC,UAAU,EAAE,IAAI,CAACA;MAClB,CAAC;MAED,IAAK,IAAI,CAACh3C,IAAI,KAAK,EAAE,EAAGiiB,IAAI,CAACjiB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAK,IAAI,CAACk3C,KAAK,KAAK3oC,eAAe,EAAG0T,IAAI,CAACi1B,KAAK,GAAG,IAAI,CAACA,KAAK;MAC7D,IAAK,IAAI,CAACC,WAAW,CAACt+B,MAAM,KAAK,CAAC,IAAI,IAAI,CAACs+B,WAAW,CAACzsB,KAAK,KAAK,CAAE,CAAC,EAAGzI,IAAI,CAACk1B,WAAW,GAAG,IAAI,CAACA,WAAW;MAE1G,OAAOl1B,IAAI;IAEZ;EAAC;EAAA,OAAA60B,eAAA;AAAA,KAIF;AAAA,IAEMkB,mBAAmB,GAAAr1C,OAAA,CAAAq1C,mBAAA,0BAAAC,gBAAA;EAAA70B,SAAA,CAAA40B,mBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA50B,YAAA,CAAA00B,mBAAA;EAExB,SAAAA,oBAAa9nC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAA22C,mBAAA;IAAA,OAAAE,QAAA,CAAAv7C,IAAA,OAEnC,IAAIuY,SAAS,CAAEhF,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAEpD;EAAC,OAAAl1C,YAAA,CAAAk2C,mBAAA;AAAA,EANgClB,eAAe;AAAA,IAU3CqB,oBAAoB,GAAAx1C,OAAA,CAAAw1C,oBAAA,0BAAAC,iBAAA;EAAAh1B,SAAA,CAAA+0B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA/0B,YAAA,CAAA60B,oBAAA;EAEzB,SAAAA,qBAAajoC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAA82C,oBAAA;IAAA,OAAAE,QAAA,CAAA17C,IAAA,OAEnC,IAAIoY,UAAU,CAAE7E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAl1C,YAAA,CAAAq2C,oBAAA;AAAA,EANiCrB,eAAe;AAAA,IAU5CwB,2BAA2B,GAAA31C,OAAA,CAAA21C,2BAAA,0BAAAC,iBAAA;EAAAn1B,SAAA,CAAAk1B,2BAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAl1B,YAAA,CAAAg1B,2BAAA;EAEhC,SAAAA,4BAAapoC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAAi3C,2BAAA;IAAA,OAAAE,QAAA,CAAA77C,IAAA,OAEnC,IAAIohB,iBAAiB,CAAE7N,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAE5D;EAAC,OAAAl1C,YAAA,CAAAw2C,2BAAA;AAAA,EANwCxB,eAAe;AAAA,IAUnD2B,oBAAoB,GAAA91C,OAAA,CAAA81C,oBAAA,0BAAAC,iBAAA;EAAAt1B,SAAA,CAAAq1B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAr1B,YAAA,CAAAm1B,oBAAA;EAEzB,SAAAA,qBAAavoC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAAo3C,oBAAA;IAAA,OAAAE,QAAA,CAAAh8C,IAAA,OAEnC,IAAIsY,UAAU,CAAE/E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAl1C,YAAA,CAAA22C,oBAAA;AAAA,EANiC3B,eAAe;AAAA,IAU5C8B,qBAAqB,GAAAj2C,OAAA,CAAAi2C,qBAAA,0BAAAC,iBAAA;EAAAz1B,SAAA,CAAAw1B,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAx1B,YAAA,CAAAs1B,qBAAA;EAE1B,SAAAA,sBAAa1oC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAAu3C,qBAAA;IAAA,OAAAE,QAAA,CAAAn8C,IAAA,OAEnC,IAAImY,WAAW,CAAE5E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAEtD;EAAC,OAAAl1C,YAAA,CAAA82C,qBAAA;AAAA,EANkC9B,eAAe;AAAA,IAU7CiC,oBAAoB,GAAAp2C,OAAA,CAAAo2C,oBAAA,0BAAAC,iBAAA;EAAA51B,SAAA,CAAA21B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA31B,YAAA,CAAAy1B,oBAAA;EAEzB,SAAAA,qBAAa7oC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAA03C,oBAAA;IAAA,OAAAE,QAAA,CAAAt8C,IAAA,OAEnC,IAAIqY,UAAU,CAAE9E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAl1C,YAAA,CAAAi3C,oBAAA;AAAA,EANiCjC,eAAe;AAAA,IAU5CoC,qBAAqB,GAAAv2C,OAAA,CAAAu2C,qBAAA,0BAAAC,iBAAA;EAAA/1B,SAAA,CAAA81B,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA91B,YAAA,CAAA41B,qBAAA;EAE1B,SAAAA,sBAAahpC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAA63C,qBAAA;IAAA,OAAAE,QAAA,CAAAz8C,IAAA,OAEnC,IAAIkY,WAAW,CAAE3E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAEtD;EAAC,OAAAl1C,YAAA,CAAAo3C,qBAAA;AAAA,EANkCpC,eAAe;AAAA,IAU7CuC,sBAAsB,GAAA12C,OAAA,CAAA02C,sBAAA,0BAAAC,iBAAA;EAAAl2B,SAAA,CAAAi2B,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAj2B,YAAA,CAAA+1B,sBAAA;EAE3B,SAAAA,uBAAanpC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA,IAAAwC,OAAA;IAAAn4C,eAAA,OAAAg4C,sBAAA;IAE1CG,OAAA,GAAAD,QAAA,CAAA58C,IAAA,OAAO,IAAImY,WAAW,CAAE5E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;IAErDwC,OAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,OAAA;EAEtC;EAAC13C,YAAA,CAAAu3C,sBAAA;IAAAx3C,GAAA;IAAAvG,KAAA,EAED,SAAA2d,KAAMnJ,KAAK,EAAG;MAEb,IAAIyB,CAAC,GAAGmlC,aAAa,CAAE,IAAI,CAACxmC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,CAAG,CAAC;MAE5D,IAAK,IAAI,CAACC,UAAU,EAAGzlC,CAAC,GAAGoD,WAAW,CAAEpD,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAEvD,OAAOqB,CAAC;IAET;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAM9F,KAAK,EAAEyB,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACylC,UAAU,EAAGzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,CAAE,GAAGP,WAAW,CAAEjlC,CAAE,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAA4d,KAAMpJ,KAAK,EAAG;MAEb,IAAI9S,CAAC,GAAG05C,aAAa,CAAE,IAAI,CAACxmC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAGh6C,CAAC,GAAG2X,WAAW,CAAE3X,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAEvD,OAAOlT,CAAC;IAET;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM/F,KAAK,EAAE9S,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACg6C,UAAU,EAAGh6C,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAGP,WAAW,CAAEx5C,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAmsB,KAAM3X,KAAK,EAAG;MAEb,IAAIkW,CAAC,GAAG0wB,aAAa,CAAE,IAAI,CAACxmC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAGhxB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAEvD,OAAO8V,CAAC;IAET;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA6qB,KAAMrW,KAAK,EAAEkW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACgxB,UAAU,EAAGhxB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAGP,WAAW,CAAExwB,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAosB,KAAM5X,KAAK,EAAG;MAEb,IAAImW,CAAC,GAAGywB,aAAa,CAAE,IAAI,CAACxmC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAG/wB,CAAC,GAAGtR,WAAW,CAAEsR,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAEvD,OAAO+V,CAAC;IAET;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA8qB,KAAMtW,KAAK,EAAEmW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC+wB,UAAU,EAAG/wB,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACinC,QAAQ,GAAG,CAAC,CAAE,GAAGP,WAAW,CAAEvwB,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAq8C,MAAO7nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAG;MAEpB8S,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEjlC,CAAE,CAAC;MAC1C,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEx5C,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAs8C,OAAQ9nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAExBlW,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEjlC,CAAE,CAAC;MAC1C,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEx5C,CAAE,CAAC;MAC1C,IAAI,CAACkT,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAExwB,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAw8C,QAAShoC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAE5BnW,KAAK,IAAI,IAAI,CAACinC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;QAC9B+V,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEjlC,CAAE,CAAC;MAC1C,IAAI,CAACrB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEx5C,CAAE,CAAC;MAC1C,IAAI,CAACkT,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAExwB,CAAE,CAAC;MAC1C,IAAI,CAAC9V,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG0mC,WAAW,CAAEvwB,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAozB,sBAAA;AAAA,EApJmCvC,eAAe;AAAA,IAyJ9C4C,sBAAsB,GAAA/2C,OAAA,CAAA+2C,sBAAA,0BAAAC,iBAAA;EAAAv2B,SAAA,CAAAs2B,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAt2B,YAAA,CAAAo2B,sBAAA;EAE3B,SAAAA,uBAAaxpC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAAq4C,sBAAA;IAAA,OAAAE,QAAA,CAAAj9C,IAAA,OAEnC,IAAIiY,YAAY,CAAE1E,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAEvD;EAAC,OAAAl1C,YAAA,CAAA43C,sBAAA;AAAA,EANmC5C,eAAe;AAAA,IAU9C+C,sBAAsB,GAAAl3C,OAAA,CAAAk3C,sBAAA,0BAAAC,kBAAA;EAAA12B,SAAA,CAAAy2B,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAz2B,YAAA,CAAAu2B,sBAAA;EAE3B,SAAAA,uBAAa3pC,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAG;IAAA31C,eAAA,OAAAw4C,sBAAA;IAAA,OAAAE,QAAA,CAAAp9C,IAAA,OAEnC,IAAIqhB,YAAY,CAAE9N,KAAM,CAAC,EAAE6mC,QAAQ,EAAEC,UAAU;EAEvD;EAAC,OAAAl1C,YAAA,CAAA+3C,sBAAA;AAAA,EANmC/C,eAAe;AAUpD,IAAIkD,KAAK,GAAG,CAAC;AAEb,IAAMC,GAAG,GAAG,aAAc,IAAI9e,OAAO,CAAC,CAAC;AACvC,IAAM+e,IAAI,GAAG,aAAc,IAAI3X,QAAQ,CAAC,CAAC;AACzC,IAAM4X,OAAO,GAAG,aAAc,IAAIzqB,OAAO,CAAC,CAAC;AAC3C,IAAM0qB,MAAM,GAAG,aAAc,IAAIrnB,IAAI,CAAC,CAAC;AACvC,IAAMsnB,gBAAgB,GAAG,aAAc,IAAItnB,IAAI,CAAC,CAAC;AACjD,IAAMunB,SAAS,GAAG,aAAc,IAAI5qB,OAAO,CAAC,CAAC;AAAC,IAExC6qB,cAAc,GAAA53C,OAAA,CAAA43C,cAAA,0BAAAC,iBAAA;EAAAp3B,SAAA,CAAAm3B,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAn3B,YAAA,CAAAi3B,cAAA;EAEnB,SAAAA,eAAA,EAAc;IAAA,IAAAG,OAAA;IAAAr5C,eAAA,OAAAk5C,cAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA99C,IAAA;IAEA+9C,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5B3/C,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAu2B,OAAA,GAAQ,IAAI,EAAE;MAAEp/C,KAAK,EAAE0+C,KAAK;IAAI,CAAE,CAAC;IAExDU,OAAA,CAAK3pC,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1BiqC,OAAA,CAAK16C,IAAI,GAAG,EAAE;IACd06C,OAAA,CAAKj+C,IAAI,GAAG,gBAAgB;IAE5Bi+C,OAAA,CAAK5qC,KAAK,GAAG,IAAI;IACjB4qC,OAAA,CAAK5lB,UAAU,GAAG,CAAC,CAAC;IAEpB4lB,OAAA,CAAKE,eAAe,GAAG,CAAC,CAAC;IACzBF,OAAA,CAAKG,oBAAoB,GAAG,KAAK;IAEjCH,OAAA,CAAKI,MAAM,GAAG,EAAE;IAEhBJ,OAAA,CAAKjmB,WAAW,GAAG,IAAI;IACvBimB,OAAA,CAAKK,cAAc,GAAG,IAAI;IAE1BL,OAAA,CAAKM,SAAS,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEvwB,KAAK,EAAEsI;IAAS,CAAC;IAE9C0nB,OAAA,CAAK51B,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAA41B,OAAA;EAEpB;EAAC54C,YAAA,CAAAy4C,cAAA;IAAA14C,GAAA;IAAAvG,KAAA,EAED,SAAA4/C,SAAA,EAAW;MAEV,OAAO,IAAI,CAACprC,KAAK;IAElB;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA6/C,SAAUrrC,KAAK,EAAG;MAEjB,IAAK8S,KAAK,CAACC,OAAO,CAAE/S,KAAM,CAAC,EAAG;QAE7B,IAAI,CAACA,KAAK,GAAG,KAAM+N,gBAAgB,CAAE/N,KAAM,CAAC,GAAGopC,qBAAqB,GAAGN,qBAAqB,EAAI9oC,KAAK,EAAE,CAAE,CAAC;MAE3G,CAAC,MAAM;QAEN,IAAI,CAACA,KAAK,GAAGA,KAAK;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA8/C,aAAcp7C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAAC80B,UAAU,CAAE90B,IAAI,CAAE;IAE/B;EAAC;IAAA6B,GAAA;IAAAvG,KAAA,EAED,SAAA+/C,aAAcr7C,IAAI,EAAEgZ,SAAS,EAAG;MAE/B,IAAI,CAAC8b,UAAU,CAAE90B,IAAI,CAAE,GAAGgZ,SAAS;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAvG,KAAA,EAED,SAAAggD,gBAAiBt7C,IAAI,EAAG;MAEvB,OAAO,IAAI,CAAC80B,UAAU,CAAE90B,IAAI,CAAE;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAA6B,GAAA;IAAAvG,KAAA,EAED,SAAAigD,aAAcv7C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAAC80B,UAAU,CAAE90B,IAAI,CAAE,KAAKuC,SAAS;IAE7C;EAAC;IAAAV,GAAA;IAAAvG,KAAA,EAED,SAAAkgD,SAAUP,KAAK,EAAEvwB,KAAK,EAAE+wB,aAAa,GAAG,CAAC,EAAG;MAE3C,IAAI,CAACX,MAAM,CAACv7C,IAAI,CAAE;QAEjB07C,KAAK,EAAEA,KAAK;QACZvwB,KAAK,EAAEA,KAAK;QACZ+wB,aAAa,EAAEA;MAEhB,CAAE,CAAC;IAEJ;EAAC;IAAA55C,GAAA;IAAAvG,KAAA,EAED,SAAAogD,YAAA,EAAc;MAEb,IAAI,CAACZ,MAAM,GAAG,EAAE;IAEjB;EAAC;IAAAj5C,GAAA;IAAAvG,KAAA,EAED,SAAAqgD,aAAcV,KAAK,EAAEvwB,KAAK,EAAG;MAE5B,IAAI,CAACswB,SAAS,CAACC,KAAK,GAAGA,KAAK;MAC5B,IAAI,CAACD,SAAS,CAACtwB,KAAK,GAAGA,KAAK;IAE7B;EAAC;IAAA7oB,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAczI,MAAM,EAAG;MAEtB,IAAMmX,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MAEzC,IAAKA,QAAQ,KAAKxyB,SAAS,EAAG;QAE7BwyB,QAAQ,CAAC1O,YAAY,CAAEzI,MAAO,CAAC;QAE/BmX,QAAQ,CAACzP,WAAW,GAAG,IAAI;MAE5B;MAEA,IAAMyM,MAAM,GAAG,IAAI,CAAC+C,UAAU,CAAC/C,MAAM;MAErC,IAAKA,MAAM,KAAKxvB,SAAS,EAAG;QAE3B,IAAM2gC,YAAY,GAAG,IAAI3pB,OAAO,CAAC,CAAC,CAACmD,eAAe,CAAEkB,MAAO,CAAC;QAE5DmU,MAAM,CAAC7B,iBAAiB,CAAEgT,YAAa,CAAC;QAExCnR,MAAM,CAACzM,WAAW,GAAG,IAAI;MAE1B;MAEA,IAAMs2B,OAAO,GAAG,IAAI,CAAC9mB,UAAU,CAAC8mB,OAAO;MAEvC,IAAKA,OAAO,KAAKr5C,SAAS,EAAG;QAE5Bq5C,OAAO,CAAC1qB,kBAAkB,CAAEtT,MAAO,CAAC;QAEpCg+B,OAAO,CAACt2B,WAAW,GAAG,IAAI;MAE3B;MAEA,IAAK,IAAI,CAACmP,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAE1B;MAEA,IAAK,IAAI,CAACqmB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAh6C,GAAA;IAAAvG,KAAA,EAED,SAAAy0B,gBAAiBpc,CAAC,EAAG;MAEpBsmC,GAAG,CAACld,0BAA0B,CAAEppB,CAAE,CAAC;MAEnC,IAAI,CAAC0S,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAA+oC,QAAS1sB,KAAK,EAAG;MAEhB;;MAEAsiC,GAAG,CAACzb,aAAa,CAAE7mB,KAAM,CAAC;MAE1B,IAAI,CAAC0O,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAAgpC,QAAS3sB,KAAK,EAAG;MAEhB;;MAEAsiC,GAAG,CAACxb,aAAa,CAAE9mB,KAAM,CAAC;MAE1B,IAAI,CAAC0O,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAAipC,QAAS5sB,KAAK,EAAG;MAEhB;;MAEAsiC,GAAG,CAACvb,aAAa,CAAE/mB,KAAM,CAAC;MAE1B,IAAI,CAAC0O,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAWnM,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEpB;;MAEAi0B,GAAG,CAACt8B,eAAe,CAAEpM,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC;MAE9B,IAAI,CAACK,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAA+hB,MAAO9L,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEhB;;MAEAi0B,GAAG,CAAC18B,SAAS,CAAEhM,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC;MAExB,IAAI,CAACK,YAAY,CAAE4zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAp4C,GAAA;IAAAvG,KAAA,EAED,SAAAo9B,OAAQpE,MAAM,EAAG;MAEhB4lB,IAAI,CAACxhB,MAAM,CAAEpE,MAAO,CAAC;MAErB4lB,IAAI,CAACh1B,YAAY,CAAC,CAAC;MAEnB,IAAI,CAACmB,YAAY,CAAE6zB,IAAI,CAACt8B,MAAO,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/b,GAAA;IAAAvG,KAAA,EAED,SAAA8d,OAAA,EAAS;MAER,IAAI,CAACsb,kBAAkB,CAAC,CAAC;MAEzB,IAAI,CAACD,WAAW,CAACP,SAAS,CAAEimB,OAAQ,CAAC,CAAC9iC,MAAM,CAAC,CAAC;MAE9C,IAAI,CAACqG,SAAS,CAAEy8B,OAAO,CAAC5oC,CAAC,EAAE4oC,OAAO,CAACn9C,CAAC,EAAEm9C,OAAO,CAACn0B,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAi4B,cAAeC,MAAM,EAAG;MAEvB,IAAMuB,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAIx5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG22B,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,IAAM64B,KAAK,GAAGZ,MAAM,CAAEj4B,CAAC,CAAE;QACzBw5B,QAAQ,CAACx1B,IAAI,CAAE60B,KAAK,CAAC7iB,CAAC,EAAE6iB,KAAK,CAACp3B,CAAC,EAAEo3B,KAAK,CAACpO,CAAC,IAAI,CAAE,CAAC;MAEhD;MAEA,IAAI,CAACq1B,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE3kB,QAAQ,EAAE,CAAE,CAAE,CAAC;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAAlzB,GAAA;IAAAvG,KAAA,EAED,SAAAo5B,mBAAA,EAAqB;MAEpB,IAAK,IAAI,CAACD,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAI1B,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAMgC,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAM+mB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAAC7lB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAACgnB,mBAAmB,EAAG;QAE/CtnC,OAAO,CAACywB,KAAK,CAAE,iJAAiJ,EAAE,IAAK,CAAC;QAExK,IAAI,CAACzQ,WAAW,CAACjgB,GAAG,CACnB,IAAIkb,OAAO,CAAE,CAAEsD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EACjD,IAAItD,OAAO,CAAE,CAAEsD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CACjD,CAAC;QAED;MAED;MAEA,IAAK+B,QAAQ,KAAKxyB,SAAS,EAAG;QAE7B,IAAI,CAACkyB,WAAW,CAACnB,sBAAsB,CAAEyB,QAAS,CAAC;;QAEnD;;QAEA,IAAK+mB,uBAAuB,EAAG;UAE9B,KAAM,IAAIvgD,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGixB,uBAAuB,CAACl8C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAEpE,IAAMygD,cAAc,GAAGF,uBAAuB,CAAEvgD,CAAC,CAAE;YACnD6+C,MAAM,CAAC9mB,sBAAsB,CAAE0oB,cAAe,CAAC;YAE/C,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAClkC,UAAU,CAAE,IAAI,CAACqe,WAAW,CAACvjB,GAAG,EAAEkpC,MAAM,CAAClpC,GAAI,CAAC;cACxD,IAAI,CAACujB,WAAW,CAACrB,aAAa,CAAEknB,SAAU,CAAC;cAE3CA,SAAS,CAAClkC,UAAU,CAAE,IAAI,CAACqe,WAAW,CAACtjB,GAAG,EAAEipC,MAAM,CAACjpC,GAAI,CAAC;cACxD,IAAI,CAACsjB,WAAW,CAACrB,aAAa,CAAEknB,SAAU,CAAC;YAE5C,CAAC,MAAM;cAEN,IAAI,CAAC7lB,WAAW,CAACrB,aAAa,CAAEgnB,MAAM,CAAClpC,GAAI,CAAC;cAC5C,IAAI,CAACujB,WAAW,CAACrB,aAAa,CAAEgnB,MAAM,CAACjpC,GAAI,CAAC;YAE7C;UAED;QAED;MAED,CAAC,MAAM;QAEN,IAAI,CAACsjB,WAAW,CAACtB,SAAS,CAAC,CAAC;MAE7B;MAEA,IAAKxzB,KAAK,CAAE,IAAI,CAAC80B,WAAW,CAACvjB,GAAG,CAACK,CAAE,CAAC,IAAI5R,KAAK,CAAE,IAAI,CAAC80B,WAAW,CAACvjB,GAAG,CAAClU,CAAE,CAAC,IAAI2C,KAAK,CAAE,IAAI,CAAC80B,WAAW,CAACvjB,GAAG,CAAC8U,CAAE,CAAC,EAAG;QAE5GvR,OAAO,CAACywB,KAAK,CAAE,qIAAqI,EAAE,IAAK,CAAC;MAE7J;IAED;EAAC;IAAArjC,GAAA;IAAAvG,KAAA,EAED,SAAAugD,sBAAA,EAAwB;MAEvB,IAAK,IAAI,CAACd,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIzjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAMvC,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAM+mB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAAC7lB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAACgnB,mBAAmB,EAAG;QAE/CtnC,OAAO,CAACywB,KAAK,CAAE,uJAAuJ,EAAE,IAAK,CAAC;QAE9K,IAAI,CAAC6V,cAAc,CAACvmC,GAAG,CAAE,IAAIkb,OAAO,CAAC,CAAC,EAAEsD,QAAS,CAAC;QAElD;MAED;MAEA,IAAK+B,QAAQ,EAAG;QAEf;;QAEA,IAAM3b,MAAM,GAAG,IAAI,CAAC2hC,cAAc,CAAC3hC,MAAM;QAEzCghC,MAAM,CAAC9mB,sBAAsB,CAAEyB,QAAS,CAAC;;QAEzC;;QAEA,IAAK+mB,uBAAuB,EAAG;UAE9B,KAAM,IAAIvgD,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGixB,uBAAuB,CAACl8C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAEpE,IAAMygD,cAAc,GAAGF,uBAAuB,CAAEvgD,CAAC,CAAE;YACnD8+C,gBAAgB,CAAC/mB,sBAAsB,CAAE0oB,cAAe,CAAC;YAEzD,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAClkC,UAAU,CAAEgkC,MAAM,CAAClpC,GAAG,EAAEmpC,gBAAgB,CAACnpC,GAAI,CAAC;cACxDkpC,MAAM,CAAChnB,aAAa,CAAEknB,SAAU,CAAC;cAEjCA,SAAS,CAAClkC,UAAU,CAAEgkC,MAAM,CAACjpC,GAAG,EAAEkpC,gBAAgB,CAAClpC,GAAI,CAAC;cACxDipC,MAAM,CAAChnB,aAAa,CAAEknB,SAAU,CAAC;YAElC,CAAC,MAAM;cAENF,MAAM,CAAChnB,aAAa,CAAEinB,gBAAgB,CAACnpC,GAAI,CAAC;cAC5CkpC,MAAM,CAAChnB,aAAa,CAAEinB,gBAAgB,CAAClpC,GAAI,CAAC;YAE7C;UAED;QAED;QAEAipC,MAAM,CAAClmB,SAAS,CAAE9a,MAAO,CAAC;;QAE1B;QACA;;QAEA,IAAIoe,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAIj8B,IAAC,GAAG,CAAC,EAAEsvB,GAAE,GAAGkK,QAAQ,CAACrK,KAAK,EAAEnvB,IAAC,GAAGsvB,GAAE,EAAEtvB,IAAC,EAAG,EAAG;UAEpD++C,SAAS,CAACvhC,mBAAmB,CAAEgc,QAAQ,EAAEx5B,IAAE,CAAC;UAE5Ci8B,WAAW,GAAGlnB,IAAI,CAACa,GAAG,CAAEqmB,WAAW,EAAEpe,MAAM,CAAClB,iBAAiB,CAAEoiC,SAAU,CAAE,CAAC;QAE7E;;QAEA;;QAEA,IAAKwB,uBAAuB,EAAG;UAE9B,KAAM,IAAIvgD,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAGixB,uBAAuB,CAACl8C,MAAM,EAAErE,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,EAAG,EAAG;YAEpE,IAAMygD,eAAc,GAAGF,uBAAuB,CAAEvgD,IAAC,CAAE;YACnD,IAAMs/C,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;YAEtD,KAAM,IAAI9jB,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAGD,eAAc,CAACtxB,KAAK,EAAEqM,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;cAE1DujB,SAAS,CAACvhC,mBAAmB,CAAEijC,eAAc,EAAEjlB,CAAE,CAAC;cAElD,IAAK8jB,oBAAoB,EAAG;gBAE3BV,OAAO,CAACphC,mBAAmB,CAAEgc,QAAQ,EAAEgC,CAAE,CAAC;gBAC1CujB,SAAS,CAACpkC,GAAG,CAAEikC,OAAQ,CAAC;cAEzB;cAEA3iB,WAAW,GAAGlnB,IAAI,CAACa,GAAG,CAAEqmB,WAAW,EAAEpe,MAAM,CAAClB,iBAAiB,CAAEoiC,SAAU,CAAE,CAAC;YAE7E;UAED;QAED;QAEA,IAAI,CAACS,cAAc,CAAC5oB,MAAM,GAAG7hB,IAAI,CAACmH,IAAI,CAAE+f,WAAY,CAAC;QAErD,IAAK73B,KAAK,CAAE,IAAI,CAACo7C,cAAc,CAAC5oB,MAAO,CAAC,EAAG;UAE1C1d,OAAO,CAACywB,KAAK,CAAE,8HAA8H,EAAE,IAAK,CAAC;QAEtJ;MAED;IAED;EAAC;IAAArjC,GAAA;IAAAvG,KAAA,EAED,SAAA4gD,gBAAA,EAAkB;MAEjB,IAAMpsC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMglB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;MACA;;MAEA,IAAKhlB,KAAK,KAAK,IAAI,IACjBglB,UAAU,CAACC,QAAQ,KAAKxyB,SAAS,IACjCuyB,UAAU,CAAC/C,MAAM,KAAKxvB,SAAS,IAC/BuyB,UAAU,CAAClP,EAAE,KAAKrjB,SAAS,EAAG;QAE/BkS,OAAO,CAACywB,KAAK,CAAE,8GAA+G,CAAC;QAC/H;MAED;MAEA,IAAMiX,OAAO,GAAGrsC,KAAK,CAACI,KAAK;MAC3B,IAAMksC,SAAS,GAAGtnB,UAAU,CAACC,QAAQ,CAAC7kB,KAAK;MAC3C,IAAMmsC,OAAO,GAAGvnB,UAAU,CAAC/C,MAAM,CAAC7hB,KAAK;MACvC,IAAMosC,GAAG,GAAGxnB,UAAU,CAAClP,EAAE,CAAC1V,KAAK;MAE/B,IAAMqsC,SAAS,GAAGH,SAAS,CAACx8C,MAAM,GAAG,CAAC;MAEtC,IAAK,IAAI,CAAC27C,YAAY,CAAE,SAAU,CAAC,KAAK,KAAK,EAAG;QAE/C,IAAI,CAACF,YAAY,CAAE,SAAS,EAAE,IAAIvE,eAAe,CAAE,IAAIliC,YAAY,CAAE,CAAC,GAAG2nC,SAAU,CAAC,EAAE,CAAE,CAAE,CAAC;MAE5F;MAEA,IAAMC,QAAQ,GAAG,IAAI,CAACpB,YAAY,CAAE,SAAU,CAAC,CAAClrC,KAAK;MAErD,IAAMusC,IAAI,GAAG,EAAE;QAAEC,IAAI,GAAG,EAAE;MAE1B,KAAM,IAAInhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGghD,SAAS,EAAEhhD,CAAC,EAAG,EAAG;QAEtCkhD,IAAI,CAAElhD,CAAC,CAAE,GAAG,IAAIm0B,OAAO,CAAC,CAAC;QACzBgtB,IAAI,CAAEnhD,CAAC,CAAE,GAAG,IAAIm0B,OAAO,CAAC,CAAC;MAE1B;MAEA,IAAMitB,EAAE,GAAG,IAAIjtB,OAAO,CAAC,CAAC;QACvBktB,EAAE,GAAG,IAAIltB,OAAO,CAAC,CAAC;QAClBmtB,EAAE,GAAG,IAAIntB,OAAO,CAAC,CAAC;QAElBotB,GAAG,GAAG,IAAIxnC,OAAO,CAAC,CAAC;QACnBynC,GAAG,GAAG,IAAIznC,OAAO,CAAC,CAAC;QACnB0nC,GAAG,GAAG,IAAI1nC,OAAO,CAAC,CAAC;QAEnB2nC,IAAI,GAAG,IAAIvtB,OAAO,CAAC,CAAC;QACpBwtB,IAAI,GAAG,IAAIxtB,OAAO,CAAC,CAAC;MAErB,SAASytB,cAAcA,CAAE1hD,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;QAElCghD,EAAE,CAAC/jC,SAAS,CAAEwjC,SAAS,EAAE3gD,CAAC,GAAG,CAAE,CAAC;QAChCmhD,EAAE,CAAChkC,SAAS,CAAEwjC,SAAS,EAAExoC,CAAC,GAAG,CAAE,CAAC;QAChCipC,EAAE,CAACjkC,SAAS,CAAEwjC,SAAS,EAAEzgD,CAAC,GAAG,CAAE,CAAC;QAEhCmhD,GAAG,CAAClkC,SAAS,CAAE0jC,GAAG,EAAE7gD,CAAC,GAAG,CAAE,CAAC;QAC3BshD,GAAG,CAACnkC,SAAS,CAAE0jC,GAAG,EAAE1oC,CAAC,GAAG,CAAE,CAAC;QAC3BopC,GAAG,CAACpkC,SAAS,CAAE0jC,GAAG,EAAE3gD,CAAC,GAAG,CAAE,CAAC;QAE3BihD,EAAE,CAACtmC,GAAG,CAAEqmC,EAAG,CAAC;QACZE,EAAE,CAACvmC,GAAG,CAAEqmC,EAAG,CAAC;QAEZI,GAAG,CAACzmC,GAAG,CAAEwmC,GAAI,CAAC;QACdE,GAAG,CAAC1mC,GAAG,CAAEwmC,GAAI,CAAC;QAEd,IAAM/hD,CAAC,GAAG,GAAG,IAAKgiD,GAAG,CAACxrC,CAAC,GAAGyrC,GAAG,CAAChgD,CAAC,GAAGggD,GAAG,CAACzrC,CAAC,GAAGwrC,GAAG,CAAC//C,CAAC,CAAE;;QAEjD;;QAEA,IAAK,CAAEogD,QAAQ,CAAEriD,CAAE,CAAC,EAAG;QAEvBkiD,IAAI,CAAChnC,IAAI,CAAE2mC,EAAG,CAAC,CAAClmC,cAAc,CAAEsmC,GAAG,CAAChgD,CAAE,CAAC,CAACqZ,eAAe,CAAEwmC,EAAE,EAAE,CAAEE,GAAG,CAAC//C,CAAE,CAAC,CAAC0Z,cAAc,CAAE3b,CAAE,CAAC;QAC1FmiD,IAAI,CAACjnC,IAAI,CAAE4mC,EAAG,CAAC,CAACnmC,cAAc,CAAEqmC,GAAG,CAACxrC,CAAE,CAAC,CAAC8E,eAAe,CAAEumC,EAAE,EAAE,CAAEI,GAAG,CAACzrC,CAAE,CAAC,CAACmF,cAAc,CAAE3b,CAAE,CAAC;QAE1F0hD,IAAI,CAAEhhD,CAAC,CAAE,CAACya,GAAG,CAAE+mC,IAAK,CAAC;QACrBR,IAAI,CAAE7oC,CAAC,CAAE,CAACsC,GAAG,CAAE+mC,IAAK,CAAC;QACrBR,IAAI,CAAE9gD,CAAC,CAAE,CAACua,GAAG,CAAE+mC,IAAK,CAAC;QAErBP,IAAI,CAAEjhD,CAAC,CAAE,CAACya,GAAG,CAAEgnC,IAAK,CAAC;QACrBR,IAAI,CAAE9oC,CAAC,CAAE,CAACsC,GAAG,CAAEgnC,IAAK,CAAC;QACrBR,IAAI,CAAE/gD,CAAC,CAAE,CAACua,GAAG,CAAEgnC,IAAK,CAAC;MAEtB;MAEA,IAAIpC,MAAM,GAAG,IAAI,CAACA,MAAM;MAExB,IAAKA,MAAM,CAACl7C,MAAM,KAAK,CAAC,EAAG;QAE1Bk7C,MAAM,GAAG,CAAE;UACVG,KAAK,EAAE,CAAC;UACRvwB,KAAK,EAAEyxB,OAAO,CAACv8C;QAChB,CAAC,CAAE;MAEJ;MAEA,KAAM,IAAIrE,IAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGiwB,MAAM,CAACl7C,MAAM,EAAErE,IAAC,GAAGsvB,EAAE,EAAE,EAAGtvB,IAAC,EAAG;QAEnD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;QAEzB,IAAM0/C,KAAK,GAAGoC,KAAK,CAACpC,KAAK;QACzB,IAAMvwB,KAAK,GAAG2yB,KAAK,CAAC3yB,KAAK;QAEzB,KAAM,IAAIqM,CAAC,GAAGkkB,KAAK,EAAEgB,EAAE,GAAGhB,KAAK,GAAGvwB,KAAK,EAAEqM,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,IAAI,CAAC,EAAG;UAEzDomB,cAAc,CACbhB,OAAO,CAAEplB,CAAC,GAAG,CAAC,CAAE,EAChBolB,OAAO,CAAEplB,CAAC,GAAG,CAAC,CAAE,EAChBolB,OAAO,CAAEplB,CAAC,GAAG,CAAC,CACf,CAAC;QAEF;MAED;MAEA,IAAMta,GAAG,GAAG,IAAIiT,OAAO,CAAC,CAAC;QAAE4tB,IAAI,GAAG,IAAI5tB,OAAO,CAAC,CAAC;MAC/C,IAAMx0B,CAAC,GAAG,IAAIw0B,OAAO,CAAC,CAAC;QAAE6tB,EAAE,GAAG,IAAI7tB,OAAO,CAAC,CAAC;MAE3C,SAAS8tB,YAAYA,CAAElgD,CAAC,EAAG;QAE1BpC,CAAC,CAAC0d,SAAS,CAAEyjC,OAAO,EAAE/+C,CAAC,GAAG,CAAE,CAAC;QAC7BigD,EAAE,CAACtnC,IAAI,CAAE/a,CAAE,CAAC;QAEZ,IAAMJ,CAAC,GAAG2hD,IAAI,CAAEn/C,CAAC,CAAE;;QAEnB;;QAEAmf,GAAG,CAACxG,IAAI,CAAEnb,CAAE,CAAC;QACb2hB,GAAG,CAACnG,GAAG,CAAEpb,CAAC,CAACwb,cAAc,CAAExb,CAAC,CAACoc,GAAG,CAAExc,CAAE,CAAE,CAAE,CAAC,CAACqa,SAAS,CAAC,CAAC;;QAErD;;QAEAmoC,IAAI,CAACnsB,YAAY,CAAEosB,EAAE,EAAEziD,CAAE,CAAC;QAC1B,IAAMmmB,IAAI,GAAGq8B,IAAI,CAAChmC,GAAG,CAAEolC,IAAI,CAAEp/C,CAAC,CAAG,CAAC;QAClC,IAAM2oB,CAAC,GAAKhF,IAAI,GAAG,GAAG,GAAK,CAAE,GAAG,GAAG,GAAG;QAEtCu7B,QAAQ,CAAEl/C,CAAC,GAAG,CAAC,CAAE,GAAGmf,GAAG,CAAClL,CAAC;QACzBirC,QAAQ,CAAEl/C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGmf,GAAG,CAACzf,CAAC;QAC7Bw/C,QAAQ,CAAEl/C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGmf,GAAG,CAACuJ,CAAC;QAC7Bw2B,QAAQ,CAAEl/C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG2oB,CAAC;MAE1B;MAEA,KAAM,IAAI1qB,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAGiwB,MAAM,CAACl7C,MAAM,EAAErE,IAAC,GAAGsvB,IAAE,EAAE,EAAGtvB,IAAC,EAAG;QAEnD,IAAM8hD,MAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;QAEzB,IAAM0/C,OAAK,GAAGoC,MAAK,CAACpC,KAAK;QACzB,IAAMvwB,MAAK,GAAG2yB,MAAK,CAAC3yB,KAAK;QAEzB,KAAM,IAAIqM,EAAC,GAAGkkB,OAAK,EAAEgB,GAAE,GAAGhB,OAAK,GAAGvwB,MAAK,EAAEqM,EAAC,GAAGklB,GAAE,EAAEllB,EAAC,IAAI,CAAC,EAAG;UAEzDymB,YAAY,CAAErB,OAAO,CAAEplB,EAAC,GAAG,CAAC,CAAG,CAAC;UAChCymB,YAAY,CAAErB,OAAO,CAAEplB,EAAC,GAAG,CAAC,CAAG,CAAC;UAChCymB,YAAY,CAAErB,OAAO,CAAEplB,EAAC,GAAG,CAAC,CAAG,CAAC;QAEjC;MAED;IAED;EAAC;IAAAl1B,GAAA;IAAAvG,KAAA,EAED,SAAAmiD,qBAAA,EAAuB;MAEtB,IAAM3tC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAM4tC,iBAAiB,GAAG,IAAI,CAACtC,YAAY,CAAE,UAAW,CAAC;MAEzD,IAAKsC,iBAAiB,KAAKn7C,SAAS,EAAG;QAEtC,IAAIo7C,eAAe,GAAG,IAAI,CAACvC,YAAY,CAAE,QAAS,CAAC;QAEnD,IAAKuC,eAAe,KAAKp7C,SAAS,EAAG;UAEpCo7C,eAAe,GAAG,IAAI7G,eAAe,CAAE,IAAIliC,YAAY,CAAE8oC,iBAAiB,CAAChzB,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;UAC3F,IAAI,CAAC2wB,YAAY,CAAE,QAAQ,EAAEsC,eAAgB,CAAC;QAE/C,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIpiD,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG8yB,eAAe,CAACjzB,KAAK,EAAEnvB,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAE3DoiD,eAAe,CAAC/F,MAAM,CAAEr8C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;UAErC;QAED;QAEA,IAAMqiD,EAAE,GAAG,IAAIluB,OAAO,CAAC,CAAC;UAAEmuB,EAAE,GAAG,IAAInuB,OAAO,CAAC,CAAC;UAAEouB,EAAE,GAAG,IAAIpuB,OAAO,CAAC,CAAC;QAChE,IAAMquB,EAAE,GAAG,IAAIruB,OAAO,CAAC,CAAC;UAAEsuB,EAAE,GAAG,IAAItuB,OAAO,CAAC,CAAC;UAAEuuB,EAAE,GAAG,IAAIvuB,OAAO,CAAC,CAAC;QAChE,IAAMwuB,EAAE,GAAG,IAAIxuB,OAAO,CAAC,CAAC;UAAEyuB,EAAE,GAAG,IAAIzuB,OAAO,CAAC,CAAC;;QAE5C;;QAEA,IAAK5f,KAAK,EAAG;UAEZ,KAAM,IAAIvU,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAG/a,KAAK,CAAC4a,KAAK,EAAEnvB,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,IAAI,CAAC,EAAG;YAEnD,IAAMohD,EAAE,GAAG7sC,KAAK,CAACmJ,IAAI,CAAE1d,IAAC,GAAG,CAAE,CAAC;YAC9B,IAAMqhD,EAAE,GAAG9sC,KAAK,CAACmJ,IAAI,CAAE1d,IAAC,GAAG,CAAE,CAAC;YAC9B,IAAMshD,EAAE,GAAG/sC,KAAK,CAACmJ,IAAI,CAAE1d,IAAC,GAAG,CAAE,CAAC;YAE9BqiD,EAAE,CAAC7kC,mBAAmB,CAAE2kC,iBAAiB,EAAEf,EAAG,CAAC;YAC/CkB,EAAE,CAAC9kC,mBAAmB,CAAE2kC,iBAAiB,EAAEd,EAAG,CAAC;YAC/CkB,EAAE,CAAC/kC,mBAAmB,CAAE2kC,iBAAiB,EAAEb,EAAG,CAAC;YAE/CqB,EAAE,CAAC1nC,UAAU,CAAEsnC,EAAE,EAAED,EAAG,CAAC;YACvBM,EAAE,CAAC3nC,UAAU,CAAEonC,EAAE,EAAEC,EAAG,CAAC;YACvBK,EAAE,CAAC3mC,KAAK,CAAE4mC,EAAG,CAAC;YAEdJ,EAAE,CAAChlC,mBAAmB,CAAE4kC,eAAe,EAAEhB,EAAG,CAAC;YAC7CqB,EAAE,CAACjlC,mBAAmB,CAAE4kC,eAAe,EAAEf,EAAG,CAAC;YAC7CqB,EAAE,CAACllC,mBAAmB,CAAE4kC,eAAe,EAAEd,EAAG,CAAC;YAE7CkB,EAAE,CAAC7nC,GAAG,CAAEgoC,EAAG,CAAC;YACZF,EAAE,CAAC9nC,GAAG,CAAEgoC,EAAG,CAAC;YACZD,EAAE,CAAC/nC,GAAG,CAAEgoC,EAAG,CAAC;YAEZP,eAAe,CAAC/F,MAAM,CAAE+E,EAAE,EAAEoB,EAAE,CAACxsC,CAAC,EAAEwsC,EAAE,CAAC/gD,CAAC,EAAE+gD,EAAE,CAAC/3B,CAAE,CAAC;YAC9C23B,eAAe,CAAC/F,MAAM,CAAEgF,EAAE,EAAEoB,EAAE,CAACzsC,CAAC,EAAEysC,EAAE,CAAChhD,CAAC,EAAEghD,EAAE,CAACh4B,CAAE,CAAC;YAC9C23B,eAAe,CAAC/F,MAAM,CAAEiF,EAAE,EAAEoB,EAAE,CAAC1sC,CAAC,EAAE0sC,EAAE,CAACjhD,CAAC,EAAEihD,EAAE,CAACj4B,CAAE,CAAC;UAE/C;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIzqB,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAG6yB,iBAAiB,CAAChzB,KAAK,EAAEnvB,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,IAAI,CAAC,EAAG;YAE/DqiD,EAAE,CAAC7kC,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAC,GAAG,CAAE,CAAC;YAClDsiD,EAAE,CAAC9kC,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAC,GAAG,CAAE,CAAC;YAClDuiD,EAAE,CAAC/kC,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAC,GAAG,CAAE,CAAC;YAElD2iD,EAAE,CAAC1nC,UAAU,CAAEsnC,EAAE,EAAED,EAAG,CAAC;YACvBM,EAAE,CAAC3nC,UAAU,CAAEonC,EAAE,EAAEC,EAAG,CAAC;YACvBK,EAAE,CAAC3mC,KAAK,CAAE4mC,EAAG,CAAC;YAEdR,eAAe,CAAC/F,MAAM,CAAEr8C,IAAC,GAAG,CAAC,EAAE2iD,EAAE,CAAC3sC,CAAC,EAAE2sC,EAAE,CAAClhD,CAAC,EAAEkhD,EAAE,CAACl4B,CAAE,CAAC;YACjD23B,eAAe,CAAC/F,MAAM,CAAEr8C,IAAC,GAAG,CAAC,EAAE2iD,EAAE,CAAC3sC,CAAC,EAAE2sC,EAAE,CAAClhD,CAAC,EAAEkhD,EAAE,CAACl4B,CAAE,CAAC;YACjD23B,eAAe,CAAC/F,MAAM,CAAEr8C,IAAC,GAAG,CAAC,EAAE2iD,EAAE,CAAC3sC,CAAC,EAAE2sC,EAAE,CAAClhD,CAAC,EAAEkhD,EAAE,CAACl4B,CAAE,CAAC;UAElD;QAED;QAEA,IAAI,CAACo4B,gBAAgB,CAAC,CAAC;QAEvBT,eAAe,CAACr4B,WAAW,GAAG,IAAI;MAEnC;IAED;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAA8iD,iBAAA,EAAmB;MAElB,IAAM/B,OAAO,GAAG,IAAI,CAACvnB,UAAU,CAAC/C,MAAM;MAEtC,KAAM,IAAIx2B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGwxB,OAAO,CAAC3xB,KAAK,EAAEnvB,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEnD++C,SAAS,CAACvhC,mBAAmB,CAAEsjC,OAAO,EAAE9gD,CAAE,CAAC;QAE3C++C,SAAS,CAACnlC,SAAS,CAAC,CAAC;QAErBknC,OAAO,CAACzE,MAAM,CAAEr8C,CAAC,EAAE++C,SAAS,CAAC/oC,CAAC,EAAE+oC,SAAS,CAACt9C,CAAC,EAAEs9C,SAAS,CAACt0B,CAAE,CAAC;MAE3D;IAED;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA+iD,aAAA,EAAe;MAEd,SAASC,sBAAsBA,CAAEtlC,SAAS,EAAEmjC,OAAO,EAAG;QAErD,IAAMjsC,KAAK,GAAG8I,SAAS,CAAC9I,KAAK;QAC7B,IAAM6mC,QAAQ,GAAG/9B,SAAS,CAAC+9B,QAAQ;QACnC,IAAMC,UAAU,GAAGh+B,SAAS,CAACg+B,UAAU;QAEvC,IAAMuH,MAAM,GAAG,IAAIruC,KAAK,CAACnQ,WAAW,CAAEo8C,OAAO,CAACv8C,MAAM,GAAGm3C,QAAS,CAAC;QAEjE,IAAIjnC,KAAK,GAAG,CAAC;UAAE2nC,MAAM,GAAG,CAAC;QAEzB,KAAM,IAAIl8C,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGs/C,OAAO,CAACv8C,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAElD,IAAKyd,SAAS,CAACwlC,4BAA4B,EAAG;YAE7C1uC,KAAK,GAAGqsC,OAAO,CAAE5gD,CAAC,CAAE,GAAGyd,SAAS,CAACiJ,IAAI,CAACw8B,MAAM,GAAGzlC,SAAS,CAACH,MAAM;UAEhE,CAAC,MAAM;YAEN/I,KAAK,GAAGqsC,OAAO,CAAE5gD,CAAC,CAAE,GAAGw7C,QAAQ;UAEhC;UAEA,KAAM,IAAIhgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGggB,QAAQ,EAAEhgB,CAAC,EAAG,EAAG;YAErCwnB,MAAM,CAAE9G,MAAM,EAAG,CAAE,GAAGvnC,KAAK,CAAEJ,KAAK,EAAG,CAAE;UAExC;QAED;QAEA,OAAO,IAAIgnC,eAAe,CAAEyH,MAAM,EAAExH,QAAQ,EAAEC,UAAW,CAAC;MAE3D;;MAEA;;MAEA,IAAK,IAAI,CAAClnC,KAAK,KAAK,IAAI,EAAG;QAE1B2E,OAAO,CAACC,IAAI,CAAE,6EAA8E,CAAC;QAC7F,OAAO,IAAI;MAEZ;MAEA,IAAMgqC,SAAS,GAAG,IAAInE,cAAc,CAAC,CAAC;MAEtC,IAAM4B,OAAO,GAAG,IAAI,CAACrsC,KAAK,CAACI,KAAK;MAChC,IAAM4kB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;;MAEA,KAAM,IAAM90B,IAAI,IAAI80B,UAAU,EAAG;QAEhC,IAAM9b,SAAS,GAAG8b,UAAU,CAAE90B,IAAI,CAAE;QAEpC,IAAM2+C,YAAY,GAAGL,sBAAsB,CAAEtlC,SAAS,EAAEmjC,OAAQ,CAAC;QAEjEuC,SAAS,CAACrD,YAAY,CAAEr7C,IAAI,EAAE2+C,YAAa,CAAC;MAE7C;;MAEA;;MAEA,IAAM/D,eAAe,GAAG,IAAI,CAACA,eAAe;MAE5C,KAAM,IAAM56C,KAAI,IAAI46C,eAAe,EAAG;QAErC,IAAMgE,UAAU,GAAG,EAAE;QACrB,IAAM5C,cAAc,GAAGpB,eAAe,CAAE56C,KAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIzE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGmxB,cAAc,CAACp8C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAE3D,IAAMyd,UAAS,GAAGgjC,cAAc,CAAEzgD,CAAC,CAAE;UAErC,IAAMojD,aAAY,GAAGL,sBAAsB,CAAEtlC,UAAS,EAAEmjC,OAAQ,CAAC;UAEjEyC,UAAU,CAACr/C,IAAI,CAAEo/C,aAAa,CAAC;QAEhC;QAEAD,SAAS,CAAC9D,eAAe,CAAE56C,KAAI,CAAE,GAAG4+C,UAAU;MAE/C;MAEAF,SAAS,CAAC7D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;;MAE1D;;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIv/C,IAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGi+C,MAAM,CAACl7C,MAAM,EAAErE,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;QAEjD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;QACzBmjD,SAAS,CAAClD,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAAC3yB,KAAK,EAAE2yB,KAAK,CAAC5B,aAAc,CAAC;MAEpE;MAEA,OAAOiD,SAAS;IAEjB;EAAC;IAAA78C,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,gBAAgB;UACtBgpB,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;;MAEAxD,IAAI,CAAClR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBkR,IAAI,CAACxlB,IAAI,GAAG,IAAI,CAACA,IAAI;MACrB,IAAK,IAAI,CAACuD,IAAI,KAAK,EAAE,EAAGiiB,IAAI,CAACjiB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAKhF,MAAM,CAACuF,IAAI,CAAE,IAAI,CAACukB,QAAS,CAAC,CAACllB,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE5E,IAAK,IAAI,CAACijB,UAAU,KAAKxlC,SAAS,EAAG;QAEpC,IAAMwlC,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,KAAM,IAAMlmC,GAAG,IAAIkmC,UAAU,EAAG;UAE/B,IAAKA,UAAU,CAAElmC,GAAG,CAAE,KAAKU,SAAS,EAAG0f,IAAI,CAAEpgB,GAAG,CAAE,GAAGkmC,UAAU,CAAElmC,GAAG,CAAE;QAEvE;QAEA,OAAOogB,IAAI;MAEZ;;MAEA;;MAEAA,IAAI,CAACA,IAAI,GAAG;QAAE6S,UAAU,EAAE,CAAC;MAAE,CAAC;MAE9B,IAAMhlB,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErBmS,IAAI,CAACA,IAAI,CAACnS,KAAK,GAAG;UACjBrT,IAAI,EAAEqT,KAAK,CAACI,KAAK,CAACnQ,WAAW,CAACC,IAAI;UAClCkQ,KAAK,EAAE0S,KAAK,CAAC3nB,SAAS,CAAC2F,KAAK,CAACjE,IAAI,CAAEmT,KAAK,CAACI,KAAM;QAChD,CAAC;MAEF;MAEA,IAAM4kB,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,KAAM,IAAMjzB,IAAG,IAAIizB,UAAU,EAAG;QAE/B,IAAM9b,SAAS,GAAG8b,UAAU,CAAEjzB,IAAG,CAAE;QAEnCogB,IAAI,CAACA,IAAI,CAAC6S,UAAU,CAAEjzB,IAAG,CAAE,GAAGmX,SAAS,CAACsJ,MAAM,CAAEL,IAAI,CAACA,IAAK,CAAC;MAE5D;MAEA,IAAM24B,eAAe,GAAG,CAAC,CAAC;MAC1B,IAAIiE,kBAAkB,GAAG,KAAK;MAE9B,KAAM,IAAMh9C,KAAG,IAAI,IAAI,CAAC+4C,eAAe,EAAG;QAEzC,IAAMkE,cAAc,GAAG,IAAI,CAAClE,eAAe,CAAE/4C,KAAG,CAAE;QAElD,IAAMqO,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI3U,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGi0B,cAAc,CAACl/C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAE3D,IAAMyd,WAAS,GAAG8lC,cAAc,CAAEvjD,CAAC,CAAE;UAErC2U,KAAK,CAAC3Q,IAAI,CAAEyZ,WAAS,CAACsJ,MAAM,CAAEL,IAAI,CAACA,IAAK,CAAE,CAAC;QAE5C;QAEA,IAAK/R,KAAK,CAACtQ,MAAM,GAAG,CAAC,EAAG;UAEvBg7C,eAAe,CAAE/4C,KAAG,CAAE,GAAGqO,KAAK;UAE9B2uC,kBAAkB,GAAG,IAAI;QAE1B;MAED;MAEA,IAAKA,kBAAkB,EAAG;QAEzB58B,IAAI,CAACA,IAAI,CAAC24B,eAAe,GAAGA,eAAe;QAC3C34B,IAAI,CAACA,IAAI,CAAC44B,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;MAE3D;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAACl7C,MAAM,GAAG,CAAC,EAAG;QAExBqiB,IAAI,CAACA,IAAI,CAAC64B,MAAM,GAAG31B,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEy1B,MAAO,CAAE,CAAC;MAE1D;MAEA,IAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B94B,IAAI,CAACA,IAAI,CAAC84B,cAAc,GAAG;UAC1B3hC,MAAM,EAAE2hC,cAAc,CAAC3hC,MAAM,CAACN,OAAO,CAAC,CAAC;UACvCqZ,MAAM,EAAE4oB,cAAc,CAAC5oB;QACxB,CAAC;MAEF;MAEA,OAAOlQ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd;;MAEA,IAAI,CAACtU,KAAK,GAAG,IAAI;MACjB,IAAI,CAACglB,UAAU,GAAG,CAAC,CAAC;MACpB,IAAI,CAAC8lB,eAAe,GAAG,CAAC,CAAC;MACzB,IAAI,CAACE,MAAM,GAAG,EAAE;MAChB,IAAI,CAACrmB,WAAW,GAAG,IAAI;MACvB,IAAI,CAACsmB,cAAc,GAAG,IAAI;;MAE1B;;MAEA,IAAM94B,IAAI,GAAG,CAAC,CAAC;;MAEf;;MAEA,IAAI,CAACjiB,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;;MAEvB;;MAEA,IAAM8P,KAAK,GAAGsU,MAAM,CAACtU,KAAK;MAE1B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAACqrC,QAAQ,CAAErrC,KAAK,CAACkG,KAAK,CAAEiM,IAAK,CAAE,CAAC;MAErC;;MAEA;;MAEA,IAAM6S,UAAU,GAAG1Q,MAAM,CAAC0Q,UAAU;MAEpC,KAAM,IAAM90B,IAAI,IAAI80B,UAAU,EAAG;QAEhC,IAAM9b,SAAS,GAAG8b,UAAU,CAAE90B,IAAI,CAAE;QACpC,IAAI,CAACq7C,YAAY,CAAEr7C,IAAI,EAAEgZ,SAAS,CAAChD,KAAK,CAAEiM,IAAK,CAAE,CAAC;MAEnD;;MAEA;;MAEA,IAAM24B,eAAe,GAAGx2B,MAAM,CAACw2B,eAAe;MAE9C,KAAM,IAAM56C,MAAI,IAAI46C,eAAe,EAAG;QAErC,IAAM1qC,KAAK,GAAG,EAAE;QAChB,IAAM8rC,cAAc,GAAGpB,eAAe,CAAE56C,MAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIzE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm/C,cAAc,CAACp8C,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEzD2U,KAAK,CAAC3Q,IAAI,CAAEy8C,cAAc,CAAEzgD,CAAC,CAAE,CAACya,KAAK,CAAEiM,IAAK,CAAE,CAAC;QAEhD;QAEA,IAAI,CAAC24B,eAAe,CAAE56C,MAAI,CAAE,GAAGkQ,KAAK;MAErC;MAEA,IAAI,CAAC2qC,oBAAoB,GAAGz2B,MAAM,CAACy2B,oBAAoB;;MAEvD;;MAEA,IAAMC,MAAM,GAAG12B,MAAM,CAAC02B,MAAM;MAE5B,KAAM,IAAIv/C,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAGi+C,MAAM,CAACl7C,MAAM,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;QAEjD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;QACzB,IAAI,CAACigD,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAAC3yB,KAAK,EAAE2yB,KAAK,CAAC5B,aAAc,CAAC;MAE/D;;MAEA;;MAEA,IAAMhnB,WAAW,GAAGrQ,MAAM,CAACqQ,WAAW;MAEtC,IAAKA,WAAW,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACA,WAAW,GAAGA,WAAW,CAACze,KAAK,CAAC,CAAC;MAEvC;;MAEA;;MAEA,IAAM+kC,cAAc,GAAG32B,MAAM,CAAC22B,cAAc;MAE5C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAI,CAACA,cAAc,GAAGA,cAAc,CAAC/kC,KAAK,CAAC,CAAC;MAE7C;;MAEA;;MAEA,IAAI,CAACglC,SAAS,CAACC,KAAK,GAAG72B,MAAM,CAAC42B,SAAS,CAACC,KAAK;MAC7C,IAAI,CAACD,SAAS,CAACtwB,KAAK,GAAGtG,MAAM,CAAC42B,SAAS,CAACtwB,KAAK;;MAE7C;;MAEA,IAAI,CAAC5F,QAAQ,GAAGV,MAAM,CAACU,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAjjB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAA89C,cAAA;AAAA,EA7hC2BlrC,eAAe;AAiiC5C,IAAM0vC,gBAAgB,GAAG,aAAc,IAAI5jB,OAAO,CAAC,CAAC;AACpD,IAAM6jB,MAAM,GAAG,aAAc,IAAI3mB,GAAG,CAAC,CAAC;AACtC,IAAM4mB,SAAS,GAAG,aAAc,IAAI3nB,MAAM,CAAC,CAAC;AAC5C,IAAM4nB,YAAY,GAAG,aAAc,IAAIxvB,OAAO,CAAC,CAAC;AAEhD,IAAMyvB,KAAK,GAAG,aAAc,IAAIzvB,OAAO,CAAC,CAAC;AACzC,IAAM0vB,KAAK,GAAG,aAAc,IAAI1vB,OAAO,CAAC,CAAC;AACzC,IAAM2vB,KAAK,GAAG,aAAc,IAAI3vB,OAAO,CAAC,CAAC;AAEzC,IAAM4vB,MAAM,GAAG,aAAc,IAAI5vB,OAAO,CAAC,CAAC;AAC1C,IAAM6vB,OAAO,GAAG,aAAc,IAAI7vB,OAAO,CAAC,CAAC;AAE3C,IAAM8vB,MAAM,GAAG,aAAc,IAAIlqC,OAAO,CAAC,CAAC;AAC1C,IAAMmqC,MAAM,GAAG,aAAc,IAAInqC,OAAO,CAAC,CAAC;AAC1C,IAAMoqC,MAAM,GAAG,aAAc,IAAIpqC,OAAO,CAAC,CAAC;AAE1C,IAAMqqC,QAAQ,GAAG,aAAc,IAAIjwB,OAAO,CAAC,CAAC;AAC5C,IAAMkwB,QAAQ,GAAG,aAAc,IAAIlwB,OAAO,CAAC,CAAC;AAC5C,IAAMmwB,QAAQ,GAAG,aAAc,IAAInwB,OAAO,CAAC,CAAC;AAE5C,IAAMowB,kBAAkB,GAAG,aAAc,IAAIpwB,OAAO,CAAC,CAAC;AACtD,IAAMqwB,uBAAuB,GAAG,aAAc,IAAIrwB,OAAO,CAAC,CAAC;AAAC,IAEtDswB,IAAI,GAAAr9C,OAAA,CAAAq9C,IAAA,0BAAAC,SAAA;EAAA78B,SAAA,CAAA48B,IAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA58B,YAAA,CAAA08B,IAAA;EAET,SAAAA,KAAanrB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC,EAAElS,QAAQ,GAAG,IAAIkN,iBAAiB,CAAC,CAAC,EAAG;IAAA,IAAA4K,OAAA;IAAA9+C,eAAA,OAAA2+C,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAAvjD,IAAA;IAEAwjD,OAAA,CAAKvY,MAAM,GAAG,IAAI;IAElBuY,OAAA,CAAK1jD,IAAI,GAAG,MAAM;IAElB0jD,OAAA,CAAKtrB,QAAQ,GAAGA,QAAQ;IACxBsrB,OAAA,CAAK9X,QAAQ,GAAGA,QAAQ;IAExB8X,OAAA,CAAKC,kBAAkB,CAAC,CAAC;IAAC,OAAAD,OAAA;EAE3B;EAACr+C,YAAA,CAAAk+C,IAAA;IAAAn+C,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAmK,IAAA,CAAA/kD,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAKtkB,MAAM,CAACi8B,qBAAqB,KAAK99C,SAAS,EAAG;QAEjD,IAAI,CAAC89C,qBAAqB,GAAGj8B,MAAM,CAACi8B,qBAAqB,CAACz/C,KAAK,CAAC,CAAC;MAElE;MAEA,IAAKwjB,MAAM,CAACk8B,qBAAqB,KAAK/9C,SAAS,EAAG;QAEjD,IAAI,CAAC+9C,qBAAqB,GAAGtlD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAACk8B,qBAAsB,CAAC;MAE/E;MAEA,IAAI,CAACjY,QAAQ,GAAGzlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAACikB,QAAS,CAAC,GAAGjkB,MAAM,CAACikB,QAAQ,CAACznC,KAAK,CAAC,CAAC,GAAGwjB,MAAM,CAACikB,QAAQ;MAC5F,IAAI,CAACxT,QAAQ,GAAGzQ,MAAM,CAACyQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAhzB,GAAA;IAAAvG,KAAA,EAED,SAAA8kD,mBAAA,EAAqB;MAEpB,IAAMvrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM+lB,eAAe,GAAG/lB,QAAQ,CAAC+lB,eAAe;MAChD,IAAMr6C,IAAI,GAAGvF,MAAM,CAACuF,IAAI,CAAEq6C,eAAgB,CAAC;MAE3C,IAAKr6C,IAAI,CAACX,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMo8C,cAAc,GAAGpB,eAAe,CAAEr6C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKy7C,cAAc,KAAKz5C,SAAS,EAAG;UAEnC,IAAI,CAAC89C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIjvC,CAAC,GAAG,CAAC,EAAEkvC,EAAE,GAAGvE,cAAc,CAACp8C,MAAM,EAAEyR,CAAC,GAAGkvC,EAAE,EAAElvC,CAAC,EAAG,EAAG;YAE3D,IAAMrR,IAAI,GAAGg8C,cAAc,CAAE3qC,CAAC,CAAE,CAACrR,IAAI,IAAIkC,MAAM,CAAEmP,CAAE,CAAC;YAEpD,IAAI,CAACgvC,qBAAqB,CAAC9gD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC+gD,qBAAqB,CAAEtgD,IAAI,CAAE,GAAGqR,CAAC;UAEvC;QAED;MAED;IAED;EAAC;IAAAxP,GAAA;IAAAvG,KAAA,EAED,SAAAklD,kBAAmB1wC,KAAK,EAAErO,MAAM,EAAG;MAElC,IAAMozB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAC7C,IAAM0rB,aAAa,GAAG5rB,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ;MACvD,IAAM8lB,oBAAoB,GAAGhmB,QAAQ,CAACgmB,oBAAoB;MAE1Dp5C,MAAM,CAACsX,mBAAmB,CAAEgc,QAAQ,EAAEjlB,KAAM,CAAC;MAE7C,IAAM4wC,eAAe,GAAG,IAAI,CAACL,qBAAqB;MAElD,IAAKI,aAAa,IAAIC,eAAe,EAAG;QAEvCnB,OAAO,CAAC/qC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEtB,KAAM,IAAIjZ,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG41B,aAAa,CAAC7gD,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAE1D,IAAMolD,SAAS,GAAGD,eAAe,CAAEnlD,CAAC,CAAE;UACtC,IAAMygD,cAAc,GAAGyE,aAAa,CAAEllD,CAAC,CAAE;UAEzC,IAAKolD,SAAS,KAAK,CAAC,EAAG;UAEvBrB,MAAM,CAACvmC,mBAAmB,CAAEijC,cAAc,EAAElsC,KAAM,CAAC;UAEnD,IAAK+qC,oBAAoB,EAAG;YAE3B0E,OAAO,CAAClpC,eAAe,CAAEipC,MAAM,EAAEqB,SAAU,CAAC;UAE7C,CAAC,MAAM;YAENpB,OAAO,CAAClpC,eAAe,CAAEipC,MAAM,CAAChpC,GAAG,CAAE7U,MAAO,CAAC,EAAEk/C,SAAU,CAAC;UAE3D;QAED;QAEAl/C,MAAM,CAACyU,GAAG,CAAEqpC,OAAQ,CAAC;MAEtB;MAEA,OAAO99C,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMhsB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMwT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMpX,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpC,IAAKoX,QAAQ,KAAK9lC,SAAS,EAAG;;MAE9B;;MAEA,IAAKsyB,QAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAGlmB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;MAExEoD,SAAS,CAAChpC,IAAI,CAAE4e,QAAQ,CAACkmB,cAAe,CAAC;MACzCkE,SAAS,CAAC54B,YAAY,CAAE4K,WAAY,CAAC;;MAErC;;MAEA+tB,MAAM,CAAC/oC,IAAI,CAAE2qC,SAAS,CAACpoB,GAAI,CAAC,CAACG,MAAM,CAAEioB,SAAS,CAAC5gB,IAAK,CAAC;MAErD,IAAKif,SAAS,CAAChqB,aAAa,CAAE+pB,MAAM,CAAC1mB,MAAO,CAAC,KAAK,KAAK,EAAG;QAEzD,IAAK0mB,MAAM,CAACvlB,eAAe,CAAEwlB,SAAS,EAAEC,YAAa,CAAC,KAAK,IAAI,EAAG;QAElE,IAAKF,MAAM,CAAC1mB,MAAM,CAACpgB,iBAAiB,CAAEgnC,YAAa,CAAC,GAAA5uC,IAAA,CAAA+C,GAAA,CAAKutC,SAAS,CAAC3gB,GAAG,GAAG2gB,SAAS,CAAC5gB,IAAI,EAAM,CAAC,GAAG;MAElG;;MAEA;;MAEA+e,gBAAgB,CAAC9oC,IAAI,CAAEgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAC7C8iC,MAAM,CAAC/oC,IAAI,CAAE2qC,SAAS,CAACpoB,GAAI,CAAC,CAACnS,YAAY,CAAE04B,gBAAiB,CAAC;;MAE7D;;MAEA,IAAKlqB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEpC,IAAKuqB,MAAM,CAAC5pB,aAAa,CAAEP,QAAQ,CAACJ,WAAY,CAAC,KAAK,KAAK,EAAG;MAE/D;;MAEA;;MAEA,IAAI,CAACqsB,qBAAqB,CAAEF,SAAS,EAAEC,UAAU,EAAE7B,MAAO,CAAC;IAE5D;EAAC;IAAAn9C,GAAA;IAAAvG,KAAA,EAED,SAAAwlD,sBAAuBF,SAAS,EAAEC,UAAU,EAAEE,aAAa,EAAG;MAE7D,IAAIC,YAAY;MAEhB,IAAMnsB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMwT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMv4B,KAAK,GAAG+kB,QAAQ,CAAC/kB,KAAK;MAC5B,IAAMilB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAC7C,IAAMnP,EAAE,GAAGiP,QAAQ,CAACC,UAAU,CAAClP,EAAE;MACjC,IAAMukB,GAAG,GAAGtV,QAAQ,CAACC,UAAU,CAACqV,GAAG;MACnC,IAAMpY,MAAM,GAAG8C,QAAQ,CAACC,UAAU,CAAC/C,MAAM;MACzC,IAAM+oB,MAAM,GAAGjmB,QAAQ,CAACimB,MAAM;MAC9B,IAAME,SAAS,GAAGnmB,QAAQ,CAACmmB,SAAS;MAEpC,IAAKlrC,KAAK,KAAK,IAAI,EAAG;QAErB;;QAEA,IAAK8S,KAAK,CAACC,OAAO,CAAEwlB,QAAS,CAAC,EAAG;UAEhC,KAAM,IAAI9sC,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGiwB,MAAM,CAACl7C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAEnD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,CAAC,CAAE;YACzB,IAAM0lD,aAAa,GAAG5Y,QAAQ,CAAEgV,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,KAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAEksC,KAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAM,CAAC;YACtD,IAAMiG,GAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEpB,KAAK,CAAC4a,KAAK,EAAEpa,IAAI,CAACY,GAAG,CAAImsC,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAAC3yB,KAAK,EAAMswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAE,CAAC;YAErH,KAAM,IAAIqM,CAAC,GAAGkkB,KAAK,EAAEgB,EAAE,GAAGiF,GAAG,EAAEnqB,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,IAAI,CAAC,EAAG;cAE/C,IAAMt7B,CAAC,GAAGqU,KAAK,CAACmJ,IAAI,CAAE8d,CAAE,CAAC;cACzB,IAAMnjB,CAAC,GAAG9D,KAAK,CAACmJ,IAAI,CAAE8d,CAAC,GAAG,CAAE,CAAC;cAC7B,IAAMp7B,CAAC,GAAGmU,KAAK,CAACmJ,IAAI,CAAE8d,CAAC,GAAG,CAAE,CAAC;cAE7BiqB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,aAAa,EAAEL,SAAS,EAAEG,aAAa,EAAEn7B,EAAE,EAAEukB,GAAG,EAAEpY,MAAM,EAAEt2B,CAAC,EAAEmY,CAAC,EAAEjY,CAAE,CAAC;cAEnH,IAAKqlD,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAG9wC,IAAI,CAACmC,KAAK,CAAEskB,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;gBAC9CiqB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,KAAK,CAAC5B,aAAa;gBACrDoF,UAAU,CAACthD,IAAI,CAAEyhD,YAAa,CAAC;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;UAC5C,IAAMiG,KAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEpB,KAAK,CAAC4a,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;UAE1E,KAAM,IAAInvB,IAAC,GAAG0/C,OAAK,EAAEpwB,IAAE,GAAGq2B,KAAG,EAAE3lD,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAME,EAAC,GAAGqU,KAAK,CAACmJ,IAAI,CAAE1d,IAAE,CAAC;YACzB,IAAMqY,EAAC,GAAG9D,KAAK,CAACmJ,IAAI,CAAE1d,IAAC,GAAG,CAAE,CAAC;YAC7B,IAAMI,EAAC,GAAGmU,KAAK,CAACmJ,IAAI,CAAE1d,IAAC,GAAG,CAAE,CAAC;YAE7BylD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE9Y,QAAQ,EAAEuY,SAAS,EAAEG,aAAa,EAAEn7B,EAAE,EAAEukB,GAAG,EAAEpY,MAAM,EAAEt2B,EAAC,EAAEmY,EAAC,EAAEjY,EAAE,CAAC;YAE9G,IAAKqlD,YAAY,EAAG;cAEnBA,YAAY,CAACI,SAAS,GAAG9wC,IAAI,CAACmC,KAAK,CAAElX,IAAC,GAAG,CAAE,CAAC,CAAC,CAAC;cAC9CslD,UAAU,CAACthD,IAAI,CAAEyhD,YAAa,CAAC;YAEhC;UAED;QAED;MAED,CAAC,MAAM,IAAKjsB,QAAQ,KAAKxyB,SAAS,EAAG;QAEpC;;QAEA,IAAKqgB,KAAK,CAACC,OAAO,CAAEwlB,QAAS,CAAC,EAAG;UAEhC,KAAM,IAAI9sC,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAGiwB,MAAM,CAACl7C,MAAM,EAAErE,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,EAAG,EAAG;YAEnD,IAAM8hD,OAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;YACzB,IAAM0lD,cAAa,GAAG5Y,QAAQ,CAAEgV,OAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,OAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAEksC,OAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAM,CAAC;YACtD,IAAMiG,KAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAE6jB,QAAQ,CAACrK,KAAK,EAAEpa,IAAI,CAACY,GAAG,CAAImsC,OAAK,CAACpC,KAAK,GAAGoC,OAAK,CAAC3yB,KAAK,EAAMswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAE,CAAC;YAExH,KAAM,IAAIqM,GAAC,GAAGkkB,OAAK,EAAEgB,IAAE,GAAGiF,KAAG,EAAEnqB,GAAC,GAAGklB,IAAE,EAAEllB,GAAC,IAAI,CAAC,EAAG;cAE/C,IAAMt7B,GAAC,GAAGs7B,GAAC;cACX,IAAMnjB,GAAC,GAAGmjB,GAAC,GAAG,CAAC;cACf,IAAMp7B,GAAC,GAAGo7B,GAAC,GAAG,CAAC;cAEfiqB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,cAAa,EAAEL,SAAS,EAAEG,aAAa,EAAEn7B,EAAE,EAAEukB,GAAG,EAAEpY,MAAM,EAAEt2B,GAAC,EAAEmY,GAAC,EAAEjY,GAAE,CAAC;cAEnH,IAAKqlD,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAG9wC,IAAI,CAACmC,KAAK,CAAEskB,GAAC,GAAG,CAAE,CAAC,CAAC,CAAC;gBAC9CiqB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,OAAK,CAAC5B,aAAa;gBACrDoF,UAAU,CAACthD,IAAI,CAAEyhD,YAAa,CAAC;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;UAC5C,IAAMiG,KAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAE6jB,QAAQ,CAACrK,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;UAE7E,KAAM,IAAInvB,IAAC,GAAG0/C,OAAK,EAAEpwB,IAAE,GAAGq2B,KAAG,EAAE3lD,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAME,GAAC,GAAGF,IAAC;YACX,IAAMqY,GAAC,GAAGrY,IAAC,GAAG,CAAC;YACf,IAAMI,GAAC,GAAGJ,IAAC,GAAG,CAAC;YAEfylD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE9Y,QAAQ,EAAEuY,SAAS,EAAEG,aAAa,EAAEn7B,EAAE,EAAEukB,GAAG,EAAEpY,MAAM,EAAEt2B,GAAC,EAAEmY,GAAC,EAAEjY,GAAE,CAAC;YAE9G,IAAKqlD,YAAY,EAAG;cAEnBA,YAAY,CAACI,SAAS,GAAG9wC,IAAI,CAACmC,KAAK,CAAElX,IAAC,GAAG,CAAE,CAAC,CAAC,CAAC;cAC9CslD,UAAU,CAACthD,IAAI,CAAEyhD,YAAa,CAAC;YAEhC;UAED;QAED;MAED;IAED;EAAC;EAAA,OAAAhB,IAAA;AAAA,EAtSiBzd,QAAQ;AA0S3B,SAAS+e,iBAAiBA,CAAEztB,MAAM,EAAEwU,QAAQ,EAAEuY,SAAS,EAAEpoB,GAAG,EAAEolB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE1pB,KAAK,EAAG;EAEjF,IAAIsC,SAAS;EAEb,IAAK2R,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAQ,EAAG;IAEjC2yB,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAEkjB,EAAE,EAAED,EAAE,EAAED,EAAE,EAAE,IAAI,EAAExpB,KAAM,CAAC;EAE7D,CAAC,MAAM;IAENsC,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAEgjB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAIzV,QAAQ,CAAC0D,IAAI,KAAKjoC,SAAS,EAAIswB,KAAM,CAAC;EAExF;EAEA,IAAKsC,SAAS,KAAK,IAAI,EAAG,OAAO,IAAI;EAErCqpB,uBAAuB,CAAC9pC,IAAI,CAAEme,KAAM,CAAC;EACrC2rB,uBAAuB,CAAC15B,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;EAE1D,IAAMwT,QAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAE8nC,uBAAwB,CAAC;EAE3E,IAAKtb,QAAQ,GAAGmc,SAAS,CAAC5gB,IAAI,IAAIyE,QAAQ,GAAGmc,SAAS,CAAC3gB,GAAG,EAAG,OAAO,IAAI;EAExE,OAAO;IACNwE,QAAQ,EAAEA,QAAQ;IAClBrQ,KAAK,EAAE2rB,uBAAuB,CAAC/pC,KAAK,CAAC,CAAC;IACtC6d,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAASstB,yBAAyBA,CAAEttB,MAAM,EAAEwU,QAAQ,EAAEuY,SAAS,EAAEpoB,GAAG,EAAE5S,EAAE,EAAEukB,GAAG,EAAEpY,MAAM,EAAEt2B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;EAEhGk4B,MAAM,CAAC2sB,iBAAiB,CAAE/kD,CAAC,EAAE0jD,KAAM,CAAC;EACpCtrB,MAAM,CAAC2sB,iBAAiB,CAAE5sC,CAAC,EAAEwrC,KAAM,CAAC;EACpCvrB,MAAM,CAAC2sB,iBAAiB,CAAE7kD,CAAC,EAAE0jD,KAAM,CAAC;EAEpC,IAAM2B,YAAY,GAAGM,iBAAiB,CAAEztB,MAAM,EAAEwU,QAAQ,EAAEuY,SAAS,EAAEpoB,GAAG,EAAE2mB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAES,kBAAmB,CAAC;EAEnH,IAAKkB,YAAY,EAAG;IAEnB,IAAKp7B,EAAE,EAAG;MAET45B,MAAM,CAACzmC,mBAAmB,CAAE6M,EAAE,EAAEnqB,CAAE,CAAC;MACnCgkD,MAAM,CAAC1mC,mBAAmB,CAAE6M,EAAE,EAAEhS,CAAE,CAAC;MACnC8rC,MAAM,CAAC3mC,mBAAmB,CAAE6M,EAAE,EAAEjqB,CAAE,CAAC;MAEnCqlD,YAAY,CAACp7B,EAAE,GAAG0jB,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIpqC,OAAO,CAAC,CAAE,CAAC;IAE9H;IAEA,IAAK60B,GAAG,EAAG;MAEVqV,MAAM,CAACzmC,mBAAmB,CAAEoxB,GAAG,EAAE1uC,CAAE,CAAC;MACpCgkD,MAAM,CAAC1mC,mBAAmB,CAAEoxB,GAAG,EAAEv2B,CAAE,CAAC;MACpC8rC,MAAM,CAAC3mC,mBAAmB,CAAEoxB,GAAG,EAAExuC,CAAE,CAAC;MAEpCqlD,YAAY,CAAC7W,GAAG,GAAGb,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIpqC,OAAO,CAAC,CAAE,CAAC;MAC9H0rC,YAAY,CAAC5W,GAAG,GAAG4W,YAAY,CAAC7W,GAAG,CAAC,CAAC;IAEtC;;IAEA,IAAKpY,MAAM,EAAG;MAEb4tB,QAAQ,CAAC5mC,mBAAmB,CAAEgZ,MAAM,EAAEt2B,CAAE,CAAC;MACzCmkD,QAAQ,CAAC7mC,mBAAmB,CAAEgZ,MAAM,EAAEne,CAAE,CAAC;MACzCisC,QAAQ,CAAC9mC,mBAAmB,CAAEgZ,MAAM,EAAEp2B,CAAE,CAAC;MAEzCqlD,YAAY,CAACjvB,MAAM,GAAGuX,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,IAAInwB,OAAO,CAAC,CAAE,CAAC;MAEvI,IAAKsxB,YAAY,CAACjvB,MAAM,CAACza,GAAG,CAAEkhB,GAAG,CAACD,SAAU,CAAC,GAAG,CAAC,EAAG;QAEnDyoB,YAAY,CAACjvB,MAAM,CAACrb,cAAc,CAAE,CAAE,CAAE,CAAC;MAE1C;IAED;IAEA,IAAM2qC,IAAI,GAAG;MACZ5lD,CAAC,EAAEA,CAAC;MACJmY,CAAC,EAAEA,CAAC;MACJjY,CAAC,EAAEA,CAAC;MACJo2B,MAAM,EAAE,IAAIrC,OAAO,CAAC,CAAC;MACrB+rB,aAAa,EAAE;IAChB,CAAC;IAEDnS,QAAQ,CAACQ,SAAS,CAAEqV,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEgC,IAAI,CAACtvB,MAAO,CAAC;IAEtDivB,YAAY,CAACK,IAAI,GAAGA,IAAI;EAEzB;EAEA,OAAOL,YAAY;AAEpB;AAAC,IAEKO,WAAW,GAAA5+C,OAAA,CAAA4+C,WAAA,0BAAAC,eAAA;EAAAp+B,SAAA,CAAAm+B,WAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAn+B,YAAA,CAAAi+B,WAAA;EAEhB,SAAAA,YAAangC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6G,KAAK,GAAG,CAAC,EAAEw5B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAxgD,eAAA,OAAAkgD,WAAA;IAEzGM,OAAA,GAAAJ,QAAA,CAAA9kD,IAAA;IAEAklD,OAAA,CAAKplD,IAAI,GAAG,aAAa;IAEzBolD,OAAA,CAAK9Z,UAAU,GAAG;MACjB3mB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACd6G,KAAK,EAAEA,KAAK;MACZw5B,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA;IAChB,CAAC;IAED,IAAME,KAAK,GAAA39B,sBAAA,CAAA09B,OAAA,CAAO;;IAElB;;IAEAH,aAAa,GAAGpxC,IAAI,CAACmC,KAAK,CAAEivC,aAAc,CAAC;IAC3CC,cAAc,GAAGrxC,IAAI,CAACmC,KAAK,CAAEkvC,cAAe,CAAC;IAC7CC,aAAa,GAAGtxC,IAAI,CAACmC,KAAK,CAAEmvC,aAAc,CAAC;;IAE3C;;IAEA,IAAMzF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI0F,gBAAgB,GAAG,CAAC;IACxB,IAAIC,UAAU,GAAG,CAAC;;IAElB;;IAEAC,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEh6B,KAAK,EAAE7G,MAAM,EAAED,KAAK,EAAEwgC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEh6B,KAAK,EAAE7G,MAAM,EAAE,CAAED,KAAK,EAAEwgC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE9gC,KAAK,EAAE8G,KAAK,EAAE7G,MAAM,EAAEqgC,aAAa,EAAEE,aAAa,EAAE,CAAE,CAAC,CAAC,CAAC;IAC1FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE9gC,KAAK,EAAE8G,KAAK,EAAE,CAAE7G,MAAM,EAAEqgC,aAAa,EAAEE,aAAa,EAAE,CAAE,CAAC,CAAC,CAAC;IAC9FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE9gC,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEw5B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC7FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE9gC,KAAK,EAAEC,MAAM,EAAE,CAAE6G,KAAK,EAAEw5B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;;IAEjG;;IAEAE,OAAA,CAAK1G,QAAQ,CAAEgB,OAAQ,CAAC;IACxB0F,OAAA,CAAKxG,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EF,OAAA,CAAKxG,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEwF,OAAA,CAAKxG,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAE/D,SAAS4F,UAAUA,CAAErmD,CAAC,EAAEyB,CAAC,EAAE2oB,CAAC,EAAEk8B,IAAI,EAAEC,IAAI,EAAEhhC,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEm6B,KAAK,EAAEC,KAAK,EAAE7G,aAAa,EAAG;MAE7F,IAAM8G,YAAY,GAAGnhC,KAAK,GAAGihC,KAAK;MAClC,IAAMG,aAAa,GAAGnhC,MAAM,GAAGihC,KAAK;MAEpC,IAAMG,SAAS,GAAGrhC,KAAK,GAAG,CAAC;MAC3B,IAAMshC,UAAU,GAAGrhC,MAAM,GAAG,CAAC;MAC7B,IAAMshC,SAAS,GAAGz6B,KAAK,GAAG,CAAC;MAE3B,IAAM06B,MAAM,GAAGP,KAAK,GAAG,CAAC;MACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;MAExB,IAAIQ,aAAa,GAAG,CAAC;MACrB,IAAIC,UAAU,GAAG,CAAC;MAElB,IAAMzuB,MAAM,GAAG,IAAI5E,OAAO,CAAC,CAAC;;MAE5B;;MAEA,KAAM,IAAIc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGqyB,MAAM,EAAEryB,EAAE,EAAG,EAAG;QAEtC,IAAMxzB,CAAC,GAAGwzB,EAAE,GAAGgyB,aAAa,GAAGE,UAAU;QAEzC,KAAM,IAAInyB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGqyB,MAAM,EAAEryB,EAAE,EAAG,EAAG;UAEtC,IAAMhf,CAAC,GAAGgf,EAAE,GAAGgyB,YAAY,GAAGE,SAAS;;UAEvC;;UAEAnuB,MAAM,CAAEz4B,CAAC,CAAE,GAAG0V,CAAC,GAAG4wC,IAAI;UACtB7tB,MAAM,CAAEh3B,CAAC,CAAE,GAAGN,CAAC,GAAGolD,IAAI;UACtB9tB,MAAM,CAAErO,CAAC,CAAE,GAAG08B,SAAS;;UAEvB;;UAEAZ,QAAQ,CAACxiD,IAAI,CAAE+0B,MAAM,CAAC/iB,CAAC,EAAE+iB,MAAM,CAACt3B,CAAC,EAAEs3B,MAAM,CAACtO,CAAE,CAAC;;UAE7C;;UAEAsO,MAAM,CAAEz4B,CAAC,CAAE,GAAG,CAAC;UACfy4B,MAAM,CAAEh3B,CAAC,CAAE,GAAG,CAAC;UACfg3B,MAAM,CAAErO,CAAC,CAAE,GAAGiC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;;UAEjC;;UAEAm0B,OAAO,CAAC98C,IAAI,CAAE+0B,MAAM,CAAC/iB,CAAC,EAAE+iB,MAAM,CAACt3B,CAAC,EAAEs3B,MAAM,CAACtO,CAAE,CAAC;;UAE5C;;UAEAs2B,GAAG,CAAC/8C,IAAI,CAAEgxB,EAAE,GAAG8xB,KAAM,CAAC;UACtB/F,GAAG,CAAC/8C,IAAI,CAAE,CAAC,GAAKixB,EAAE,GAAG8xB,KAAQ,CAAC;;UAE9B;;UAEAQ,aAAa,IAAI,CAAC;QAEnB;MAED;;MAEA;;MAEA;MACA;MACA;;MAEA,KAAM,IAAItyB,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAG8xB,KAAK,EAAE9xB,GAAE,EAAG,EAAG;QAErC,KAAM,IAAID,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAG8xB,KAAK,EAAE9xB,GAAE,EAAG,EAAG;UAErC,IAAM90B,CAAC,GAAGumD,gBAAgB,GAAGzxB,GAAE,GAAGqyB,MAAM,GAAGpyB,GAAE;UAC7C,IAAM5c,CAAC,GAAGouC,gBAAgB,GAAGzxB,GAAE,GAAGqyB,MAAM,IAAKpyB,GAAE,GAAG,CAAC,CAAE;UACrD,IAAM70B,CAAC,GAAGqmD,gBAAgB,IAAKzxB,GAAE,GAAG,CAAC,CAAE,GAAGqyB,MAAM,IAAKpyB,GAAE,GAAG,CAAC,CAAE;UAC7D,IAAMpzB,CAAC,GAAG4kD,gBAAgB,IAAKzxB,GAAE,GAAG,CAAC,CAAE,GAAGqyB,MAAM,GAAGpyB,GAAE;;UAErD;;UAEA2rB,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;UACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;;UAEvB;;UAEA2lD,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAEtH,aAAc,CAAC;;MAEvD;;MAEAwG,UAAU,IAAIc,UAAU;;MAExB;;MAEAf,gBAAgB,IAAIc,aAAa;IAElC;IAAC,OAAAjB,OAAA;EAEF;EAAC//C,YAAA,CAAAy/C,WAAA;IAAA1/C,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA0L,WAAA,CAAAtmD,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIs/B,WAAW,CAAEt/B,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACZ,MAAM,EAAEY,IAAI,CAACiG,KAAK,EAAEjG,IAAI,CAACy/B,aAAa,EAAEz/B,IAAI,CAAC0/B,cAAc,EAAE1/B,IAAI,CAAC2/B,aAAc,CAAC;IAE3H;EAAC;EAAA,OAAAL,WAAA;AAAA,EA3KwBhH,cAAc;AA+KxC;AACA;AACA;AAEA,SAAS0I,aAAaA,CAAE/hC,GAAG,EAAG;EAE7B,IAAMqN,GAAG,GAAG,CAAC,CAAC;EAEd,KAAM,IAAM1yB,CAAC,IAAIqlB,GAAG,EAAG;IAEtBqN,GAAG,CAAE1yB,CAAC,CAAE,GAAG,CAAC,CAAC;IAEb,KAAM,IAAMsB,CAAC,IAAI+jB,GAAG,CAAErlB,CAAC,CAAE,EAAG;MAE3B,IAAMqnD,QAAQ,GAAGhiC,GAAG,CAAErlB,CAAC,CAAE,CAAEsB,CAAC,CAAE;MAE9B,IAAK+lD,QAAQ,KAAMA,QAAQ,CAACxb,OAAO,IAClCwb,QAAQ,CAACjpC,SAAS,IAAIipC,QAAQ,CAACvnB,SAAS,IACxCunB,QAAQ,CAAC1tC,SAAS,IAAI0tC,QAAQ,CAACtzB,SAAS,IAAIszB,QAAQ,CAACh9B,SAAS,IAC9Dg9B,QAAQ,CAACh/B,SAAS,IAAIg/B,QAAQ,CAACl4B,YAAY,CAAE,EAAG;QAEhD,IAAKk4B,QAAQ,CAACl+B,qBAAqB,EAAG;UAErCvQ,OAAO,CAACC,IAAI,CAAE,oGAAqG,CAAC;UACpH6Z,GAAG,CAAE1yB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAG,IAAI;QAErB,CAAC,MAAM;UAENoxB,GAAG,CAAE1yB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAG+lD,QAAQ,CAACltC,KAAK,CAAC,CAAC;QAEjC;MAED,CAAC,MAAM,IAAK4M,KAAK,CAACC,OAAO,CAAEqgC,QAAS,CAAC,EAAG;QAEvC30B,GAAG,CAAE1yB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAG+lD,QAAQ,CAACtiD,KAAK,CAAC,CAAC;MAEjC,CAAC,MAAM;QAEN2tB,GAAG,CAAE1yB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAG+lD,QAAQ;MAEzB;IAED;EAED;EAEA,OAAO30B,GAAG;AAEX;AAEA,SAAS40B,aAAaA,CAAEC,QAAQ,EAAG;EAElC,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,KAAM,IAAIxnD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGunD,QAAQ,CAACxjD,MAAM,EAAE/D,CAAC,EAAG,EAAG;IAE5C,IAAM4gB,IAAG,GAAGwmC,aAAa,CAAEG,QAAQ,CAAEvnD,CAAC,CAAG,CAAC;IAE1C,KAAM,IAAMsB,CAAC,IAAIsf,IAAG,EAAG;MAEtB4mC,MAAM,CAAElmD,CAAC,CAAE,GAAGsf,IAAG,CAAEtf,CAAC,CAAE;IAEvB;EAED;EAEA,OAAOkmD,MAAM;AAEd;AAEA,SAASC,mBAAmBA,CAAEpiC,GAAG,EAAG;EAEnC,IAAMqN,GAAG,GAAG,EAAE;EAEd,KAAM,IAAI1yB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqlB,GAAG,CAACthB,MAAM,EAAE/D,CAAC,EAAG,EAAG;IAEvC0yB,GAAG,CAAChvB,IAAI,CAAE2hB,GAAG,CAAErlB,CAAC,CAAE,CAACma,KAAK,CAAC,CAAE,CAAC;EAE7B;EAEA,OAAOuY,GAAG;AAEX;AAEA,SAASg1B,yBAAyBA,CAAEC,QAAQ,EAAG;EAE9C,IAAKA,QAAQ,CAACC,eAAe,CAAC,CAAC,KAAK,IAAI,EAAG;IAE1C;IACA,OAAOD,QAAQ,CAACE,gBAAgB;EAEjC;EAEA,OAAOhkC,eAAe,CAACI,iBAAiB;AAEzC;;AAEA;;AAEA,IAAM6jC,aAAa,GAAAhhD,OAAA,CAAAghD,aAAA,GAAG;EAAE3tC,KAAK,EAAEitC,aAAa;EAAEW,KAAK,EAAET;AAAc,CAAC;AAEpE,IAAIU,cAAc,GAAG,+FAA+F;AAEpH,IAAIC,gBAAgB,GAAG,gEAAgE;AAAC,IAElFC,cAAc,GAAAphD,OAAA,CAAAohD,cAAA,0BAAAC,UAAA;EAAA5gC,SAAA,CAAA2gC,cAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA3gC,YAAA,CAAAygC,cAAA;EAEnB,SAAAA,eAAahc,UAAU,EAAG;IAAA,IAAAmc,OAAA;IAAA7iD,eAAA,OAAA0iD,cAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAtnD,IAAA;IAEAunD,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5BD,OAAA,CAAKznD,IAAI,GAAG,gBAAgB;IAE5BynD,OAAA,CAAKE,OAAO,GAAG,CAAC,CAAC;IACjBF,OAAA,CAAKd,QAAQ,GAAG,CAAC,CAAC;IAClBc,OAAA,CAAKG,cAAc,GAAG,EAAE;IAExBH,OAAA,CAAKI,YAAY,GAAGT,cAAc;IAClCK,OAAA,CAAKK,cAAc,GAAGT,gBAAgB;IAEtCI,OAAA,CAAK5R,SAAS,GAAG,CAAC;IAElB4R,OAAA,CAAKxR,SAAS,GAAG,KAAK;IACtBwR,OAAA,CAAKvR,kBAAkB,GAAG,CAAC;IAE3BuR,OAAA,CAAKnR,GAAG,GAAG,KAAK,CAAC,CAAC;IAClBmR,OAAA,CAAKM,MAAM,GAAG,KAAK,CAAC,CAAC;IACrBN,OAAA,CAAKO,QAAQ,GAAG,KAAK,CAAC,CAAC;;IAEvBP,OAAA,CAAKjW,eAAe,GAAG,IAAI;IAE3BiW,OAAA,CAAKQ,UAAU,GAAG;MACjBC,WAAW,EAAE,KAAK;MAAE;MACpBC,SAAS,EAAE,KAAK;MAAE;MAClBC,WAAW,EAAE,KAAK;MAAE;MACpBC,gBAAgB,EAAE,KAAK,CAAC;IACzB,CAAC;;IAED;IACA;IACAZ,OAAA,CAAKa,sBAAsB,GAAG;MAC7B,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpB,IAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;MACd,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;IACd,CAAC;IAEDb,OAAA,CAAKc,mBAAmB,GAAGziD,SAAS;IACpC2hD,OAAA,CAAKe,kBAAkB,GAAG,KAAK;IAE/Bf,OAAA,CAAKgB,WAAW,GAAG,IAAI;IAEvB,IAAKnd,UAAU,KAAKxlC,SAAS,EAAG;MAE/B2hD,OAAA,CAAK1V,SAAS,CAAEzG,UAAW,CAAC;IAE7B;IAAC,OAAAmc,OAAA;EAEF;EAACpiD,YAAA,CAAAiiD,cAAA;IAAAliD,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAkO,cAAA,CAAA9oD,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACmgC,cAAc,GAAGngC,MAAM,CAACmgC,cAAc;MAC3C,IAAI,CAACD,YAAY,GAAGlgC,MAAM,CAACkgC,YAAY;MAEvC,IAAI,CAAClB,QAAQ,GAAGH,aAAa,CAAE7+B,MAAM,CAACg/B,QAAS,CAAC;MAChD,IAAI,CAACiB,cAAc,GAAGf,mBAAmB,CAAEl/B,MAAM,CAACigC,cAAe,CAAC;MAElE,IAAI,CAACD,OAAO,GAAGppD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAACggC,OAAQ,CAAC;MAElD,IAAI,CAAC1R,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MAEnD,IAAI,CAACI,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MACrB,IAAI,CAACyR,MAAM,GAAGpgC,MAAM,CAACogC,MAAM;MAC3B,IAAI,CAACC,QAAQ,GAAGrgC,MAAM,CAACqgC,QAAQ;MAE/B,IAAI,CAACC,UAAU,GAAG1pD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAACsgC,UAAW,CAAC;MAExD,IAAI,CAACQ,WAAW,GAAG9gC,MAAM,CAAC8gC,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAArjD,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAkO,cAAA,CAAA9oD,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAACijC,WAAW,GAAG,IAAI,CAACA,WAAW;MACnCjjC,IAAI,CAACmhC,QAAQ,GAAG,CAAC,CAAC;MAElB,KAAM,IAAMpjD,IAAI,IAAI,IAAI,CAACojD,QAAQ,EAAG;QAEnC,IAAM+B,OAAO,GAAG,IAAI,CAAC/B,QAAQ,CAAEpjD,IAAI,CAAE;QACrC,IAAM1E,OAAK,GAAG6pD,OAAO,CAAC7pD,KAAK;QAE3B,IAAKA,OAAK,IAAIA,OAAK,CAAC4oB,SAAS,EAAG;UAE/BjC,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,GAAG;YACTnB,KAAK,EAAEA,OAAK,CAACgnB,MAAM,CAAEC,IAAK,CAAC,CAACxR;UAC7B,CAAC;QAEF,CAAC,MAAM,IAAKzV,OAAK,IAAIA,OAAK,CAACosC,OAAO,EAAG;UAEpCzlB,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,GAAG;YACTnB,KAAK,EAAEA,OAAK,CAACqzC,MAAM,CAAC;UACrB,CAAC;QAEF,CAAC,MAAM,IAAKrzC,OAAK,IAAIA,OAAK,CAACka,SAAS,EAAG;UAEtCyM,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,IAAI;YACVnB,KAAK,EAAEA,OAAK,CAACwd,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAKxd,OAAK,IAAIA,OAAK,CAACs0B,SAAS,EAAG;UAEtC3N,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,IAAI;YACVnB,KAAK,EAAEA,OAAK,CAACwd,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAKxd,OAAK,IAAIA,OAAK,CAAC4qB,SAAS,EAAG;UAEtCjE,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,IAAI;YACVnB,KAAK,EAAEA,OAAK,CAACwd,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAKxd,OAAK,IAAIA,OAAK,CAAC2e,SAAS,EAAG;UAEtCgI,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,IAAI;YACVnB,KAAK,EAAEA,OAAK,CAACwd,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAKxd,OAAK,IAAIA,OAAK,CAACqgC,SAAS,EAAG;UAEtC1Z,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvBvD,IAAI,EAAE,IAAI;YACVnB,KAAK,EAAEA,OAAK,CAACwd,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM;UAENmJ,IAAI,CAACmhC,QAAQ,CAAEpjD,IAAI,CAAE,GAAG;YACvB1E,KAAK,EAAEA;UACR,CAAC;;UAED;QAED;MAED;;MAEA,IAAKN,MAAM,CAACuF,IAAI,CAAE,IAAI,CAAC6jD,OAAQ,CAAC,CAACxkD,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAACmiC,OAAO,GAAG,IAAI,CAACA,OAAO;MAEzEniC,IAAI,CAACqiC,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCriC,IAAI,CAACsiC,cAAc,GAAG,IAAI,CAACA,cAAc;MAEzCtiC,IAAI,CAACuiC,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBviC,IAAI,CAACwiC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE7B,IAAMC,UAAU,GAAG,CAAC,CAAC;MAErB,KAAM,IAAM7iD,GAAG,IAAI,IAAI,CAAC6iD,UAAU,EAAG;QAEpC,IAAK,IAAI,CAACA,UAAU,CAAE7iD,GAAG,CAAE,KAAK,IAAI,EAAG6iD,UAAU,CAAE7iD,GAAG,CAAE,GAAG,IAAI;MAEhE;MAEA,IAAK7G,MAAM,CAACuF,IAAI,CAAEmkD,UAAW,CAAC,CAAC9kD,MAAM,GAAG,CAAC,EAAGqiB,IAAI,CAACyiC,UAAU,GAAGA,UAAU;MAExE,OAAOziC,IAAI;IAEZ;EAAC;EAAA,OAAA8hC,cAAA;AAAA,EAhL2BtY,QAAQ;AAAA,IAoL/B2Z,MAAM,GAAAziD,OAAA,CAAAyiD,MAAA,0BAAAC,UAAA;EAAAjiC,SAAA,CAAAgiC,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAhiC,YAAA,CAAA8hC,MAAA;EAEX,SAAAA,OAAA,EAAc;IAAA,IAAAG,OAAA;IAAAlkD,eAAA,OAAA+jD,MAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA3oD,IAAA;IAEA4oD,OAAA,CAAKxgB,QAAQ,GAAG,IAAI;IAEpBwgB,OAAA,CAAK9oD,IAAI,GAAG,QAAQ;IAEpB8oD,OAAA,CAAK10B,kBAAkB,GAAG,IAAIsK,OAAO,CAAC,CAAC;IAEvCoqB,OAAA,CAAKz0B,gBAAgB,GAAG,IAAIqK,OAAO,CAAC,CAAC;IACrCoqB,OAAA,CAAKv0B,uBAAuB,GAAG,IAAImK,OAAO,CAAC,CAAC;IAE5CoqB,OAAA,CAAKrlB,gBAAgB,GAAG/wB,qBAAqB;IAAC,OAAAo2C,OAAA;EAE/C;EAACzjD,YAAA,CAAAsjD,MAAA;IAAAvjD,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAAnqD,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAAC7X,kBAAkB,CAAC5a,IAAI,CAAEmO,MAAM,CAACyM,kBAAmB,CAAC;MAEzD,IAAI,CAACC,gBAAgB,CAAC7a,IAAI,CAAEmO,MAAM,CAAC0M,gBAAiB,CAAC;MACrD,IAAI,CAACE,uBAAuB,CAAC/a,IAAI,CAAEmO,MAAM,CAAC4M,uBAAwB,CAAC;MAEnE,IAAI,CAACkP,gBAAgB,GAAG9b,MAAM,CAAC8b,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAr+B,GAAA;IAAAvG,KAAA,EAED,SAAA8qC,kBAAmB3kC,MAAM,EAAG;MAE3B,OAAOm0C,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAAnqD,SAAA,8BAAA0B,IAAA,OAAyB8E,MAAM,EAAG4V,MAAM,CAAC,CAAC;IAElD;EAAC;IAAAxV,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAAnqD,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;MAE9B,IAAI,CAAC7V,kBAAkB,CAAC5a,IAAI,CAAE,IAAI,CAACgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;IAE1D;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAAk5B,kBAAmBmS,aAAa,EAAEC,cAAc,EAAG;MAElDgP,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAAnqD,SAAA,8BAAA0B,IAAA,OAAyBgqC,aAAa,EAAEC,cAAc;MAEtD,IAAI,CAAC/V,kBAAkB,CAAC5a,IAAI,CAAE,IAAI,CAACgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;IAE1D;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAmvC,MAAA;AAAA,EA5DmB7iB,QAAQ;AAAA,IAgEvBijB,iBAAiB,GAAA7iD,OAAA,CAAA6iD,iBAAA,0BAAAC,OAAA;EAAAriC,SAAA,CAAAoiC,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAApiC,YAAA,CAAAkiC,iBAAA;EAEtB,SAAAA,kBAAaG,GAAG,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,EAAE5lB,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAA4lB,OAAA;IAAAxkD,eAAA,OAAAmkD,iBAAA;IAE3DK,OAAA,GAAAH,QAAA,CAAA/oD,IAAA;IAEAkpD,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKppD,IAAI,GAAG,mBAAmB;IAE/BopD,OAAA,CAAKF,GAAG,GAAGA,GAAG;IACdE,OAAA,CAAKE,IAAI,GAAG,CAAC;IAEbF,OAAA,CAAK7lB,IAAI,GAAGA,IAAI;IAChB6lB,OAAA,CAAK5lB,GAAG,GAAGA,GAAG;IACd4lB,OAAA,CAAKG,KAAK,GAAG,EAAE;IAEfH,OAAA,CAAKD,MAAM,GAAGA,MAAM;IACpBC,OAAA,CAAKI,IAAI,GAAG,IAAI;IAEhBJ,OAAA,CAAKK,SAAS,GAAG,EAAE,CAAC,CAAC;IACrBL,OAAA,CAAKM,UAAU,GAAG,CAAC,CAAC,CAAC;;IAErBN,OAAA,CAAKO,sBAAsB,CAAC,CAAC;IAAC,OAAAP,OAAA;EAE/B;EAAC/jD,YAAA,CAAA0jD,iBAAA;IAAA3jD,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA2P,iBAAA,CAAAvqD,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACid,GAAG,GAAGvhC,MAAM,CAACuhC,GAAG;MACrB,IAAI,CAACI,IAAI,GAAG3hC,MAAM,CAAC2hC,IAAI;MAEvB,IAAI,CAAC/lB,IAAI,GAAG5b,MAAM,CAAC4b,IAAI;MACvB,IAAI,CAACC,GAAG,GAAG7b,MAAM,CAAC6b,GAAG;MACrB,IAAI,CAAC+lB,KAAK,GAAG5hC,MAAM,CAAC4hC,KAAK;MAEzB,IAAI,CAACJ,MAAM,GAAGxhC,MAAM,CAACwhC,MAAM;MAC3B,IAAI,CAACK,IAAI,GAAG7hC,MAAM,CAAC6hC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC6hC,IAAK,CAAC;MAE1E,IAAI,CAACC,SAAS,GAAG9hC,MAAM,CAAC8hC,SAAS;MACjC,IAAI,CAACC,UAAU,GAAG/hC,MAAM,CAAC+hC,UAAU;MAEnC,OAAO,IAAI;IAEZ;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EAPC;IAAAtkD,GAAA;IAAAvG,KAAA,EAQA,SAAA+qD,eAAgBC,WAAW,EAAG;MAE7B;MACA,IAAMC,YAAY,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,GAAGF,WAAW;MAE7D,IAAI,CAACX,GAAG,GAAGn1C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACm2C,IAAI,CAAEF,YAAa,CAAC;MAClD,IAAI,CAACH,sBAAsB,CAAC,CAAC;IAE9B;;IAEA;AACD;AACA;EAFC;IAAAvkD,GAAA;IAAAvG,KAAA,EAGA,SAAAorD,eAAA,EAAiB;MAEhB,IAAMH,YAAY,GAAGj2C,IAAI,CAACq2C,GAAG,CAAEt2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACs1C,GAAI,CAAC;MAEzD,OAAO,GAAG,GAAG,IAAI,CAACa,aAAa,CAAC,CAAC,GAAGD,YAAY;IAEjD;EAAC;IAAA1kD,GAAA;IAAAvG,KAAA,EAED,SAAAsrD,gBAAA,EAAkB;MAEjB,OAAOp2C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACm2C,IAAI,CAC7Bn2C,IAAI,CAACq2C,GAAG,CAAEt2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACs1C,GAAI,CAAC,GAAG,IAAI,CAACI,IAAK,CAAC;IAEpD;EAAC;IAAAlkD,GAAA;IAAAvG,KAAA,EAED,SAAAurD,aAAA,EAAe;MAEd;MACA,OAAO,IAAI,CAACX,SAAS,GAAG51C,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC00C,MAAM,EAAE,CAAE,CAAC;IAEnD;EAAC;IAAA/jD,GAAA;IAAAvG,KAAA,EAED,SAAAkrD,cAAA,EAAgB;MAEf;MACA,OAAO,IAAI,CAACN,SAAS,GAAG51C,IAAI,CAACa,GAAG,CAAE,IAAI,CAACy0C,MAAM,EAAE,CAAE,CAAC;IAEnD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlCC;IAAA/jD,GAAA;IAAAvG,KAAA,EAmCA,SAAAwrD,cAAeC,SAAS,EAAEC,UAAU,EAAEz1C,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAI,CAACukC,MAAM,GAAGmB,SAAS,GAAGC,UAAU;MAEpC,IAAK,IAAI,CAACf,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACXtmC,OAAO,EAAE,IAAI;UACbonC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV9lC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAAC4kC,IAAI,CAACtmC,OAAO,GAAG,IAAI;MACxB,IAAI,CAACsmC,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAG11C,CAAC;MACrB,IAAI,CAAC00C,IAAI,CAACiB,OAAO,GAAGlqD,CAAC;MACrB,IAAI,CAACipD,IAAI,CAAC7kC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAAC6kC,IAAI,CAAC5kC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC+kC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAvkD,GAAA;IAAAvG,KAAA,EAED,SAAA6rD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAACtmC,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAACymC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAvkD,GAAA;IAAAvG,KAAA,EAED,SAAA8qD,uBAAA,EAAyB;MAExB,IAAMpmB,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAIF,GAAG,GAAGE,IAAI,GAAG1vB,IAAI,CAACq2C,GAAG,CAAEt2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACs1C,GAAI,CAAC,GAAG,IAAI,CAACI,IAAI;MACjE,IAAI1kC,MAAM,GAAG,CAAC,GAAGye,GAAG;MACpB,IAAI1e,KAAK,GAAG,IAAI,CAACwkC,MAAM,GAAGvkC,MAAM;MAChC,IAAIue,IAAI,GAAG,CAAE,GAAG,GAAGxe,KAAK;MACxB,IAAM6kC,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAK,IAAI,CAACA,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACtmC,OAAO,EAAG;QAE9C,IAAMonC,SAAS,GAAGd,IAAI,CAACc,SAAS;UAC/BC,UAAU,GAAGf,IAAI,CAACe,UAAU;QAE7BpnB,IAAI,IAAIqmB,IAAI,CAACgB,OAAO,GAAG7lC,KAAK,GAAG2lC,SAAS;QACxCjnB,GAAG,IAAImmB,IAAI,CAACiB,OAAO,GAAG7lC,MAAM,GAAG2lC,UAAU;QACzC5lC,KAAK,IAAI6kC,IAAI,CAAC7kC,KAAK,GAAG2lC,SAAS;QAC/B1lC,MAAM,IAAI4kC,IAAI,CAAC5kC,MAAM,GAAG2lC,UAAU;MAEnC;MAEA,IAAMI,IAAI,GAAG,IAAI,CAACjB,UAAU;MAC5B,IAAKiB,IAAI,KAAK,CAAC,EAAGxnB,IAAI,IAAII,IAAI,GAAGonB,IAAI,GAAG,IAAI,CAACP,YAAY,CAAC,CAAC;MAE3D,IAAI,CAAC/1B,gBAAgB,CAAC6O,eAAe,CAAEC,IAAI,EAAEA,IAAI,GAAGxe,KAAK,EAAE0e,GAAG,EAAEA,GAAG,GAAGze,MAAM,EAAE2e,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,gBAAiB,CAAC;MAErH,IAAI,CAAClP,uBAAuB,CAAC/a,IAAI,CAAE,IAAI,CAAC6a,gBAAiB,CAAC,CAAC5U,MAAM,CAAC,CAAC;IAEpE;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA2P,iBAAA,CAAAvqD,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAAC4R,MAAM,CAAC8xB,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1B1jC,IAAI,CAAC4R,MAAM,CAACkyB,IAAI,GAAG,IAAI,CAACA,IAAI;MAE5B9jC,IAAI,CAAC4R,MAAM,CAACmM,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B/d,IAAI,CAAC4R,MAAM,CAACoM,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1Bhe,IAAI,CAAC4R,MAAM,CAACmyB,KAAK,GAAG,IAAI,CAACA,KAAK;MAE9B/jC,IAAI,CAAC4R,MAAM,CAAC+xB,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,IAAK,IAAI,CAACK,IAAI,KAAK,IAAI,EAAGhkC,IAAI,CAAC4R,MAAM,CAACoyB,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAAC29B,IAAK,CAAC;MAE3EhkC,IAAI,CAAC4R,MAAM,CAACqyB,SAAS,GAAG,IAAI,CAACA,SAAS;MACtCjkC,IAAI,CAAC4R,MAAM,CAACsyB,UAAU,GAAG,IAAI,CAACA,UAAU;MAExC,OAAOlkC,IAAI;IAEZ;EAAC;EAAA,OAAAujC,iBAAA;AAAA,EAjO8BJ,MAAM;AAqOtC,IAAMO,GAAG,GAAG,CAAE,EAAE,CAAC,CAAC;AAClB,IAAMC,MAAM,GAAG,CAAC;AAAC,IAEXyB,UAAU,GAAA1kD,OAAA,CAAA0kD,UAAA,0BAAAC,UAAA;EAAAlkC,SAAA,CAAAikC,UAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAjkC,YAAA,CAAA+jC,UAAA;EAEf,SAAAA,WAAarnB,IAAI,EAAEC,GAAG,EAAEunB,YAAY,EAAG;IAAA,IAAAC,OAAA;IAAApmD,eAAA,OAAAgmD,UAAA;IAEtCI,OAAA,GAAAF,QAAA,CAAA5qD,IAAA;IAEA8qD,OAAA,CAAKhrD,IAAI,GAAG,YAAY;IAExBgrD,OAAA,CAAKD,YAAY,GAAGA,YAAY;IAChCC,OAAA,CAAKvnB,gBAAgB,GAAG,IAAI;IAC5BunB,OAAA,CAAKC,iBAAiB,GAAG,CAAC;IAE1B,IAAMC,QAAQ,GAAG,IAAInC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE0nB,QAAQ,CAACnmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAEyxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIpC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE2nB,QAAQ,CAACpmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAE0xC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIrC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE4nB,QAAQ,CAACrmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAE2xC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAItC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE6nB,QAAQ,CAACtmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAE4xC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIvC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE8nB,QAAQ,CAACvmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAE6xC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIxC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;IAChE+nB,QAAQ,CAACxmB,MAAM,GAAGimB,OAAA,CAAKjmB,MAAM;IAC7BimB,OAAA,CAAKvxC,GAAG,CAAE8xC,QAAS,CAAC;IAAC,OAAAP,OAAA;EAEtB;EAAC3lD,YAAA,CAAAulD,UAAA;IAAAxlD,GAAA;IAAAvG,KAAA,EAED,SAAA2sD,uBAAA,EAAyB;MAExB,IAAM/nB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE9C,IAAMgoB,OAAO,GAAG,IAAI,CAAClzB,QAAQ,CAAC/U,MAAM,CAAC,CAAC;MAEtC,IAAAkoC,QAAA,GAAAC,cAAA,CAAuEF,OAAO;QAAtEP,QAAQ,GAAAQ,QAAA;QAAEP,QAAQ,GAAAO,QAAA;QAAEN,QAAQ,GAAAM,QAAA;QAAEL,QAAQ,GAAAK,QAAA;QAAEJ,QAAQ,GAAAI,QAAA;QAAEH,QAAQ,GAAAG,QAAA;MAAa,IAAAE,SAAA,GAAAC,0BAAA,CAEzDJ,OAAO;QAAAK,KAAA;MAAA;QAA7B,KAAAF,SAAA,CAAAtrD,CAAA,MAAAwrD,KAAA,GAAAF,SAAA,CAAAntD,CAAA,IAAAkD,IAAA,GAAgC;UAAA,IAApBwyB,MAAM,GAAA23B,KAAA,CAAAjtD,KAAA;UAAc,IAAI,CAAC6pC,MAAM,CAAEvU,MAAO,CAAC;QAAA;MAAC,SAAA43B,GAAA;QAAAH,SAAA,CAAAxtD,CAAA,CAAA2tD,GAAA;MAAA;QAAAH,SAAA,CAAAvrD,CAAA;MAAA;MAEtD,IAAKojC,gBAAgB,KAAK/wB,qBAAqB,EAAG;QAEjDw4C,QAAQ,CAACvqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BmzC,QAAQ,CAACjvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BkvB,QAAQ,CAACxqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BozC,QAAQ,CAAClvB,MAAM,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5BmvB,QAAQ,CAACzqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QAC5BqzC,QAAQ,CAACnvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BovB,QAAQ,CAAC1qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BszC,QAAQ,CAACpvB,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAE5BqvB,QAAQ,CAAC3qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BuzC,QAAQ,CAACrvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BsvB,QAAQ,CAAC5qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BwzC,QAAQ,CAACtvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAE7B,CAAC,MAAM,IAAKwH,gBAAgB,KAAK9wB,sBAAsB,EAAG;QAEzDu4C,QAAQ,CAACvqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BmzC,QAAQ,CAACjvB,MAAM,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5BkvB,QAAQ,CAACxqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BozC,QAAQ,CAAClvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BmvB,QAAQ,CAACzqB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BqzC,QAAQ,CAACnvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BovB,QAAQ,CAAC1qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QAC5BszC,QAAQ,CAACpvB,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAE5BqvB,QAAQ,CAAC3qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BuzC,QAAQ,CAACrvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BsvB,QAAQ,CAAC5qB,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BwzC,QAAQ,CAACtvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAE7B,CAAC,MAAM;QAEN,MAAM,IAAIv6B,KAAK,CAAE,wEAAwE,GAAG+hC,gBAAiB,CAAC;MAE/G;MAAC,IAAAuoB,UAAA,GAAAH,0BAAA,CAEqBJ,OAAO;QAAAQ,MAAA;MAAA;QAA7B,KAAAD,UAAA,CAAA1rD,CAAA,MAAA2rD,MAAA,GAAAD,UAAA,CAAAvtD,CAAA,IAAAkD,IAAA,GAAgC;UAAA,IAApBwyB,QAAM,GAAA83B,MAAA,CAAAptD,KAAA;UAEjB,IAAI,CAAC4a,GAAG,CAAE0a,QAAO,CAAC;UAElBA,QAAM,CAAC6V,iBAAiB,CAAC,CAAC;QAE3B;MAAC,SAAA+hB,GAAA;QAAAC,UAAA,CAAA5tD,CAAA,CAAA2tD,GAAA;MAAA;QAAAC,UAAA,CAAA3rD,CAAA;MAAA;IAEF;EAAC;IAAA+E,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQ+3B,QAAQ,EAAEmF,KAAK,EAAG;MAEzB,IAAK,IAAI,CAAC/lB,MAAM,KAAK,IAAI,EAAG,IAAI,CAAC6D,iBAAiB,CAAC,CAAC;MAEpD,IAAQ+gB,YAAY,GAAwB,IAAI,CAAxCA,YAAY;QAAEE,iBAAiB,GAAK,IAAI,CAA1BA,iBAAiB;MAEvC,IAAK,IAAI,CAACxnB,gBAAgB,KAAKsjB,QAAQ,CAACtjB,gBAAgB,EAAG;QAE1D,IAAI,CAACA,gBAAgB,GAAGsjB,QAAQ,CAACtjB,gBAAgB;QAEjD,IAAI,CAAC+nB,sBAAsB,CAAC,CAAC;MAE9B;MAEA,IAAAW,cAAA,GAAAR,cAAA,CAAuE,IAAI,CAACpzB,QAAQ;QAA5E2yB,QAAQ,GAAAiB,cAAA;QAAEhB,QAAQ,GAAAgB,cAAA;QAAEf,QAAQ,GAAAe,cAAA;QAAEd,QAAQ,GAAAc,cAAA;QAAEb,QAAQ,GAAAa,cAAA;QAAEZ,QAAQ,GAAAY,cAAA;MAElE,IAAMC,mBAAmB,GAAGrF,QAAQ,CAACC,eAAe,CAAC,CAAC;MACtD,IAAMqF,qBAAqB,GAAGtF,QAAQ,CAACuF,iBAAiB,CAAC,CAAC;MAC1D,IAAMC,wBAAwB,GAAGxF,QAAQ,CAACyF,oBAAoB,CAAC,CAAC;MAEhE,IAAMC,gBAAgB,GAAG1F,QAAQ,CAAC2F,EAAE,CAACxpC,OAAO;MAE5C6jC,QAAQ,CAAC2F,EAAE,CAACxpC,OAAO,GAAG,KAAK;MAE3B,IAAM+E,eAAe,GAAG8iC,YAAY,CAAC7+B,OAAO,CAACjE,eAAe;MAE5D8iC,YAAY,CAAC7+B,OAAO,CAACjE,eAAe,GAAG,KAAK;MAE5C8+B,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEhB,QAAS,CAAC;MAElCnE,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEf,QAAS,CAAC;MAElCpE,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEd,QAAS,CAAC;MAElCrE,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEb,QAAS,CAAC;MAElCtE,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEZ,QAAS,CAAC;;MAElC;MACA;;MAEAP,YAAY,CAAC7+B,OAAO,CAACjE,eAAe,GAAGA,eAAe;MAEtD8+B,QAAQ,CAAC4F,eAAe,CAAE5B,YAAY,EAAE,CAAC,EAAEE,iBAAkB,CAAC;MAC9DlE,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEX,QAAS,CAAC;MAElCxE,QAAQ,CAAC4F,eAAe,CAAEP,mBAAmB,EAAEC,qBAAqB,EAAEE,wBAAyB,CAAC;MAEhGxF,QAAQ,CAAC2F,EAAE,CAACxpC,OAAO,GAAGupC,gBAAgB;MAEtC1B,YAAY,CAAC7+B,OAAO,CAAC1D,gBAAgB,GAAG,IAAI;IAE7C;EAAC;EAAA,OAAAoiC,UAAA;AAAA,EAjKuB9kB,QAAQ;AAAA,IAqK3B+mB,WAAW,GAAA3mD,OAAA,CAAA2mD,WAAA,0BAAAC,SAAA;EAAAnmC,SAAA,CAAAkmC,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAlmC,YAAA,CAAAgmC,WAAA;EAEhB,SAAAA,YAAa7mC,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAEhE,UAAU,EAAG;IAAA,IAAA0pC,OAAA;IAAApoD,eAAA,OAAAioD,WAAA;IAExG7mC,MAAM,GAAGA,MAAM,KAAKlgB,SAAS,GAAGkgB,MAAM,GAAG,EAAE;IAC3Ce,OAAO,GAAGA,OAAO,KAAKjhB,SAAS,GAAGihB,OAAO,GAAG9c,qBAAqB;IAEjE+iD,OAAA,GAAAD,QAAA,CAAA7sD,IAAA,OAAO8lB,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAEhE,UAAU;IAEhG0pC,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAK7kC,KAAK,GAAG,KAAK;IAAC,OAAA6kC,OAAA;EAEpB;EAAC3nD,YAAA,CAAAwnD,WAAA;IAAAznD,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACuL,KAAK;IAElB,CAAC;IAAAxM,GAAA,EAED,SAAAA,IAAYlZ,KAAK,EAAG;MAEnB,IAAI,CAAC0lB,KAAK,GAAG1lB,KAAK;IAEnB;EAAC;EAAA,OAAAguD,WAAA;AAAA,EAzBwBpmC,OAAO;AAAA,IA6B3BymC,qBAAqB,GAAAhnD,OAAA,CAAAgnD,qBAAA,0BAAAC,mBAAA;EAAAxmC,SAAA,CAAAumC,qBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAAvmC,YAAA,CAAAqmC,qBAAA;EAE1B,SAAAA,sBAAaj2B,IAAI,GAAG,CAAC,EAAE3L,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAA+hC,OAAA;IAAAzoD,eAAA,OAAAsoD,qBAAA;IAErCG,OAAA,GAAAD,QAAA,CAAAltD,IAAA,OAAO+2B,IAAI,EAAEA,IAAI,EAAE3L,OAAO;IAE1B+hC,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IAEnC,IAAM/oC,KAAK,GAAG;MAAEI,KAAK,EAAEsS,IAAI;MAAErS,MAAM,EAAEqS,IAAI;MAAExL,KAAK,EAAE;IAAE,CAAC;IACrD,IAAMzF,MAAM,GAAG,CAAEzB,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAE;IAE3D,IAAK+G,OAAO,CAAClC,QAAQ,KAAKtjB,SAAS,EAAG;MAErC;MACAmc,QAAQ,CAAE,sFAAuF,CAAC;MAClGqJ,OAAO,CAAChI,UAAU,GAAGgI,OAAO,CAAClC,QAAQ,KAAK5Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAEvF;IAEAw9C,OAAA,CAAKnhC,OAAO,GAAG,IAAI2gC,WAAW,CAAE7mC,MAAM,EAAEsF,OAAO,CAACvE,OAAO,EAAEuE,OAAO,CAACrE,KAAK,EAAEqE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,SAAS,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,MAAM,EAAEiE,OAAO,CAACtrB,IAAI,EAAEsrB,OAAO,CAAChE,UAAU,EAAEgE,OAAO,CAAChI,UAAW,CAAC;;IAEnM;IACA;IACA;;IAEA;IACA;IACA;;IAEA+pC,OAAA,CAAKnhC,OAAO,CAAC3D,qBAAqB,GAAG,IAAI;IAEzC8kC,OAAA,CAAKnhC,OAAO,CAACjE,eAAe,GAAGqD,OAAO,CAACrD,eAAe,KAAKniB,SAAS,GAAGwlB,OAAO,CAACrD,eAAe,GAAG,KAAK;IACtGolC,OAAA,CAAKnhC,OAAO,CAAC9E,SAAS,GAAGkE,OAAO,CAAClE,SAAS,KAAKthB,SAAS,GAAGwlB,OAAO,CAAClE,SAAS,GAAGtc,YAAY;IAAC,OAAAuiD,OAAA;EAE7F;EAAChoD,YAAA,CAAA6nD,qBAAA;IAAA9nD,GAAA;IAAAvG,KAAA,EAED,SAAA0uD,2BAA4BxG,QAAQ,EAAE76B,OAAO,EAAG;MAE/C,IAAI,CAACA,OAAO,CAAClsB,IAAI,GAAGksB,OAAO,CAAClsB,IAAI;MAChC,IAAI,CAACksB,OAAO,CAAC5I,UAAU,GAAG4I,OAAO,CAAC5I,UAAU;MAE5C,IAAI,CAAC4I,OAAO,CAACjE,eAAe,GAAGiE,OAAO,CAACjE,eAAe;MACtD,IAAI,CAACiE,OAAO,CAAC9E,SAAS,GAAG8E,OAAO,CAAC9E,SAAS;MAC1C,IAAI,CAAC8E,OAAO,CAAC/E,SAAS,GAAG+E,OAAO,CAAC/E,SAAS;MAE1C,IAAMqmC,MAAM,GAAG;QAEd7G,QAAQ,EAAE;UACT8G,SAAS,EAAE;YAAE5uD,KAAK,EAAE;UAAK;QAC1B,CAAC;QAEDgpD,YAAY,EAAE,8YAkBb;QAEDC,cAAc,EAAE;MAkBjB,CAAC;MAED,IAAM1vB,QAAQ,GAAG,IAAI0sB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE3C,IAAMlZ,QAAQ,GAAG,IAAI0b,cAAc,CAAE;QAEpC/jD,IAAI,EAAE,qBAAqB;QAE3BojD,QAAQ,EAAEH,aAAa,CAAEgH,MAAM,CAAC7G,QAAS,CAAC;QAC1CkB,YAAY,EAAE2F,MAAM,CAAC3F,YAAY;QACjCC,cAAc,EAAE0F,MAAM,CAAC1F,cAAc;QACrCxY,IAAI,EAAEhoC,QAAQ;QACd+nC,QAAQ,EAAE5nC;MAEX,CAAE,CAAC;MAEHmkC,QAAQ,CAAC+a,QAAQ,CAAC8G,SAAS,CAAC5uD,KAAK,GAAGqtB,OAAO;MAE3C,IAAMwhC,IAAI,GAAG,IAAInK,IAAI,CAAEnrB,QAAQ,EAAEwT,QAAS,CAAC;MAE3C,IAAM+hB,gBAAgB,GAAGzhC,OAAO,CAAC9E,SAAS;;MAE1C;MACA,IAAK8E,OAAO,CAAC9E,SAAS,KAAKnc,wBAAwB,EAAGihB,OAAO,CAAC9E,SAAS,GAAGtc,YAAY;MAEtF,IAAMqpB,MAAM,GAAG,IAAIy2B,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAK,CAAC;MAC5Cz2B,MAAM,CAACnF,MAAM,CAAE+3B,QAAQ,EAAE2G,IAAK,CAAC;MAE/BxhC,OAAO,CAAC9E,SAAS,GAAGumC,gBAAgB;MAEpCD,IAAI,CAACt1B,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvBykC,IAAI,CAAC9hB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA+pC,MAAOme,QAAQ,EAAEpkC,KAAK,EAAE8I,KAAK,EAAEmiC,OAAO,EAAG;MAExC,IAAMxB,mBAAmB,GAAGrF,QAAQ,CAACC,eAAe,CAAC,CAAC;MAEtD,KAAM,IAAIloD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BioD,QAAQ,CAAC4F,eAAe,CAAE,IAAI,EAAE7tD,CAAE,CAAC;QAEnCioD,QAAQ,CAACne,KAAK,CAAEjmB,KAAK,EAAE8I,KAAK,EAAEmiC,OAAQ,CAAC;MAExC;MAEA7G,QAAQ,CAAC4F,eAAe,CAAEP,mBAAoB,CAAC;IAEhD;EAAC;EAAA,OAAAc,qBAAA;AAAA,EA5IkC9gC,iBAAiB;AAgJrD,IAAMyhC,QAAQ,GAAG,aAAc,IAAI56B,OAAO,CAAC,CAAC;AAC5C,IAAM66B,QAAQ,GAAG,aAAc,IAAI76B,OAAO,CAAC,CAAC;AAC5C,IAAM86B,aAAa,GAAG,aAAc,IAAIjxC,OAAO,CAAC,CAAC;AAAC,IAE5CkxC,KAAK,GAAA9nD,OAAA,CAAA8nD,KAAA;EAEV,SAAAA,MAAa14B,MAAM,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEgG,QAAQ,GAAG,CAAC,EAAG;IAAAr0B,eAAA,OAAAopD,KAAA;IAE5D,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;;IAEA,IAAI,CAAC34B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;EAEzB;EAAC5zB,YAAA,CAAA2oD,KAAA;IAAA5oD,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKud,MAAM,EAAE2D,QAAQ,EAAG;MAEvB,IAAI,CAAC3D,MAAM,CAAC9b,IAAI,CAAE8b,MAAO,CAAC;MAC1B,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAAqvD,cAAep5C,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAE3B,IAAI,CAAC8L,MAAM,CAACvd,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC;MAC1B,IAAI,CAAC0P,QAAQ,GAAGzP,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAsvD,8BAA+B74B,MAAM,EAAEqC,KAAK,EAAG;MAE9C,IAAI,CAACrC,MAAM,CAAC9b,IAAI,CAAE8b,MAAO,CAAC;MAC1B,IAAI,CAAC2D,QAAQ,GAAG,CAAEtB,KAAK,CAAC9c,GAAG,CAAE,IAAI,CAACya,MAAO,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAlwB,GAAA;IAAAvG,KAAA,EAED,SAAA0uC,sBAAuBvuC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;MAEhC,IAAMo2B,MAAM,GAAGu4B,QAAQ,CAAC9zC,UAAU,CAAE7a,CAAC,EAAEiY,CAAE,CAAC,CAAC2D,KAAK,CAAEgzC,QAAQ,CAAC/zC,UAAU,CAAE/a,CAAC,EAAEmY,CAAE,CAAE,CAAC,CAACuB,SAAS,CAAC,CAAC;;MAE3F;;MAEA,IAAI,CAACy1C,6BAA6B,CAAE74B,MAAM,EAAEt2B,CAAE,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAoG,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMwf,KAAK,EAAG;MAEb,IAAI,CAAC1D,MAAM,CAAC9b,IAAI,CAAEwf,KAAK,CAAC1D,MAAO,CAAC;MAChC,IAAI,CAAC2D,QAAQ,GAAGD,KAAK,CAACC,QAAQ;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAA6Z,UAAA,EAAY;MAEX;;MAEA,IAAM01C,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC94B,MAAM,CAACnyB,MAAM,CAAC,CAAC;MACtD,IAAI,CAACmyB,MAAM,CAACrb,cAAc,CAAEm0C,mBAAoB,CAAC;MACjD,IAAI,CAACn1B,QAAQ,IAAIm1B,mBAAmB;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAhpD,GAAA;IAAAvG,KAAA,EAED,SAAA+b,OAAA,EAAS;MAER,IAAI,CAACqe,QAAQ,IAAI,CAAE,CAAC;MACpB,IAAI,CAAC3D,MAAM,CAAC1a,MAAM,CAAC,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAvG,KAAA,EAED,SAAAk7B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACrC,MAAM,CAACza,GAAG,CAAE8c,KAAM,CAAC,GAAG,IAAI,CAACsB,QAAQ;IAEhD;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAAwvD,iBAAkBx1B,MAAM,EAAG;MAE1B,OAAO,IAAI,CAACkB,eAAe,CAAElB,MAAM,CAAClc,MAAO,CAAC,GAAGkc,MAAM,CAACnD,MAAM;IAE7D;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAAyvD,aAAc32B,KAAK,EAAE3yB,MAAM,EAAG;MAE7B,OAAOA,MAAM,CAACwU,IAAI,CAAEme,KAAM,CAAC,CAAC/d,eAAe,CAAE,IAAI,CAAC0b,MAAM,EAAE,CAAE,IAAI,CAACyE,eAAe,CAAEpC,KAAM,CAAE,CAAC;IAE5F;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA0vD,cAAeC,IAAI,EAAExpD,MAAM,EAAG;MAE7B,IAAM82B,SAAS,GAAG0yB,IAAI,CAACpzB,KAAK,CAAEyyB,QAAS,CAAC;MAExC,IAAMxyC,WAAW,GAAG,IAAI,CAACia,MAAM,CAACza,GAAG,CAAEihB,SAAU,CAAC;MAEhD,IAAKzgB,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAK,IAAI,CAAC0e,eAAe,CAAEy0B,IAAI,CAAChQ,KAAM,CAAC,KAAK,CAAC,EAAG;UAE/C,OAAOx5C,MAAM,CAACwU,IAAI,CAAEg1C,IAAI,CAAChQ,KAAM,CAAC;QAEjC;;QAEA;QACA,OAAO,IAAI;MAEZ;MAEA,IAAMngD,CAAC,GAAG,EAAImwD,IAAI,CAAChQ,KAAK,CAAC3jC,GAAG,CAAE,IAAI,CAACya,MAAO,CAAC,GAAG,IAAI,CAAC2D,QAAQ,CAAE,GAAG5d,WAAW;MAE3E,IAAKhd,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAG;QAErB,OAAO,IAAI;MAEZ;MAEA,OAAO2G,MAAM,CAACwU,IAAI,CAAEg1C,IAAI,CAAChQ,KAAM,CAAC,CAAC5kC,eAAe,CAAEkiB,SAAS,EAAEz9B,CAAE,CAAC;IAEjE;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAA4vD,eAAgBD,IAAI,EAAG;MAEtB;;MAEA,IAAME,SAAS,GAAG,IAAI,CAAC30B,eAAe,CAAEy0B,IAAI,CAAChQ,KAAM,CAAC;MACpD,IAAMmQ,OAAO,GAAG,IAAI,CAAC50B,eAAe,CAAEy0B,IAAI,CAAC/J,GAAI,CAAC;MAEhD,OAASiK,SAAS,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,IAAQA,OAAO,GAAG,CAAC,IAAID,SAAS,GAAG,CAAG;IAE5E;EAAC;IAAAtpD,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACwB,eAAe,CAAE,IAAK,CAAC;IAEnC;EAAC;IAAA3zB,GAAA;IAAAvG,KAAA,EAED,SAAA+5B,iBAAkBC,MAAM,EAAG;MAE1B,OAAOA,MAAM,CAACE,eAAe,CAAE,IAAK,CAAC;IAEtC;EAAC;IAAA3zB,GAAA;IAAAvG,KAAA,EAED,SAAA+vD,cAAe5pD,MAAM,EAAG;MAEvB,OAAOA,MAAM,CAACwU,IAAI,CAAE,IAAI,CAAC8b,MAAO,CAAC,CAACrb,cAAc,CAAE,CAAE,IAAI,CAACgf,QAAS,CAAC;IAEpE;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAczI,MAAM,EAAE0tC,oBAAoB,EAAG;MAE5C,IAAMpoB,YAAY,GAAGooB,oBAAoB,IAAId,aAAa,CAAC9tC,eAAe,CAAEkB,MAAO,CAAC;MAEpF,IAAM2tC,cAAc,GAAG,IAAI,CAACF,aAAa,CAAEf,QAAS,CAAC,CAACjkC,YAAY,CAAEzI,MAAO,CAAC;MAE5E,IAAMmU,MAAM,GAAG,IAAI,CAACA,MAAM,CAAClb,YAAY,CAAEqsB,YAAa,CAAC,CAAC/tB,SAAS,CAAC,CAAC;MAEnE,IAAI,CAACugB,QAAQ,GAAG,CAAE61B,cAAc,CAACj0C,GAAG,CAAEya,MAAO,CAAC;MAE9C,OAAO,IAAI;IAEZ;EAAC;IAAAlwB,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAW7E,MAAM,EAAG;MAEnB,IAAI,CAAC6c,QAAQ,IAAI7c,MAAM,CAACvB,GAAG,CAAE,IAAI,CAACya,MAAO,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAlwB,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ8c,KAAK,EAAG;MAEf,OAAOA,KAAK,CAAC1D,MAAM,CAACpZ,MAAM,CAAE,IAAI,CAACoZ,MAAO,CAAC,IAAM0D,KAAK,CAACC,QAAQ,KAAK,IAAI,CAACA,QAAU;IAElF;EAAC;IAAA7zB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAw0C,KAAA;AAAA;AAIF,IAAMe,SAAS,GAAG,aAAc,IAAIl0B,MAAM,CAAC,CAAC;AAC5C,IAAMm0B,SAAS,GAAG,aAAc,IAAI/7B,OAAO,CAAC,CAAC;AAAC,IAExCg8B,OAAO,GAAA/oD,OAAA,CAAA+oD,OAAA;EAEZ,SAAAA,QAAa10B,EAAE,GAAG,IAAIyzB,KAAK,CAAC,CAAC,EAAExzB,EAAE,GAAG,IAAIwzB,KAAK,CAAC,CAAC,EAAEvzB,EAAE,GAAG,IAAIuzB,KAAK,CAAC,CAAC,EAAElf,EAAE,GAAG,IAAIkf,KAAK,CAAC,CAAC,EAAEkB,EAAE,GAAG,IAAIlB,KAAK,CAAC,CAAC,EAAEmB,EAAE,GAAG,IAAInB,KAAK,CAAC,CAAC,EAAG;IAAAppD,eAAA,OAAAqqD,OAAA;IAEzH,IAAI,CAACG,MAAM,GAAG,CAAE70B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAEogB,EAAE,EAAEC,EAAE,CAAE;EAEzC;EAAC9pD,YAAA,CAAA4pD,OAAA;IAAA7pD,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKwiB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAEogB,EAAE,EAAEC,EAAE,EAAG;MAE7B,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1BA,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAE+gB,EAAG,CAAC;MACtB60B,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAEghB,EAAG,CAAC;MACtB40B,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAEihB,EAAG,CAAC;MACtB20B,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAEs1B,EAAG,CAAC;MACtBsgB,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAE01C,EAAG,CAAC;MACtBE,MAAM,CAAE,CAAC,CAAE,CAAC51C,IAAI,CAAE21C,EAAG,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA/pD,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM61C,OAAO,EAAG;MAEf,IAAMD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItwD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BswD,MAAM,CAAEtwD,CAAC,CAAE,CAAC0a,IAAI,CAAE61C,OAAO,CAACD,MAAM,CAAEtwD,CAAC,CAAG,CAAC;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAywD,wBAAyB16C,CAAC,EAAE6uB,gBAAgB,GAAG/wB,qBAAqB,EAAG;MAEtE,IAAM08C,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMzxC,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;MACrB,IAAMk1C,GAAG,GAAG5xC,EAAE,CAAE,CAAC,CAAE;QAAE6xC,GAAG,GAAG7xC,EAAE,CAAE,CAAC,CAAE;QAAE8xC,GAAG,GAAG9xC,EAAE,CAAE,CAAC,CAAE;QAAE+xC,GAAG,GAAG/xC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMgyC,GAAG,GAAGhyC,EAAE,CAAE,CAAC,CAAE;QAAEiyC,GAAG,GAAGjyC,EAAE,CAAE,CAAC,CAAE;QAAEkyC,GAAG,GAAGlyC,EAAE,CAAE,CAAC,CAAE;QAAEmyC,GAAG,GAAGnyC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMoyC,GAAG,GAAGpyC,EAAE,CAAE,CAAC,CAAE;QAAEqyC,GAAG,GAAGryC,EAAE,CAAE,CAAC,CAAE;QAAEsyC,IAAI,GAAGtyC,EAAE,CAAE,EAAE,CAAE;QAAEuyC,IAAI,GAAGvyC,EAAE,CAAE,EAAE,CAAE;MACpE,IAAMwyC,IAAI,GAAGxyC,EAAE,CAAE,EAAE,CAAE;QAAEyyC,IAAI,GAAGzyC,EAAE,CAAE,EAAE,CAAE;QAAE0yC,IAAI,GAAG1yC,EAAE,CAAE,EAAE,CAAE;QAAE2yC,IAAI,GAAG3yC,EAAE,CAAE,EAAE,CAAE;MAExEyxC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAK,CAAC,CAACz3C,SAAS,CAAC,CAAC;MACtF02C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAK,CAAC,CAACz3C,SAAS,CAAC,CAAC;MACtF02C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAK,CAAC,CAAC13C,SAAS,CAAC,CAAC;MACtF02C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAK,CAAC,CAAC13C,SAAS,CAAC,CAAC;MACtF02C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAK,CAAC,CAAC33C,SAAS,CAAC,CAAC;MAEvF,IAAK+qB,gBAAgB,KAAK/wB,qBAAqB,EAAG;QAEjD08C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAK,CAAC,CAAC33C,SAAS,CAAC,CAAC;MAExF,CAAC,MAAM,IAAK+qB,gBAAgB,KAAK9wB,sBAAsB,EAAG;QAEzDy8C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEuB,GAAG,EAAEI,GAAG,EAAEI,IAAI,EAAEI,IAAK,CAAC,CAAC33C,SAAS,CAAC,CAAC;MAE9D,CAAC,MAAM;QAEN,MAAM,IAAIhX,KAAK,CAAE,sEAAsE,GAAG+hC,gBAAiB,CAAC;MAE7G;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAr+B,GAAA;IAAAvG,KAAA,EAED,SAAA0xD,iBAAkBn5B,MAAM,EAAG;MAE1B,IAAKA,MAAM,CAACknB,cAAc,KAAKx4C,SAAS,EAAG;QAE1C,IAAKsxB,MAAM,CAACknB,cAAc,KAAK,IAAI,EAAGlnB,MAAM,CAACgoB,qBAAqB,CAAC,CAAC;QAEpE2P,SAAS,CAACv1C,IAAI,CAAE4d,MAAM,CAACknB,cAAe,CAAC,CAAC10B,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;MAE3E,CAAC,MAAM;QAEN,IAAM4D,QAAQ,GAAGhB,MAAM,CAACgB,QAAQ;QAEhC,IAAKA,QAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAGlmB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;QAExE2P,SAAS,CAACv1C,IAAI,CAAE4e,QAAQ,CAACkmB,cAAe,CAAC,CAAC10B,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC;MAE7E;MAEA,OAAO,IAAI,CAACoE,gBAAgB,CAAEm2B,SAAU,CAAC;IAE1C;EAAC;IAAA3pD,GAAA;IAAAvG,KAAA,EAED,SAAA2xD,iBAAkBC,MAAM,EAAG;MAE1B1B,SAAS,CAACpyC,MAAM,CAAC5E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAC/Bg3C,SAAS,CAACr5B,MAAM,GAAG,kBAAkB;MACrCq5B,SAAS,CAACnlC,YAAY,CAAE6mC,MAAM,CAACj8B,WAAY,CAAC;MAE5C,OAAO,IAAI,CAACoE,gBAAgB,CAAEm2B,SAAU,CAAC;IAE1C;EAAC;IAAA3pD,GAAA;IAAAvG,KAAA,EAED,SAAA+5B,iBAAkBC,MAAM,EAAG;MAE1B,IAAMu2B,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMzyC,MAAM,GAAGkc,MAAM,CAAClc,MAAM;MAC5B,IAAM+zC,SAAS,GAAG,CAAE73B,MAAM,CAACnD,MAAM;MAEjC,KAAM,IAAI52B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMkpC,QAAQ,GAAGonB,MAAM,CAAEtwD,CAAC,CAAE,CAACi7B,eAAe,CAAEpd,MAAO,CAAC;QAEtD,IAAKqrB,QAAQ,GAAG0oB,SAAS,EAAG;UAE3B,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtrD,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB,IAAM63B,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItwD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMk6B,KAAK,GAAGo2B,MAAM,CAAEtwD,CAAC,CAAE;;QAEzB;;QAEAkwD,SAAS,CAACl6C,CAAC,GAAGkkB,KAAK,CAAC1D,MAAM,CAACxgB,CAAC,GAAG,CAAC,GAAGyiB,GAAG,CAAC7iB,GAAG,CAACI,CAAC,GAAGyiB,GAAG,CAAC9iB,GAAG,CAACK,CAAC;QACxDk6C,SAAS,CAACzuD,CAAC,GAAGy4B,KAAK,CAAC1D,MAAM,CAAC/0B,CAAC,GAAG,CAAC,GAAGg3B,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,GAAGg3B,GAAG,CAAC9iB,GAAG,CAAClU,CAAC;QACxDyuD,SAAS,CAACzlC,CAAC,GAAGyP,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,CAAC,GAAGgO,GAAG,CAAC7iB,GAAG,CAAC6U,CAAC,GAAGgO,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC;QAExD,IAAKyP,KAAK,CAACe,eAAe,CAAEi1B,SAAU,CAAC,GAAG,CAAC,EAAG;UAE7C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5pD,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAeb,KAAK,EAAG;MAEtB,IAAMy3B,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItwD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKswD,MAAM,CAAEtwD,CAAC,CAAE,CAACi7B,eAAe,CAAEpC,KAAM,CAAC,GAAG,CAAC,EAAG;UAE/C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAy1C,OAAA;AAAA;AAIF,SAAS0B,cAAcA,CAAA,EAAG;EAEzB,IAAI9rC,OAAO,GAAG,IAAI;EAClB,IAAI+rC,WAAW,GAAG,KAAK;EACvB,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,SAAS,GAAG,IAAI;EAEpB,SAASC,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;IAExCJ,aAAa,CAAEG,IAAI,EAAEC,KAAM,CAAC;IAE5BH,SAAS,GAAGjsC,OAAO,CAACqsC,qBAAqB,CAAEH,gBAAiB,CAAC;EAE9D;EAEA,OAAO;IAENvS,KAAK,EAAE,SAAAA,MAAA,EAAY;MAElB,IAAKoS,WAAW,KAAK,IAAI,EAAG;MAC5B,IAAKC,aAAa,KAAK,IAAI,EAAG;MAE9BC,SAAS,GAAGjsC,OAAO,CAACqsC,qBAAqB,CAAEH,gBAAiB,CAAC;MAE7DH,WAAW,GAAG,IAAI;IAEnB,CAAC;IAEDxsD,IAAI,EAAE,SAAAA,KAAA,EAAY;MAEjBygB,OAAO,CAACssC,oBAAoB,CAAEL,SAAU,CAAC;MAEzCF,WAAW,GAAG,KAAK;IAEpB,CAAC;IAEDQ,gBAAgB,EAAE,SAAAA,iBAAWz/B,QAAQ,EAAG;MAEvCk/B,aAAa,GAAGl/B,QAAQ;IAEzB,CAAC;IAED0/B,UAAU,EAAE,SAAAA,WAAWxyD,KAAK,EAAG;MAE9BgmB,OAAO,GAAGhmB,KAAK;IAEhB;EAED,CAAC;AAEF;AAEA,SAASyyD,eAAeA,CAAEC,EAAE,EAAEC,YAAY,EAAG;EAE5C,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAE7B,SAASC,YAAYA,CAAEr1C,SAAS,EAAEs1C,UAAU,EAAG;IAE9C,IAAMp+C,KAAK,GAAG8I,SAAS,CAAC9I,KAAK;IAC7B,IAAMgnC,KAAK,GAAGl+B,SAAS,CAACk+B,KAAK;IAE7B,IAAMh5B,MAAM,GAAG8vC,EAAE,CAACK,YAAY,CAAC,CAAC;IAEhCL,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEpwC,MAAO,CAAC;IACnC8vC,EAAE,CAACQ,UAAU,CAAEF,UAAU,EAAEp+C,KAAK,EAAEgnC,KAAM,CAAC;IAEzCl+B,SAAS,CAACq+B,gBAAgB,CAAC,CAAC;IAE5B,IAAI56C,IAAI;IAER,IAAKyT,KAAK,YAAY0E,YAAY,EAAG;MAEpCnY,IAAI,GAAGuxD,EAAE,CAACS,KAAK;IAEhB,CAAC,MAAM,IAAKv+C,KAAK,YAAY4E,WAAW,EAAG;MAE1C,IAAKkE,SAAS,CAACygC,wBAAwB,EAAG;QAEzC,IAAKyU,QAAQ,EAAG;UAEfzxD,IAAI,GAAGuxD,EAAE,CAACU,UAAU;QAErB,CAAC,MAAM;UAEN,MAAM,IAAIvwD,KAAK,CAAE,yEAA0E,CAAC;QAE7F;MAED,CAAC,MAAM;QAEN1B,IAAI,GAAGuxD,EAAE,CAACW,cAAc;MAEzB;IAED,CAAC,MAAM,IAAKz+C,KAAK,YAAY+E,UAAU,EAAG;MAEzCxY,IAAI,GAAGuxD,EAAE,CAACY,KAAK;IAEhB,CAAC,MAAM,IAAK1+C,KAAK,YAAY2E,WAAW,EAAG;MAE1CpY,IAAI,GAAGuxD,EAAE,CAACa,YAAY;IAEvB,CAAC,MAAM,IAAK3+C,KAAK,YAAY8E,UAAU,EAAG;MAEzCvY,IAAI,GAAGuxD,EAAE,CAACc,GAAG;IAEd,CAAC,MAAM,IAAK5+C,KAAK,YAAYgF,SAAS,EAAG;MAExCzY,IAAI,GAAGuxD,EAAE,CAACe,IAAI;IAEf,CAAC,MAAM,IAAK7+C,KAAK,YAAY6E,UAAU,EAAG;MAEzCtY,IAAI,GAAGuxD,EAAE,CAACgB,aAAa;IAExB,CAAC,MAAM,IAAK9+C,KAAK,YAAY6N,iBAAiB,EAAG;MAEhDthB,IAAI,GAAGuxD,EAAE,CAACgB,aAAa;IAExB,CAAC,MAAM;MAEN,MAAM,IAAI7wD,KAAK,CAAE,yDAAyD,GAAG+R,KAAM,CAAC;IAErF;IAEA,OAAO;MACNgO,MAAM,EAAEA,MAAM;MACdzhB,IAAI,EAAEA,IAAI;MACVwyD,eAAe,EAAE/+C,KAAK,CAACg/C,iBAAiB;MACxC7sC,OAAO,EAAErJ,SAAS,CAACqJ;IACpB,CAAC;EAEF;EAEA,SAAS8sC,YAAYA,CAAEjxC,MAAM,EAAElF,SAAS,EAAEs1C,UAAU,EAAG;IAEtD,IAAMp+C,KAAK,GAAG8I,SAAS,CAAC9I,KAAK;IAC7B,IAAMinC,WAAW,GAAGn+B,SAAS,CAACm+B,WAAW;IAEzC6W,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEpwC,MAAO,CAAC;IAEnC,IAAKi5B,WAAW,CAACzsB,KAAK,KAAK,CAAE,CAAC,EAAG;MAEhC;;MAEAsjC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAE,CAAC,EAAEp+C,KAAM,CAAC;IAEzC,CAAC,MAAM;MAEN,IAAKg+C,QAAQ,EAAG;QAEfF,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAEnX,WAAW,CAACt+B,MAAM,GAAG3I,KAAK,CAACg/C,iBAAiB,EACzEh/C,KAAK,EAAEinC,WAAW,CAACt+B,MAAM,EAAEs+B,WAAW,CAACzsB,KAAM,CAAC;MAEhD,CAAC,MAAM;QAENsjC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAEnX,WAAW,CAACt+B,MAAM,GAAG3I,KAAK,CAACg/C,iBAAiB,EACzEh/C,KAAK,CAACm/C,QAAQ,CAAElY,WAAW,CAACt+B,MAAM,EAAEs+B,WAAW,CAACt+B,MAAM,GAAGs+B,WAAW,CAACzsB,KAAM,CAAE,CAAC;MAEhF;MAEAysB,WAAW,CAACzsB,KAAK,GAAG,CAAE,CAAC,CAAC,CAAC;IAE1B;;IAEA1R,SAAS,CAACq+B,gBAAgB,CAAC,CAAC;EAE7B;;EAEA;;EAEA,SAAS5hC,GAAGA,CAAEuD,SAAS,EAAG;IAEzB,IAAKA,SAAS,CAACwlC,4BAA4B,EAAGxlC,SAAS,GAAGA,SAAS,CAACiJ,IAAI;IAExE,OAAOksC,OAAO,CAAC14C,GAAG,CAAEuD,SAAU,CAAC;EAEhC;EAEA,SAASmsB,MAAMA,CAAEnsB,SAAS,EAAG;IAE5B,IAAKA,SAAS,CAACwlC,4BAA4B,EAAGxlC,SAAS,GAAGA,SAAS,CAACiJ,IAAI;IAExE,IAAMA,IAAI,GAAGksC,OAAO,CAAC14C,GAAG,CAAEuD,SAAU,CAAC;IAErC,IAAKiJ,IAAI,EAAG;MAEX+rC,EAAE,CAACsB,YAAY,CAAErtC,IAAI,CAAC/D,MAAO,CAAC;MAE9BiwC,OAAO,CAACoB,MAAM,CAAEv2C,SAAU,CAAC;IAE5B;EAED;EAEA,SAASyS,MAAMA,CAAEzS,SAAS,EAAEs1C,UAAU,EAAG;IAExC,IAAKt1C,SAAS,CAAC+iC,mBAAmB,EAAG;MAEpC,IAAMyT,MAAM,GAAGrB,OAAO,CAAC14C,GAAG,CAAEuD,SAAU,CAAC;MAEvC,IAAK,CAAEw2C,MAAM,IAAIA,MAAM,CAACntC,OAAO,GAAGrJ,SAAS,CAACqJ,OAAO,EAAG;QAErD8rC,OAAO,CAAC35C,GAAG,CAAEwE,SAAS,EAAE;UACvBkF,MAAM,EAAElF,SAAS,CAACkF,MAAM;UACxBzhB,IAAI,EAAEuc,SAAS,CAACvc,IAAI;UACpBwyD,eAAe,EAAEj2C,SAAS,CAACy2C,WAAW;UACtCptC,OAAO,EAAErJ,SAAS,CAACqJ;QACpB,CAAE,CAAC;MAEJ;MAEA;IAED;IAEA,IAAKrJ,SAAS,CAACwlC,4BAA4B,EAAGxlC,SAAS,GAAGA,SAAS,CAACiJ,IAAI;IAExE,IAAMA,IAAI,GAAGksC,OAAO,CAAC14C,GAAG,CAAEuD,SAAU,CAAC;IAErC,IAAKiJ,IAAI,KAAK1f,SAAS,EAAG;MAEzB4rD,OAAO,CAAC35C,GAAG,CAAEwE,SAAS,EAAEq1C,YAAY,CAAEr1C,SAAS,EAAEs1C,UAAW,CAAE,CAAC;IAEhE,CAAC,MAAM,IAAKrsC,IAAI,CAACI,OAAO,GAAGrJ,SAAS,CAACqJ,OAAO,EAAG;MAE9C8sC,YAAY,CAAEltC,IAAI,CAAC/D,MAAM,EAAElF,SAAS,EAAEs1C,UAAW,CAAC;MAElDrsC,IAAI,CAACI,OAAO,GAAGrJ,SAAS,CAACqJ,OAAO;IAEjC;EAED;EAEA,OAAO;IAEN5M,GAAG,EAAEA,GAAG;IACR0vB,MAAM,EAAEA,MAAM;IACd1Z,MAAM,EAAEA;EAET,CAAC;AAEF;AAAC,IAEKikC,aAAa,GAAA/sD,OAAA,CAAA+sD,aAAA,0BAAAC,gBAAA;EAAAvsC,SAAA,CAAAssC,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAtsC,YAAA,CAAAosC,aAAA;EAElB,SAAAA,cAAatuC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEqgC,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAkO,OAAA;IAAAxuD,eAAA,OAAAquD,aAAA;IAE3EG,OAAA,GAAAD,QAAA,CAAAjzD,IAAA;IAEAkzD,OAAA,CAAKpzD,IAAI,GAAG,eAAe;IAE3BozD,OAAA,CAAK9nB,UAAU,GAAG;MACjB3mB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdqgC,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA;IACjB,CAAC;IAED,IAAMmO,UAAU,GAAG1uC,KAAK,GAAG,CAAC;IAC5B,IAAM2uC,WAAW,GAAG1uC,MAAM,GAAG,CAAC;IAE9B,IAAMghC,KAAK,GAAG/xC,IAAI,CAACmC,KAAK,CAAEivC,aAAc,CAAC;IACzC,IAAMY,KAAK,GAAGhyC,IAAI,CAACmC,KAAK,CAAEkvC,cAAe,CAAC;IAE1C,IAAMiB,MAAM,GAAGP,KAAK,GAAG,CAAC;IACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;IAExB,IAAM0N,aAAa,GAAG5uC,KAAK,GAAGihC,KAAK;IACnC,IAAM4N,cAAc,GAAG5uC,MAAM,GAAGihC,KAAK;;IAErC;;IAEA,IAAMnG,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IAEd,KAAM,IAAI9rB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGqyB,MAAM,EAAEryB,EAAE,EAAG,EAAG;MAEtC,IAAMxzB,CAAC,GAAGwzB,EAAE,GAAGy/B,cAAc,GAAGF,WAAW;MAE3C,KAAM,IAAIx/B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGqyB,MAAM,EAAEryB,EAAE,EAAG,EAAG;QAEtC,IAAMhf,CAAC,GAAGgf,EAAE,GAAGy/B,aAAa,GAAGF,UAAU;QAEzC/N,QAAQ,CAACxiD,IAAI,CAAEgS,CAAC,EAAE,CAAEvU,CAAC,EAAE,CAAE,CAAC;QAE1Bq/C,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEvB+8C,GAAG,CAAC/8C,IAAI,CAAEgxB,EAAE,GAAG8xB,KAAM,CAAC;QACtB/F,GAAG,CAAC/8C,IAAI,CAAE,CAAC,GAAKixB,EAAE,GAAG8xB,KAAQ,CAAC;MAE/B;IAED;IAEA,KAAM,IAAI9xB,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG8xB,KAAK,EAAE9xB,IAAE,EAAG,EAAG;MAErC,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG8xB,KAAK,EAAE9xB,IAAE,EAAG,EAAG;QAErC,IAAM90B,CAAC,GAAG80B,IAAE,GAAGqyB,MAAM,GAAGpyB,IAAE;QAC1B,IAAM5c,CAAC,GAAG2c,IAAE,GAAGqyB,MAAM,IAAKpyB,IAAE,GAAG,CAAC,CAAE;QAClC,IAAM70B,CAAC,GAAK40B,IAAE,GAAG,CAAC,GAAKqyB,MAAM,IAAKpyB,IAAE,GAAG,CAAC,CAAE;QAC1C,IAAMpzB,CAAC,GAAKmzB,IAAE,GAAG,CAAC,GAAKqyB,MAAM,GAAGpyB,IAAE;QAElC2rB,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;MAExB;IAED;IAEAyyD,OAAA,CAAK1U,QAAQ,CAAEgB,OAAQ,CAAC;IACxB0T,OAAA,CAAKxU,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E8N,OAAA,CAAKxU,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEwT,OAAA,CAAKxU,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAuT,OAAA;EAEjE;EAAC/tD,YAAA,CAAA4tD,aAAA;IAAA7tD,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA6Z,aAAA,CAAAz0D,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIytC,aAAa,CAAEztC,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACZ,MAAM,EAAEY,IAAI,CAACy/B,aAAa,EAAEz/B,IAAI,CAAC0/B,cAAe,CAAC;IAE7F;EAAC;EAAA,OAAA+N,aAAA;AAAA,EA1F0BnV,cAAc;AA8F1C,IAAI2V,kBAAkB,GAAG,qGAAqG;AAE9H,IAAIC,uBAAuB,GAAG,iyCAAiyC;AAE/zC,IAAIC,iBAAiB,GAAG,wFAAwF;AAEhH,IAAIC,sBAAsB,GAAG,4DAA4D;AAEzF,IAAIC,kBAAkB,GAAG,4EAA4E;AAErG,IAAIC,uBAAuB,GAAG,0DAA0D;AAExF,IAAIC,cAAc,GAAG,oaAAoa;AAEzb,IAAIC,mBAAmB,GAAG,uFAAuF;AAEjH,IAAIC,YAAY,GAAG,qGAAqG;AAExH,IAAIC,kBAAkB,GAAG,8GAA8G;AAEvI,IAAIC,KAAK,GAAG,srBAAsrB;AAElsB,IAAIC,oBAAoB,GAAG,g1FAAg1F;AAE32F,IAAIC,qBAAqB,GAAG,s4BAAs4B;AAEl6B,IAAIC,wBAAwB,GAAG,4nBAA4nB;AAE3pB,IAAIC,6BAA6B,GAAG,2HAA2H;AAE/J,IAAIC,2BAA2B,GAAG,oEAAoE;AAEtG,IAAIC,sBAAsB,GAAG,0EAA0E;AAEvG,IAAIC,cAAc,GAAG,8HAA8H;AAEnJ,IAAIC,mBAAmB,GAAG,oHAAoH;AAE9I,IAAIC,iBAAiB,GAAG,uJAAuJ;AAE/K,IAAIC,YAAY,GAAG,gRAAgR;AAEnS,IAAIC,MAAM,GAAG,yuFAAyuF;AAEtvF,IAAIC,2BAA2B,GAAG,gqHAAgqH;AAElsH,IAAIC,oBAAoB,GAAG,0jBAA0jB;AAErlB,IAAIC,2BAA2B,GAAG,iJAAiJ;AAEnL,IAAIC,sBAAsB,GAAG,iLAAiL;AAE9M,IAAIC,oBAAoB,GAAG,iJAAiJ;AAE5K,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,mBAAmB,GAAG,qDAAqD;AAE/E,IAAIC,wBAAwB,GAAG,ygCAAygC;AAExiC,IAAIC,eAAe,GAAG,8qCAA8qC;AAEpsC,IAAIC,2BAA2B,GAAG,4MAA4M;AAE9O,IAAIC,oBAAoB,GAAG,8UAA8U;AAEzW,IAAIC,kBAAkB,GAAG,qTAAqT;AAE9U,IAAIC,aAAa,GAAG,2oBAA2oB;AAE/pB,IAAIC,UAAU,GAAG,uDAAuD;AAExE,IAAIC,eAAe,GAAG,oDAAoD;AAE1E,IAAIC,YAAY,GAAG,0RAA0R;AAE7S,IAAIC,iBAAiB,GAAG,0MAA0M;AAElO,IAAIC,yBAAyB,GAAG,6cAA6c;AAE7e,IAAIC,iBAAiB,GAAG,sNAAsN;AAE9O,IAAIC,sBAAsB,GAAG,gGAAgG;AAE7H,IAAIC,uBAAuB,GAAG,qHAAqH;AAEnJ,IAAIC,4BAA4B,GAAG,0hCAA0hC;AAE7jC,IAAIC,iBAAiB,GAAG,ivJAAivJ;AAEzwJ,IAAIC,6BAA6B,GAAG,08CAA08C;AAE9+C,IAAIC,oBAAoB,GAAG,mEAAmE;AAE9F,IAAIC,yBAAyB,GAAG,w9BAAw9B;AAEx/B,IAAIC,qBAAqB,GAAG,qMAAqM;AAEjO,IAAIC,0BAA0B,GAAG,8yCAA8yC;AAE/0C,IAAIC,wBAAwB,GAAG,+vHAA+vH;AAE9xH,IAAIC,6BAA6B,GAAG,y0dAAy0d;AAE72d,IAAIC,qBAAqB,GAAG,4hLAA4hL;AAExjL,IAAIC,oBAAoB,GAAG,43BAA43B;AAEv5B,IAAIC,mBAAmB,GAAG,8YAA8Y;AAExa,IAAIC,oBAAoB,GAAG,kLAAkL;AAE7M,IAAIC,yBAAyB,GAAG,wKAAwK;AAExM,IAAIC,uBAAuB,GAAG,qLAAqL;AAEnN,IAAIC,kBAAkB,GAAG,8XAA8X;AAEvZ,IAAIC,YAAY,GAAG,oaAAoa;AAEvb,IAAIC,iBAAiB,GAAG,kDAAkD;AAE1E,IAAIC,qBAAqB,GAAG,yWAAyW;AAErY,IAAIC,0BAA0B,GAAG,8QAA8Q;AAE/S,IAAIC,qBAAqB,GAAG,kLAAkL;AAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,iBAAiB,GAAG,4eAA4e;AAEpgB,IAAIC,kBAAkB,GAAG,8jBAA8jB;AAEvlB,IAAIC,uBAAuB,GAAG,i1BAAi1B;AAE/2B,IAAIC,kBAAkB,GAAG,s2BAAs2B;AAE/3B,IAAIC,qBAAqB,GAAG,0yCAA0yC;AAEt0C,IAAIC,oBAAoB,GAAG,+jBAA+jB;AAE1lB,IAAIC,oBAAoB,GAAG,gJAAgJ;AAE3K,IAAIC,kBAAkB,GAAG,gJAAgJ;AAEzK,IAAIC,aAAa,GAAG,kOAAkO;AAEtP,IAAIC,uBAAuB,GAAG,o2BAAo2B;AAEl4B,IAAIC,+BAA+B,GAAG,4EAA4E;AAElH,IAAIC,8BAA8B,GAAG,6OAA6O;AAElR,IAAIC,uBAAuB,GAAG,kRAAkR;AAEhT,IAAIC,yBAAyB,GAAG,mKAAmK;AAEnM,IAAIC,eAAe,GAAG,qLAAqL;AAE3M,IAAIC,OAAO,GAAG,quDAAquD;AAEnvD,IAAIC,4BAA4B,GAAG,2EAA2E;AAE9G,IAAIC,cAAc,GAAG,mNAAmN;AAExO,IAAIC,kBAAkB,GAAG,+EAA+E;AAExG,IAAIC,uBAAuB,GAAG,0UAA0U;AAExW,IAAIC,qBAAqB,GAAG,kLAAkL;AAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,uBAAuB,GAAG,y7RAAy7R;AAEv9R,IAAIC,qBAAqB,GAAG,izCAAizC;AAE70C,IAAIC,gBAAgB,GAAG,g+CAAg+C;AAEv/C,IAAIC,wBAAwB,GAAG,g5CAAg5C;AAE/6C,IAAIC,eAAe,GAAG,iOAAiO;AAEvP,IAAIC,oBAAoB,GAAG,oyBAAoyB;AAE/zB,IAAIC,eAAe,GAAG,8XAA8X;AAEpZ,IAAIC,iBAAiB,GAAG,odAAod;AAE5e,IAAIC,oBAAoB,GAAG,oMAAoM;AAE/N,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,oBAAoB,GAAG,4FAA4F;AAEvH,IAAIC,yBAAyB,GAAG,+yCAA+yC;AAE/0C,IAAIC,qBAAqB,GAAG,6kCAA6kC;AAEzmC,IAAIC,0BAA0B,GAAG,ijKAAijK;AAEllK,IAAIC,gBAAgB,GAAG,qnDAAqnD;AAE5oD,IAAIC,cAAc,GAAG,ggFAAggF;AAErhF,IAAIC,SAAS,GAAG,wtFAAwtF;AAExuF,IAAIC,eAAe,GAAG,8UAA8U;AAEpW,IAAMC,QAAQ,GAAG,6JAA6J;AAE9K,IAAMC,UAAU,GAAG,qgBAAqgB;AAExhB,IAAMC,QAAQ,GAAG,gOAAgO;AAEjP,IAAMC,UAAU,GAAG,6wBAA6wB;AAEhyB,IAAMC,QAAQ,GAAG,gOAAgO;AAEjP,IAAMC,UAAU,GAAG,0VAA0V;AAE7W,IAAMC,QAAQ,GAAG,uuBAAuuB;AAExvB,IAAMC,UAAU,GAAG,k8BAAk8B;AAEr9B,IAAMC,QAAQ,GAAG,itBAAitB;AAEluB,IAAMC,UAAU,GAAG,qyBAAqyB;AAExzB,IAAMC,QAAQ,GAAG,8LAA8L;AAE/M,IAAMC,UAAU,GAAG,yTAAyT;AAE5U,IAAMC,QAAQ,GAAG,inBAAinB;AAEloB,IAAMC,UAAU,GAAG,81BAA81B;AAEj3B,IAAMC,QAAQ,GAAG,83BAA83B;AAE/4B,IAAMC,UAAU,GAAG,mqDAAmqD;AAEtrD,IAAMC,QAAQ,GAAG,4kCAA4kC;AAE7lC,IAAMC,UAAU,GAAG,69DAA69D;AAEh/D,IAAMC,QAAQ,GAAG,i7BAAi7B;AAEl8B,IAAMC,UAAU,GAAG,8iDAA8iD;AAEjkD,IAAMC,QAAQ,GAAG,m/BAAm/B;AAEpgC,IAAMC,UAAU,GAAG,6qBAA6qB;AAEhsB,IAAMC,QAAQ,GAAG,0kCAA0kC;AAE3lC,IAAMC,UAAU,GAAG,2kEAA2kE;AAE9lE,IAAMC,QAAQ,GAAG,2pCAA2pC;AAE5qC,IAAMC,UAAU,GAAG,2hIAA2hI;AAE9iI,IAAMC,QAAQ,GAAG,8gCAA8gC;AAE/hC,IAAMC,UAAU,GAAG,00DAA00D;AAE71D,IAAMC,QAAQ,GAAG,q3BAAq3B;AAEt4B,IAAMC,UAAU,GAAG,k0BAAk0B;AAEr1B,IAAMC,QAAQ,GAAG,6lBAA6lB;AAE9mB,IAAMC,UAAU,GAAG,4eAA4e;AAE/f,IAAMC,QAAQ,GAAG,qnCAAqnC;AAEtoC,IAAMC,UAAU,GAAG,wyBAAwyB;AAE3zB,IAAMC,WAAW,GAAAl2D,OAAA,CAAAk2D,WAAA,GAAG;EACnB3I,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,YAAY,EAAEA,YAAY;EAC1BC,kBAAkB,EAAEA,kBAAkB;EACtCC,KAAK,EAAEA,KAAK;EACZC,oBAAoB,EAAEA,oBAAoB;EAC1CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,iBAAiB,EAAEA,iBAAiB;EACpCC,YAAY,EAAEA,YAAY;EAC1BC,MAAM,EAAEA,MAAM;EACdC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,mBAAmB,EAAEA,mBAAmB;EACxCC,wBAAwB,EAAEA,wBAAwB;EAClDC,eAAe,EAAEA,eAAe;EAChCC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCY,6BAA6B,EAAEA,6BAA6B;EAC5DX,aAAa,EAAEA,aAAa;EAC5BC,UAAU,EAAEA,UAAU;EACtBC,eAAe,EAAEA,eAAe;EAChCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,yBAAyB,EAAEA,yBAAyB;EACpDC,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,uBAAuB,EAAEA,uBAAuB;EAChDC,4BAA4B,EAAEA,4BAA4B;EAC1DC,iBAAiB,EAAEA,iBAAiB;EACpCE,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,mBAAmB,EAAEA,mBAAmB;EACxCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,iBAAiB,EAAEA,iBAAiB;EACpCC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCC,aAAa,EAAEA,aAAa;EAC5BC,uBAAuB,EAAEA,uBAAuB;EAChDC,+BAA+B,EAAEA,+BAA+B;EAChEC,8BAA8B,EAAEA,8BAA8B;EAC9DC,uBAAuB,EAAEA,uBAAuB;EAChDC,yBAAyB,EAAEA,yBAAyB;EACpDC,eAAe,EAAEA,eAAe;EAChCC,OAAO,EAAEA,OAAO;EAChBC,4BAA4B,EAAEA,4BAA4B;EAC1DC,cAAc,EAAEA,cAAc;EAC9BC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gBAAgB,EAAEA,gBAAgB;EAClCC,wBAAwB,EAAEA,wBAAwB;EAClDC,eAAe,EAAEA,eAAe;EAChCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,eAAe,EAAEA,eAAe;EAChCC,iBAAiB,EAAEA,iBAAiB;EACpCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,gBAAgB,EAAEA,gBAAgB;EAClCC,cAAc,EAAEA,cAAc;EAC9BC,SAAS,EAAEA,SAAS;EACpBC,eAAe,EAAEA,eAAe;EAEhCoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,mBAAmB,EAAEnC,QAAQ;EAC7BoC,mBAAmB,EAAEnC,UAAU;EAC/BoC,SAAS,EAAEnC,QAAQ;EACnBoC,SAAS,EAAEnC,UAAU;EACrBoC,UAAU,EAAEnC,QAAQ;EACpBoC,UAAU,EAAEnC,UAAU;EACtBoC,iBAAiB,EAAEnC,QAAQ;EAC3BoC,iBAAiB,EAAEnC,UAAU;EAC7BoC,aAAa,EAAEnC,QAAQ;EACvBoC,aAAa,EAAEnC,UAAU;EACzBoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,cAAc,EAAEnC,QAAQ;EACxBoC,cAAc,EAAEnC,UAAU;EAC1BoC,gBAAgB,EAAEnC,QAAQ;EAC1BoC,gBAAgB,EAAEnC,UAAU;EAC5BoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,cAAc,EAAEnC,QAAQ;EACxBoC,cAAc,EAAEnC,UAAU;EAC1BoC,iBAAiB,EAAEnC,QAAQ;EAC3BoC,iBAAiB,EAAEnC,UAAU;EAC7BoC,aAAa,EAAEnC,QAAQ;EACvBoC,aAAa,EAAEnC,UAAU;EACzBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC,UAAU;EACvBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC,UAAU;EACvBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC;AACd,CAAC;;AAED;AACA;AACA;;AAEA,IAAMoC,WAAW,GAAAr4D,OAAA,CAAAq4D,WAAA,GAAG;EAEnBzJ,MAAM,EAAE;IAEP0J,OAAO,EAAE;MAAE3/D,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE3wC,KAAK,EAAE;IAAI,CAAC;IAEvB80C,GAAG,EAAE;MAAE90C,KAAK,EAAE;IAAK,CAAC;IACpB4/D,YAAY,EAAE;MAAE5/D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAEpD+2B,QAAQ,EAAE;MAAEh1C,KAAK,EAAE;IAAK,CAAC;IACzB6/D,iBAAiB,EAAE;MAAE7/D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAEzDk5B,SAAS,EAAE;MAAEn3C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAED8/D,WAAW,EAAE;IAEZ9pB,WAAW,EAAE;MAAEh2C,KAAK,EAAE;IAAK,CAAC;IAC5B+/D,oBAAoB,EAAE;MAAE//D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAE5D,CAAC;EAED+hD,MAAM,EAAE;IAEP7pB,MAAM,EAAE;MAAEn2C,KAAK,EAAE;IAAK,CAAC;IACvBigE,UAAU,EAAE;MAAEjgE,KAAK,EAAE,CAAE;IAAE,CAAC;IAC1Bs2C,YAAY,EAAE;MAAEt2C,KAAK,EAAE;IAAI,CAAC;IAAE;IAC9BkgE,GAAG,EAAE;MAAElgE,KAAK,EAAE;IAAI,CAAC;IAAE;IACrBu2C,eAAe,EAAE;MAAEv2C,KAAK,EAAE;IAAK,CAAC,CAAE;EAEnC,CAAC;;EAEDmgE,KAAK,EAAE;IAENhrB,KAAK,EAAE;MAAEn1C,KAAK,EAAE;IAAK,CAAC;IACtBo1C,cAAc,EAAE;MAAEp1C,KAAK,EAAE;IAAE,CAAC;IAC5BogE,cAAc,EAAE;MAAEpgE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAEtD,CAAC;EAEDoiD,QAAQ,EAAE;IAETprB,QAAQ,EAAE;MAAEj1C,KAAK,EAAE;IAAK,CAAC;IACzBk1C,iBAAiB,EAAE;MAAEl1C,KAAK,EAAE;IAAE,CAAC;IAC/BsgE,iBAAiB,EAAE;MAAEtgE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAEzD,CAAC;EAEDsiD,OAAO,EAAE;IAERlrB,OAAO,EAAE;MAAEr1C,KAAK,EAAE;IAAK,CAAC;IACxBwgE,gBAAgB,EAAE;MAAExgE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACxDq3B,SAAS,EAAE;MAAEt1C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAEDygE,SAAS,EAAE;IAEVlrB,SAAS,EAAE;MAAEv1C,KAAK,EAAE;IAAK,CAAC;IAC1B0gE,kBAAkB,EAAE;MAAE1gE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAC1Dw3B,WAAW,EAAE;MAAEz1C,KAAK,EAAE,aAAc,IAAIga,OAAO,CAAE,CAAC,EAAE,CAAE;IAAE;EAEzD,CAAC;EAED2mD,eAAe,EAAE;IAEhBjrB,eAAe,EAAE;MAAE11C,KAAK,EAAE;IAAK,CAAC;IAChC4gE,wBAAwB,EAAE;MAAE5gE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAChE03B,iBAAiB,EAAE;MAAE31C,KAAK,EAAE;IAAE,CAAC;IAC/B41C,gBAAgB,EAAE;MAAE51C,KAAK,EAAE;IAAE;EAE9B,CAAC;EAED6gE,WAAW,EAAE;IAEZ9qB,WAAW,EAAE;MAAE/1C,KAAK,EAAE;IAAK,CAAC;IAC5B8gE,oBAAoB,EAAE;MAAE9gE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAE5D,CAAC;EAED8iD,YAAY,EAAE;IAEbjrB,YAAY,EAAE;MAAE91C,KAAK,EAAE;IAAK,CAAC;IAC7BghE,qBAAqB,EAAE;MAAEhhE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAE7D,CAAC;EAEDgjD,YAAY,EAAE;IAEbprB,YAAY,EAAE;MAAE71C,KAAK,EAAE;IAAK,CAAC;IAC7BkhE,qBAAqB,EAAE;MAAElhE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAE7D,CAAC;EAEDkjD,WAAW,EAAE;IAEZ3qB,WAAW,EAAE;MAAEx2C,KAAK,EAAE;IAAK;EAE5B,CAAC;EAEDy3C,GAAG,EAAE;IAEJ2pB,UAAU,EAAE;MAAEphE,KAAK,EAAE;IAAQ,CAAC;IAC9BqhE,OAAO,EAAE;MAAErhE,KAAK,EAAE;IAAE,CAAC;IACrBshE,MAAM,EAAE;MAAEthE,KAAK,EAAE;IAAK,CAAC;IACvBuhE,QAAQ,EAAE;MAAEvhE,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE;EAExD,CAAC;EAEDkR,MAAM,EAAE;IAEPsY,iBAAiB,EAAE;MAAExhE,KAAK,EAAE;IAAG,CAAC;IAEhCyhE,UAAU,EAAE;MAAEzhE,KAAK,EAAE;IAAG,CAAC;IAEzB0hE,iBAAiB,EAAE;MAAE1hE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QAC3C1kC,SAAS,EAAE,CAAC,CAAC;QACbnZ,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEH89C,uBAAuB,EAAE;MAAE5hE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QACjDE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHC,oBAAoB,EAAE;MAAEjiE,KAAK,EAAE;IAAG,CAAC;IACnCkiE,uBAAuB,EAAE;MAAEliE,KAAK,EAAE;IAAG,CAAC;IAEtCmiE,UAAU,EAAE;MAAEniE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QACpC79C,KAAK,EAAE,CAAC,CAAC;QACT2V,QAAQ,EAAE,CAAC,CAAC;QACZwD,SAAS,EAAE,CAAC,CAAC;QACbkM,QAAQ,EAAE,CAAC,CAAC;QACZi5B,OAAO,EAAE,CAAC,CAAC;QACXC,WAAW,EAAE,CAAC,CAAC;QACfC,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEHC,gBAAgB,EAAE;MAAEviE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QAC1CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHQ,YAAY,EAAE;MAAExiE,KAAK,EAAE;IAAG,CAAC;IAC3ByiE,aAAa,EAAE;MAAEziE,KAAK,EAAE;IAAG,CAAC;IAC5B0iE,eAAe,EAAE;MAAE1iE,KAAK,EAAE;IAAG,CAAC;IAE9B2iE,WAAW,EAAE;MAAE3iE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QACrC79C,KAAK,EAAE,CAAC,CAAC;QACT2V,QAAQ,EAAE,CAAC,CAAC;QACZ6oC,KAAK,EAAE,CAAC,CAAC;QACTn5B,QAAQ,EAAE,CAAC;MACZ;IAAE,CAAC;IAEHy5B,iBAAiB,EAAE;MAAE5iE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QAC3CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC,CAAC;QACjBa,gBAAgB,EAAE,CAAC,CAAC;QACpBC,eAAe,EAAE,CAAC;MACnB;IAAE,CAAC;IAEHC,cAAc,EAAE;MAAE/iE,KAAK,EAAE;IAAG,CAAC;IAC7BgjE,iBAAiB,EAAE;MAAEhjE,KAAK,EAAE;IAAG,CAAC;IAEhCijE,gBAAgB,EAAE;MAAEjjE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QAC1C1kC,SAAS,EAAE,CAAC,CAAC;QACbimC,QAAQ,EAAE,CAAC,CAAC;QACZC,WAAW,EAAE,CAAC;MACf;IAAE,CAAC;IAEH;IACAC,cAAc,EAAE;MAAEpjE,KAAK,EAAE,EAAE;MAAE2hE,UAAU,EAAE;QACxC79C,KAAK,EAAE,CAAC,CAAC;QACT2V,QAAQ,EAAE,CAAC,CAAC;QACZ3T,KAAK,EAAE,CAAC,CAAC;QACTC,MAAM,EAAE,CAAC;MACV;IAAE,CAAC;IAEHs9C,KAAK,EAAE;MAAErjE,KAAK,EAAE;IAAK,CAAC;IACtBsjE,KAAK,EAAE;MAAEtjE,KAAK,EAAE;IAAK;EAEtB,CAAC;EAEDk4B,MAAM,EAAE;IAEPynC,OAAO,EAAE;MAAE3/D,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE3wC,KAAK,EAAE;IAAI,CAAC;IACvBo4B,IAAI,EAAE;MAAEp4B,KAAK,EAAE;IAAI,CAAC;IACpB+hB,KAAK,EAAE;MAAE/hB,KAAK,EAAE;IAAI,CAAC;IACrB80C,GAAG,EAAE;MAAE90C,KAAK,EAAE;IAAK,CAAC;IACpBg1C,QAAQ,EAAE;MAAEh1C,KAAK,EAAE;IAAK,CAAC;IACzB6/D,iBAAiB,EAAE;MAAE7/D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACzDk5B,SAAS,EAAE;MAAEn3C,KAAK,EAAE;IAAE,CAAC;IACvBujE,WAAW,EAAE;MAAEvjE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAEnD,CAAC;EAED2zC,MAAM,EAAE;IAEP+N,OAAO,EAAE;MAAE3/D,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE3wC,KAAK,EAAE;IAAI,CAAC;IACvB8d,MAAM,EAAE;MAAE9d,KAAK,EAAE,aAAc,IAAIga,OAAO,CAAE,GAAG,EAAE,GAAI;IAAE,CAAC;IACxD4H,QAAQ,EAAE;MAAE5hB,KAAK,EAAE;IAAI,CAAC;IACxB80C,GAAG,EAAE;MAAE90C,KAAK,EAAE;IAAK,CAAC;IACpB4/D,YAAY,EAAE;MAAE5/D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACpD+2B,QAAQ,EAAE;MAAEh1C,KAAK,EAAE;IAAK,CAAC;IACzB6/D,iBAAiB,EAAE;MAAE7/D,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACzDk5B,SAAS,EAAE;MAAEn3C,KAAK,EAAE;IAAE;EAEvB;AAED,CAAC;AAED,IAAMwjE,SAAS,GAAAn8D,OAAA,CAAAm8D,SAAA,GAAG;EAEjBC,KAAK,EAAE;IAEN3b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACjoB,GAAG,CACd,CAAC;IAEHuR,YAAY,EAAEuU,WAAW,CAACe,cAAc;IACxCrV,cAAc,EAAEsU,WAAW,CAACgB;EAE7B,CAAC;EAEDmF,OAAO,EAAE;IAER5b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACjoB,GAAG,EACfioB,WAAW,CAACxW,MAAM,EAClB;MACCvV,QAAQ,EAAE;QAAE3zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;MAAE;IACxD,CAAC,CACA,CAAC;IAEHgR,YAAY,EAAEuU,WAAW,CAACiB,gBAAgB;IAC1CvV,cAAc,EAAEsU,WAAW,CAACkB;EAE7B,CAAC;EAEDkF,KAAK,EAAE;IAEN7b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACjoB,GAAG,EACfioB,WAAW,CAACxW,MAAM,EAClB;MACCvV,QAAQ,EAAE;QAAE3zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxDnE,QAAQ,EAAE;QAAE7zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxDhE,SAAS,EAAE;QAAEh0C,KAAK,EAAE;MAAG;IACxB,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAACuB,cAAc;IACxC7V,cAAc,EAAEsU,WAAW,CAACwB;EAE7B,CAAC;EAED6E,QAAQ,EAAE;IAET9b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACuB,YAAY,EACxBvB,WAAW,CAACqB,YAAY,EACxBrB,WAAW,CAACjoB,GAAG,EACfioB,WAAW,CAACxW,MAAM,EAClB;MACCvV,QAAQ,EAAE;QAAE3zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxD1E,SAAS,EAAE;QAAEtzC,KAAK,EAAE;MAAI,CAAC;MACzBuzC,SAAS,EAAE;QAAEvzC,KAAK,EAAE;MAAI,CAAC;MACzBq2C,eAAe,EAAE;QAAEr2C,KAAK,EAAE;MAAE,CAAC,CAAC;IAC/B,CAAC,CACA,CAAC;;IAEHgpD,YAAY,EAAEuU,WAAW,CAACyB,iBAAiB;IAC3C/V,cAAc,EAAEsU,WAAW,CAAC0B;EAE7B,CAAC;EAED4E,IAAI,EAAE;IAEL/b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACyB,WAAW,EACvBzB,WAAW,CAACjoB,GAAG,EACfioB,WAAW,CAACxW,MAAM,EAClB;MACCvV,QAAQ,EAAE;QAAE3zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;MAAE;IACxD,CAAC,CACA,CAAC;IAEHgR,YAAY,EAAEuU,WAAW,CAAC2B,aAAa;IACvCjW,cAAc,EAAEsU,WAAW,CAAC4B;EAE7B,CAAC;EAEDpqB,MAAM,EAAE;IAEP+S,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACjoB,GAAG,EACf;MACC1C,MAAM,EAAE;QAAE/0C,KAAK,EAAE;MAAK;IACvB,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAACmB,eAAe;IACzCzV,cAAc,EAAEsU,WAAW,CAACoB;EAE7B,CAAC;EAEDzmC,MAAM,EAAE;IAEP4vB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACxnC,MAAM,EAClBwnC,WAAW,CAACjoB,GAAG,CACd,CAAC;IAEHuR,YAAY,EAAEuU,WAAW,CAAC6B,WAAW;IACrCnW,cAAc,EAAEsU,WAAW,CAAC8B;EAE7B,CAAC;EAEDyE,MAAM,EAAE;IAEPhc,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACjoB,GAAG,EACf;MACC11B,KAAK,EAAE;QAAE/hB,KAAK,EAAE;MAAE,CAAC;MACnBi3C,QAAQ,EAAE;QAAEj3C,KAAK,EAAE;MAAE,CAAC;MACtB+jE,SAAS,EAAE;QAAE/jE,KAAK,EAAE;MAAE;IACvB,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAACa,eAAe;IACzCnV,cAAc,EAAEsU,WAAW,CAACc;EAE7B,CAAC;EAEDzxC,KAAK,EAAE;IAENk7B,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,CAC1B,CAAC;IAEH3X,YAAY,EAAEuU,WAAW,CAACO,UAAU;IACpC7U,cAAc,EAAEsU,WAAW,CAACQ;EAE7B,CAAC;EAEDtnC,MAAM,EAAE;IAEPqxB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3B;MACChwB,OAAO,EAAE;QAAE3wC,KAAK,EAAE;MAAI;IACvB,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAACqB,eAAe;IACzC3V,cAAc,EAAEsU,WAAW,CAACsB;EAE7B,CAAC;EAEDjN,MAAM,EAAE;IAEP9J,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAAC9N,MAAM,EAClB8N,WAAW,CAACjoB,GAAG,CACd,CAAC;IAEHuR,YAAY,EAAEuU,WAAW,CAACiC,WAAW;IACrCvW,cAAc,EAAEsU,WAAW,CAACkC;EAE7B,CAAC;EAEDtzB,UAAU,EAAE;IAEX2b,QAAQ,EAAE;MACTyb,WAAW,EAAE;QAAEvjE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;MAAE,CAAC;MACnD+lD,GAAG,EAAE;QAAEhkE,KAAK,EAAE;MAAK,CAAC;MACpBikE,mBAAmB,EAAE;QAAEjkE,KAAK,EAAE;MAAE;IACjC,CAAC;IAEDgpD,YAAY,EAAEuU,WAAW,CAACC,eAAe;IACzCvU,cAAc,EAAEsU,WAAW,CAACE;EAE7B,CAAC;EAEDyG,cAAc,EAAE;IAEfpc,QAAQ,EAAE;MACT3R,MAAM,EAAE;QAAEn2C,KAAK,EAAE;MAAK,CAAC;MACvBigE,UAAU,EAAE;QAAEjgE,KAAK,EAAE,CAAE;MAAE,CAAC;MAC1BmkE,oBAAoB,EAAE;QAAEnkE,KAAK,EAAE;MAAE,CAAC;MAClCikE,mBAAmB,EAAE;QAAEjkE,KAAK,EAAE;MAAE;IACjC,CAAC;IAEDgpD,YAAY,EAAEuU,WAAW,CAACG,mBAAmB;IAC7CzU,cAAc,EAAEsU,WAAW,CAACI;EAE7B,CAAC;EAEDyG,IAAI,EAAE;IAELtc,QAAQ,EAAE;MACTuc,KAAK,EAAE;QAAErkE,KAAK,EAAE;MAAK,CAAC;MACtBskE,KAAK,EAAE;QAAEtkE,KAAK,EAAE,CAAE;MAAE,CAAC;MACrB2wC,OAAO,EAAE;QAAE3wC,KAAK,EAAE;MAAI;IACvB,CAAC;IAEDgpD,YAAY,EAAEuU,WAAW,CAACK,SAAS;IACnC3U,cAAc,EAAEsU,WAAW,CAACM;EAE7B,CAAC;EAED0G,QAAQ,EAAE;IAETzc,QAAQ,EAAE;MACT8G,SAAS,EAAE;QAAE5uD,KAAK,EAAE;MAAK;IAC1B,CAAC;IAEDgpD,YAAY,EAAEuU,WAAW,CAACW,aAAa;IACvCjV,cAAc,EAAEsU,WAAW,CAACY;EAE7B,CAAC;EAEDqG,YAAY,EAAE;IAEb1c,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,EAC3B;MACC8D,iBAAiB,EAAE;QAAEzkE,KAAK,EAAE,aAAc,IAAIo0B,OAAO,CAAC;MAAE,CAAC;MACzDswC,YAAY,EAAE;QAAE1kE,KAAK,EAAE;MAAE,CAAC;MAC1B2kE,WAAW,EAAE;QAAE3kE,KAAK,EAAE;MAAK;IAC5B,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAACS,iBAAiB;IAC3C/U,cAAc,EAAEsU,WAAW,CAACU;EAE7B,CAAC;EAED2G,MAAM,EAAE;IAEP9c,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC6X,WAAW,CAACxW,MAAM,EAClBwW,WAAW,CAACjoB,GAAG,EACf;MACC3zB,KAAK,EAAE;QAAE9jB,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,OAAQ;MAAE,CAAC;MACpDrH,OAAO,EAAE;QAAE3wC,KAAK,EAAE;MAAI;IACvB,CAAC,CACA,CAAC;IAEHgpD,YAAY,EAAEuU,WAAW,CAAC+B,WAAW;IACrCrW,cAAc,EAAEsU,WAAW,CAACgC;EAE7B;AAED,CAAC;AAEDiE,SAAS,CAACqB,QAAQ,GAAG;EAEpB/c,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC2b,SAAS,CAACI,QAAQ,CAAC9b,QAAQ,EAC3B;IACC7T,SAAS,EAAE;MAAEj0C,KAAK,EAAE;IAAE,CAAC;IACvBm0C,YAAY,EAAE;MAAEn0C,KAAK,EAAE;IAAK,CAAC;IAC7B8kE,qBAAqB,EAAE;MAAE9kE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAC7Do2B,kBAAkB,EAAE;MAAEr0C,KAAK,EAAE;IAAK,CAAC;IACnC+kE,2BAA2B,EAAE;MAAE/kE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACnEq2B,oBAAoB,EAAE;MAAEt0C,KAAK,EAAE,aAAc,IAAIga,OAAO,CAAE,CAAC,EAAE,CAAE;IAAE,CAAC;IAClEk6B,kBAAkB,EAAE;MAAEl0C,KAAK,EAAE;IAAE,CAAC;IAChCo0C,qBAAqB,EAAE;MAAEp0C,KAAK,EAAE;IAAK,CAAC;IACtCglE,8BAA8B,EAAE;MAAEhlE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACtEs2B,WAAW,EAAE;MAAEv0C,KAAK,EAAE;IAAE,CAAC;IACzB00C,cAAc,EAAE;MAAE10C,KAAK,EAAE;IAAK,CAAC;IAC/BilE,uBAAuB,EAAE;MAAEjlE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAC/Du2B,cAAc,EAAE;MAAEx0C,KAAK,EAAE;IAAI,CAAC;IAC9BklE,2BAA2B,EAAE;MAAEllE,KAAK,EAAE;IAAI,CAAC;IAC3CmlE,2BAA2B,EAAE;MAAEnlE,KAAK,EAAE;IAAI,CAAC;IAC3C20C,uBAAuB,EAAE;MAAE30C,KAAK,EAAE;IAAK,CAAC;IACxColE,gCAAgC,EAAE;MAAEplE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACxEu1B,KAAK,EAAE;MAAExzC,KAAK,EAAE;IAAE,CAAC;IACnByzC,UAAU,EAAE;MAAEzzC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE,CAAC;IAC1DqtB,aAAa,EAAE;MAAErlE,KAAK,EAAE;IAAK,CAAC;IAC9BslE,sBAAsB,EAAE;MAAEtlE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAC9Dy1B,cAAc,EAAE;MAAE1zC,KAAK,EAAE;IAAE,CAAC;IAC5BulE,iBAAiB,EAAE;MAAEvlE,KAAK,EAAE;IAAK,CAAC;IAClCwlE,0BAA0B,EAAE;MAAExlE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAClEw4B,YAAY,EAAE;MAAEz2C,KAAK,EAAE;IAAE,CAAC;IAC1B02C,eAAe,EAAE;MAAE12C,KAAK,EAAE;IAAK,CAAC;IAChCylE,wBAAwB,EAAE;MAAEzlE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAChEynD,uBAAuB,EAAE;MAAE1lE,KAAK,EAAE,aAAc,IAAIga,OAAO,CAAC;IAAE,CAAC;IAC/D2rD,sBAAsB,EAAE;MAAE3lE,KAAK,EAAE;IAAK,CAAC;IACvC22C,SAAS,EAAE;MAAE32C,KAAK,EAAE;IAAE,CAAC;IACvB42C,YAAY,EAAE;MAAE52C,KAAK,EAAE;IAAK,CAAC;IAC7B4lE,qBAAqB,EAAE;MAAE5lE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IAC7D44B,mBAAmB,EAAE;MAAE72C,KAAK,EAAE;IAAE,CAAC;IACjC82C,gBAAgB,EAAE;MAAE92C,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,QAAS;IAAE,CAAC;IAChEjE,aAAa,EAAE;MAAE/zC,KAAK,EAAE,aAAc,IAAIg4C,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE;IAAE,CAAC;IAC5D9B,gBAAgB,EAAE;MAAEl2C,KAAK,EAAE;IAAK,CAAC;IACjC6lE,yBAAyB,EAAE;MAAE7lE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACjE61B,iBAAiB,EAAE;MAAE9zC,KAAK,EAAE;IAAE,CAAC;IAC/Bi2C,oBAAoB,EAAE;MAAEj2C,KAAK,EAAE;IAAK,CAAC;IACrC8lE,6BAA6B,EAAE;MAAE9lE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE,CAAC;IACrE8nD,gBAAgB,EAAE;MAAE/lE,KAAK,EAAE,aAAc,IAAIga,OAAO,CAAC;IAAE,CAAC;IACxD66B,aAAa,EAAE;MAAE70C,KAAK,EAAE;IAAK,CAAC;IAC9BgmE,sBAAsB,EAAE;MAAEhmE,KAAK,EAAE,aAAc,IAAIie,OAAO,CAAC;IAAE;EAC9D,CAAC,CACA,CAAC;EAEH+qC,YAAY,EAAEuU,WAAW,CAACyB,iBAAiB;EAC3C/V,cAAc,EAAEsU,WAAW,CAAC0B;AAE7B,CAAC;AAED,IAAMgH,IAAI,GAAG;EAAExmE,CAAC,EAAE,CAAC;EAAE6Y,CAAC,EAAE,CAAC;EAAEpW,CAAC,EAAE;AAAE,CAAC;AAEjC,SAASgkE,eAAeA,CAAEhe,QAAQ,EAAEie,QAAQ,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAErpD,KAAK,EAAEy1B,kBAAkB,EAAG;EAErG,IAAM6zB,UAAU,GAAG,IAAIvuB,KAAK,CAAE,QAAS,CAAC;EACxC,IAAIwuB,UAAU,GAAGvpD,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAEvC,IAAIwpD,SAAS;EACb,IAAIC,OAAO;EAEX,IAAIC,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IAAIC,kBAAkB,GAAG,IAAI;EAE7B,SAAS9Y,MAAMA,CAAE+Y,UAAU,EAAEzZ,KAAK,EAAG;IAEpC,IAAI0Z,UAAU,GAAG,KAAK;IACtB,IAAI56B,UAAU,GAAGkhB,KAAK,CAACnhB,OAAO,KAAK,IAAI,GAAGmhB,KAAK,CAAClhB,UAAU,GAAG,IAAI;IAEjE,IAAKA,UAAU,IAAIA,UAAU,CAACvjB,SAAS,EAAG;MAEzC,IAAMo+C,QAAQ,GAAG3Z,KAAK,CAAC8W,oBAAoB,GAAG,CAAC,CAAC,CAAC;MACjDh4B,UAAU,GAAG,CAAE66B,QAAQ,GAAGZ,UAAU,GAAGD,QAAQ,EAAGhsD,GAAG,CAAEgyB,UAAW,CAAC;IAEpE;IAEA,IAAKA,UAAU,KAAK,IAAI,EAAG;MAE1B86B,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC,MAAM,IAAKr6B,UAAU,IAAIA,UAAU,CAACC,OAAO,EAAG;MAE9C66B,QAAQ,CAAE96B,UAAU,EAAE,CAAE,CAAC;MACzB46B,UAAU,GAAG,IAAI;IAElB;IAEA,IAAMG,oBAAoB,GAAGhf,QAAQ,CAAC2F,EAAE,CAACsZ,uBAAuB,CAAC,CAAC;IAElE,IAAKD,oBAAoB,KAAK,UAAU,EAAG;MAE1Cb,KAAK,CAACxT,OAAO,CAAC/uC,KAAK,CAACmjD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEv0B,kBAAmB,CAAC;IAE/D,CAAC,MAAM,IAAKw0B,oBAAoB,KAAK,aAAa,EAAG;MAEpDb,KAAK,CAACxT,OAAO,CAAC/uC,KAAK,CAACmjD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEv0B,kBAAmB,CAAC;IAE/D;IAEA,IAAKwV,QAAQ,CAACkf,SAAS,IAAIL,UAAU,EAAG;MAEvC7e,QAAQ,CAACne,KAAK,CAAEme,QAAQ,CAACmf,cAAc,EAAEnf,QAAQ,CAACof,cAAc,EAAEpf,QAAQ,CAACqf,gBAAiB,CAAC;IAE9F;IAEA,IAAKp7B,UAAU,KAAMA,UAAU,CAACiiB,aAAa,IAAIjiB,UAAU,CAACjkB,OAAO,KAAK1c,uBAAuB,CAAE,EAAG;MAEnG,IAAKk7D,OAAO,KAAKz/D,SAAS,EAAG;QAE5By/D,OAAO,GAAG,IAAIhiB,IAAI,CACjB,IAAIuB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAC1B,IAAIwC,cAAc,CAAE;UACnB/jD,IAAI,EAAE,wBAAwB;UAC9BojD,QAAQ,EAAEH,aAAa,CAAE6b,SAAS,CAACU,cAAc,CAACpc,QAAS,CAAC;UAC5DkB,YAAY,EAAEwa,SAAS,CAACU,cAAc,CAAClb,YAAY;UACnDC,cAAc,EAAEua,SAAS,CAACU,cAAc,CAACjb,cAAc;UACvDxY,IAAI,EAAEhoC,QAAQ;UACd4oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjBmG,GAAG,EAAE;QACN,CAAE,CACH,CAAC;QAEDivB,OAAO,CAACntC,QAAQ,CAACymB,eAAe,CAAE,QAAS,CAAC;QAC5C0mB,OAAO,CAACntC,QAAQ,CAACymB,eAAe,CAAE,IAAK,CAAC;QAExC0mB,OAAO,CAACn+B,cAAc,GAAG,UAAW2f,QAAQ,EAAEmF,KAAK,EAAE/3B,MAAM,EAAG;UAE7D,IAAI,CAACK,WAAW,CAAC2K,YAAY,CAAEhL,MAAM,CAACK,WAAY,CAAC;QAEpD,CAAC;;QAED;QACAj2B,MAAM,CAACK,cAAc,CAAE2mE,OAAO,CAAC35B,QAAQ,EAAE,QAAQ,EAAE;UAElD5yB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAAC2tC,QAAQ,CAAC3R,MAAM,CAACn2C,KAAK;UAElC;QAED,CAAE,CAAC;QAEHsmE,OAAO,CAACn2C,MAAM,CAAEu2C,OAAQ,CAAC;MAE1B;MAEAA,OAAO,CAAC35B,QAAQ,CAAC+a,QAAQ,CAAC3R,MAAM,CAACn2C,KAAK,GAAGmsC,UAAU;MACnDu6B,OAAO,CAAC35B,QAAQ,CAAC+a,QAAQ,CAACmY,UAAU,CAACjgE,KAAK,GAAKmsC,UAAU,CAACiiB,aAAa,IAAIjiB,UAAU,CAACziB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MACjIg9C,OAAO,CAAC35B,QAAQ,CAAC+a,QAAQ,CAACqc,oBAAoB,CAACnkE,KAAK,GAAGqtD,KAAK,CAAC8W,oBAAoB;MACjFuC,OAAO,CAAC35B,QAAQ,CAAC+a,QAAQ,CAACmc,mBAAmB,CAACjkE,KAAK,GAAGqtD,KAAK,CAAC4W,mBAAmB;MAC/EyC,OAAO,CAAC35B,QAAQ,CAAC6F,UAAU,GAAGxuB,eAAe,CAACgB,WAAW,CAAE+mB,UAAU,CAAC1nB,UAAW,CAAC,KAAKnT,YAAY;MAEnG,IAAKq1D,iBAAiB,KAAKx6B,UAAU,IACpCy6B,wBAAwB,KAAKz6B,UAAU,CAACplB,OAAO,IAC/C8/C,kBAAkB,KAAK3e,QAAQ,CAACsf,WAAW,EAAG;QAE9Cd,OAAO,CAAC35B,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;QAEnC28C,iBAAiB,GAAGx6B,UAAU;QAC9By6B,wBAAwB,GAAGz6B,UAAU,CAACplB,OAAO;QAC7C8/C,kBAAkB,GAAG3e,QAAQ,CAACsf,WAAW;MAE1C;MAEAd,OAAO,CAACxgC,MAAM,CAACJ,SAAS,CAAC,CAAC;;MAE1B;MACAghC,UAAU,CAACW,OAAO,CAAEf,OAAO,EAAEA,OAAO,CAACntC,QAAQ,EAAEmtC,OAAO,CAAC35B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;IAE9E,CAAC,MAAM,IAAKZ,UAAU,IAAIA,UAAU,CAACvjB,SAAS,EAAG;MAEhD,IAAK69C,SAAS,KAAKx/D,SAAS,EAAG;QAE9Bw/D,SAAS,GAAG,IAAI/hB,IAAI,CACnB,IAAI0P,aAAa,CAAE,CAAC,EAAE,CAAE,CAAC,EACzB,IAAI3L,cAAc,CAAE;UACnB/jD,IAAI,EAAE,oBAAoB;UAC1BojD,QAAQ,EAAEH,aAAa,CAAE6b,SAAS,CAACr3B,UAAU,CAAC2b,QAAS,CAAC;UACxDkB,YAAY,EAAEwa,SAAS,CAACr3B,UAAU,CAAC6c,YAAY;UAC/CC,cAAc,EAAEua,SAAS,CAACr3B,UAAU,CAAC8c,cAAc;UACnDxY,IAAI,EAAEjoC,SAAS;UACf6oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjBmG,GAAG,EAAE;QACN,CAAE,CACH,CAAC;QAEDgvB,SAAS,CAACltC,QAAQ,CAACymB,eAAe,CAAE,QAAS,CAAC;;QAE9C;QACAtgD,MAAM,CAACK,cAAc,CAAE0mE,SAAS,CAAC15B,QAAQ,EAAE,KAAK,EAAE;UAEjD5yB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAAC2tC,QAAQ,CAACkc,GAAG,CAAChkE,KAAK;UAE/B;QAED,CAAE,CAAC;QAEHsmE,OAAO,CAACn2C,MAAM,CAAEs2C,SAAU,CAAC;MAE5B;MAEAA,SAAS,CAAC15B,QAAQ,CAAC+a,QAAQ,CAACkc,GAAG,CAAChkE,KAAK,GAAGmsC,UAAU;MAClDs6B,SAAS,CAAC15B,QAAQ,CAAC+a,QAAQ,CAACmc,mBAAmB,CAACjkE,KAAK,GAAGqtD,KAAK,CAAC4W,mBAAmB;MACjFwC,SAAS,CAAC15B,QAAQ,CAAC6F,UAAU,GAAGxuB,eAAe,CAACgB,WAAW,CAAE+mB,UAAU,CAAC1nB,UAAW,CAAC,KAAKnT,YAAY;MAErG,IAAK66B,UAAU,CAAChjB,gBAAgB,KAAK,IAAI,EAAG;QAE3CgjB,UAAU,CAACviB,YAAY,CAAC,CAAC;MAE1B;MAEA68C,SAAS,CAAC15B,QAAQ,CAAC+a,QAAQ,CAACyb,WAAW,CAACvjE,KAAK,CAAC2a,IAAI,CAAEwxB,UAAU,CAAC7pB,MAAO,CAAC;MAEvE,IAAKqkD,iBAAiB,KAAKx6B,UAAU,IACpCy6B,wBAAwB,KAAKz6B,UAAU,CAACplB,OAAO,IAC/C8/C,kBAAkB,KAAK3e,QAAQ,CAACsf,WAAW,EAAG;QAE9Cf,SAAS,CAAC15B,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;QAErC28C,iBAAiB,GAAGx6B,UAAU;QAC9By6B,wBAAwB,GAAGz6B,UAAU,CAACplB,OAAO;QAC7C8/C,kBAAkB,GAAG3e,QAAQ,CAACsf,WAAW;MAE1C;MAEAf,SAAS,CAACvgC,MAAM,CAACJ,SAAS,CAAC,CAAC;;MAE5B;MACAghC,UAAU,CAACW,OAAO,CAAEhB,SAAS,EAAEA,SAAS,CAACltC,QAAQ,EAAEktC,SAAS,CAAC15B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;IAEpF;EAED;EAEA,SAASk6B,QAAQA,CAAEnjD,KAAK,EAAE7G,KAAK,EAAG;IAEjC6G,KAAK,CAACw1B,MAAM,CAAE2sB,IAAI,EAAEhe,yBAAyB,CAAEC,QAAS,CAAE,CAAC;IAE3Dme,KAAK,CAACxT,OAAO,CAAC/uC,KAAK,CAACmjD,QAAQ,CAAEhB,IAAI,CAACxmE,CAAC,EAAEwmE,IAAI,CAAC/jE,CAAC,EAAE+jE,IAAI,CAAC3tD,CAAC,EAAE2E,KAAK,EAAEy1B,kBAAmB,CAAC;EAElF;EAEA,OAAO;IAENg1B,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOnB,UAAU;IAElB,CAAC;IACDoB,aAAa,EAAE,SAAAA,cAAW7jD,KAAK,EAAE7G,KAAK,GAAG,CAAC,EAAG;MAE5CspD,UAAU,CAACrtD,GAAG,CAAE4K,KAAM,CAAC;MACvB0iD,UAAU,GAAGvpD,KAAK;MAClBgqD,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC;IACDoB,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOpB,UAAU;IAElB,CAAC;IACDqB,aAAa,EAAE,SAAAA,cAAW5qD,KAAK,EAAG;MAEjCupD,UAAU,GAAGvpD,KAAK;MAClBgqD,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC;IACDzY,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAAS+Z,kBAAkBA,CAAEpV,EAAE,EAAEtJ,UAAU,EAAE5vB,UAAU,EAAEm5B,YAAY,EAAG;EAEvE,IAAMoV,mBAAmB,GAAGrV,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACsV,kBAAmB,CAAC;EAEpE,IAAMC,SAAS,GAAGtV,YAAY,CAACC,QAAQ,GAAG,IAAI,GAAGxJ,UAAU,CAACjvC,GAAG,CAAE,yBAA0B,CAAC;EAC5F,IAAM+tD,YAAY,GAAGvV,YAAY,CAACC,QAAQ,IAAIqV,SAAS,KAAK,IAAI;EAEhE,IAAME,aAAa,GAAG,CAAC,CAAC;EAExB,IAAMC,YAAY,GAAGC,kBAAkB,CAAE,IAAK,CAAC;EAC/C,IAAIC,YAAY,GAAGF,YAAY;EAC/B,IAAIG,WAAW,GAAG,KAAK;EAEvB,SAASC,KAAKA,CAAEjwC,MAAM,EAAEwU,QAAQ,EAAE07B,OAAO,EAAElvC,QAAQ,EAAE/kB,KAAK,EAAG;IAE5D,IAAIk0D,aAAa,GAAG,KAAK;IAEzB,IAAKR,YAAY,EAAG;MAEnB,IAAM7B,KAAK,GAAGsC,eAAe,CAAEpvC,QAAQ,EAAEkvC,OAAO,EAAE17B,QAAS,CAAC;MAE5D,IAAKu7B,YAAY,KAAKjC,KAAK,EAAG;QAE7BiC,YAAY,GAAGjC,KAAK;QACpBuC,qBAAqB,CAAEN,YAAY,CAAC/vC,MAAO,CAAC;MAE7C;MAEAmwC,aAAa,GAAG1+C,WAAW,CAAEuO,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAO,EAAEj0D,KAAM,CAAC;MAE/D,IAAKk0D,aAAa,EAAGG,SAAS,CAAEtwC,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAO,EAAEj0D,KAAM,CAAC;IAEnE,CAAC,MAAM;MAEN,IAAM4iC,SAAS,GAAKrK,QAAQ,CAACqK,SAAS,KAAK,IAAM;MAEjD,IAAKkxB,YAAY,CAAC/uC,QAAQ,KAAKA,QAAQ,CAAC6Q,EAAE,IACzCk+B,YAAY,CAACG,OAAO,KAAKA,OAAO,CAACr+B,EAAE,IACnCk+B,YAAY,CAAClxB,SAAS,KAAKA,SAAS,EAAG;QAEvCkxB,YAAY,CAAC/uC,QAAQ,GAAGA,QAAQ,CAAC6Q,EAAE;QACnCk+B,YAAY,CAACG,OAAO,GAAGA,OAAO,CAACr+B,EAAE;QACjCk+B,YAAY,CAAClxB,SAAS,GAAGA,SAAS;QAElCsxB,aAAa,GAAG,IAAI;MAErB;IAED;IAEA,IAAKl0D,KAAK,KAAK,IAAI,EAAG;MAErBglB,UAAU,CAACrJ,MAAM,CAAE3b,KAAK,EAAEk+C,EAAE,CAACoW,oBAAqB,CAAC;IAEpD;IAEA,IAAKJ,aAAa,IAAIH,WAAW,EAAG;MAEnCA,WAAW,GAAG,KAAK;MAEnBQ,qBAAqB,CAAExwC,MAAM,EAAEwU,QAAQ,EAAE07B,OAAO,EAAElvC,QAAS,CAAC;MAE5D,IAAK/kB,KAAK,KAAK,IAAI,EAAG;QAErBk+C,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACoW,oBAAoB,EAAEtvC,UAAU,CAACrf,GAAG,CAAE3F,KAAM,CAAC,CAACoO,MAAO,CAAC;MAEzE;IAED;EAED;EAEA,SAASomD,uBAAuBA,CAAA,EAAG;IAElC,IAAKrW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACuW,iBAAiB,CAAC,CAAC;IAE1D,OAAOhB,SAAS,CAACiB,oBAAoB,CAAC,CAAC;EAExC;EAEA,SAASN,qBAAqBA,CAAEO,GAAG,EAAG;IAErC,IAAKxW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAAC0W,eAAe,CAAED,GAAI,CAAC;IAE7D,OAAOlB,SAAS,CAACoB,kBAAkB,CAAEF,GAAI,CAAC;EAE3C;EAEA,SAASG,uBAAuBA,CAAEH,GAAG,EAAG;IAEvC,IAAKxW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAAC6W,iBAAiB,CAAEJ,GAAI,CAAC;IAE/D,OAAOlB,SAAS,CAACuB,oBAAoB,CAAEL,GAAI,CAAC;EAE7C;EAEA,SAASR,eAAeA,CAAEpvC,QAAQ,EAAEkvC,OAAO,EAAE17B,QAAQ,EAAG;IAEvD,IAAMqK,SAAS,GAAKrK,QAAQ,CAACqK,SAAS,KAAK,IAAM;IAEjD,IAAIqyB,UAAU,GAAGtB,aAAa,CAAE5uC,QAAQ,CAAC6Q,EAAE,CAAE;IAE7C,IAAKq/B,UAAU,KAAKxiE,SAAS,EAAG;MAE/BwiE,UAAU,GAAG,CAAC,CAAC;MACftB,aAAa,CAAE5uC,QAAQ,CAAC6Q,EAAE,CAAE,GAAGq/B,UAAU;IAE1C;IAEA,IAAIC,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAACr+B,EAAE,CAAE;IAEvC,IAAKs/B,QAAQ,KAAKziE,SAAS,EAAG;MAE7ByiE,QAAQ,GAAG,CAAC,CAAC;MACbD,UAAU,CAAEhB,OAAO,CAACr+B,EAAE,CAAE,GAAGs/B,QAAQ;IAEpC;IAEA,IAAIrD,KAAK,GAAGqD,QAAQ,CAAEtyB,SAAS,CAAE;IAEjC,IAAKivB,KAAK,KAAKp/D,SAAS,EAAG;MAE1Bo/D,KAAK,GAAGgC,kBAAkB,CAAEW,uBAAuB,CAAC,CAAE,CAAC;MACvDU,QAAQ,CAAEtyB,SAAS,CAAE,GAAGivB,KAAK;IAE9B;IAEA,OAAOA,KAAK;EAEb;EAEA,SAASgC,kBAAkBA,CAAEc,GAAG,EAAG;IAElC,IAAMQ,aAAa,GAAG,EAAE;IACxB,IAAMC,iBAAiB,GAAG,EAAE;IAC5B,IAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAM,IAAI5pE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8nE,mBAAmB,EAAE9nE,CAAC,EAAG,EAAG;MAEhD0pE,aAAa,CAAE1pE,CAAC,CAAE,GAAG,CAAC;MACtB2pE,iBAAiB,CAAE3pE,CAAC,CAAE,GAAG,CAAC;MAC1B4pE,iBAAiB,CAAE5pE,CAAC,CAAE,GAAG,CAAC;IAE3B;IAEA,OAAO;MAEN;MACAs5B,QAAQ,EAAE,IAAI;MACdkvC,OAAO,EAAE,IAAI;MACbrxB,SAAS,EAAE,KAAK;MAEhBuyB,aAAa,EAAEA,aAAa;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCC,iBAAiB,EAAEA,iBAAiB;MACpCtxC,MAAM,EAAE4wC,GAAG;MACX3vC,UAAU,EAAE,CAAC,CAAC;MACdhlB,KAAK,EAAE;IAER,CAAC;EAEF;EAEA,SAASwV,WAAWA,CAAEuO,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAO,EAAEj0D,KAAK,EAAG;IAExD,IAAMs1D,gBAAgB,GAAGxB,YAAY,CAAC9uC,UAAU;IAChD,IAAMuwC,kBAAkB,GAAGxwC,QAAQ,CAACC,UAAU;IAE9C,IAAIwwC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,KAAM,IAAMxlE,IAAI,IAAIulE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEvlE,IAAI,CAAE;MAElD,IAAKylE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAMC,eAAe,GAAGP,gBAAgB,CAAEplE,IAAI,CAAE;QAChD,IAAI4lE,iBAAiB,GAAGP,kBAAkB,CAAErlE,IAAI,CAAE;QAElD,IAAK4lE,iBAAiB,KAAKrjE,SAAS,EAAG;UAEtC,IAAKvC,IAAI,KAAK,gBAAgB,IAAI6zB,MAAM,CAACsT,cAAc,EAAGy+B,iBAAiB,GAAG/xC,MAAM,CAACsT,cAAc;UACnG,IAAKnnC,IAAI,KAAK,eAAe,IAAI6zB,MAAM,CAACuT,aAAa,EAAGw+B,iBAAiB,GAAG/xC,MAAM,CAACuT,aAAa;QAEjG;QAEA,IAAKu+B,eAAe,KAAKpjE,SAAS,EAAG,OAAO,IAAI;QAEhD,IAAKojE,eAAe,CAAC3sD,SAAS,KAAK4sD,iBAAiB,EAAG,OAAO,IAAI;QAElE,IAAKA,iBAAiB,IAAID,eAAe,CAAC1jD,IAAI,KAAK2jD,iBAAiB,CAAC3jD,IAAI,EAAG,OAAO,IAAI;QAEvFqjD,aAAa,EAAG;MAEjB;IAED;IAEA,IAAK1B,YAAY,CAAC0B,aAAa,KAAKA,aAAa,EAAG,OAAO,IAAI;IAE/D,IAAK1B,YAAY,CAAC9zD,KAAK,KAAKA,KAAK,EAAG,OAAO,IAAI;IAE/C,OAAO,KAAK;EAEb;EAEA,SAASq0D,SAASA,CAAEtwC,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAO,EAAEj0D,KAAK,EAAG;IAEtD,IAAM24B,KAAK,GAAG,CAAC,CAAC;IAChB,IAAM3T,UAAU,GAAGD,QAAQ,CAACC,UAAU;IACtC,IAAIwwC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,KAAM,IAAMxlE,IAAI,IAAIulE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEvlE,IAAI,CAAE;MAElD,IAAKylE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAI1sD,SAAS,GAAG8b,UAAU,CAAE90B,IAAI,CAAE;QAElC,IAAKgZ,SAAS,KAAKzW,SAAS,EAAG;UAE9B,IAAKvC,IAAI,KAAK,gBAAgB,IAAI6zB,MAAM,CAACsT,cAAc,EAAGnuB,SAAS,GAAG6a,MAAM,CAACsT,cAAc;UAC3F,IAAKnnC,IAAI,KAAK,eAAe,IAAI6zB,MAAM,CAACuT,aAAa,EAAGpuB,SAAS,GAAG6a,MAAM,CAACuT,aAAa;QAEzF;QAEA,IAAMnlB,IAAI,GAAG,CAAC,CAAC;QACfA,IAAI,CAACjJ,SAAS,GAAGA,SAAS;QAE1B,IAAKA,SAAS,IAAIA,SAAS,CAACiJ,IAAI,EAAG;UAElCA,IAAI,CAACA,IAAI,GAAGjJ,SAAS,CAACiJ,IAAI;QAE3B;QAEAwmB,KAAK,CAAEzoC,IAAI,CAAE,GAAGiiB,IAAI;QAEpBqjD,aAAa,EAAG;MAEjB;IAED;IAEA1B,YAAY,CAAC9uC,UAAU,GAAG2T,KAAK;IAC/Bm7B,YAAY,CAAC0B,aAAa,GAAGA,aAAa;IAE1C1B,YAAY,CAAC9zD,KAAK,GAAGA,KAAK;EAE3B;EAEA,SAAS+1D,cAAcA,CAAA,EAAG;IAEzB,IAAMZ,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAEhD,KAAM,IAAI1pE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGo6C,aAAa,CAACrlE,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAE1D0pE,aAAa,CAAE1pE,CAAC,CAAE,GAAG,CAAC;IAEvB;EAED;EAEA,SAASuqE,eAAeA,CAAE9sD,SAAS,EAAG;IAErC+sD,yBAAyB,CAAE/sD,SAAS,EAAE,CAAE,CAAC;EAE1C;EAEA,SAAS+sD,yBAAyBA,CAAE/sD,SAAS,EAAEgtD,gBAAgB,EAAG;IAEjE,IAAMf,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;IACxD,IAAMC,iBAAiB,GAAGvB,YAAY,CAACuB,iBAAiB;IAExDF,aAAa,CAAEjsD,SAAS,CAAE,GAAG,CAAC;IAE9B,IAAKksD,iBAAiB,CAAElsD,SAAS,CAAE,KAAK,CAAC,EAAG;MAE3Cg1C,EAAE,CAACiY,uBAAuB,CAAEjtD,SAAU,CAAC;MACvCksD,iBAAiB,CAAElsD,SAAS,CAAE,GAAG,CAAC;IAEnC;IAEA,IAAKmsD,iBAAiB,CAAEnsD,SAAS,CAAE,KAAKgtD,gBAAgB,EAAG;MAE1D,IAAMzC,UAAS,GAAGtV,YAAY,CAACC,QAAQ,GAAGF,EAAE,GAAGtJ,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC;MAEzF8tD,UAAS,CAAEtV,YAAY,CAACC,QAAQ,GAAG,qBAAqB,GAAG,0BAA0B,CAAE,CAAEl1C,SAAS,EAAEgtD,gBAAiB,CAAC;MACtHb,iBAAiB,CAAEnsD,SAAS,CAAE,GAAGgtD,gBAAgB;IAElD;EAED;EAEA,SAASE,uBAAuBA,CAAA,EAAG;IAElC,IAAMjB,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;IAExD,KAAM,IAAI3pE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGq6C,iBAAiB,CAACtlE,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAE9D,IAAK2pE,iBAAiB,CAAE3pE,CAAC,CAAE,KAAK0pE,aAAa,CAAE1pE,CAAC,CAAE,EAAG;QAEpDyyD,EAAE,CAACmY,wBAAwB,CAAE5qE,CAAE,CAAC;QAChC2pE,iBAAiB,CAAE3pE,CAAC,CAAE,GAAG,CAAC;MAE3B;IAED;EAED;EAEA,SAAS6qE,mBAAmBA,CAAEt2D,KAAK,EAAE4jB,IAAI,EAAEj3B,IAAI,EAAEu6C,UAAU,EAAEyH,MAAM,EAAE5lC,MAAM,EAAEwtD,OAAO,EAAG;IAEtF,IAAKA,OAAO,KAAK,IAAI,EAAG;MAEvBrY,EAAE,CAACsY,oBAAoB,CAAEx2D,KAAK,EAAE4jB,IAAI,EAAEj3B,IAAI,EAAEgiD,MAAM,EAAE5lC,MAAO,CAAC;IAE7D,CAAC,MAAM;MAENm1C,EAAE,CAACoY,mBAAmB,CAAEt2D,KAAK,EAAE4jB,IAAI,EAAEj3B,IAAI,EAAEu6C,UAAU,EAAEyH,MAAM,EAAE5lC,MAAO,CAAC;IAExE;EAED;EAEA,SAASwrD,qBAAqBA,CAAExwC,MAAM,EAAEwU,QAAQ,EAAE07B,OAAO,EAAElvC,QAAQ,EAAG;IAErE,IAAKo5B,YAAY,CAACC,QAAQ,KAAK,KAAK,KAAMr6B,MAAM,CAACqT,eAAe,IAAIrS,QAAQ,CAAC0xC,yBAAyB,CAAE,EAAG;MAE1G,IAAK7hB,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC,KAAK,IAAI,EAAG;IAE5D;IAEAowD,cAAc,CAAC,CAAC;IAEhB,IAAMR,kBAAkB,GAAGxwC,QAAQ,CAACC,UAAU;IAE9C,IAAMywC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,IAAMgB,8BAA8B,GAAGn+B,QAAQ,CAAC0c,sBAAsB;IAEtE,KAAM,IAAM/kD,IAAI,IAAIulE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEvlE,IAAI,CAAE;MAElD,IAAKylE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAIE,iBAAiB,GAAGP,kBAAkB,CAAErlE,IAAI,CAAE;QAElD,IAAK4lE,iBAAiB,KAAKrjE,SAAS,EAAG;UAEtC,IAAKvC,IAAI,KAAK,gBAAgB,IAAI6zB,MAAM,CAACsT,cAAc,EAAGy+B,iBAAiB,GAAG/xC,MAAM,CAACsT,cAAc;UACnG,IAAKnnC,IAAI,KAAK,eAAe,IAAI6zB,MAAM,CAACuT,aAAa,EAAGw+B,iBAAiB,GAAG/xC,MAAM,CAACuT,aAAa;QAEjG;QAEA,IAAKw+B,iBAAiB,KAAKrjE,SAAS,EAAG;UAEtC,IAAMy0C,UAAU,GAAG4uB,iBAAiB,CAAC5uB,UAAU;UAC/C,IAAMtjB,IAAI,GAAGkyC,iBAAiB,CAAC7uB,QAAQ;UAEvC,IAAM/9B,SAAS,GAAG8b,UAAU,CAACrf,GAAG,CAAEmwD,iBAAkB,CAAC;;UAErD;;UAEA,IAAK5sD,SAAS,KAAKzW,SAAS,EAAG;UAE/B,IAAM2b,MAAM,GAAGlF,SAAS,CAACkF,MAAM;UAC/B,IAAMzhB,IAAI,GAAGuc,SAAS,CAACvc,IAAI;UAC3B,IAAMwyD,eAAe,GAAGj2C,SAAS,CAACi2C,eAAe;;UAEjD;;UAEA,IAAMoX,OAAO,GAAKpY,YAAY,CAACC,QAAQ,KAAK,IAAI,KAAMzxD,IAAI,KAAKuxD,EAAE,CAACc,GAAG,IAAIryD,IAAI,KAAKuxD,EAAE,CAACa,YAAY,IAAI+W,iBAAiB,CAACxuB,OAAO,KAAKpvC,OAAO,CAAI;UAE9I,IAAK49D,iBAAiB,CAACpnB,4BAA4B,EAAG;YAErD,IAAMv8B,IAAI,GAAG2jD,iBAAiB,CAAC3jD,IAAI;YACnC,IAAMw8B,MAAM,GAAGx8B,IAAI,CAACw8B,MAAM;YAC1B,IAAM5lC,MAAM,GAAG+sD,iBAAiB,CAAC/sD,MAAM;YAEvC,IAAKoJ,IAAI,CAACwkD,4BAA4B,EAAG;cAExC,KAAM,IAAIlrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,CAAC,EAAG,EAAG;gBAE1DwqE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAGnqE,CAAC,EAAE0mB,IAAI,CAAC+jD,gBAAiB,CAAC;cAElF;cAEA,IAAKnyC,MAAM,CAACqT,eAAe,KAAK,IAAI,IAAIrS,QAAQ,CAAC8xC,iBAAiB,KAAKpkE,SAAS,EAAG;gBAElFsyB,QAAQ,CAAC8xC,iBAAiB,GAAG1kD,IAAI,CAAC+jD,gBAAgB,GAAG/jD,IAAI,CAACyI,KAAK;cAEhE;YAED,CAAC,MAAM;cAEN,KAAM,IAAInvB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,IAAC,EAAG,EAAG;gBAE1DuqE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAGnqE,IAAE,CAAC;cAEjD;YAED;YAEAyyD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4Y,YAAY,EAAE1oD,MAAO,CAAC;YAExC,KAAM,IAAI3iB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,IAAC,EAAG,EAAG;cAE1D6qE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAGnqE,IAAC,EAC7Bm4B,IAAI,GAAG+xC,gBAAgB,CAACiB,YAAY,EACpCjqE,IAAI,EACJu6C,UAAU,EACVyH,MAAM,GAAGwQ,eAAe,EACxB,CAAEp2C,MAAM,GAAK6a,IAAI,GAAG+xC,gBAAgB,CAACiB,YAAY,GAAKnrE,IAAC,IAAK0zD,eAAe,EAC3EoX,OACD,CAAC;YAEF;UAED,CAAC,MAAM;YAEN,IAAKT,iBAAiB,CAACiB,0BAA0B,EAAG;cAEnD,KAAM,IAAItrE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,IAAC,EAAG,EAAG;gBAE1DwqE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAGnqE,IAAC,EAAEqqE,iBAAiB,CAACI,gBAAiB,CAAC;cAE/F;cAEA,IAAKnyC,MAAM,CAACqT,eAAe,KAAK,IAAI,IAAIrS,QAAQ,CAAC8xC,iBAAiB,KAAKpkE,SAAS,EAAG;gBAElFsyB,QAAQ,CAAC8xC,iBAAiB,GAAGf,iBAAiB,CAACI,gBAAgB,GAAGJ,iBAAiB,CAACl7C,KAAK;cAE1F;YAED,CAAC,MAAM;cAEN,KAAM,IAAInvB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,IAAC,EAAG,EAAG;gBAE1DuqE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAGnqE,IAAE,CAAC;cAEjD;YAED;YAEAyyD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4Y,YAAY,EAAE1oD,MAAO,CAAC;YAExC,KAAM,IAAI3iB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkqE,gBAAgB,CAACiB,YAAY,EAAEnrE,IAAC,EAAG,EAAG;cAE1D6qE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAGnqE,IAAC,EAC7Bm4B,IAAI,GAAG+xC,gBAAgB,CAACiB,YAAY,EACpCjqE,IAAI,EACJu6C,UAAU,EACVtjB,IAAI,GAAGu7B,eAAe,EACpBv7B,IAAI,GAAG+xC,gBAAgB,CAACiB,YAAY,GAAKnrE,IAAC,GAAG0zD,eAAe,EAC9DoX,OACD,CAAC;YAEF;UAED;QAED,CAAC,MAAM,IAAKG,8BAA8B,KAAKjkE,SAAS,EAAG;UAE1D,IAAMjH,OAAK,GAAGkrE,8BAA8B,CAAExmE,IAAI,CAAE;UAEpD,IAAK1E,OAAK,KAAKiH,SAAS,EAAG;YAE1B,QAASjH,OAAK,CAACsE,MAAM;cAEpB,KAAK,CAAC;gBACLouD,EAAE,CAAC8Y,eAAe,CAAErB,gBAAgB,CAACC,QAAQ,EAAEpqE,OAAM,CAAC;gBACtD;cAED,KAAK,CAAC;gBACL0yD,EAAE,CAAC+Y,eAAe,CAAEtB,gBAAgB,CAACC,QAAQ,EAAEpqE,OAAM,CAAC;gBACtD;cAED,KAAK,CAAC;gBACL0yD,EAAE,CAACgZ,eAAe,CAAEvB,gBAAgB,CAACC,QAAQ,EAAEpqE,OAAM,CAAC;gBACtD;cAED;gBACC0yD,EAAE,CAACiZ,eAAe,CAAExB,gBAAgB,CAACC,QAAQ,EAAEpqE,OAAM,CAAC;YAExD;UAED;QAED;MAED;IAED;IAEA4qE,uBAAuB,CAAC,CAAC;EAE1B;EAEA,SAASxgD,OAAOA,CAAA,EAAG;IAElBhmB,KAAK,CAAC,CAAC;IAEP,KAAM,IAAMwnE,UAAU,IAAIzD,aAAa,EAAG;MAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEyD,UAAU,CAAE;MAE9C,KAAM,IAAMC,SAAS,IAAIpC,UAAU,EAAG;QAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEoC,SAAS,CAAE;QAExC,KAAM,IAAMz0B,SAAS,IAAIsyB,QAAQ,EAAG;UAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtyB,SAAS,CAAE,CAAC7e,MAAO,CAAC;UAEvD,OAAOmxC,QAAQ,CAAEtyB,SAAS,CAAE;QAE7B;QAEA,OAAOqyB,UAAU,CAAEoC,SAAS,CAAE;MAE/B;MAEA,OAAO1D,aAAa,CAAEyD,UAAU,CAAE;IAEnC;EAED;EAEA,SAASE,uBAAuBA,CAAEvyC,QAAQ,EAAG;IAE5C,IAAK4uC,aAAa,CAAE5uC,QAAQ,CAAC6Q,EAAE,CAAE,KAAKnjC,SAAS,EAAG;IAElD,IAAMwiE,UAAU,GAAGtB,aAAa,CAAE5uC,QAAQ,CAAC6Q,EAAE,CAAE;IAE/C,KAAM,IAAMyhC,SAAS,IAAIpC,UAAU,EAAG;MAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEoC,SAAS,CAAE;MAExC,KAAM,IAAMz0B,SAAS,IAAIsyB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtyB,SAAS,CAAE,CAAC7e,MAAO,CAAC;QAEvD,OAAOmxC,QAAQ,CAAEtyB,SAAS,CAAE;MAE7B;MAEA,OAAOqyB,UAAU,CAAEoC,SAAS,CAAE;IAE/B;IAEA,OAAO1D,aAAa,CAAE5uC,QAAQ,CAAC6Q,EAAE,CAAE;EAEpC;EAEA,SAAS2hC,sBAAsBA,CAAEtD,OAAO,EAAG;IAE1C,KAAM,IAAMmD,UAAU,IAAIzD,aAAa,EAAG;MAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEyD,UAAU,CAAE;MAE9C,IAAKnC,UAAU,CAAEhB,OAAO,CAACr+B,EAAE,CAAE,KAAKnjC,SAAS,EAAG;MAE9C,IAAMyiE,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAACr+B,EAAE,CAAE;MAEzC,KAAM,IAAMgN,SAAS,IAAIsyB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtyB,SAAS,CAAE,CAAC7e,MAAO,CAAC;QAEvD,OAAOmxC,QAAQ,CAAEtyB,SAAS,CAAE;MAE7B;MAEA,OAAOqyB,UAAU,CAAEhB,OAAO,CAACr+B,EAAE,CAAE;IAEhC;EAED;EAEA,SAAShmC,KAAKA,CAAA,EAAG;IAEhB4nE,iBAAiB,CAAC,CAAC;IACnBzD,WAAW,GAAG,IAAI;IAElB,IAAKD,YAAY,KAAKF,YAAY,EAAG;IAErCE,YAAY,GAAGF,YAAY;IAC3BQ,qBAAqB,CAAEN,YAAY,CAAC/vC,MAAO,CAAC;EAE7C;;EAEA;;EAEA,SAASyzC,iBAAiBA,CAAA,EAAG;IAE5B5D,YAAY,CAAC7uC,QAAQ,GAAG,IAAI;IAC5B6uC,YAAY,CAACK,OAAO,GAAG,IAAI;IAC3BL,YAAY,CAAChxB,SAAS,GAAG,KAAK;EAE/B;EAEA,OAAO;IAENoxB,KAAK,EAAEA,KAAK;IACZpkE,KAAK,EAAEA,KAAK;IACZ4nE,iBAAiB,EAAEA,iBAAiB;IACpC5hD,OAAO,EAAEA,OAAO;IAChB0hD,uBAAuB,EAAEA,uBAAuB;IAChDC,sBAAsB,EAAEA,sBAAsB;IAE9CxB,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA,eAAe;IAChCI,uBAAuB,EAAEA;EAE1B,CAAC;AAEF;AAEA,SAASqB,mBAAmBA,CAAEvZ,EAAE,EAAEtJ,UAAU,EAAE8iB,IAAI,EAAEvZ,YAAY,EAAG;EAElE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIuZ,IAAI;EAER,SAASC,OAAOA,CAAEpsE,KAAK,EAAG;IAEzBmsE,IAAI,GAAGnsE,KAAK;EAEb;EAEA,SAAS+tD,MAAMA,CAAEpO,KAAK,EAAEvwB,KAAK,EAAG;IAE/BsjC,EAAE,CAAC2Z,UAAU,CAAEF,IAAI,EAAExsB,KAAK,EAAEvwB,KAAM,CAAC;IAEnC88C,IAAI,CAAC/7C,MAAM,CAAEf,KAAK,EAAE+8C,IAAI,EAAE,CAAE,CAAC;EAE9B;EAEA,SAASG,eAAeA,CAAE3sB,KAAK,EAAEvwB,KAAK,EAAEm9C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAItE,SAAS,EAAEuE,UAAU;IAEzB,IAAK5Z,QAAQ,EAAG;MAEfqV,SAAS,GAAGvV,EAAE;MACd8Z,UAAU,GAAG,qBAAqB;IAEnC,CAAC,MAAM;MAENvE,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC;MACtDqyD,UAAU,GAAG,0BAA0B;MAEvC,IAAKvE,SAAS,KAAK,IAAI,EAAG;QAEzB9uD,OAAO,CAACywB,KAAK,CAAE,gIAAiI,CAAC;QACjJ;MAED;IAED;IAEAq+B,SAAS,CAAEuE,UAAU,CAAE,CAAEL,IAAI,EAAExsB,KAAK,EAAEvwB,KAAK,EAAEm9C,SAAU,CAAC;IAExDL,IAAI,CAAC/7C,MAAM,CAAEf,KAAK,EAAE+8C,IAAI,EAAEI,SAAU,CAAC;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACre,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACue,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAASG,iBAAiBA,CAAE/Z,EAAE,EAAEtJ,UAAU,EAAE3c,UAAU,EAAG;EAExD,IAAIigC,aAAa;EAEjB,SAASC,gBAAgBA,CAAA,EAAG;IAE3B,IAAKD,aAAa,KAAKzlE,SAAS,EAAG,OAAOylE,aAAa;IAEvD,IAAKtjB,UAAU,CAAC1kC,GAAG,CAAE,gCAAiC,CAAC,KAAK,IAAI,EAAG;MAElE,IAAMujD,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,gCAAiC,CAAC;MAEpEuyD,aAAa,GAAGha,EAAE,CAAC74B,YAAY,CAAEouC,SAAS,CAAC2E,8BAA+B,CAAC;IAE5E,CAAC,MAAM;MAENF,aAAa,GAAG,CAAC;IAElB;IAEA,OAAOA,aAAa;EAErB;EAEA,SAASG,eAAeA,CAAEz6B,SAAS,EAAG;IAErC,IAAKA,SAAS,KAAK,OAAO,EAAG;MAE5B,IAAKsgB,EAAE,CAACoa,wBAAwB,CAAEpa,EAAE,CAACqa,aAAa,EAAEra,EAAE,CAACsa,UAAW,CAAC,CAAC56B,SAAS,GAAG,CAAC,IAChFsgB,EAAE,CAACoa,wBAAwB,CAAEpa,EAAE,CAACua,eAAe,EAAEva,EAAE,CAACsa,UAAW,CAAC,CAAC56B,SAAS,GAAG,CAAC,EAAG;QAEjF,OAAO,OAAO;MAEf;MAEAA,SAAS,GAAG,SAAS;IAEtB;IAEA,IAAKA,SAAS,KAAK,SAAS,EAAG;MAE9B,IAAKsgB,EAAE,CAACoa,wBAAwB,CAAEpa,EAAE,CAACqa,aAAa,EAAEra,EAAE,CAACwa,YAAa,CAAC,CAAC96B,SAAS,GAAG,CAAC,IAClFsgB,EAAE,CAACoa,wBAAwB,CAAEpa,EAAE,CAACua,eAAe,EAAEva,EAAE,CAACwa,YAAa,CAAC,CAAC96B,SAAS,GAAG,CAAC,EAAG;QAEnF,OAAO,SAAS;MAEjB;IAED;IAEA,OAAO,MAAM;EAEd;EAEA,IAAMwgB,QAAQ,GAAG,OAAOua,sBAAsB,KAAK,WAAW,IAAIza,EAAE,CAACjuD,WAAW,CAACC,IAAI,KAAK,wBAAwB;EAElH,IAAI0tC,SAAS,GAAG3F,UAAU,CAAC2F,SAAS,KAAKnrC,SAAS,GAAGwlC,UAAU,CAAC2F,SAAS,GAAG,OAAO;EACnF,IAAMg7B,YAAY,GAAGP,eAAe,CAAEz6B,SAAU,CAAC;EAEjD,IAAKg7B,YAAY,KAAKh7B,SAAS,EAAG;IAEjCj5B,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAEg5B,SAAS,EAAE,sBAAsB,EAAEg7B,YAAY,EAAE,UAAW,CAAC;IACnGh7B,SAAS,GAAGg7B,YAAY;EAEzB;EAEA,IAAM7jB,WAAW,GAAGqJ,QAAQ,IAAIxJ,UAAU,CAAC1kC,GAAG,CAAE,oBAAqB,CAAC;EAEtE,IAAM2oD,sBAAsB,GAAG5gC,UAAU,CAAC4gC,sBAAsB,KAAK,IAAI;EAEzE,IAAMC,WAAW,GAAG5a,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC6a,uBAAwB,CAAC;EACjE,IAAMC,iBAAiB,GAAG9a,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC+a,8BAA+B,CAAC;EAC9E,IAAMC,cAAc,GAAGhb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACib,gBAAiB,CAAC;EAC7D,IAAMC,cAAc,GAAGlb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACmb,yBAA0B,CAAC;EAEtE,IAAMC,aAAa,GAAGpb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACsV,kBAAmB,CAAC;EAC9D,IAAM+F,iBAAiB,GAAGrb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACsb,0BAA2B,CAAC;EAC1E,IAAMC,WAAW,GAAGvb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACwb,mBAAoB,CAAC;EAC7D,IAAMC,mBAAmB,GAAGzb,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC0b,4BAA6B,CAAC;EAE9E,IAAMC,cAAc,GAAGb,iBAAiB,GAAG,CAAC;EAC5C,IAAMc,qBAAqB,GAAG1b,QAAQ,IAAIxJ,UAAU,CAAC1kC,GAAG,CAAE,mBAAoB,CAAC;EAC/E,IAAM6pD,mBAAmB,GAAGF,cAAc,IAAIC,qBAAqB;EAEnE,IAAME,UAAU,GAAG5b,QAAQ,GAAGF,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC+b,WAAY,CAAC,GAAG,CAAC;EAEnE,OAAO;IAEN7b,QAAQ,EAAEA,QAAQ;IAElBrJ,WAAW,EAAEA,WAAW;IAExBojB,gBAAgB,EAAEA,gBAAgB;IAClCE,eAAe,EAAEA,eAAe;IAEhCz6B,SAAS,EAAEA,SAAS;IACpBi7B,sBAAsB,EAAEA,sBAAsB;IAE9CC,WAAW,EAAEA,WAAW;IACxBE,iBAAiB,EAAEA,iBAAiB;IACpCE,cAAc,EAAEA,cAAc;IAC9BE,cAAc,EAAEA,cAAc;IAE9BE,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA,iBAAiB;IACpCE,WAAW,EAAEA,WAAW;IACxBE,mBAAmB,EAAEA,mBAAmB;IAExCE,cAAc,EAAEA,cAAc;IAC9BC,qBAAqB,EAAEA,qBAAqB;IAC5CC,mBAAmB,EAAEA,mBAAmB;IAExCC,UAAU,EAAEA;EAEb,CAAC;AAEF;AAEA,SAASE,aAAaA,CAAE/M,UAAU,EAAG;EAEpC,IAAMnb,KAAK,GAAG,IAAI;EAElB,IAAImoB,WAAW,GAAG,IAAI;IACrBC,eAAe,GAAG,CAAC;IACnBC,oBAAoB,GAAG,KAAK;IAC5BC,gBAAgB,GAAG,KAAK;EAEzB,IAAM30C,KAAK,GAAG,IAAIg1B,KAAK,CAAC,CAAC;IACxB4f,gBAAgB,GAAG,IAAI9wD,OAAO,CAAC,CAAC;IAEhC4rC,OAAO,GAAG;MAAE7pD,KAAK,EAAE,IAAI;MAAEgqB,WAAW,EAAE;IAAM,CAAC;EAE9C,IAAI,CAAC6/B,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACmlB,SAAS,GAAG,CAAC;EAClB,IAAI,CAACC,eAAe,GAAG,CAAC;EAExB,IAAI,CAACC,IAAI,GAAG,UAAW3e,MAAM,EAAE4e,mBAAmB,EAAG;IAEpD,IAAM9qD,OAAO,GACZksC,MAAM,CAACjsD,MAAM,KAAK,CAAC,IACnB6qE,mBAAmB;IACnB;IACA;IACAP,eAAe,KAAK,CAAC,IACrBC,oBAAoB;IAErBA,oBAAoB,GAAGM,mBAAmB;IAE1CP,eAAe,GAAGre,MAAM,CAACjsD,MAAM;IAE/B,OAAO+f,OAAO;EAEf,CAAC;EAED,IAAI,CAAC+qD,YAAY,GAAG,YAAY;IAE/BN,gBAAgB,GAAG,IAAI;IACvBO,aAAa,CAAE,IAAK,CAAC;EAEtB,CAAC;EAED,IAAI,CAACC,UAAU,GAAG,YAAY;IAE7BR,gBAAgB,GAAG,KAAK;EAEzB,CAAC;EAED,IAAI,CAACS,cAAc,GAAG,UAAWhf,MAAM,EAAEj7B,MAAM,EAAG;IAEjDq5C,WAAW,GAAGU,aAAa,CAAE9e,MAAM,EAAEj7B,MAAM,EAAE,CAAE,CAAC;EAEjD,CAAC;EAED,IAAI,CAACk6C,QAAQ,GAAG,UAAWziC,QAAQ,EAAEzX,MAAM,EAAEm6C,QAAQ,EAAG;IAEvD,IAAMlf,MAAM,GAAGxjB,QAAQ,CAACgF,cAAc;MACrCC,gBAAgB,GAAGjF,QAAQ,CAACiF,gBAAgB;MAC5CC,WAAW,GAAGlF,QAAQ,CAACkF,WAAW;IAEnC,IAAMy9B,kBAAkB,GAAG/N,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC;IAErD,IAAK,CAAE8hC,oBAAoB,IAAIte,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACjsD,MAAM,KAAK,CAAC,IAAIwqE,gBAAgB,IAAI,CAAE78B,WAAW,EAAG;MAE5G;;MAEA,IAAK68B,gBAAgB,EAAG;QAEvB;;QAEAO,aAAa,CAAE,IAAK,CAAC;MAEtB,CAAC,MAAM;QAENM,gBAAgB,CAAC,CAAC;MAEnB;IAED,CAAC,MAAM;MAEN,IAAMC,OAAO,GAAGd,gBAAgB,GAAG,CAAC,GAAGF,eAAe;QACrDiB,OAAO,GAAGD,OAAO,GAAG,CAAC;MAEtB,IAAIE,QAAQ,GAAGJ,kBAAkB,CAACK,aAAa,IAAI,IAAI;MAEvDlmB,OAAO,CAAC7pD,KAAK,GAAG8vE,QAAQ,CAAC,CAAC;;MAE1BA,QAAQ,GAAGT,aAAa,CAAE9e,MAAM,EAAEj7B,MAAM,EAAEu6C,OAAO,EAAEJ,QAAS,CAAC;MAE7D,KAAM,IAAIxvE,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK4vE,OAAO,EAAE,EAAG5vE,CAAC,EAAG;QAEtC6vE,QAAQ,CAAE7vE,CAAC,CAAE,GAAG0uE,WAAW,CAAE1uE,CAAC,CAAE;MAEjC;MAEAyvE,kBAAkB,CAACK,aAAa,GAAGD,QAAQ;MAC3C,IAAI,CAACb,eAAe,GAAGj9B,gBAAgB,GAAG,IAAI,CAACg9B,SAAS,GAAG,CAAC;MAC5D,IAAI,CAACA,SAAS,IAAIY,OAAO;IAE1B;EAGD,CAAC;EAED,SAASD,gBAAgBA,CAAA,EAAG;IAE3B,IAAK9lB,OAAO,CAAC7pD,KAAK,KAAK2uE,WAAW,EAAG;MAEpC9kB,OAAO,CAAC7pD,KAAK,GAAG2uE,WAAW;MAC3B9kB,OAAO,CAAC7/B,WAAW,GAAG4kD,eAAe,GAAG,CAAC;IAE1C;IAEApoB,KAAK,CAACwoB,SAAS,GAAGJ,eAAe;IACjCpoB,KAAK,CAACyoB,eAAe,GAAG,CAAC;EAE1B;EAEA,SAASI,aAAaA,CAAE9e,MAAM,EAAEj7B,MAAM,EAAEpC,SAAS,EAAE88C,aAAa,EAAG;IAElE,IAAMC,OAAO,GAAG1f,MAAM,KAAK,IAAI,GAAGA,MAAM,CAACjsD,MAAM,GAAG,CAAC;IACnD,IAAIwrE,QAAQ,GAAG,IAAI;IAEnB,IAAKG,OAAO,KAAK,CAAC,EAAG;MAEpBH,QAAQ,GAAGjmB,OAAO,CAAC7pD,KAAK;MAExB,IAAKgwE,aAAa,KAAK,IAAI,IAAIF,QAAQ,KAAK,IAAI,EAAG;QAElD,IAAMI,QAAQ,GAAGh9C,SAAS,GAAG+8C,OAAO,GAAG,CAAC;UACvCE,UAAU,GAAG76C,MAAM,CAACC,kBAAkB;QAEvCw5C,gBAAgB,CAAC3tD,eAAe,CAAE+uD,UAAW,CAAC;QAE9C,IAAKL,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACxrE,MAAM,GAAG4rE,QAAQ,EAAG;UAEtDJ,QAAQ,GAAG,IAAIx2D,YAAY,CAAE42D,QAAS,CAAC;QAExC;QAEA,KAAM,IAAIjwE,CAAC,GAAG,CAAC,EAAEmwE,EAAE,GAAGl9C,SAAS,EAAEjzB,CAAC,KAAKgwE,OAAO,EAAE,EAAGhwE,CAAC,EAAEmwE,EAAE,IAAI,CAAC,EAAG;UAE/Dj2C,KAAK,CAACxf,IAAI,CAAE41C,MAAM,CAAEtwD,CAAC,CAAG,CAAC,CAAC8qB,YAAY,CAAEolD,UAAU,EAAEpB,gBAAiB,CAAC;UAEtE50C,KAAK,CAAC1D,MAAM,CAACjZ,OAAO,CAAEsyD,QAAQ,EAAEM,EAAG,CAAC;UACpCN,QAAQ,CAAEM,EAAE,GAAG,CAAC,CAAE,GAAGj2C,KAAK,CAACC,QAAQ;QAEpC;MAED;MAEAyvB,OAAO,CAAC7pD,KAAK,GAAG8vE,QAAQ;MACxBjmB,OAAO,CAAC7/B,WAAW,GAAG,IAAI;IAE3B;IAEAw8B,KAAK,CAACwoB,SAAS,GAAGiB,OAAO;IACzBzpB,KAAK,CAACyoB,eAAe,GAAG,CAAC;IAEzB,OAAOa,QAAQ;EAEhB;AAED;AAEA,SAASO,aAAaA,CAAEnoB,QAAQ,EAAG;EAElC,IAAIie,QAAQ,GAAG,IAAIrT,OAAO,CAAC,CAAC;EAE5B,SAASwd,iBAAiBA,CAAEjjD,OAAO,EAAEnF,OAAO,EAAG;IAE9C,IAAKA,OAAO,KAAK5c,gCAAgC,EAAG;MAEnD+hB,OAAO,CAACnF,OAAO,GAAG9c,qBAAqB;IAExC,CAAC,MAAM,IAAK8c,OAAO,KAAK3c,gCAAgC,EAAG;MAE1D8hB,OAAO,CAACnF,OAAO,GAAG7c,qBAAqB;IAExC;IAEA,OAAOgiB,OAAO;EAEf;EAEA,SAASlT,GAAGA,CAAEkT,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAACzE,SAAS,IAAIyE,OAAO,CAAC3D,qBAAqB,KAAK,KAAK,EAAG;MAE9E,IAAMxB,OAAO,GAAGmF,OAAO,CAACnF,OAAO;MAE/B,IAAKA,OAAO,KAAK5c,gCAAgC,IAAI4c,OAAO,KAAK3c,gCAAgC,EAAG;QAEnG,IAAK46D,QAAQ,CAACzhD,GAAG,CAAE2I,OAAQ,CAAC,EAAG;UAE9B,IAAMkjD,OAAO,GAAGpK,QAAQ,CAAChsD,GAAG,CAAEkT,OAAQ,CAAC,CAACA,OAAO;UAC/C,OAAOijD,iBAAiB,CAAEC,OAAO,EAAEljD,OAAO,CAACnF,OAAQ,CAAC;QAErD,CAAC,MAAM;UAEN,IAAMxC,KAAK,GAAG2H,OAAO,CAAC3H,KAAK;UAE3B,IAAKA,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,EAAG;YAEhC,IAAMmmC,YAAY,GAAG,IAAImC,qBAAqB,CAAE3oC,KAAK,CAACK,MAAM,GAAG,CAAE,CAAC;YAClEmmC,YAAY,CAACwC,0BAA0B,CAAExG,QAAQ,EAAE76B,OAAQ,CAAC;YAC5D84C,QAAQ,CAACjtD,GAAG,CAAEmU,OAAO,EAAE6+B,YAAa,CAAC;YAErC7+B,OAAO,CAACrZ,gBAAgB,CAAE,SAAS,EAAEw8D,gBAAiB,CAAC;YAEvD,OAAOF,iBAAiB,CAAEpkB,YAAY,CAAC7+B,OAAO,EAAEA,OAAO,CAACnF,OAAQ,CAAC;UAElE,CAAC,MAAM;YAEN;;YAEA,OAAO,IAAI;UAEZ;QAED;MAED;IAED;IAEA,OAAOmF,OAAO;EAEf;EAEA,SAASmjD,gBAAgBA,CAAE77D,KAAK,EAAG;IAElC,IAAM0Y,OAAO,GAAG1Y,KAAK,CAACxO,MAAM;IAE5BknB,OAAO,CAAC/Y,mBAAmB,CAAE,SAAS,EAAEk8D,gBAAiB,CAAC;IAE1D,IAAMD,OAAO,GAAGpK,QAAQ,CAAChsD,GAAG,CAAEkT,OAAQ,CAAC;IAEvC,IAAKkjD,OAAO,KAAKtpE,SAAS,EAAG;MAE5Bk/D,QAAQ,CAAClS,MAAM,CAAE5mC,OAAQ,CAAC;MAC1BkjD,OAAO,CAACnmD,OAAO,CAAC,CAAC;IAElB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElB+7C,QAAQ,GAAG,IAAIrT,OAAO,CAAC,CAAC;EAEzB;EAEA,OAAO;IACN34C,GAAG,EAAEA,GAAG;IACRiQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEKqmD,kBAAkB,GAAAppE,OAAA,CAAAopE,kBAAA,0BAAAC,QAAA;EAAA5oD,SAAA,CAAA2oD,kBAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAA3oD,YAAA,CAAAyoD,kBAAA;EAEvB,SAAAA,mBAAansC,IAAI,GAAG,CAAE,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAE,CAAC,EAAEC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAAisC,OAAA;IAAA7qE,eAAA,OAAA0qE,kBAAA;IAEnFG,OAAA,GAAAD,QAAA,CAAAtvE,IAAA;IAEAuvE,OAAA,CAAKC,oBAAoB,GAAG,IAAI;IAEhCD,OAAA,CAAKzvE,IAAI,GAAG,oBAAoB;IAEhCyvE,OAAA,CAAKnmB,IAAI,GAAG,CAAC;IACbmmB,OAAA,CAAKjmB,IAAI,GAAG,IAAI;IAEhBimB,OAAA,CAAKtsC,IAAI,GAAGA,IAAI;IAChBssC,OAAA,CAAKrsC,KAAK,GAAGA,KAAK;IAClBqsC,OAAA,CAAKpsC,GAAG,GAAGA,GAAG;IACdosC,OAAA,CAAKnsC,MAAM,GAAGA,MAAM;IAEpBmsC,OAAA,CAAKlsC,IAAI,GAAGA,IAAI;IAChBksC,OAAA,CAAKjsC,GAAG,GAAGA,GAAG;IAEdisC,OAAA,CAAK9lB,sBAAsB,CAAC,CAAC;IAAC,OAAA8lB,OAAA;EAE/B;EAACpqE,YAAA,CAAAiqE,kBAAA;IAAAlqE,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAk2B,kBAAA,CAAA9wE,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAAC9I,IAAI,GAAGxb,MAAM,CAACwb,IAAI;MACvB,IAAI,CAACC,KAAK,GAAGzb,MAAM,CAACyb,KAAK;MACzB,IAAI,CAACC,GAAG,GAAG1b,MAAM,CAAC0b,GAAG;MACrB,IAAI,CAACC,MAAM,GAAG3b,MAAM,CAAC2b,MAAM;MAC3B,IAAI,CAACC,IAAI,GAAG5b,MAAM,CAAC4b,IAAI;MACvB,IAAI,CAACC,GAAG,GAAG7b,MAAM,CAAC6b,GAAG;MAErB,IAAI,CAAC8lB,IAAI,GAAG3hC,MAAM,CAAC2hC,IAAI;MACvB,IAAI,CAACE,IAAI,GAAG7hC,MAAM,CAAC6hC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC6hC,IAAK,CAAC;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAApkD,GAAA;IAAAvG,KAAA,EAED,SAAAwrD,cAAeC,SAAS,EAAEC,UAAU,EAAEz1C,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAK,IAAI,CAAC4kC,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACXtmC,OAAO,EAAE,IAAI;UACbonC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV9lC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAAC4kC,IAAI,CAACtmC,OAAO,GAAG,IAAI;MACxB,IAAI,CAACsmC,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAG11C,CAAC;MACrB,IAAI,CAAC00C,IAAI,CAACiB,OAAO,GAAGlqD,CAAC;MACrB,IAAI,CAACipD,IAAI,CAAC7kC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAAC6kC,IAAI,CAAC5kC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC+kC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAvkD,GAAA;IAAAvG,KAAA,EAED,SAAA6rD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAACtmC,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAACymC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAvkD,GAAA;IAAAvG,KAAA,EAED,SAAA8qD,uBAAA,EAAyB;MAExB,IAAMjuC,EAAE,GAAG,CAAE,IAAI,CAAC0nB,KAAK,GAAG,IAAI,CAACD,IAAI,KAAO,CAAC,GAAG,IAAI,CAACmmB,IAAI,CAAE;MACzD,IAAM3tC,EAAE,GAAG,CAAE,IAAI,CAAC0nB,GAAG,GAAG,IAAI,CAACC,MAAM,KAAO,CAAC,GAAG,IAAI,CAACgmB,IAAI,CAAE;MACzD,IAAM5oC,EAAE,GAAG,CAAE,IAAI,CAAC0iB,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,CAAC;MACzC,IAAMxiB,EAAE,GAAG,CAAE,IAAI,CAAC0iB,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,CAAC;MAEzC,IAAIH,IAAI,GAAGziB,EAAE,GAAGhF,EAAE;MAClB,IAAI0nB,KAAK,GAAG1iB,EAAE,GAAGhF,EAAE;MACnB,IAAI2nB,GAAG,GAAG1iB,EAAE,GAAGhF,EAAE;MACjB,IAAI2nB,MAAM,GAAG3iB,EAAE,GAAGhF,EAAE;MAEpB,IAAK,IAAI,CAAC6tC,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACtmC,OAAO,EAAG;QAE9C,IAAMysD,MAAM,GAAG,CAAE,IAAI,CAACvsC,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,IAAI,CAACqmB,IAAI,CAACc,SAAS,GAAG,IAAI,CAAChB,IAAI;QAC3E,IAAMsmB,MAAM,GAAG,CAAE,IAAI,CAACvsC,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,IAAI,CAACkmB,IAAI,CAACe,UAAU,GAAG,IAAI,CAACjB,IAAI;QAE5EnmB,IAAI,IAAIwsC,MAAM,GAAG,IAAI,CAACnmB,IAAI,CAACgB,OAAO;QAClCpnB,KAAK,GAAGD,IAAI,GAAGwsC,MAAM,GAAG,IAAI,CAACnmB,IAAI,CAAC7kC,KAAK;QACvC0e,GAAG,IAAIusC,MAAM,GAAG,IAAI,CAACpmB,IAAI,CAACiB,OAAO;QACjCnnB,MAAM,GAAGD,GAAG,GAAGusC,MAAM,GAAG,IAAI,CAACpmB,IAAI,CAAC5kC,MAAM;MAEzC;MAEA,IAAI,CAACyP,gBAAgB,CAACqP,gBAAgB,CAAEP,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,gBAAiB,CAAC;MAE9G,IAAI,CAAClP,uBAAuB,CAAC/a,IAAI,CAAE,IAAI,CAAC6a,gBAAiB,CAAC,CAAC5U,MAAM,CAAC,CAAC;IAEpE;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAk2B,kBAAA,CAAA9wE,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAAC4R,MAAM,CAACkyB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B9jC,IAAI,CAAC4R,MAAM,CAAC+L,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B3d,IAAI,CAAC4R,MAAM,CAACgM,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9B5d,IAAI,CAAC4R,MAAM,CAACiM,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1B7d,IAAI,CAAC4R,MAAM,CAACkM,MAAM,GAAG,IAAI,CAACA,MAAM;MAChC9d,IAAI,CAAC4R,MAAM,CAACmM,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B/d,IAAI,CAAC4R,MAAM,CAACoM,GAAG,GAAG,IAAI,CAACA,GAAG;MAE1B,IAAK,IAAI,CAACgmB,IAAI,KAAK,IAAI,EAAGhkC,IAAI,CAAC4R,MAAM,CAACoyB,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAAC29B,IAAK,CAAC;MAE3E,OAAOhkC,IAAI;IAEZ;EAAC;EAAA,OAAA8pD,kBAAA;AAAA,EAjI+B3mB,MAAM;AAqIvC,IAAMknB,OAAO,GAAG,CAAC;;AAEjB;AACA;AACA;AACA;AACA,IAAMC,eAAe,GAAG,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;;AAEnE;AACA;AACA,IAAMxC,WAAW,GAAG,EAAE;AAEtB,IAAMyC,WAAW,GAAG,aAAc,IAAIT,kBAAkB,CAAC,CAAC;AAC1D,IAAMU,WAAW,GAAG,aAAc,IAAIn5B,KAAK,CAAC,CAAC;AAC7C,IAAIo5B,UAAU,GAAG,IAAI;;AAErB;AACA,IAAMC,GAAG,GAAG,CAAE,CAAC,GAAGr8D,IAAI,CAACmH,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;AACtC,IAAMm1D,OAAO,GAAG,CAAC,GAAGD,GAAG;;AAEvB;AACA;AACA,IAAME,eAAe,GAAG,CACvB,aAAc,IAAIn9C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACpC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACxC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAEi9C,GAAG,EAAEC,OAAQ,CAAC,EAC5C,aAAc,IAAIl9C,OAAO,CAAE,CAAC,EAAEi9C,GAAG,EAAE,CAAEC,OAAQ,CAAC,EAC9C,aAAc,IAAIl9C,OAAO,CAAEk9C,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC5C,aAAc,IAAIj9C,OAAO,CAAE,CAAEk9C,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC9C,aAAc,IAAIj9C,OAAO,CAAEi9C,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,EAC5C,aAAc,IAAIl9C,OAAO,CAAE,CAAEi9C,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,CAAE;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,IAeME,cAAc,GAAAnqE,OAAA,CAAAmqE,cAAA;EAEnB,SAAAA,eAAatpB,QAAQ,EAAG;IAAAniD,eAAA,OAAAyrE,cAAA;IAEvB,IAAI,CAACC,SAAS,GAAGvpB,QAAQ;IACzB,IAAI,CAACwpB,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACC,gBAAgB,CAAE,IAAI,CAACH,aAAc,CAAC;EAE5C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANCxrE,YAAA,CAAAgrE,cAAA;IAAAjrE,GAAA;IAAAvG,KAAA,EAOA,SAAAoyE,UAAW/kB,KAAK,EAAEglB,KAAK,GAAG,CAAC,EAAE3tC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,GAAG,EAAG;MAEpDysC,UAAU,GAAG,IAAI,CAACK,SAAS,CAACtpB,eAAe,CAAC,CAAC;MAE7C,IAAI,CAACmqB,QAAQ,CAAE,GAAI,CAAC;MAEpB,IAAMC,kBAAkB,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAClDD,kBAAkB,CAACtlD,WAAW,GAAG,IAAI;MAErC,IAAI,CAACwlD,cAAc,CAAEplB,KAAK,EAAE3oB,IAAI,EAAEC,GAAG,EAAE4tC,kBAAmB,CAAC;MAE3D,IAAKF,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAI,CAACK,KAAK,CAAEH,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAEF,KAAM,CAAC;MAE9C;MAEA,IAAI,CAACM,WAAW,CAAEJ,kBAAmB,CAAC;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAmB,CAAC;MAEnC,OAAOA,kBAAkB;IAE1B;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAhsE,GAAA;IAAAvG,KAAA,EAKA,SAAA6yE,oBAAqBC,eAAe,EAAE5mB,YAAY,GAAG,IAAI,EAAG;MAE3D,OAAO,IAAI,CAAC6mB,YAAY,CAAED,eAAe,EAAE5mB,YAAa,CAAC;IAE1D;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA3lD,GAAA;IAAAvG,KAAA,EAKA,SAAAgzE,YAAazC,OAAO,EAAErkB,YAAY,GAAG,IAAI,EAAG;MAE3C,OAAO,IAAI,CAAC6mB,YAAY,CAAExC,OAAO,EAAErkB,YAAa,CAAC;IAElD;;IAEA;AACD;AACA;AACA;EAHC;IAAA3lD,GAAA;IAAAvG,KAAA,EAIA,SAAAizE,qBAAA,EAAuB;MAEtB,IAAK,IAAI,CAAChB,gBAAgB,KAAK,IAAI,EAAG;QAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,CAAC,CAAC;QAC7C,IAAI,CAACf,gBAAgB,CAAE,IAAI,CAACF,gBAAiB,CAAC;MAE/C;IAED;;IAEA;AACD;AACA;AACA;EAHC;IAAA1rE,GAAA;IAAAvG,KAAA,EAIA,SAAAmzE,6BAAA,EAA+B;MAE9B,IAAK,IAAI,CAACjB,iBAAiB,KAAK,IAAI,EAAG;QAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,CAAC,CAAC;QAC/C,IAAI,CAACjB,gBAAgB,CAAE,IAAI,CAACD,iBAAkB,CAAC;MAEhD;IAED;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA3rE,GAAA;IAAAvG,KAAA,EAKA,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACipD,QAAQ,CAAC,CAAC;MAEf,IAAK,IAAI,CAACpB,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,CAAC7nD,OAAO,CAAC,CAAC;MACrE,IAAK,IAAI,CAAC8nD,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAACA,iBAAiB,CAAC9nD,OAAO,CAAC,CAAC;IAExE;;IAEA;EAAA;IAAA7jB,GAAA;IAAAvG,KAAA,EAEA,SAAAsyE,SAAUgB,QAAQ,EAAG;MAEpB,IAAI,CAAC3B,OAAO,GAAG38D,IAAI,CAACmC,KAAK,CAAEnC,IAAI,CAACu+D,IAAI,CAAED,QAAS,CAAE,CAAC;MAClD,IAAI,CAAC1B,SAAS,GAAG58D,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC45D,OAAQ,CAAC;IAE7C;EAAC;IAAAprE,GAAA;IAAAvG,KAAA,EAED,SAAAqzE,SAAA,EAAW;MAEV,IAAK,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,CAAC5nD,OAAO,CAAC,CAAC;MAE/D,IAAK,IAAI,CAACsnD,qBAAqB,KAAK,IAAI,EAAG,IAAI,CAACA,qBAAqB,CAACtnD,OAAO,CAAC,CAAC;MAE/E,KAAM,IAAInqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4xE,UAAU,CAACvtE,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEnD,IAAI,CAAC4xE,UAAU,CAAE5xE,CAAC,CAAE,CAACmqB,OAAO,CAAC,CAAC;MAE/B;IAED;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA4yE,SAAUY,YAAY,EAAG;MAExB,IAAI,CAAC/B,SAAS,CAAC3jB,eAAe,CAAEsjB,UAAW,CAAC;MAC5CoC,YAAY,CAAC1mD,WAAW,GAAG,KAAK;MAChC2mD,YAAY,CAAED,YAAY,EAAE,CAAC,EAAE,CAAC,EAAEA,YAAY,CAAC1tD,KAAK,EAAE0tD,YAAY,CAACztD,MAAO,CAAC;IAE5E;EAAC;IAAAxf,GAAA;IAAAvG,KAAA,EAED,SAAA+yE,aAAc1lD,OAAO,EAAE6+B,YAAY,EAAG;MAErC,IAAK7+B,OAAO,CAACnF,OAAO,KAAK9c,qBAAqB,IAAIiiB,OAAO,CAACnF,OAAO,KAAK7c,qBAAqB,EAAG;QAE7F,IAAI,CAACinE,QAAQ,CAAEjlD,OAAO,CAAC3H,KAAK,CAACphB,MAAM,KAAK,CAAC,GAAG,EAAE,GAAK+oB,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAACI,KAAK,IAAIuH,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAACA,KAAK,CAACI,KAAQ,CAAC;MAElH,CAAC,MAAM;QAAE;;QAER,IAAI,CAACwsD,QAAQ,CAAEjlD,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAG,CAAE,CAAC;MAEzC;MAEAsrD,UAAU,GAAG,IAAI,CAACK,SAAS,CAACtpB,eAAe,CAAC,CAAC;MAE7C,IAAMoqB,kBAAkB,GAAGrmB,YAAY,IAAI,IAAI,CAACsmB,gBAAgB,CAAC,CAAC;MAClE,IAAI,CAACkB,gBAAgB,CAAErmD,OAAO,EAAEklD,kBAAmB,CAAC;MACpD,IAAI,CAACI,WAAW,CAAEJ,kBAAmB,CAAC;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAmB,CAAC;MAEnC,OAAOA,kBAAkB;IAE1B;EAAC;IAAAhsE,GAAA;IAAAvG,KAAA,EAED,SAAAwyE,iBAAA,EAAmB;MAElB,IAAM1sD,KAAK,GAAG,CAAC,GAAG9Q,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC+7D,SAAS,EAAE,EAAE,GAAG,CAAE,CAAC;MACpD,IAAM7rD,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC6rD,SAAS;MAEjC,IAAM+B,MAAM,GAAG;QACdrrD,SAAS,EAAErc,YAAY;QACvBsc,SAAS,EAAEtc,YAAY;QACvBmd,eAAe,EAAE,KAAK;QACtBjoB,IAAI,EAAE0L,aAAa;QACnB2b,MAAM,EAAEtb,UAAU;QAClBuX,UAAU,EAAEvT,oBAAoB;QAChC+b,WAAW,EAAE;MACd,CAAC;MAED,IAAMslD,kBAAkB,GAAGqB,mBAAmB,CAAE9tD,KAAK,EAAEC,MAAM,EAAE4tD,MAAO,CAAC;MAEvE,IAAK,IAAI,CAACjC,qBAAqB,KAAK,IAAI,IAAI,IAAI,CAACA,qBAAqB,CAAC5rD,KAAK,KAAKA,KAAK,IAAI,IAAI,CAAC4rD,qBAAqB,CAAC3rD,MAAM,KAAKA,MAAM,EAAG;QAExI,IAAK,IAAI,CAAC2rD,qBAAqB,KAAK,IAAI,EAAG;UAE1C,IAAI,CAAC2B,QAAQ,CAAC,CAAC;QAEhB;QAEA,IAAI,CAAC3B,qBAAqB,GAAGkC,mBAAmB,CAAE9tD,KAAK,EAAEC,MAAM,EAAE4tD,MAAO,CAAC;QAEzE,IAAQhC,OAAO,GAAK,IAAI,CAAhBA,OAAO;QAAU,IAAAkC,cAAA,GAC0DC,aAAa,CAAEnC,OAAQ,CAAC;QAA7F,IAAI,CAACG,SAAS,GAAA+B,cAAA,CAAxBE,QAAQ;QAA6B,IAAI,CAAClC,UAAU,GAAAgC,cAAA,CAA1BG,SAAS;QAA2B,IAAI,CAACjC,OAAO,GAAA8B,cAAA,CAApBI,MAAM;QAEhE,IAAI,CAACjC,aAAa,GAAGkC,cAAc,CAAEvC,OAAO,EAAE7rD,KAAK,EAAEC,MAAO,CAAC;MAE9D;MAEA,OAAOwsD,kBAAkB;IAE1B;EAAC;IAAAhsE,GAAA;IAAAvG,KAAA,EAED,SAAAmyE,iBAAkBplC,QAAQ,EAAG;MAE5B,IAAMonC,OAAO,GAAG,IAAIzvB,IAAI,CAAE,IAAI,CAACmtB,UAAU,CAAE,CAAC,CAAE,EAAE9kC,QAAS,CAAC;MAC1D,IAAI,CAAC0kC,SAAS,CAAC2C,OAAO,CAAED,OAAO,EAAEjD,WAAY,CAAC;IAE/C;EAAC;IAAA3qE,GAAA;IAAAvG,KAAA,EAED,SAAAyyE,eAAgBplB,KAAK,EAAE3oB,IAAI,EAAEC,GAAG,EAAE4tC,kBAAkB,EAAG;MAEtD,IAAMloB,GAAG,GAAG,EAAE;MACd,IAAMC,MAAM,GAAG,CAAC;MAChB,IAAM+pB,UAAU,GAAG,IAAInqB,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE5lB,IAAI,EAAEC,GAAI,CAAC;MAClE,IAAM2vC,MAAM,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACrC,IAAMC,WAAW,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC9C,IAAMrsB,QAAQ,GAAG,IAAI,CAACupB,SAAS;MAE/B,IAAM+C,iBAAiB,GAAGtsB,QAAQ,CAACkf,SAAS;MAC5C,IAAMI,WAAW,GAAGtf,QAAQ,CAACsf,WAAW;MACxCtf,QAAQ,CAACwf,aAAa,CAAEyJ,WAAY,CAAC;MAErCjpB,QAAQ,CAACsf,WAAW,GAAG38D,aAAa;MACpCq9C,QAAQ,CAACkf,SAAS,GAAG,KAAK;MAE1B,IAAMqN,kBAAkB,GAAG,IAAIx6B,iBAAiB,CAAE;QACjDv1C,IAAI,EAAE,kBAAkB;QACxB+rC,IAAI,EAAEhoC,QAAQ;QACd6oC,UAAU,EAAE,KAAK;QACjBD,SAAS,EAAE;MACZ,CAAE,CAAC;MAEH,IAAMqjC,aAAa,GAAG,IAAIhwB,IAAI,CAAE,IAAIuB,WAAW,CAAC,CAAC,EAAEwuB,kBAAmB,CAAC;MAEvE,IAAIE,aAAa,GAAG,KAAK;MACzB,IAAMxoC,UAAU,GAAGkhB,KAAK,CAAClhB,UAAU;MAEnC,IAAKA,UAAU,EAAG;QAEjB,IAAKA,UAAU,CAACC,OAAO,EAAG;UAEzBqoC,kBAAkB,CAAC3wD,KAAK,CAACnJ,IAAI,CAAEwxB,UAAW,CAAC;UAC3CkhB,KAAK,CAAClhB,UAAU,GAAG,IAAI;UACvBwoC,aAAa,GAAG,IAAI;QAErB;MAED,CAAC,MAAM;QAENF,kBAAkB,CAAC3wD,KAAK,CAACnJ,IAAI,CAAEw2D,WAAY,CAAC;QAC5CwD,aAAa,GAAG,IAAI;MAErB;MAEA,KAAM,IAAI10E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM20E,GAAG,GAAG30E,CAAC,GAAG,CAAC;QAEjB,IAAK20E,GAAG,KAAK,CAAC,EAAG;UAEhBP,UAAU,CAACvyC,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAEo7D,MAAM,CAAEr0E,CAAC,CAAE,EAAE,CAAE,CAAC;UACtCo0E,UAAU,CAACj3C,MAAM,CAAEm3C,WAAW,CAAEt0E,CAAC,CAAE,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5C,CAAC,MAAM,IAAK20E,GAAG,KAAK,CAAC,EAAG;UAEvBP,UAAU,CAACvyC,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEo7D,MAAM,CAAEr0E,CAAC,CAAG,CAAC;UACtCo0E,UAAU,CAACj3C,MAAM,CAAE,CAAC,EAAEm3C,WAAW,CAAEt0E,CAAC,CAAE,EAAE,CAAE,CAAC;QAE5C,CAAC,MAAM;UAENo0E,UAAU,CAACvyC,EAAE,CAAC5oB,GAAG,CAAE,CAAC,EAAEo7D,MAAM,CAAEr0E,CAAC,CAAE,EAAE,CAAE,CAAC;UACtCo0E,UAAU,CAACj3C,MAAM,CAAE,CAAC,EAAE,CAAC,EAAEm3C,WAAW,CAAEt0E,CAAC,CAAG,CAAC;QAE5C;QAEA,IAAMm4B,IAAI,GAAG,IAAI,CAACw5C,SAAS;QAE3B6B,YAAY,CAAElB,kBAAkB,EAAEqC,GAAG,GAAGx8C,IAAI,EAAEn4B,CAAC,GAAG,CAAC,GAAGm4B,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAK,CAAC;QAE5E8vB,QAAQ,CAAC4F,eAAe,CAAEykB,kBAAmB,CAAC;QAE9C,IAAKoC,aAAa,EAAG;UAEpBzsB,QAAQ,CAAC6F,MAAM,CAAE2mB,aAAa,EAAEL,UAAW,CAAC;QAE7C;QAEAnsB,QAAQ,CAAC6F,MAAM,CAAEV,KAAK,EAAEgnB,UAAW,CAAC;MAErC;MAEAK,aAAa,CAACn7C,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAChCsqD,aAAa,CAAC3nC,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;MAEhC89B,QAAQ,CAACsf,WAAW,GAAGA,WAAW;MAClCtf,QAAQ,CAACkf,SAAS,GAAGoN,iBAAiB;MACtCnnB,KAAK,CAAClhB,UAAU,GAAGA,UAAU;IAE9B;EAAC;IAAA5lC,GAAA;IAAAvG,KAAA,EAED,SAAA0zE,iBAAkBrmD,OAAO,EAAEklD,kBAAkB,EAAG;MAE/C,IAAMrqB,QAAQ,GAAG,IAAI,CAACupB,SAAS;MAE/B,IAAMrjB,aAAa,GAAK/gC,OAAO,CAACnF,OAAO,KAAK9c,qBAAqB,IAAIiiB,OAAO,CAACnF,OAAO,KAAK7c,qBAAuB;MAEhH,IAAK+iD,aAAa,EAAG;QAEpB,IAAK,IAAI,CAAC6jB,gBAAgB,KAAK,IAAI,EAAG;UAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,CAAC,CAAC;QAE9C;QAEA,IAAI,CAACjB,gBAAgB,CAACnqB,QAAQ,CAACmY,UAAU,CAACjgE,KAAK,GAAKqtB,OAAO,CAAC3D,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExG,CAAC,MAAM;QAEN,IAAK,IAAI,CAACwoD,iBAAiB,KAAK,IAAI,EAAG;UAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,CAAC,CAAC;QAEhD;MAED;MAEA,IAAMrmC,QAAQ,GAAGqhB,aAAa,GAAG,IAAI,CAAC6jB,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;MAC/E,IAAMrjB,IAAI,GAAG,IAAInK,IAAI,CAAE,IAAI,CAACmtB,UAAU,CAAE,CAAC,CAAE,EAAE9kC,QAAS,CAAC;MAEvD,IAAM+a,QAAQ,GAAG/a,QAAQ,CAAC+a,QAAQ;MAElCA,QAAQ,CAAE,QAAQ,CAAE,CAAC9nD,KAAK,GAAGqtB,OAAO;MAEpC,IAAM+K,IAAI,GAAG,IAAI,CAACw5C,SAAS;MAE3B6B,YAAY,CAAElB,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGn6C,IAAI,EAAE,CAAC,GAAGA,IAAK,CAAC;MAE5D8vB,QAAQ,CAAC4F,eAAe,CAAEykB,kBAAmB,CAAC;MAC9CrqB,QAAQ,CAAC6F,MAAM,CAAEc,IAAI,EAAEqiB,WAAY,CAAC;IAErC;EAAC;IAAA3qE,GAAA;IAAAvG,KAAA,EAED,SAAA2yE,YAAaJ,kBAAkB,EAAG;MAEjC,IAAMrqB,QAAQ,GAAG,IAAI,CAACupB,SAAS;MAC/B,IAAMrK,SAAS,GAAGlf,QAAQ,CAACkf,SAAS;MACpClf,QAAQ,CAACkf,SAAS,GAAG,KAAK;MAE1B,KAAM,IAAInnE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4xE,UAAU,CAACvtE,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEnD,IAAMoyE,KAAK,GAAGr9D,IAAI,CAACmH,IAAI,CAAE,IAAI,CAAC41D,OAAO,CAAE9xE,CAAC,CAAE,GAAG,IAAI,CAAC8xE,OAAO,CAAE9xE,CAAC,CAAE,GAAG,IAAI,CAAC8xE,OAAO,CAAE9xE,CAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC8xE,OAAO,CAAE9xE,CAAC,GAAG,CAAC,CAAG,CAAC;QAEhH,IAAM40E,QAAQ,GAAGtD,eAAe,CAAE,CAAEtxE,CAAC,GAAG,CAAC,IAAKsxE,eAAe,CAACjtE,MAAM,CAAE;QAEtE,IAAI,CAACouE,KAAK,CAAEH,kBAAkB,EAAEtyE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAEoyE,KAAK,EAAEwC,QAAS,CAAC;MAE5D;MAEA3sB,QAAQ,CAACkf,SAAS,GAAGA,SAAS;IAE/B;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAA7gE,GAAA;IAAAvG,KAAA,EAOA,SAAA0yE,MAAOH,kBAAkB,EAAEuC,KAAK,EAAEC,MAAM,EAAE1C,KAAK,EAAEwC,QAAQ,EAAG;MAE3D,IAAMG,oBAAoB,GAAG,IAAI,CAACtD,qBAAqB;MAEvD,IAAI,CAACuD,SAAS,CACb1C,kBAAkB,EAClByC,oBAAoB,EACpBF,KAAK,EACLC,MAAM,EACN1C,KAAK,EACL,aAAa,EACbwC,QAAS,CAAC;MAEX,IAAI,CAACI,SAAS,CACbD,oBAAoB,EACpBzC,kBAAkB,EAClBwC,MAAM,EACNA,MAAM,EACN1C,KAAK,EACL,cAAc,EACdwC,QAAS,CAAC;IAEZ;EAAC;IAAAtuE,GAAA;IAAAvG,KAAA,EAED,SAAAi1E,UAAWC,QAAQ,EAAEC,SAAS,EAAEL,KAAK,EAAEC,MAAM,EAAEK,YAAY,EAAEn4C,SAAS,EAAE43C,QAAQ,EAAG;MAElF,IAAM3sB,QAAQ,GAAG,IAAI,CAACupB,SAAS;MAC/B,IAAM4D,YAAY,GAAG,IAAI,CAACrD,aAAa;MAEvC,IAAK/0C,SAAS,KAAK,aAAa,IAAIA,SAAS,KAAK,cAAc,EAAG;QAElE9jB,OAAO,CAACywB,KAAK,CACZ,4DAA6D,CAAC;MAEhE;;MAEA;MACA,IAAM0rC,mBAAmB,GAAG,CAAC;MAE7B,IAAMC,QAAQ,GAAG,IAAI7wB,IAAI,CAAE,IAAI,CAACmtB,UAAU,CAAEkD,MAAM,CAAE,EAAEM,YAAa,CAAC;MACpE,IAAMG,YAAY,GAAGH,YAAY,CAACvtB,QAAQ;MAE1C,IAAM2tB,MAAM,GAAG,IAAI,CAAC3D,SAAS,CAAEgD,KAAK,CAAE,GAAG,CAAC;MAC1C,IAAMY,eAAe,GAAG5zB,QAAQ,CAAEszB,YAAa,CAAC,GAAGpgE,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGwgE,MAAM,CAAE,GAAG,CAAC,GAAGzgE,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGw5D,WAAW,GAAG,CAAC,CAAE;MACnH,IAAMkH,WAAW,GAAGP,YAAY,GAAGM,eAAe;MAClD,IAAMtoD,OAAO,GAAG00B,QAAQ,CAAEszB,YAAa,CAAC,GAAG,CAAC,GAAGpgE,IAAI,CAACmC,KAAK,CAAEm+D,mBAAmB,GAAGK,WAAY,CAAC,GAAGlH,WAAW;MAE5G,IAAKrhD,OAAO,GAAGqhD,WAAW,EAAG;QAE5Bt1D,OAAO,CAACC,IAAI,kBAAAuL,MAAA,CACXywD,YAAY,oDAAAzwD,MAAA,CACZyI,OAAO,0CAAAzI,MAAA,CAAuC8pD,WAAW,CAAG,CAAC;MAE/D;MAEA,IAAMmH,OAAO,GAAG,EAAE;MAClB,IAAIC,GAAG,GAAG,CAAC;MAEX,KAAM,IAAI51E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwuE,WAAW,EAAE,EAAGxuE,CAAC,EAAG;QAExC,IAAMgW,GAAC,GAAGhW,CAAC,GAAG01E,WAAW;QACzB,IAAMG,MAAM,GAAG9gE,IAAI,CAAC2B,GAAG,CAAE,CAAEV,GAAC,GAAGA,GAAC,GAAG,CAAE,CAAC;QACtC2/D,OAAO,CAAC3xE,IAAI,CAAE6xE,MAAO,CAAC;QAEtB,IAAK71E,CAAC,KAAK,CAAC,EAAG;UAEd41E,GAAG,IAAIC,MAAM;QAEd,CAAC,MAAM,IAAK71E,CAAC,GAAGmtB,OAAO,EAAG;UAEzByoD,GAAG,IAAI,CAAC,GAAGC,MAAM;QAElB;MAED;MAEA,KAAM,IAAI71E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG21E,OAAO,CAACtxE,MAAM,EAAErE,IAAC,EAAG,EAAG;QAE3C21E,OAAO,CAAE31E,IAAC,CAAE,GAAG21E,OAAO,CAAE31E,IAAC,CAAE,GAAG41E,GAAG;MAElC;MAEAL,YAAY,CAAE,QAAQ,CAAE,CAACx1E,KAAK,GAAGk1E,QAAQ,CAAC7nD,OAAO;MACjDmoD,YAAY,CAAE,SAAS,CAAE,CAACx1E,KAAK,GAAGotB,OAAO;MACzCooD,YAAY,CAAE,SAAS,CAAE,CAACx1E,KAAK,GAAG41E,OAAO;MACzCJ,YAAY,CAAE,aAAa,CAAE,CAACx1E,KAAK,GAAGi9B,SAAS,KAAK,aAAa;MAEjE,IAAK43C,QAAQ,EAAG;QAEfW,YAAY,CAAE,UAAU,CAAE,CAACx1E,KAAK,GAAG60E,QAAQ;MAE5C;MAEA,IAAQlD,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf6D,YAAY,CAAE,QAAQ,CAAE,CAACx1E,KAAK,GAAG01E,eAAe;MAChDF,YAAY,CAAE,QAAQ,CAAE,CAACx1E,KAAK,GAAG2xE,OAAO,GAAGmD,KAAK;MAEhD,IAAMiB,UAAU,GAAG,IAAI,CAACjE,SAAS,CAAEiD,MAAM,CAAE;MAC3C,IAAM9+D,CAAC,GAAG,CAAC,GAAG8/D,UAAU,IAAKhB,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG+D,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG,CAAC,CAAE;MAC1F,IAAMtvE,CAAC,GAAG,CAAC,IAAK,IAAI,CAACkwE,SAAS,GAAGmE,UAAU,CAAE;MAE7CtC,YAAY,CAAE0B,SAAS,EAAEl/D,CAAC,EAAEvU,CAAC,EAAE,CAAC,GAAGq0E,UAAU,EAAE,CAAC,GAAGA,UAAW,CAAC;MAC/D7tB,QAAQ,CAAC4F,eAAe,CAAEqnB,SAAU,CAAC;MACrCjtB,QAAQ,CAAC6F,MAAM,CAAEwnB,QAAQ,EAAErE,WAAY,CAAC;IAEzC;EAAC;EAAA,OAAAM,cAAA;AAAA;AAMF,SAASsC,aAAaA,CAAEkC,MAAM,EAAG;EAEhC,IAAMhC,SAAS,GAAG,EAAE;EACpB,IAAMD,QAAQ,GAAG,EAAE;EACnB,IAAME,MAAM,GAAG,EAAE;EAEjB,IAAIgC,GAAG,GAAGD,MAAM;EAEhB,IAAME,SAAS,GAAGF,MAAM,GAAGhF,OAAO,GAAG,CAAC,GAAGC,eAAe,CAAC3sE,MAAM;EAE/D,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi2E,SAAS,EAAEj2E,CAAC,EAAG,EAAG;IAEtC,IAAMk2E,OAAO,GAAGnhE,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAEk+D,GAAI,CAAC;IAClClC,QAAQ,CAAC9vE,IAAI,CAAEkyE,OAAQ,CAAC;IACxB,IAAI9D,KAAK,GAAG,GAAG,GAAG8D,OAAO;IAEzB,IAAKl2E,CAAC,GAAG+1E,MAAM,GAAGhF,OAAO,EAAG;MAE3BqB,KAAK,GAAGpB,eAAe,CAAEhxE,CAAC,GAAG+1E,MAAM,GAAGhF,OAAO,GAAG,CAAC,CAAE;IAEpD,CAAC,MAAM,IAAK/wE,CAAC,KAAK,CAAC,EAAG;MAErBoyE,KAAK,GAAG,CAAC;IAEV;IAEA4B,MAAM,CAAChwE,IAAI,CAAEouE,KAAM,CAAC;IAEpB,IAAM+D,SAAS,GAAG,GAAG,IAAKD,OAAO,GAAG,CAAC,CAAE;IACvC,IAAMvgE,GAAG,GAAG,CAAEwgE,SAAS;IACvB,IAAMvgE,GAAG,GAAG,CAAC,GAAGugE,SAAS;IACzB,IAAMvnC,GAAG,GAAG,CAAEj5B,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAED,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEC,GAAG,CAAE;IAE1E,IAAMwgE,SAAS,GAAG,CAAC;IACnB,IAAM5vB,QAAQ,GAAG,CAAC;IAClB,IAAM6vB,YAAY,GAAG,CAAC;IACtB,IAAMC,MAAM,GAAG,CAAC;IAChB,IAAMC,aAAa,GAAG,CAAC;IAEvB,IAAM/8C,QAAQ,GAAG,IAAIngB,YAAY,CAAEg9D,YAAY,GAAG7vB,QAAQ,GAAG4vB,SAAU,CAAC;IACxE,IAAM/rD,EAAE,GAAG,IAAIhR,YAAY,CAAEi9D,MAAM,GAAG9vB,QAAQ,GAAG4vB,SAAU,CAAC;IAC5D,IAAMvwB,SAAS,GAAG,IAAIxsC,YAAY,CAAEk9D,aAAa,GAAG/vB,QAAQ,GAAG4vB,SAAU,CAAC;IAE1E,KAAM,IAAItwB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGswB,SAAS,EAAEtwB,IAAI,EAAG,EAAG;MAE/C,IAAM9vC,CAAC,GAAK8vC,IAAI,GAAG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MAClC,IAAMrkD,CAAC,GAAGqkD,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAC5B,IAAM0wB,WAAW,GAAG,CACnBxgE,CAAC,EAAEvU,CAAC,EAAE,CAAC,EACPuU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEvU,CAAC,EAAE,CAAC,EACfuU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBuU,CAAC,EAAEvU,CAAC,EAAE,CAAC,EACPuU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBuU,CAAC,EAAEvU,CAAC,GAAG,CAAC,EAAE,CAAC,CACX;MACD+3B,QAAQ,CAACvgB,GAAG,CAAEu9D,WAAW,EAAEH,YAAY,GAAG7vB,QAAQ,GAAGV,IAAK,CAAC;MAC3Dz7B,EAAE,CAACpR,GAAG,CAAE21B,GAAG,EAAE0nC,MAAM,GAAG9vB,QAAQ,GAAGV,IAAK,CAAC;MACvC,IAAM2wB,IAAI,GAAG,CAAE3wB,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAE;MACnDD,SAAS,CAAC5sC,GAAG,CAAEw9D,IAAI,EAAEF,aAAa,GAAG/vB,QAAQ,GAAGV,IAAK,CAAC;IAEvD;IAEA,IAAMwK,MAAM,GAAG,IAAItR,cAAc,CAAC,CAAC;IACnCsR,MAAM,CAACxQ,YAAY,CAAE,UAAU,EAAE,IAAIvE,eAAe,CAAE/hB,QAAQ,EAAE68C,YAAa,CAAE,CAAC;IAChF/lB,MAAM,CAACxQ,YAAY,CAAE,IAAI,EAAE,IAAIvE,eAAe,CAAElxB,EAAE,EAAEisD,MAAO,CAAE,CAAC;IAC9DhmB,MAAM,CAACxQ,YAAY,CAAE,WAAW,EAAE,IAAIvE,eAAe,CAAEsK,SAAS,EAAE0wB,aAAc,CAAE,CAAC;IACnFxC,SAAS,CAAC/vE,IAAI,CAAEssD,MAAO,CAAC;IAExB,IAAK0lB,GAAG,GAAGjF,OAAO,EAAG;MAEpBiF,GAAG,EAAG;IAEP;EAED;EAEA,OAAO;IAAEjC,SAAS,EAATA,SAAS;IAAED,QAAQ,EAARA,QAAQ;IAAEE,MAAM,EAANA;EAAO,CAAC;AAEvC;AAEA,SAASL,mBAAmBA,CAAE9tD,KAAK,EAAEC,MAAM,EAAE4tD,MAAM,EAAG;EAErD,IAAMpB,kBAAkB,GAAG,IAAIhlD,iBAAiB,CAAEzH,KAAK,EAAEC,MAAM,EAAE4tD,MAAO,CAAC;EACzEpB,kBAAkB,CAACllD,OAAO,CAACnF,OAAO,GAAG1c,uBAAuB;EAC5D+mE,kBAAkB,CAACllD,OAAO,CAAC3oB,IAAI,GAAG,cAAc;EAChD6tE,kBAAkB,CAACzlD,WAAW,GAAG,IAAI;EACrC,OAAOylD,kBAAkB;AAE1B;AAEA,SAASkB,YAAYA,CAAEttE,MAAM,EAAE8P,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAG;EAEpD5f,MAAM,CAAC4mB,QAAQ,CAAC7T,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAO,CAAC;EAC1C5f,MAAM,CAAC0mB,OAAO,CAAC3T,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAO,CAAC;AAE1C;AAEA,SAASmuD,cAAcA,CAAE8B,MAAM,EAAElwD,KAAK,EAAEC,MAAM,EAAG;EAEhD,IAAM6vD,OAAO,GAAG,IAAIt8D,YAAY,CAAEm1D,WAAY,CAAC;EAC/C,IAAMoG,QAAQ,GAAG,IAAIzgD,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EACvC,IAAMuiD,cAAc,GAAG,IAAIluB,cAAc,CAAE;IAE1C/jD,IAAI,EAAE,uBAAuB;IAE7BokD,OAAO,EAAE;MACR,GAAG,EAAE2lB,WAAW;MAChB,oBAAoB,EAAE,GAAG,GAAG3oD,KAAK;MACjC,qBAAqB,EAAE,GAAG,GAAGC,MAAM;MACnC,gBAAgB,KAAApB,MAAA,CAAKqxD,MAAM;IAC5B,CAAC;IAEDluB,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE9nD,KAAK,EAAE;MAAK,CAAC;MACzB,SAAS,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACvB,SAAS,EAAE;QAAEA,KAAK,EAAE41E;MAAQ,CAAC;MAC7B,aAAa,EAAE;QAAE51E,KAAK,EAAE;MAAM,CAAC;MAC/B,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,UAAU,EAAE;QAAEA,KAAK,EAAE60E;MAAS;IAC/B,CAAC;IAED7rB,YAAY,EAAE4tB,sBAAsB,CAAC,CAAC;IAEtC3tB,cAAc,EAAE,4iDA4Df;IAEDzY,QAAQ,EAAE5nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;EAEH,OAAOqlC,cAAc;AAEtB;AAEA,SAASvD,oBAAoBA,CAAA,EAAG;EAE/B,OAAO,IAAI3qB,cAAc,CAAE;IAE1B/jD,IAAI,EAAE,yBAAyB;IAE/BojD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE9nD,KAAK,EAAE;MAAK;IACzB,CAAC;IAEDgpD,YAAY,EAAE4tB,sBAAsB,CAAC,CAAC;IAEtC3tB,cAAc,EAAE,kZAmBf;IAEDzY,QAAQ,EAAE5nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;AAEJ;AAEA,SAAS4hC,mBAAmBA,CAAA,EAAG;EAE9B,OAAO,IAAIzqB,cAAc,CAAE;IAE1B/jD,IAAI,EAAE,iBAAiB;IAEvBojD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE9nD,KAAK,EAAE;MAAK,CAAC;MACzB,YAAY,EAAE;QAAEA,KAAK,EAAE,CAAE;MAAE;IAC5B,CAAC;IAEDgpD,YAAY,EAAE4tB,sBAAsB,CAAC,CAAC;IAEtC3tB,cAAc,EAAE,mVAgBf;IAEDzY,QAAQ,EAAE5nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;AAEJ;AAEA,SAASslC,sBAAsBA,CAAA,EAAG;EAEjC,OAAO;EAAA;AAyDR;AAEA,SAASC,eAAeA,CAAE3uB,QAAQ,EAAG;EAEpC,IAAI4uB,UAAU,GAAG,IAAIhkB,OAAO,CAAC,CAAC;EAE9B,IAAIikB,cAAc,GAAG,IAAI;EAEzB,SAAS58D,GAAGA,CAAEkT,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAACzE,SAAS,EAAG;MAEnC,IAAMV,OAAO,GAAGmF,OAAO,CAACnF,OAAO;MAE/B,IAAM8uD,aAAa,GAAK9uD,OAAO,KAAK5c,gCAAgC,IAAI4c,OAAO,KAAK3c,gCAAkC;MACtH,IAAM0rE,SAAS,GAAK/uD,OAAO,KAAK9c,qBAAqB,IAAI8c,OAAO,KAAK7c,qBAAuB;;MAE5F;;MAEA,IAAK2rE,aAAa,IAAIC,SAAS,EAAG;QAEjC,IAAK5pD,OAAO,CAAC3D,qBAAqB,IAAI2D,OAAO,CAAC1D,gBAAgB,KAAK,IAAI,EAAG;UAEzE0D,OAAO,CAAC1D,gBAAgB,GAAG,KAAK;UAEhC,IAAIuiC,YAAY,GAAG4qB,UAAU,CAAC38D,GAAG,CAAEkT,OAAQ,CAAC;UAE5C,IAAK0pD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEtpB,QAAS,CAAC;UAE9EgE,YAAY,GAAG8qB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAExlD,OAAO,EAAE6+B,YAAa,CAAC,GAAG6qB,cAAc,CAAC/D,WAAW,CAAE3lD,OAAO,EAAE6+B,YAAa,CAAC;UAChJ4qB,UAAU,CAAC59D,GAAG,CAAEmU,OAAO,EAAE6+B,YAAa,CAAC;UAEvC,OAAOA,YAAY,CAAC7+B,OAAO;QAE5B,CAAC,MAAM;UAEN,IAAKypD,UAAU,CAACpyD,GAAG,CAAE2I,OAAQ,CAAC,EAAG;YAEhC,OAAOypD,UAAU,CAAC38D,GAAG,CAAEkT,OAAQ,CAAC,CAACA,OAAO;UAEzC,CAAC,MAAM;YAEN,IAAM3H,KAAK,GAAG2H,OAAO,CAAC3H,KAAK;YAE3B,IAAOsxD,aAAa,IAAItxD,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,IAAQkxD,SAAS,IAAIvxD,KAAK,IAAIwxD,qBAAqB,CAAExxD,KAAM,CAAG,EAAG;cAEjH,IAAKqxD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEtpB,QAAS,CAAC;cAE9E,IAAMgE,aAAY,GAAG8qB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAExlD,OAAQ,CAAC,GAAG0pD,cAAc,CAAC/D,WAAW,CAAE3lD,OAAQ,CAAC;cAC1HypD,UAAU,CAAC59D,GAAG,CAAEmU,OAAO,EAAE6+B,aAAa,CAAC;cAEvC7+B,OAAO,CAACrZ,gBAAgB,CAAE,SAAS,EAAEw8D,gBAAiB,CAAC;cAEvD,OAAOtkB,aAAY,CAAC7+B,OAAO;YAE5B,CAAC,MAAM;cAEN;;cAEA,OAAO,IAAI;YAEZ;UAED;QAED;MAED;IAED;IAEA,OAAOA,OAAO;EAEf;EAEA,SAAS6pD,qBAAqBA,CAAExxD,KAAK,EAAG;IAEvC,IAAI0J,KAAK,GAAG,CAAC;IACb,IAAM9qB,MAAM,GAAG,CAAC;IAEhB,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqE,MAAM,EAAErE,CAAC,EAAG,EAAG;MAEnC,IAAKylB,KAAK,CAAEzlB,CAAC,CAAE,KAAKgH,SAAS,EAAGmoB,KAAK,EAAG;IAEzC;IAEA,OAAOA,KAAK,KAAK9qB,MAAM;EAGxB;EAEA,SAASksE,gBAAgBA,CAAE77D,KAAK,EAAG;IAElC,IAAM0Y,OAAO,GAAG1Y,KAAK,CAACxO,MAAM;IAE5BknB,OAAO,CAAC/Y,mBAAmB,CAAE,SAAS,EAAEk8D,gBAAiB,CAAC;IAE1D,IAAM2G,SAAS,GAAGL,UAAU,CAAC38D,GAAG,CAAEkT,OAAQ,CAAC;IAE3C,IAAK8pD,SAAS,KAAKlwE,SAAS,EAAG;MAE9B6vE,UAAU,CAAC7iB,MAAM,CAAE5mC,OAAQ,CAAC;MAC5B8pD,SAAS,CAAC/sD,OAAO,CAAC,CAAC;IAEpB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElB0sD,UAAU,GAAG,IAAIhkB,OAAO,CAAC,CAAC;IAE1B,IAAKikB,cAAc,KAAK,IAAI,EAAG;MAE9BA,cAAc,CAAC3sD,OAAO,CAAC,CAAC;MACxB2sD,cAAc,GAAG,IAAI;IAEtB;EAED;EAEA,OAAO;IACN58D,GAAG,EAAEA,GAAG;IACRiQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASgtD,eAAeA,CAAE1kB,EAAE,EAAG;EAE9B,IAAMtJ,UAAU,GAAG,CAAC,CAAC;EAErB,SAASiuB,YAAYA,CAAE3yE,IAAI,EAAG;IAE7B,IAAK0kD,UAAU,CAAE1kD,IAAI,CAAE,KAAKuC,SAAS,EAAG;MAEvC,OAAOmiD,UAAU,CAAE1kD,IAAI,CAAE;IAE1B;IAEA,IAAIujE,SAAS;IAEb,QAASvjE,IAAI;MAEZ,KAAK,qBAAqB;QACzBujE,SAAS,GAAGvV,EAAE,CAAC2kB,YAAY,CAAE,qBAAsB,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,yBAA0B,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,4BAA6B,CAAC;QACvJ;MAED,KAAK,gCAAgC;QACpCpP,SAAS,GAAGvV,EAAE,CAAC2kB,YAAY,CAAE,gCAAiC,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,oCAAqC,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,uCAAwC,CAAC;QACxL;MAED,KAAK,+BAA+B;QACnCpP,SAAS,GAAGvV,EAAE,CAAC2kB,YAAY,CAAE,+BAAgC,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,mCAAoC,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,sCAAuC,CAAC;QACrL;MAED,KAAK,gCAAgC;QACpCpP,SAAS,GAAGvV,EAAE,CAAC2kB,YAAY,CAAE,gCAAiC,CAAC,IAAI3kB,EAAE,CAAC2kB,YAAY,CAAE,uCAAwC,CAAC;QAC7H;MAED;QACCpP,SAAS,GAAGvV,EAAE,CAAC2kB,YAAY,CAAE3yE,IAAK,CAAC;IAErC;IAEA0kD,UAAU,CAAE1kD,IAAI,CAAE,GAAGujE,SAAS;IAE9B,OAAOA,SAAS;EAEjB;EAEA,OAAO;IAENvjD,GAAG,EAAE,SAAAA,IAAWhgB,IAAI,EAAG;MAEtB,OAAO2yE,YAAY,CAAE3yE,IAAK,CAAC,KAAK,IAAI;IAErC,CAAC;IAEDwqE,IAAI,EAAE,SAAAA,KAAWvc,YAAY,EAAG;MAE/B,IAAKA,YAAY,CAACC,QAAQ,EAAG;QAE5BykB,YAAY,CAAE,wBAAyB,CAAC;MAEzC,CAAC,MAAM;QAENA,YAAY,CAAE,qBAAsB,CAAC;QACrCA,YAAY,CAAE,mBAAoB,CAAC;QACnCA,YAAY,CAAE,wBAAyB,CAAC;QACxCA,YAAY,CAAE,+BAAgC,CAAC;QAC/CA,YAAY,CAAE,0BAA2B,CAAC;QAC1CA,YAAY,CAAE,wBAAyB,CAAC;QACxCA,YAAY,CAAE,yBAA0B,CAAC;QACzCA,YAAY,CAAE,wBAAyB,CAAC;MAEzC;MAEAA,YAAY,CAAE,0BAA2B,CAAC;MAC1CA,YAAY,CAAE,6BAA8B,CAAC;MAC7CA,YAAY,CAAE,sCAAuC,CAAC;IAEvD,CAAC;IAEDl9D,GAAG,EAAE,SAAAA,IAAWzV,IAAI,EAAG;MAEtB,IAAMujE,SAAS,GAAGoP,YAAY,CAAE3yE,IAAK,CAAC;MAEtC,IAAKujE,SAAS,KAAK,IAAI,EAAG;QAEzB9uD,OAAO,CAACC,IAAI,CAAE,uBAAuB,GAAG1U,IAAI,GAAG,2BAA4B,CAAC;MAE7E;MAEA,OAAOujE,SAAS;IAEjB;EAED,CAAC;AAEF;AAEA,SAASqP,eAAeA,CAAE5kB,EAAE,EAAEl5B,UAAU,EAAE0yC,IAAI,EAAE/D,aAAa,EAAG;EAE/D,IAAM58B,UAAU,GAAG,CAAC,CAAC;EACrB,IAAMgsC,mBAAmB,GAAG,IAAIzkB,OAAO,CAAC,CAAC;EAEzC,SAAS0kB,iBAAiBA,CAAE7iE,KAAK,EAAG;IAEnC,IAAM4kB,QAAQ,GAAG5kB,KAAK,CAACxO,MAAM;IAE7B,IAAKozB,QAAQ,CAAC/kB,KAAK,KAAK,IAAI,EAAG;MAE9BglB,UAAU,CAACqQ,MAAM,CAAEtQ,QAAQ,CAAC/kB,KAAM,CAAC;IAEpC;IAEA,KAAM,IAAM9P,IAAI,IAAI60B,QAAQ,CAACC,UAAU,EAAG;MAEzCA,UAAU,CAACqQ,MAAM,CAAEtQ,QAAQ,CAACC,UAAU,CAAE90B,IAAI,CAAG,CAAC;IAEjD;IAEA,KAAM,IAAMA,MAAI,IAAI60B,QAAQ,CAAC+lB,eAAe,EAAG;MAE9C,IAAM1qC,KAAK,GAAG2kB,QAAQ,CAAC+lB,eAAe,CAAE56C,MAAI,CAAE;MAE9C,KAAM,IAAIzE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqT,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEhDu5B,UAAU,CAACqQ,MAAM,CAAEj1B,KAAK,CAAE3U,CAAC,CAAG,CAAC;MAEhC;IAED;IAEAs5B,QAAQ,CAACjlB,mBAAmB,CAAE,SAAS,EAAEkjE,iBAAkB,CAAC;IAE5D,OAAOjsC,UAAU,CAAEhS,QAAQ,CAAC6Q,EAAE,CAAE;IAEhC,IAAM1sB,SAAS,GAAG65D,mBAAmB,CAACp9D,GAAG,CAAEof,QAAS,CAAC;IAErD,IAAK7b,SAAS,EAAG;MAEhB8b,UAAU,CAACqQ,MAAM,CAAEnsB,SAAU,CAAC;MAC9B65D,mBAAmB,CAACtjB,MAAM,CAAE16B,QAAS,CAAC;IAEvC;IAEA4uC,aAAa,CAAC2D,uBAAuB,CAAEvyC,QAAS,CAAC;IAEjD,IAAKA,QAAQ,CAAC0xC,yBAAyB,KAAK,IAAI,EAAG;MAElD,OAAO1xC,QAAQ,CAAC8xC,iBAAiB;IAElC;;IAEA;;IAEAa,IAAI,CAACuL,MAAM,CAAClsC,UAAU,EAAG;EAE1B;EAEA,SAASpxB,GAAGA,CAAEoe,MAAM,EAAEgB,QAAQ,EAAG;IAEhC,IAAKgS,UAAU,CAAEhS,QAAQ,CAAC6Q,EAAE,CAAE,KAAK,IAAI,EAAG,OAAO7Q,QAAQ;IAEzDA,QAAQ,CAACvlB,gBAAgB,CAAE,SAAS,EAAEwjE,iBAAkB,CAAC;IAEzDjsC,UAAU,CAAEhS,QAAQ,CAAC6Q,EAAE,CAAE,GAAG,IAAI;IAEhC8hC,IAAI,CAACuL,MAAM,CAAClsC,UAAU,EAAG;IAEzB,OAAOhS,QAAQ;EAEhB;EAEA,SAASpJ,MAAMA,CAAEoJ,QAAQ,EAAG;IAE3B,IAAMwwC,kBAAkB,GAAGxwC,QAAQ,CAACC,UAAU;;IAE9C;;IAEA,KAAM,IAAM90B,IAAI,IAAIqlE,kBAAkB,EAAG;MAExCvwC,UAAU,CAACrJ,MAAM,CAAE45C,kBAAkB,CAAErlE,IAAI,CAAE,EAAEguD,EAAE,CAAC4Y,YAAa,CAAC;IAEjE;;IAEA;;IAEA,IAAMhsB,eAAe,GAAG/lB,QAAQ,CAAC+lB,eAAe;IAEhD,KAAM,IAAM56C,MAAI,IAAI46C,eAAe,EAAG;MAErC,IAAM1qC,KAAK,GAAG0qC,eAAe,CAAE56C,MAAI,CAAE;MAErC,KAAM,IAAIzE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqT,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEhDu5B,UAAU,CAACrJ,MAAM,CAAEvb,KAAK,CAAE3U,CAAC,CAAE,EAAEyyD,EAAE,CAAC4Y,YAAa,CAAC;MAEjD;IAED;EAED;EAEA,SAASoM,wBAAwBA,CAAEn+C,QAAQ,EAAG;IAE7C,IAAMsnB,OAAO,GAAG,EAAE;IAElB,IAAM82B,aAAa,GAAGp+C,QAAQ,CAAC/kB,KAAK;IACpC,IAAMojE,gBAAgB,GAAGr+C,QAAQ,CAACC,UAAU,CAACC,QAAQ;IACrD,IAAI1S,OAAO,GAAG,CAAC;IAEf,IAAK4wD,aAAa,KAAK,IAAI,EAAG;MAE7B,IAAM/iE,KAAK,GAAG+iE,aAAa,CAAC/iE,KAAK;MACjCmS,OAAO,GAAG4wD,aAAa,CAAC5wD,OAAO;MAE/B,KAAM,IAAI9mB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqT,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAI,CAAC,EAAG;QAElD,IAAME,CAAC,GAAGyU,KAAK,CAAE3U,CAAC,GAAG,CAAC,CAAE;QACxB,IAAMqY,CAAC,GAAG1D,KAAK,CAAE3U,CAAC,GAAG,CAAC,CAAE;QACxB,IAAMI,CAAC,GAAGuU,KAAK,CAAE3U,CAAC,GAAG,CAAC,CAAE;QAExB4gD,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAEA,CAAC,EAAEjY,CAAC,EAAEA,CAAC,EAAEF,CAAE,CAAC;MAEjC;IAED,CAAC,MAAM,IAAKy3E,gBAAgB,KAAK3wE,SAAS,EAAG;MAE5C,IAAM2N,MAAK,GAAGgjE,gBAAgB,CAAChjE,KAAK;MACpCmS,OAAO,GAAG6wD,gBAAgB,CAAC7wD,OAAO;MAElC,KAAM,IAAI9mB,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAKqT,MAAK,CAACtQ,MAAM,GAAG,CAAC,GAAK,CAAC,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,IAAI,CAAC,EAAG;QAE9D,IAAME,GAAC,GAAGF,IAAC,GAAG,CAAC;QACf,IAAMqY,GAAC,GAAGrY,IAAC,GAAG,CAAC;QACf,IAAMI,GAAC,GAAGJ,IAAC,GAAG,CAAC;QAEf4gD,OAAO,CAAC58C,IAAI,CAAE9D,GAAC,EAAEmY,GAAC,EAAEA,GAAC,EAAEjY,GAAC,EAAEA,GAAC,EAAEF,GAAE,CAAC;MAEjC;IAED,CAAC,MAAM;MAEN;IAED;IAEA,IAAMud,SAAS,GAAG,KAAM6E,gBAAgB,CAAEs+B,OAAQ,CAAC,GAAGjD,qBAAqB,GAAGN,qBAAqB,EAAIuD,OAAO,EAAE,CAAE,CAAC;IACnHnjC,SAAS,CAACqJ,OAAO,GAAGA,OAAO;;IAE3B;;IAEA;;IAEA,IAAM8wD,iBAAiB,GAAGN,mBAAmB,CAACp9D,GAAG,CAAEof,QAAS,CAAC;IAE7D,IAAKs+C,iBAAiB,EAAGr+C,UAAU,CAACqQ,MAAM,CAAEguC,iBAAkB,CAAC;;IAE/D;;IAEAN,mBAAmB,CAACr+D,GAAG,CAAEqgB,QAAQ,EAAE7b,SAAU,CAAC;EAE/C;EAEA,SAASo6D,qBAAqBA,CAAEv+C,QAAQ,EAAG;IAE1C,IAAMw+C,gBAAgB,GAAGR,mBAAmB,CAACp9D,GAAG,CAAEof,QAAS,CAAC;IAE5D,IAAKw+C,gBAAgB,EAAG;MAEvB,IAAMJ,aAAa,GAAGp+C,QAAQ,CAAC/kB,KAAK;MAEpC,IAAKmjE,aAAa,KAAK,IAAI,EAAG;QAE7B;;QAEA,IAAKI,gBAAgB,CAAChxD,OAAO,GAAG4wD,aAAa,CAAC5wD,OAAO,EAAG;UAEvD2wD,wBAAwB,CAAEn+C,QAAS,CAAC;QAErC;MAED;IAED,CAAC,MAAM;MAENm+C,wBAAwB,CAAEn+C,QAAS,CAAC;IAErC;IAEA,OAAOg+C,mBAAmB,CAACp9D,GAAG,CAAEof,QAAS,CAAC;EAE3C;EAEA,OAAO;IAENpf,GAAG,EAAEA,GAAG;IACRgW,MAAM,EAAEA,MAAM;IAEd2nD,qBAAqB,EAAEA;EAExB,CAAC;AAEF;AAEA,SAASE,0BAA0BA,CAAEtlB,EAAE,EAAEtJ,UAAU,EAAE8iB,IAAI,EAAEvZ,YAAY,EAAG;EAEzE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIuZ,IAAI;EAER,SAASC,OAAOA,CAAEpsE,KAAK,EAAG;IAEzBmsE,IAAI,GAAGnsE,KAAK;EAEb;EAEA,IAAImB,IAAI,EAAEwyD,eAAe;EAEzB,SAAS9T,QAAQA,CAAE7/C,KAAK,EAAG;IAE1BmB,IAAI,GAAGnB,KAAK,CAACmB,IAAI;IACjBwyD,eAAe,GAAG3zD,KAAK,CAAC2zD,eAAe;EAExC;EAEA,SAAS5F,MAAMA,CAAEpO,KAAK,EAAEvwB,KAAK,EAAG;IAE/BsjC,EAAE,CAACulB,YAAY,CAAE9L,IAAI,EAAE/8C,KAAK,EAAEjuB,IAAI,EAAEw+C,KAAK,GAAGgU,eAAgB,CAAC;IAE7DuY,IAAI,CAAC/7C,MAAM,CAAEf,KAAK,EAAE+8C,IAAI,EAAE,CAAE,CAAC;EAE9B;EAEA,SAASG,eAAeA,CAAE3sB,KAAK,EAAEvwB,KAAK,EAAEm9C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAItE,SAAS,EAAEuE,UAAU;IAEzB,IAAK5Z,QAAQ,EAAG;MAEfqV,SAAS,GAAGvV,EAAE;MACd8Z,UAAU,GAAG,uBAAuB;IAErC,CAAC,MAAM;MAENvE,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC;MACtDqyD,UAAU,GAAG,4BAA4B;MAEzC,IAAKvE,SAAS,KAAK,IAAI,EAAG;QAEzB9uD,OAAO,CAACywB,KAAK,CAAE,uIAAwI,CAAC;QACxJ;MAED;IAED;IAEAq+B,SAAS,CAAEuE,UAAU,CAAE,CAAEL,IAAI,EAAE/8C,KAAK,EAAEjuB,IAAI,EAAEw+C,KAAK,GAAGgU,eAAe,EAAE4Y,SAAU,CAAC;IAEhFL,IAAI,CAAC/7C,MAAM,CAAEf,KAAK,EAAE+8C,IAAI,EAAEI,SAAU,CAAC;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACvsB,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACkO,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACue,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAAS4L,SAASA,CAAExlB,EAAE,EAAG;EAExB,IAAM+kB,MAAM,GAAG;IACdlsC,UAAU,EAAE,CAAC;IACbthB,QAAQ,EAAE;EACX,CAAC;EAED,IAAM8jC,MAAM,GAAG;IACdqE,KAAK,EAAE,CAAC;IACR+lB,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,CAAC;IACZlgD,MAAM,EAAE,CAAC;IACTmgD,KAAK,EAAE;EACR,CAAC;EAED,SAASloD,MAAMA,CAAEf,KAAK,EAAE+8C,IAAI,EAAEmM,aAAa,EAAG;IAE7CvqB,MAAM,CAACoqB,KAAK,EAAG;IAEf,QAAShM,IAAI;MAEZ,KAAKzZ,EAAE,CAAC6lB,SAAS;QAChBxqB,MAAM,CAACqqB,SAAS,IAAIE,aAAa,IAAKlpD,KAAK,GAAG,CAAC,CAAE;QACjD;MAED,KAAKsjC,EAAE,CAAC8lB,KAAK;QACZzqB,MAAM,CAACsqB,KAAK,IAAIC,aAAa,IAAKlpD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAKsjC,EAAE,CAAC+lB,UAAU;QACjB1qB,MAAM,CAACsqB,KAAK,IAAIC,aAAa,IAAKlpD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAKsjC,EAAE,CAACgmB,SAAS;QAChB3qB,MAAM,CAACsqB,KAAK,IAAIC,aAAa,GAAGlpD,KAAK;QACrC;MAED,KAAKsjC,EAAE,CAACimB,MAAM;QACb5qB,MAAM,CAAC71B,MAAM,IAAIogD,aAAa,GAAGlpD,KAAK;QACtC;MAED;QACCjW,OAAO,CAACywB,KAAK,CAAE,qCAAqC,EAAEuiC,IAAK,CAAC;QAC5D;IAEF;EAED;EAEA,SAAS/nE,KAAKA,CAAA,EAAG;IAEhB2pD,MAAM,CAACoqB,KAAK,GAAG,CAAC;IAChBpqB,MAAM,CAACqqB,SAAS,GAAG,CAAC;IACpBrqB,MAAM,CAAC71B,MAAM,GAAG,CAAC;IACjB61B,MAAM,CAACsqB,KAAK,GAAG,CAAC;EAEjB;EAEA,OAAO;IACNZ,MAAM,EAAEA,MAAM;IACd1pB,MAAM,EAAEA,MAAM;IACd6qB,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfz0E,KAAK,EAAEA,KAAK;IACZ+rB,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAAS2oD,aAAaA,CAAE34E,CAAC,EAAEmY,CAAC,EAAG;EAE9B,OAAOnY,CAAC,CAAE,CAAC,CAAE,GAAGmY,CAAC,CAAE,CAAC,CAAE;AAEvB;AAEA,SAASygE,gBAAgBA,CAAE54E,CAAC,EAAEmY,CAAC,EAAG;EAEjC,OAAOtD,IAAI,CAAC6B,GAAG,CAAEyB,CAAC,CAAE,CAAC,CAAG,CAAC,GAAGtD,IAAI,CAAC6B,GAAG,CAAE1W,CAAC,CAAE,CAAC,CAAG,CAAC;AAE/C;AAEA,SAAS64E,iBAAiBA,CAAEtmB,EAAE,EAAEC,YAAY,EAAE1oC,QAAQ,EAAG;EAExD,IAAMgvD,cAAc,GAAG,CAAC,CAAC;EACzB,IAAM7zB,eAAe,GAAG,IAAI9rC,YAAY,CAAE,CAAE,CAAC;EAC7C,IAAM4/D,aAAa,GAAG,IAAIpmB,OAAO,CAAC,CAAC;EACnC,IAAMqmB,KAAK,GAAG,IAAI3uD,OAAO,CAAC,CAAC;EAE3B,IAAM4uD,cAAc,GAAG,EAAE;EAEzB,KAAM,IAAIn5E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;IAE9Bm5E,cAAc,CAAEn5E,CAAC,CAAE,GAAG,CAAEA,CAAC,EAAE,CAAC,CAAE;EAE/B;EAEA,SAASkwB,MAAMA,CAAEoI,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAO,EAAG;IAE5C,IAAM4Q,gBAAgB,GAAG9gD,MAAM,CAACwsB,qBAAqB;IAErD,IAAK4N,YAAY,CAACC,QAAQ,KAAK,IAAI,EAAG;MAErC;MACA;;MAEA,IAAMlS,cAAc,GAAGnnB,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,IAAIF,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,IAAI8C,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK;MAC7H,IAAMw1D,iBAAiB,GAAK54B,cAAc,KAAKz5C,SAAS,GAAKy5C,cAAc,CAACp8C,MAAM,GAAG,CAAC;MAEtF,IAAIi1E,KAAK,GAAGL,aAAa,CAAC/+D,GAAG,CAAEof,QAAS,CAAC;MAEzC,IAAKggD,KAAK,KAAKtyE,SAAS,IAAIsyE,KAAK,CAACnqD,KAAK,KAAKkqD,iBAAiB,EAAG;QAE/D,IAAKC,KAAK,KAAKtyE,SAAS,EAAGsyE,KAAK,CAAClsD,OAAO,CAACjD,OAAO,CAAC,CAAC;QAElD,IAAMovD,gBAAgB,GAAGjgD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,KAAKxyB,SAAS;QACxE,IAAMwyE,eAAe,GAAGlgD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,KAAKxvB,SAAS;QACrE,IAAMyyE,cAAc,GAAGngD,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK,KAAK7c,SAAS;QAEnE,IAAM0yE,YAAY,GAAGpgD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,IAAI,EAAE;QAC5D,IAAMmgD,YAAY,GAAGrgD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,IAAI,EAAE;QAC1D,IAAMojD,WAAW,GAAGtgD,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK,IAAI,EAAE;QAExD,IAAIg2D,eAAe,GAAG,CAAC;QAEvB,IAAKN,gBAAgB,KAAK,IAAI,EAAGM,eAAe,GAAG,CAAC;QACpD,IAAKL,eAAe,KAAK,IAAI,EAAGK,eAAe,GAAG,CAAC;QACnD,IAAKJ,cAAc,KAAK,IAAI,EAAGI,eAAe,GAAG,CAAC;QAElD,IAAIh0D,KAAK,GAAGyT,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACrK,KAAK,GAAG0qD,eAAe;QAChE,IAAI/zD,MAAM,GAAG,CAAC;QAEd,IAAKD,KAAK,GAAG6sC,YAAY,CAAC+a,cAAc,EAAG;UAE1C3nD,MAAM,GAAG/Q,IAAI,CAACgD,IAAI,CAAE8N,KAAK,GAAG6sC,YAAY,CAAC+a,cAAe,CAAC;UACzD5nD,KAAK,GAAG6sC,YAAY,CAAC+a,cAAc;QAEpC;QAEA,IAAM9qD,MAAM,GAAG,IAAItJ,YAAY,CAAEwM,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGuzD,iBAAkB,CAAC;QAEzE,IAAMjsD,OAAO,GAAG,IAAIO,gBAAgB,CAAEhL,MAAM,EAAEkD,KAAK,EAAEC,MAAM,EAAEuzD,iBAAkB,CAAC;QAChFjsD,OAAO,CAAClsB,IAAI,GAAGyL,SAAS;QACxBygB,OAAO,CAACrD,WAAW,GAAG,IAAI;;QAE1B;;QAEA,IAAM+vD,gBAAgB,GAAGD,eAAe,GAAG,CAAC;QAE5C,KAAM,IAAI75E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGq5E,iBAAiB,EAAEr5E,IAAC,EAAG,EAAG;UAE9C,IAAM+5E,WAAW,GAAGL,YAAY,CAAE15E,IAAC,CAAE;UACrC,IAAMg6E,WAAW,GAAGL,YAAY,CAAE35E,IAAC,CAAE;UACrC,IAAMi6E,UAAU,GAAGL,WAAW,CAAE55E,IAAC,CAAE;UAEnC,IAAMsd,MAAM,GAAGuI,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAG9lB,IAAC;UAErC,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGu+C,WAAW,CAAC5qD,KAAK,EAAEqM,CAAC,EAAG,EAAG;YAE9C,IAAM0nB,MAAM,GAAG1nB,CAAC,GAAGs+C,gBAAgB;YAEnC,IAAKP,gBAAgB,KAAK,IAAI,EAAG;cAEhCL,KAAK,CAAC17D,mBAAmB,CAAEu8D,WAAW,EAAEv+C,CAAE,CAAC;cAE3C7Y,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACljE,CAAC;cACvC2M,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACz3E,CAAC;cACvCkhB,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACzuD,CAAC;cACvC9H,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAKs2B,eAAe,KAAK,IAAI,EAAG;cAE/BN,KAAK,CAAC17D,mBAAmB,CAAEw8D,WAAW,EAAEx+C,CAAE,CAAC;cAE3C7Y,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACljE,CAAC;cACvC2M,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACz3E,CAAC;cACvCkhB,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACzuD,CAAC;cACvC9H,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAKu2B,cAAc,KAAK,IAAI,EAAG;cAE9BP,KAAK,CAAC17D,mBAAmB,CAAEy8D,UAAU,EAAEz+C,CAAE,CAAC;cAE1C7Y,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACljE,CAAC;cACvC2M,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,CAAC,CAAE,GAAGg2B,KAAK,CAACz3E,CAAC;cACvCkhB,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,EAAE,CAAE,GAAGg2B,KAAK,CAACzuD,CAAC;cACxC9H,MAAM,CAAErF,MAAM,GAAG4lC,MAAM,GAAG,EAAE,CAAE,GAAK+2B,UAAU,CAACz+B,QAAQ,KAAK,CAAC,GAAK09B,KAAK,CAACxuD,CAAC,GAAG,CAAC;YAE7E;UAED;QAED;QAEA4uD,KAAK,GAAG;UACPnqD,KAAK,EAAEkqD,iBAAiB;UACxBjsD,OAAO,EAAEA,OAAO;UAChB+K,IAAI,EAAE,IAAIpe,OAAO,CAAE8L,KAAK,EAAEC,MAAO;QAClC,CAAC;QAEDmzD,aAAa,CAAChgE,GAAG,CAAEqgB,QAAQ,EAAEggD,KAAM,CAAC;QAEpC,SAASY,cAAcA,CAAA,EAAG;UAEzB9sD,OAAO,CAACjD,OAAO,CAAC,CAAC;UAEjB8uD,aAAa,CAACjlB,MAAM,CAAE16B,QAAS,CAAC;UAEhCA,QAAQ,CAACjlB,mBAAmB,CAAE,SAAS,EAAE6lE,cAAe,CAAC;QAE1D;QAEA5gD,QAAQ,CAACvlB,gBAAgB,CAAE,SAAS,EAAEmmE,cAAe,CAAC;MAEvD;;MAEA;;MAEA,IAAIC,kBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAIn6E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGo5E,gBAAgB,CAAC/0E,MAAM,EAAErE,IAAC,EAAG,EAAG;QAEpDm6E,kBAAkB,IAAIf,gBAAgB,CAAEp5E,IAAC,CAAE;MAE5C;MAEA,IAAMo6E,kBAAkB,GAAG9gD,QAAQ,CAACgmB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG66B,kBAAkB;MAErF3R,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,0BAA0B,EAAE2nB,kBAAmB,CAAC;MACpF5R,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,uBAAuB,EAAE2mB,gBAAiB,CAAC;MAE/E5Q,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,qBAAqB,EAAE6mB,KAAK,CAAClsD,OAAO,EAAEpD,QAAS,CAAC;MACpFw+C,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,yBAAyB,EAAE6mB,KAAK,CAACnhD,IAAK,CAAC;IAG5E,CAAC,MAAM;MAEN;MACA;;MAEA,IAAM9zB,MAAM,GAAG+0E,gBAAgB,KAAKpyE,SAAS,GAAG,CAAC,GAAGoyE,gBAAgB,CAAC/0E,MAAM;MAE3E,IAAIk2E,UAAU,GAAGvB,cAAc,CAAE1/C,QAAQ,CAAC6Q,EAAE,CAAE;MAE9C,IAAKowC,UAAU,KAAKvzE,SAAS,IAAIuzE,UAAU,CAACl2E,MAAM,KAAKA,MAAM,EAAG;QAE/D;;QAEAk2E,UAAU,GAAG,EAAE;QAEf,KAAM,IAAIv6E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqE,MAAM,EAAErE,IAAC,EAAG,EAAG;UAEnCu6E,UAAU,CAAEv6E,IAAC,CAAE,GAAG,CAAEA,IAAC,EAAE,CAAC,CAAE;QAE3B;QAEAg5E,cAAc,CAAE1/C,QAAQ,CAAC6Q,EAAE,CAAE,GAAGowC,UAAU;MAE3C;;MAEA;;MAEA,KAAM,IAAIv6E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqE,MAAM,EAAErE,IAAC,EAAG,EAAG;QAEnC,IAAMolD,SAAS,GAAGm1B,UAAU,CAAEv6E,IAAC,CAAE;QAEjColD,SAAS,CAAE,CAAC,CAAE,GAAGplD,IAAC;QAClBolD,SAAS,CAAE,CAAC,CAAE,GAAGg0B,gBAAgB,CAAEp5E,IAAC,CAAE;MAEvC;MAEAu6E,UAAU,CAACC,IAAI,CAAE1B,gBAAiB,CAAC;MAEnC,KAAM,IAAI94E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAKA,IAAC,GAAGqE,MAAM,IAAIk2E,UAAU,CAAEv6E,IAAC,CAAE,CAAE,CAAC,CAAE,EAAG;UAEzCm5E,cAAc,CAAEn5E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGu6E,UAAU,CAAEv6E,IAAC,CAAE,CAAE,CAAC,CAAE;UAC/Cm5E,cAAc,CAAEn5E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGu6E,UAAU,CAAEv6E,IAAC,CAAE,CAAE,CAAC,CAAE;QAEhD,CAAC,MAAM;UAENm5E,cAAc,CAAEn5E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGkH,MAAM,CAACuzE,gBAAgB;UAClDtB,cAAc,CAAEn5E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAE7B;MAED;MAEAm5E,cAAc,CAACqB,IAAI,CAAE3B,aAAc,CAAC;MAEpC,IAAMa,aAAY,GAAGpgD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ;MACtD,IAAMmgD,aAAY,GAAGrgD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM;MAEpD,IAAI2jD,mBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAIn6E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAMolD,UAAS,GAAG+zB,cAAc,CAAEn5E,IAAC,CAAE;QACrC,IAAMuU,KAAK,GAAG6wC,UAAS,CAAE,CAAC,CAAE;QAC5B,IAAMrlD,OAAK,GAAGqlD,UAAS,CAAE,CAAC,CAAE;QAE5B,IAAK7wC,KAAK,KAAKrN,MAAM,CAACuzE,gBAAgB,IAAI16E,OAAK,EAAG;UAEjD,IAAK25E,aAAY,IAAIpgD,QAAQ,CAACumB,YAAY,CAAE,aAAa,GAAG7/C,IAAE,CAAC,KAAK05E,aAAY,CAAEnlE,KAAK,CAAE,EAAG;YAE3F+kB,QAAQ,CAACwmB,YAAY,CAAE,aAAa,GAAG9/C,IAAC,EAAE05E,aAAY,CAAEnlE,KAAK,CAAG,CAAC;UAElE;UAEA,IAAKolE,aAAY,IAAIrgD,QAAQ,CAACumB,YAAY,CAAE,aAAa,GAAG7/C,IAAE,CAAC,KAAK25E,aAAY,CAAEplE,KAAK,CAAE,EAAG;YAE3F+kB,QAAQ,CAACwmB,YAAY,CAAE,aAAa,GAAG9/C,IAAC,EAAE25E,aAAY,CAAEplE,KAAK,CAAG,CAAC;UAElE;UAEA4wC,eAAe,CAAEnlD,IAAC,CAAE,GAAGD,OAAK;UAC5Bo6E,mBAAkB,IAAIp6E,OAAK;QAE5B,CAAC,MAAM;UAEN,IAAK25E,aAAY,IAAIpgD,QAAQ,CAAC0mB,YAAY,CAAE,aAAa,GAAGhgD,IAAE,CAAC,KAAK,IAAI,EAAG;YAE1Es5B,QAAQ,CAACymB,eAAe,CAAE,aAAa,GAAG//C,IAAE,CAAC;UAE9C;UAEA,IAAK25E,aAAY,IAAIrgD,QAAQ,CAAC0mB,YAAY,CAAE,aAAa,GAAGhgD,IAAE,CAAC,KAAK,IAAI,EAAG;YAE1Es5B,QAAQ,CAACymB,eAAe,CAAE,aAAa,GAAG//C,IAAE,CAAC;UAE9C;UAEAmlD,eAAe,CAAEnlD,IAAC,CAAE,GAAG,CAAC;QAEzB;MAED;;MAEA;MACA;MACA;MACA,IAAMo6E,mBAAkB,GAAG9gD,QAAQ,CAACgmB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG66B,mBAAkB;MAErF3R,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,0BAA0B,EAAE2nB,mBAAmB,CAAC;MACpF5R,OAAO,CAAC6R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE7nB,EAAE,EAAE,uBAAuB,EAAEtN,eAAgB,CAAC;IAE/E;EAED;EAEA,OAAO;IAENj1B,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAASwqD,YAAYA,CAAEjoB,EAAE,EAAEnnB,UAAU,EAAE/R,UAAU,EAAE0yC,IAAI,EAAG;EAEzD,IAAI0O,SAAS,GAAG,IAAI9nB,OAAO,CAAC,CAAC;EAE7B,SAAS3iC,MAAMA,CAAEoI,MAAM,EAAG;IAEzB,IAAM65B,KAAK,GAAG8Z,IAAI,CAACne,MAAM,CAACqE,KAAK;IAE/B,IAAM74B,QAAQ,GAAGhB,MAAM,CAACgB,QAAQ;IAChC,IAAMshD,cAAc,GAAGtvC,UAAU,CAACpxB,GAAG,CAAEoe,MAAM,EAAEgB,QAAS,CAAC;;IAEzD;;IAEA,IAAKqhD,SAAS,CAACzgE,GAAG,CAAE0gE,cAAe,CAAC,KAAKzoB,KAAK,EAAG;MAEhD7mB,UAAU,CAACpb,MAAM,CAAE0qD,cAAe,CAAC;MAEnCD,SAAS,CAAC1hE,GAAG,CAAE2hE,cAAc,EAAEzoB,KAAM,CAAC;IAEvC;IAEA,IAAK75B,MAAM,CAACqT,eAAe,EAAG;MAE7B,IAAKrT,MAAM,CAAClkB,gBAAgB,CAAE,SAAS,EAAEymE,sBAAuB,CAAC,KAAK,KAAK,EAAG;QAE7EviD,MAAM,CAACvkB,gBAAgB,CAAE,SAAS,EAAE8mE,sBAAuB,CAAC;MAE7D;MAEA,IAAKF,SAAS,CAACzgE,GAAG,CAAEoe,MAAO,CAAC,KAAK65B,KAAK,EAAG;QAExC54B,UAAU,CAACrJ,MAAM,CAAEoI,MAAM,CAACsT,cAAc,EAAE6mB,EAAE,CAAC4Y,YAAa,CAAC;QAE3D,IAAK/yC,MAAM,CAACuT,aAAa,KAAK,IAAI,EAAG;UAEpCtS,UAAU,CAACrJ,MAAM,CAAEoI,MAAM,CAACuT,aAAa,EAAE4mB,EAAE,CAAC4Y,YAAa,CAAC;QAE3D;QAEAsP,SAAS,CAAC1hE,GAAG,CAAEqf,MAAM,EAAE65B,KAAM,CAAC;MAE/B;IAED;IAEA,IAAK75B,MAAM,CAACoU,aAAa,EAAG;MAE3B,IAAMG,QAAQ,GAAGvU,MAAM,CAACuU,QAAQ;MAEhC,IAAK8tC,SAAS,CAACzgE,GAAG,CAAE2yB,QAAS,CAAC,KAAKslB,KAAK,EAAG;QAE1CtlB,QAAQ,CAAC3c,MAAM,CAAC,CAAC;QAEjByqD,SAAS,CAAC1hE,GAAG,CAAE4zB,QAAQ,EAAEslB,KAAM,CAAC;MAEjC;IAED;IAEA,OAAOyoB,cAAc;EAEtB;EAEA,SAASzwD,OAAOA,CAAA,EAAG;IAElBwwD,SAAS,GAAG,IAAI9nB,OAAO,CAAC,CAAC;EAE1B;EAEA,SAASgoB,sBAAsBA,CAAEnmE,KAAK,EAAG;IAExC,IAAMomE,aAAa,GAAGpmE,KAAK,CAACxO,MAAM;IAElC40E,aAAa,CAACzmE,mBAAmB,CAAE,SAAS,EAAEwmE,sBAAuB,CAAC;IAEtEthD,UAAU,CAACqQ,MAAM,CAAEkxC,aAAa,CAAClvC,cAAe,CAAC;IAEjD,IAAKkvC,aAAa,CAACjvC,aAAa,KAAK,IAAI,EAAGtS,UAAU,CAACqQ,MAAM,CAAEkxC,aAAa,CAACjvC,aAAc,CAAC;EAE7F;EAEA,OAAO;IAEN3b,MAAM,EAAEA,MAAM;IACd/F,OAAO,EAAEA;EAEV,CAAC;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAM4wD,YAAY,GAAG,aAAc,IAAIpzD,OAAO,CAAC,CAAC;AAChD,IAAMqzD,iBAAiB,GAAG,aAAc,IAAIrtD,gBAAgB,CAAC,CAAC;AAC9D,IAAMstD,cAAc,GAAG,aAAc,IAAI3sD,aAAa,CAAC,CAAC;AACxD,IAAM4sD,gBAAgB,GAAG,aAAc,IAAIntB,WAAW,CAAC,CAAC;;AAExD;;AAEA;;AAEA,IAAMotB,aAAa,GAAG,EAAE;AACxB,IAAMC,aAAa,GAAG,EAAE;;AAExB;;AAEA,IAAMC,SAAS,GAAG,IAAIhiE,YAAY,CAAE,EAAG,CAAC;AACxC,IAAMiiE,SAAS,GAAG,IAAIjiE,YAAY,CAAE,CAAE,CAAC;AACvC,IAAMkiE,SAAS,GAAG,IAAIliE,YAAY,CAAE,CAAE,CAAC;;AAEvC;;AAEA,SAASmiE,OAAOA,CAAE7mE,KAAK,EAAE8mE,OAAO,EAAEC,SAAS,EAAG;EAE7C,IAAMC,SAAS,GAAGhnE,KAAK,CAAE,CAAC,CAAE;EAE5B,IAAKgnE,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAG,OAAOhnE,KAAK;EACnD;EACA;;EAEA,IAAMhV,CAAC,GAAG87E,OAAO,GAAGC,SAAS;EAC7B,IAAIl8E,CAAC,GAAG27E,aAAa,CAAEx7E,CAAC,CAAE;EAE1B,IAAKH,CAAC,KAAKwH,SAAS,EAAG;IAEtBxH,CAAC,GAAG,IAAI6Z,YAAY,CAAE1Z,CAAE,CAAC;IACzBw7E,aAAa,CAAEx7E,CAAC,CAAE,GAAGH,CAAC;EAEvB;EAEA,IAAKi8E,OAAO,KAAK,CAAC,EAAG;IAEpBE,SAAS,CAACp+D,OAAO,CAAE/d,CAAC,EAAE,CAAE,CAAC;IAEzB,KAAM,IAAIQ,CAAC,GAAG,CAAC,EAAEsd,MAAM,GAAG,CAAC,EAAEtd,CAAC,KAAKy7E,OAAO,EAAE,EAAGz7E,CAAC,EAAG;MAElDsd,MAAM,IAAIo+D,SAAS;MACnB/mE,KAAK,CAAE3U,CAAC,CAAE,CAACud,OAAO,CAAE/d,CAAC,EAAE8d,MAAO,CAAC;IAEhC;EAED;EAEA,OAAO9d,CAAC;AAET;AAEA,SAASo8E,WAAWA,CAAE17E,CAAC,EAAEmY,CAAC,EAAG;EAE5B,IAAKnY,CAAC,CAACmE,MAAM,KAAKgU,CAAC,CAAChU,MAAM,EAAG,OAAO,KAAK;EAEzC,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGpB,CAAC,CAACmE,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IAE5C,IAAKE,CAAC,CAAEF,CAAC,CAAE,KAAKqY,CAAC,CAAErY,CAAC,CAAE,EAAG,OAAO,KAAK;EAEtC;EAEA,OAAO,IAAI;AAEZ;AAEA,SAASm8C,SAASA,CAAEj8C,CAAC,EAAEmY,CAAC,EAAG;EAE1B,KAAM,IAAIrY,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG+W,CAAC,CAAChU,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IAE5CE,CAAC,CAAEF,CAAC,CAAE,GAAGqY,CAAC,CAAErY,CAAC,CAAE;EAEhB;AAED;;AAEA;;AAEA,SAAS67E,aAAaA,CAAE7xD,QAAQ,EAAErqB,CAAC,EAAG;EAErC,IAAIH,CAAC,GAAG47E,aAAa,CAAEz7E,CAAC,CAAE;EAE1B,IAAKH,CAAC,KAAKwH,SAAS,EAAG;IAEtBxH,CAAC,GAAG,IAAIia,UAAU,CAAE9Z,CAAE,CAAC;IACvBy7E,aAAa,CAAEz7E,CAAC,CAAE,GAAGH,CAAC;EAEvB;EAEA,KAAM,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IAEhCR,CAAC,CAAEQ,CAAC,CAAE,GAAGgqB,QAAQ,CAAC8xD,mBAAmB,CAAC,CAAC;EAExC;EAEA,OAAOt8E,CAAC;AAET;;AAEA;;AAEA;AACA;;AAEA;;AAEA,SAASu8E,WAAWA,CAAEtpB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,EAAG;EAExB0wD,EAAE,CAACupB,SAAS,CAAE,IAAI,CAACC,IAAI,EAAEl6E,CAAE,CAAC;EAE5BmrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC;AAEf;;AAEA;;AAEA,SAASm6E,WAAWA,CAAEzpB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,EAAG;MAE/CgxD,EAAE,CAAC0pB,SAAS,CAAE,IAAI,CAACF,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAE,CAAC;MAEnCyrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKm6E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC2pB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAASs6E,WAAWA,CAAE5pB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,EAAG;MAErEgoC,EAAE,CAAC6pB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAE,CAAC;MAExCyiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;IAEjB;EAED,CAAC,MAAM,IAAK1oB,CAAC,CAACvC,CAAC,KAAKwH,SAAS,EAAG;IAE/B,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACvC,CAAC,IAAI0tC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACE,CAAC,IAAIirC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACsW,CAAC,EAAG;MAErEo6C,EAAE,CAAC6pB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAEl6E,CAAC,CAACvC,CAAC,EAAEuC,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACsW,CAAE,CAAC;MAExC60B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACvC,CAAC;MAChB0tC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACE,CAAC;MAChBirC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACsW,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKujE,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC8pB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAASy6E,WAAWA,CAAE/pB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,IAAIyiB,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC2oB,CAAC,EAAG;MAE3F+nC,EAAE,CAACgqB,SAAS,CAAE,IAAI,CAACR,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAC,EAAE1oB,CAAC,CAAC2oB,CAAE,CAAC;MAE7CwiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;MAChByiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC2oB,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKkxD,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACiqB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;;AAEA;;AAEA,SAAS46E,UAAUA,CAAElqB,EAAE,EAAE1wD,CAAC,EAAG;EAE5B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3xB,QAAQ,GAAGxZ,CAAC,CAACwZ,QAAQ;EAE3B,IAAKA,QAAQ,KAAKvU,SAAS,EAAG;IAE7B,IAAK40E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACmqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEl6E,CAAE,CAAC;IAE1Co6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAK65E,WAAW,CAAE1uC,KAAK,EAAE3xB,QAAS,CAAC,EAAG;IAEtCggE,SAAS,CAACtiE,GAAG,CAAEsC,QAAS,CAAC;IAEzBk3C,EAAE,CAACmqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEV,SAAU,CAAC;IAElDp/B,SAAS,CAAEjP,KAAK,EAAE3xB,QAAS,CAAC;EAE7B;AAED;AAEA,SAASshE,UAAUA,CAAEpqB,EAAE,EAAE1wD,CAAC,EAAG;EAE5B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3xB,QAAQ,GAAGxZ,CAAC,CAACwZ,QAAQ;EAE3B,IAAKA,QAAQ,KAAKvU,SAAS,EAAG;IAE7B,IAAK40E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACqqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEl6E,CAAE,CAAC;IAE1Co6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAK65E,WAAW,CAAE1uC,KAAK,EAAE3xB,QAAS,CAAC,EAAG;IAEtC+/D,SAAS,CAACriE,GAAG,CAAEsC,QAAS,CAAC;IAEzBk3C,EAAE,CAACqqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEX,SAAU,CAAC;IAElDn/B,SAAS,CAAEjP,KAAK,EAAE3xB,QAAS,CAAC;EAE7B;AAED;AAEA,SAASwhE,UAAUA,CAAEtqB,EAAE,EAAE1wD,CAAC,EAAG;EAE5B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3xB,QAAQ,GAAGxZ,CAAC,CAACwZ,QAAQ;EAE3B,IAAKA,QAAQ,KAAKvU,SAAS,EAAG;IAE7B,IAAK40E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACuqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEl6E,CAAE,CAAC;IAE1Co6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAK65E,WAAW,CAAE1uC,KAAK,EAAE3xB,QAAS,CAAC,EAAG;IAEtC8/D,SAAS,CAACpiE,GAAG,CAAEsC,QAAS,CAAC;IAEzBk3C,EAAE,CAACuqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEZ,SAAU,CAAC;IAElDl/B,SAAS,CAAEjP,KAAK,EAAE3xB,QAAS,CAAC;EAE7B;AAED;;AAEA;;AAEA,SAAS0hE,WAAWA,CAAExqB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,EAAG;EAExB0wD,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEl6E,CAAE,CAAC;EAE5BmrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC;AAEf;;AAEA;;AAEA,SAASo7E,WAAWA,CAAE1qB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,EAAG;MAE/CgxD,EAAE,CAAC2qB,SAAS,CAAE,IAAI,CAACnB,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAE,CAAC;MAEnCyrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKm6E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC4qB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAASu7E,WAAWA,CAAE7qB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,EAAG;MAErEgoC,EAAE,CAAC8qB,SAAS,CAAE,IAAI,CAACtB,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAE,CAAC;MAExCyiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKmxD,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC+qB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAAS07E,WAAWA,CAAEhrB,EAAE,EAAE1wD,CAAC,EAAG;EAE7B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,IAAIyiB,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC2oB,CAAC,EAAG;MAE3F+nC,EAAE,CAACirB,SAAS,CAAE,IAAI,CAACzB,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAC,EAAE1oB,CAAC,CAAC2oB,CAAE,CAAC;MAE7CwiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;MAChByiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC2oB,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKkxD,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACkrB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAEl6E,CAAE,CAAC;IAE7Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;;AAEA;;AAEA,SAAS67E,YAAYA,CAAEnrB,EAAE,EAAE1wD,CAAC,EAAG;EAE9B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,EAAG;EAExB0wD,EAAE,CAACorB,UAAU,CAAE,IAAI,CAAC5B,IAAI,EAAEl6E,CAAE,CAAC;EAE7BmrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC;AAEf;;AAEA;;AAEA,SAAS+7E,YAAYA,CAAErrB,EAAE,EAAE1wD,CAAC,EAAG;EAE9B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,EAAG;MAE/CgxD,EAAE,CAACsrB,UAAU,CAAE,IAAI,CAAC9B,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAE,CAAC;MAEpCyrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKm6E,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAACurB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAEl6E,CAAE,CAAC;IAE9Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAASk8E,YAAYA,CAAExrB,EAAE,EAAE1wD,CAAC,EAAG;EAE9B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,EAAG;MAErEgoC,EAAE,CAACyrB,UAAU,CAAE,IAAI,CAACjC,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAE,CAAC;MAEzCyiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKmxD,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC0rB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAEl6E,CAAE,CAAC;IAE9Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;AAEA,SAASq8E,YAAYA,CAAE3rB,EAAE,EAAE1wD,CAAC,EAAG;EAE9B,IAAMmrC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKnrC,CAAC,CAACiU,CAAC,KAAKhP,SAAS,EAAG;IAExB,IAAKkmC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACiU,CAAC,IAAIk3B,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAACN,CAAC,IAAIyrC,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC0oB,CAAC,IAAIyiB,KAAK,CAAE,CAAC,CAAE,KAAKnrC,CAAC,CAAC2oB,CAAC,EAAG;MAE3F+nC,EAAE,CAAC4rB,UAAU,CAAE,IAAI,CAACpC,IAAI,EAAEl6E,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAC,EAAE1oB,CAAC,CAAC2oB,CAAE,CAAC;MAE9CwiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACiU,CAAC;MAChBk3B,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAACN,CAAC;MAChByrC,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC0oB,CAAC;MAChByiB,KAAK,CAAE,CAAC,CAAE,GAAGnrC,CAAC,CAAC2oB,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKkxD,WAAW,CAAE1uC,KAAK,EAAEnrC,CAAE,CAAC,EAAG;IAE/B0wD,EAAE,CAAC6rB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAEl6E,CAAE,CAAC;IAE9Bo6C,SAAS,CAAEjP,KAAK,EAAEnrC,CAAE,CAAC;EAEtB;AAED;;AAGA;;AAEA,SAASw8E,UAAUA,CAAE9rB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAEtC,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMsxC,IAAI,GAAGx0D,QAAQ,CAAC8xD,mBAAmB,CAAC,CAAC;EAE3C,IAAK5uC,KAAK,CAAE,CAAC,CAAE,KAAKsxC,IAAI,EAAG;IAE1B/rB,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/BtxC,KAAK,CAAE,CAAC,CAAE,GAAGsxC,IAAI;EAElB;EAEAx0D,QAAQ,CAACy0D,YAAY,CAAE18E,CAAC,IAAIg5E,YAAY,EAAEyD,IAAK,CAAC;AAEjD;AAEA,SAASE,YAAYA,CAAEjsB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAExC,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMsxC,IAAI,GAAGx0D,QAAQ,CAAC8xD,mBAAmB,CAAC,CAAC;EAE3C,IAAK5uC,KAAK,CAAE,CAAC,CAAE,KAAKsxC,IAAI,EAAG;IAE1B/rB,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/BtxC,KAAK,CAAE,CAAC,CAAE,GAAGsxC,IAAI;EAElB;EAEAx0D,QAAQ,CAAC20D,YAAY,CAAE58E,CAAC,IAAIk5E,cAAc,EAAEuD,IAAK,CAAC;AAEnD;AAEA,SAASI,UAAUA,CAAEnsB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAEtC,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMsxC,IAAI,GAAGx0D,QAAQ,CAAC8xD,mBAAmB,CAAC,CAAC;EAE3C,IAAK5uC,KAAK,CAAE,CAAC,CAAE,KAAKsxC,IAAI,EAAG;IAE1B/rB,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/BtxC,KAAK,CAAE,CAAC,CAAE,GAAGsxC,IAAI;EAElB;EAEAx0D,QAAQ,CAAC60D,cAAc,CAAE98E,CAAC,IAAIm5E,gBAAgB,EAAEsD,IAAK,CAAC;AAEvD;AAEA,SAASM,iBAAiBA,CAAErsB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAE7C,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMsxC,IAAI,GAAGx0D,QAAQ,CAAC8xD,mBAAmB,CAAC,CAAC;EAE3C,IAAK5uC,KAAK,CAAE,CAAC,CAAE,KAAKsxC,IAAI,EAAG;IAE1B/rB,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/BtxC,KAAK,CAAE,CAAC,CAAE,GAAGsxC,IAAI;EAElB;EAEAx0D,QAAQ,CAAC+0D,iBAAiB,CAAEh9E,CAAC,IAAIi5E,iBAAiB,EAAEwD,IAAK,CAAC;AAE3D;;AAEA;;AAEA,SAASQ,iBAAiBA,CAAE99E,IAAI,EAAG;EAElC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAO66E,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;;IAEjC,KAAK,MAAM;MAAE,OAAOG,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;;IAEhC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;;IAE9C,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;;IAElC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOG,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOG,YAAY;IAEpB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,iBAAiB;EAE1B;AAED;;AAGA;;AAEA,SAASG,gBAAgBA,CAAExsB,EAAE,EAAE1wD,CAAC,EAAG;EAElC0wD,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACjD,IAAI,EAAEl6E,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAASo9E,gBAAgBA,CAAE1sB,EAAE,EAAE1wD,CAAC,EAAG;EAElC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,CAAE,CAAC;EAEvCs6B,EAAE,CAAC2pB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAEv1D,IAAK,CAAC;AAEjC;AAEA,SAAS04D,gBAAgBA,CAAE3sB,EAAE,EAAE1wD,CAAC,EAAG;EAElC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,CAAE,CAAC;EAEvCs6B,EAAE,CAAC8pB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAEv1D,IAAK,CAAC;AAEjC;AAEA,SAAS24D,gBAAgBA,CAAE5sB,EAAE,EAAE1wD,CAAC,EAAG;EAElC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,CAAE,CAAC;EAEvCs6B,EAAE,CAACiqB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAEv1D,IAAK,CAAC;AAEjC;;AAEA;;AAEA,SAAS44D,eAAeA,CAAE7sB,EAAE,EAAE1wD,CAAC,EAAG;EAEjC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,CAAE,CAAC;EAEvCs6B,EAAE,CAACmqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEv1D,IAAK,CAAC;AAE9C;AAEA,SAAS64D,eAAeA,CAAE9sB,EAAE,EAAE1wD,CAAC,EAAG;EAEjC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,CAAE,CAAC;EAEvCs6B,EAAE,CAACqqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEv1D,IAAK,CAAC;AAE9C;AAEA,SAAS84D,eAAeA,CAAE/sB,EAAE,EAAE1wD,CAAC,EAAG;EAEjC,IAAM2kB,IAAI,GAAG80D,OAAO,CAAEz5E,CAAC,EAAE,IAAI,CAACo2B,IAAI,EAAE,EAAG,CAAC;EAExCs6B,EAAE,CAACuqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEv1D,IAAK,CAAC;AAE9C;;AAEA;;AAEA,SAAS+4D,gBAAgBA,CAAEhtB,EAAE,EAAE1wD,CAAC,EAAG;EAElC0wD,EAAE,CAACitB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEl6E,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAAS49E,gBAAgBA,CAAEltB,EAAE,EAAE1wD,CAAC,EAAG;EAElC0wD,EAAE,CAAC4qB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAEl6E,CAAE,CAAC;AAE9B;AAEA,SAAS69E,gBAAgBA,CAAEntB,EAAE,EAAE1wD,CAAC,EAAG;EAElC0wD,EAAE,CAAC+qB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAEl6E,CAAE,CAAC;AAE9B;AAEA,SAAS89E,gBAAgBA,CAAEptB,EAAE,EAAE1wD,CAAC,EAAG;EAElC0wD,EAAE,CAACkrB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAEl6E,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAAS+9E,iBAAiBA,CAAErtB,EAAE,EAAE1wD,CAAC,EAAG;EAEnC0wD,EAAE,CAACstB,WAAW,CAAE,IAAI,CAAC9D,IAAI,EAAEl6E,CAAE,CAAC;AAE/B;;AAEA;;AAEA,SAASi+E,iBAAiBA,CAAEvtB,EAAE,EAAE1wD,CAAC,EAAG;EAEnC0wD,EAAE,CAACurB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAEl6E,CAAE,CAAC;AAE/B;AAEA,SAASk+E,iBAAiBA,CAAExtB,EAAE,EAAE1wD,CAAC,EAAG;EAEnC0wD,EAAE,CAAC0rB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAEl6E,CAAE,CAAC;AAE/B;AAEA,SAASm+E,iBAAiBA,CAAEztB,EAAE,EAAE1wD,CAAC,EAAG;EAEnC0wD,EAAE,CAAC6rB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAEl6E,CAAE,CAAC;AAE/B;;AAGA;;AAEA,SAASo+E,eAAeA,CAAE1tB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAE3C,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMvtC,CAAC,GAAGoC,CAAC,CAACsC,MAAM;EAElB,IAAM+7E,KAAK,GAAGvE,aAAa,CAAE7xD,QAAQ,EAAErqB,CAAE,CAAC;EAE1C,IAAK,CAAEi8E,WAAW,CAAE1uC,KAAK,EAAEkzC,KAAM,CAAC,EAAG;IAEpC3tB,EAAE,CAACitB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCjkC,SAAS,CAAEjP,KAAK,EAAEkzC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIpgF,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IAEhCgqB,QAAQ,CAACy0D,YAAY,CAAE18E,CAAC,CAAE/B,CAAC,CAAE,IAAI+6E,YAAY,EAAEqF,KAAK,CAAEpgF,CAAC,CAAG,CAAC;EAE5D;AAED;AAEA,SAASqgF,gBAAgBA,CAAE5tB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAE5C,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMvtC,CAAC,GAAGoC,CAAC,CAACsC,MAAM;EAElB,IAAM+7E,KAAK,GAAGvE,aAAa,CAAE7xD,QAAQ,EAAErqB,CAAE,CAAC;EAE1C,IAAK,CAAEi8E,WAAW,CAAE1uC,KAAK,EAAEkzC,KAAM,CAAC,EAAG;IAEpC3tB,EAAE,CAACitB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCjkC,SAAS,CAAEjP,KAAK,EAAEkzC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIpgF,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IAEhCgqB,QAAQ,CAAC20D,YAAY,CAAE58E,CAAC,CAAE/B,CAAC,CAAE,IAAIi7E,cAAc,EAAEmF,KAAK,CAAEpgF,CAAC,CAAG,CAAC;EAE9D;AAED;AAEA,SAASsgF,eAAeA,CAAE7tB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAE3C,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMvtC,CAAC,GAAGoC,CAAC,CAACsC,MAAM;EAElB,IAAM+7E,KAAK,GAAGvE,aAAa,CAAE7xD,QAAQ,EAAErqB,CAAE,CAAC;EAE1C,IAAK,CAAEi8E,WAAW,CAAE1uC,KAAK,EAAEkzC,KAAM,CAAC,EAAG;IAEpC3tB,EAAE,CAACitB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCjkC,SAAS,CAAEjP,KAAK,EAAEkzC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIpgF,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IAEhCgqB,QAAQ,CAAC60D,cAAc,CAAE98E,CAAC,CAAE/B,CAAC,CAAE,IAAIk7E,gBAAgB,EAAEkF,KAAK,CAAEpgF,CAAC,CAAG,CAAC;EAElE;AAED;AAEA,SAASugF,qBAAqBA,CAAE9tB,EAAE,EAAE1wD,CAAC,EAAEioB,QAAQ,EAAG;EAEjD,IAAMkjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMvtC,CAAC,GAAGoC,CAAC,CAACsC,MAAM;EAElB,IAAM+7E,KAAK,GAAGvE,aAAa,CAAE7xD,QAAQ,EAAErqB,CAAE,CAAC;EAE1C,IAAK,CAAEi8E,WAAW,CAAE1uC,KAAK,EAAEkzC,KAAM,CAAC,EAAG;IAEpC3tB,EAAE,CAACitB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCjkC,SAAS,CAAEjP,KAAK,EAAEkzC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIpgF,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IAEhCgqB,QAAQ,CAAC+0D,iBAAiB,CAAEh9E,CAAC,CAAE/B,CAAC,CAAE,IAAIg7E,iBAAiB,EAAEoF,KAAK,CAAEpgF,CAAC,CAAG,CAAC;EAEtE;AAED;;AAGA;;AAEA,SAASwgF,kBAAkBA,CAAEt/E,IAAI,EAAG;EAEnC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAO+9E,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEtC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;;IAErC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEnD,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOE,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;;IAEvC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,gBAAgB;IAExB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,qBAAqB;EAE9B;AAED;;AAEA;AAAA,IAEME,aAAa,gBAAAl6E,YAAA,CAElB,SAAAk6E,cAAat2C,EAAE,EAAEu2C,UAAU,EAAEzE,IAAI,EAAG;EAAAn2E,eAAA,OAAA26E,aAAA;EAEnC,IAAI,CAACt2C,EAAE,GAAGA,EAAE;EACZ,IAAI,CAAC8xC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAAC/uC,KAAK,GAAG,EAAE;EACf,IAAI,CAACotC,QAAQ,GAAG0E,iBAAiB,CAAE0B,UAAU,CAACx/E,IAAK,CAAC;;EAEpD;AAED,CAAC;AAAA,IAIIy/E,gBAAgB,gBAAAp6E,YAAA,CAErB,SAAAo6E,iBAAax2C,EAAE,EAAEu2C,UAAU,EAAEzE,IAAI,EAAG;EAAAn2E,eAAA,OAAA66E,gBAAA;EAEnC,IAAI,CAACx2C,EAAE,GAAGA,EAAE;EACZ,IAAI,CAAC8xC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAAC/uC,KAAK,GAAG,EAAE;EACf,IAAI,CAAC/U,IAAI,GAAGuoD,UAAU,CAACvoD,IAAI;EAC3B,IAAI,CAACmiD,QAAQ,GAAGkG,kBAAkB,CAAEE,UAAU,CAACx/E,IAAK,CAAC;;EAErD;AAED,CAAC;AAAA,IAII0/E,iBAAiB;EAEtB,SAAAA,kBAAaz2C,EAAE,EAAG;IAAArkC,eAAA,OAAA86E,iBAAA;IAEjB,IAAI,CAACz2C,EAAE,GAAGA,EAAE;IAEZ,IAAI,CAAC02C,GAAG,GAAG,EAAE;IACb,IAAI,CAAChsC,GAAG,GAAG,CAAC,CAAC;EAEd;EAACtuC,YAAA,CAAAq6E,iBAAA;IAAAt6E,GAAA;IAAAvG,KAAA,EAED,SAAAu6E,SAAU7nB,EAAE,EAAE1yD,KAAK,EAAEiqB,QAAQ,EAAG;MAE/B,IAAM62D,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,KAAM,IAAI7gF,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGkhF,GAAG,CAACx8E,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEhD,IAAMM,CAAC,GAAGugF,GAAG,CAAE7gF,CAAC,CAAE;QAClBM,CAAC,CAACg6E,QAAQ,CAAE7nB,EAAE,EAAE1yD,KAAK,CAAEO,CAAC,CAAC6pC,EAAE,CAAE,EAAEngB,QAAS,CAAC;MAE1C;IAED;EAAC;EAAA,OAAA42D,iBAAA;AAAA,KAIF;AAEA;AAEA,IAAME,UAAU,GAAG,qBAAqB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAUA,CAAEC,SAAS,EAAEC,aAAa,EAAG;EAE/CD,SAAS,CAACH,GAAG,CAAC78E,IAAI,CAAEi9E,aAAc,CAAC;EACnCD,SAAS,CAACnsC,GAAG,CAAEosC,aAAa,CAAC92C,EAAE,CAAE,GAAG82C,aAAa;AAElD;AAEA,SAASC,YAAYA,CAAER,UAAU,EAAEzE,IAAI,EAAE+E,SAAS,EAAG;EAEpD,IAAMG,IAAI,GAAGT,UAAU,CAACj8E,IAAI;IAC3B28E,UAAU,GAAGD,IAAI,CAAC98E,MAAM;;EAEzB;EACAy8E,UAAU,CAACO,SAAS,GAAG,CAAC;EAExB,OAAQ,IAAI,EAAG;IAEd,IAAMC,KAAK,GAAGR,UAAU,CAACroC,IAAI,CAAE0oC,IAAK,CAAC;MACpCI,QAAQ,GAAGT,UAAU,CAACO,SAAS;IAEhC,IAAIl3C,EAAE,GAAGm3C,KAAK,CAAE,CAAC,CAAE;IACnB,IAAME,SAAS,GAAGF,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG;MACnCG,SAAS,GAAGH,KAAK,CAAE,CAAC,CAAE;IAEvB,IAAKE,SAAS,EAAGr3C,EAAE,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC;;IAE9B,IAAKs3C,SAAS,KAAKz6E,SAAS,IAAIy6E,SAAS,KAAK,GAAG,IAAIF,QAAQ,GAAG,CAAC,KAAKH,UAAU,EAAG;MAElF;;MAEAL,UAAU,CAAEC,SAAS,EAAES,SAAS,KAAKz6E,SAAS,GAC7C,IAAIy5E,aAAa,CAAEt2C,EAAE,EAAEu2C,UAAU,EAAEzE,IAAK,CAAC,GACzC,IAAI0E,gBAAgB,CAAEx2C,EAAE,EAAEu2C,UAAU,EAAEzE,IAAK,CAAE,CAAC;MAE/C;IAED,CAAC,MAAM;MAEN;;MAEA,IAAMpnC,GAAG,GAAGmsC,SAAS,CAACnsC,GAAG;MACzB,IAAIrxC,IAAI,GAAGqxC,GAAG,CAAE1K,EAAE,CAAE;MAEpB,IAAK3mC,IAAI,KAAKwD,SAAS,EAAG;QAEzBxD,IAAI,GAAG,IAAIo9E,iBAAiB,CAAEz2C,EAAG,CAAC;QAClC42C,UAAU,CAAEC,SAAS,EAAEx9E,IAAK,CAAC;MAE9B;MAEAw9E,SAAS,GAAGx9E,IAAI;IAEjB;EAED;AAED;;AAEA;AAAA,IAEMk+E,aAAa;EAElB,SAAAA,cAAajvB,EAAE,EAAE+V,OAAO,EAAG;IAAA1iE,eAAA,OAAA47E,aAAA;IAE1B,IAAI,CAACb,GAAG,GAAG,EAAE;IACb,IAAI,CAAChsC,GAAG,GAAG,CAAC,CAAC;IAEb,IAAMl1C,CAAC,GAAG8yD,EAAE,CAACkvB,mBAAmB,CAAEnZ,OAAO,EAAE/V,EAAE,CAACmvB,eAAgB,CAAC;IAE/D,KAAM,IAAI5hF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAE,EAAGK,CAAC,EAAG;MAE9B,IAAMisE,IAAI,GAAGxZ,EAAE,CAACovB,gBAAgB,CAAErZ,OAAO,EAAExoE,CAAE,CAAC;QAC7Ci8E,IAAI,GAAGxpB,EAAE,CAACqvB,kBAAkB,CAAEtZ,OAAO,EAAEyD,IAAI,CAACxnE,IAAK,CAAC;MAEnDy8E,YAAY,CAAEjV,IAAI,EAAEgQ,IAAI,EAAE,IAAK,CAAC;IAEjC;EAED;EAAC11E,YAAA,CAAAm7E,aAAA;IAAAp7E,GAAA;IAAAvG,KAAA,EAED,SAAAu6E,SAAU7nB,EAAE,EAAEhuD,IAAI,EAAE1E,KAAK,EAAEiqB,QAAQ,EAAG;MAErC,IAAM1pB,CAAC,GAAG,IAAI,CAACu0C,GAAG,CAAEpwC,IAAI,CAAE;MAE1B,IAAKnE,CAAC,KAAK0G,SAAS,EAAG1G,CAAC,CAACg6E,QAAQ,CAAE7nB,EAAE,EAAE1yD,KAAK,EAAEiqB,QAAS,CAAC;IAEzD;EAAC;IAAA1jB,GAAA;IAAAvG,KAAA,EAED,SAAAgiF,YAAatvB,EAAE,EAAEn6B,MAAM,EAAE7zB,IAAI,EAAG;MAE/B,IAAM1C,CAAC,GAAGu2B,MAAM,CAAE7zB,IAAI,CAAE;MAExB,IAAK1C,CAAC,KAAKiF,SAAS,EAAG,IAAI,CAACszE,QAAQ,CAAE7nB,EAAE,EAAEhuD,IAAI,EAAE1C,CAAE,CAAC;IAEpD;EAAC;IAAAuE,GAAA;IAAAvG,KAAA,EAED,SAAAiiF,OAAevvB,EAAE,EAAEouB,GAAG,EAAE7+E,MAAM,EAAEgoB,QAAQ,EAAG;MAE1C,KAAM,IAAIhqB,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGkhF,GAAG,CAACx8E,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEhD,IAAMM,CAAC,GAAGugF,GAAG,CAAE7gF,CAAC,CAAE;UACjB+B,CAAC,GAAGC,MAAM,CAAE1B,CAAC,CAAC6pC,EAAE,CAAE;QAEnB,IAAKpoC,CAAC,CAACgoB,WAAW,KAAK,KAAK,EAAG;UAE9B;UACAzpB,CAAC,CAACg6E,QAAQ,CAAE7nB,EAAE,EAAE1wD,CAAC,CAAChC,KAAK,EAAEiqB,QAAS,CAAC;QAEpC;MAED;IAED;EAAC;IAAA1jB,GAAA;IAAAvG,KAAA,EAED,SAAAkiF,aAAqBpB,GAAG,EAAE7+E,MAAM,EAAG;MAElC,IAAMxC,CAAC,GAAG,EAAE;MAEZ,KAAM,IAAIQ,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGkhF,GAAG,CAACx8E,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEhD,IAAMM,CAAC,GAAGugF,GAAG,CAAE7gF,CAAC,CAAE;QAClB,IAAKM,CAAC,CAAC6pC,EAAE,IAAInoC,MAAM,EAAGxC,CAAC,CAACwE,IAAI,CAAE1D,CAAE,CAAC;MAElC;MAEA,OAAOd,CAAC;IAET;EAAC;EAAA,OAAAkiF,aAAA;AAAA;AAIF,SAASQ,WAAWA,CAAEzvB,EAAE,EAAEvxD,IAAI,EAAEq3C,MAAM,EAAG;EAExC,IAAMmW,MAAM,GAAG+D,EAAE,CAAC0vB,YAAY,CAAEjhF,IAAK,CAAC;EAEtCuxD,EAAE,CAAC2vB,YAAY,CAAE1zB,MAAM,EAAEnW,MAAO,CAAC;EACjCka,EAAE,CAAC4vB,aAAa,CAAE3zB,MAAO,CAAC;EAE1B,OAAOA,MAAM;AAEd;AAEA,IAAI4zB,cAAc,GAAG,CAAC;AAEtB,SAASC,YAAYA,CAAEhqC,MAAM,EAAEiqC,SAAS,EAAG;EAE1C,IAAMpK,KAAK,GAAG7/B,MAAM,CAACkqC,KAAK,CAAE,IAAK,CAAC;EAClC,IAAMC,MAAM,GAAG,EAAE;EAEjB,IAAMj7D,IAAI,GAAG1S,IAAI,CAACa,GAAG,CAAE4sE,SAAS,GAAG,CAAC,EAAE,CAAE,CAAC;EACzC,IAAMG,EAAE,GAAG5tE,IAAI,CAACY,GAAG,CAAE6sE,SAAS,GAAG,CAAC,EAAEpK,KAAK,CAAC/zE,MAAO,CAAC;EAElD,KAAM,IAAIrE,CAAC,GAAGynB,IAAI,EAAEznB,CAAC,GAAG2iF,EAAE,EAAE3iF,CAAC,EAAG,EAAG;IAElC,IAAM0vD,IAAI,GAAG1vD,CAAC,GAAG,CAAC;IAClB0iF,MAAM,CAAC1+E,IAAI,IAAA0gB,MAAA,CAAKgrC,IAAI,KAAK8yB,SAAS,GAAG,GAAG,GAAG,GAAG,OAAA99D,MAAA,CAAIgrC,IAAI,QAAAhrC,MAAA,CAAK0zD,KAAK,CAAEp4E,CAAC,CAAE,CAAG,CAAC;EAE1E;EAEA,OAAO0iF,MAAM,CAACE,IAAI,CAAE,IAAK,CAAC;AAE3B;AAEA,SAASC,qBAAqBA,CAAEr+D,UAAU,EAAG;EAE5C,IAAMs+D,gBAAgB,GAAG3+D,eAAe,CAACe,YAAY,CAAEf,eAAe,CAACI,iBAAkB,CAAC;EAC1F,IAAMw+D,iBAAiB,GAAG5+D,eAAe,CAACe,YAAY,CAAEV,UAAW,CAAC;EAEpE,IAAIw+D,YAAY;EAEhB,IAAKF,gBAAgB,KAAKC,iBAAiB,EAAG;IAE7CC,YAAY,GAAG,EAAE;EAElB,CAAC,MAAM,IAAKF,gBAAgB,KAAKvxE,WAAW,IAAIwxE,iBAAiB,KAAKzxE,eAAe,EAAG;IAEvF0xE,YAAY,GAAG,6BAA6B;EAE7C,CAAC,MAAM,IAAKF,gBAAgB,KAAKxxE,eAAe,IAAIyxE,iBAAiB,KAAKxxE,WAAW,EAAG;IAEvFyxE,YAAY,GAAG,6BAA6B;EAE7C;EAEA,QAASx+D,UAAU;IAElB,KAAKvT,oBAAoB;IACzB,KAAKE,yBAAyB;MAC7B,OAAO,CAAE6xE,YAAY,EAAE,oBAAoB,CAAE;IAE9C,KAAKhyE,cAAc;IACnB,KAAKE,mBAAmB;MACvB,OAAO,CAAE8xE,YAAY,EAAE,kBAAkB,CAAE;IAE5C;MACC9pE,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEqL,UAAW,CAAC;MAC1E,OAAO,CAAEw+D,YAAY,EAAE,oBAAoB,CAAE;EAE/C;AAED;AAEA,SAASC,eAAeA,CAAExwB,EAAE,EAAE/D,MAAM,EAAExtD,IAAI,EAAG;EAE5C,IAAMgiF,MAAM,GAAGzwB,EAAE,CAAC0wB,kBAAkB,CAAEz0B,MAAM,EAAE+D,EAAE,CAAC2wB,cAAe,CAAC;EACjE,IAAMC,MAAM,GAAG5wB,EAAE,CAAC6wB,gBAAgB,CAAE50B,MAAO,CAAC,CAAC60B,IAAI,CAAC,CAAC;EAEnD,IAAKL,MAAM,IAAIG,MAAM,KAAK,EAAE,EAAG,OAAO,EAAE;EAExC,IAAMG,YAAY,GAAG,gBAAgB,CAAC/qC,IAAI,CAAE4qC,MAAO,CAAC;EACpD,IAAKG,YAAY,EAAG;IAEnB;IACA;;IAEA,IAAMhB,SAAS,GAAG7pC,QAAQ,CAAE6qC,YAAY,CAAE,CAAC,CAAG,CAAC;IAC/C,OAAOtiF,IAAI,CAACuiF,WAAW,CAAC,CAAC,GAAG,MAAM,GAAGJ,MAAM,GAAG,MAAM,GAAGd,YAAY,CAAE9vB,EAAE,CAACixB,eAAe,CAAEh1B,MAAO,CAAC,EAAE8zB,SAAU,CAAC;EAE/G,CAAC,MAAM;IAEN,OAAOa,MAAM;EAEd;AAED;AAEA,SAASM,wBAAwBA,CAAEC,YAAY,EAAEp/D,UAAU,EAAG;EAE7D,IAAMk0B,UAAU,GAAGmqC,qBAAqB,CAAEr+D,UAAW,CAAC;EACtD,eAAAE,MAAA,CAAek/D,YAAY,8BAAAl/D,MAAA,CAA2Bg0B,UAAU,CAAE,CAAC,CAAE,QAAAh0B,MAAA,CAAKg0B,UAAU,CAAE,CAAC,CAAE;AAE1F;AAEA,SAASmrC,sBAAsBA,CAAED,YAAY,EAAErc,WAAW,EAAG;EAE5D,IAAIuc,eAAe;EAEnB,QAASvc,WAAW;IAEnB,KAAK18D,iBAAiB;MACrBi5E,eAAe,GAAG,QAAQ;MAC1B;IAED,KAAKh5E,mBAAmB;MACvBg5E,eAAe,GAAG,UAAU;MAC5B;IAED,KAAK/4E,iBAAiB;MACrB+4E,eAAe,GAAG,iBAAiB;MACnC;IAED,KAAK94E,qBAAqB;MACzB84E,eAAe,GAAG,YAAY;MAC9B;IAED,KAAK74E,iBAAiB;MACrB64E,eAAe,GAAG,QAAQ;MAC1B;IAED;MACC5qE,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEouD,WAAY,CAAC;MAC3Euc,eAAe,GAAG,QAAQ;EAE5B;EAEA,OAAO,OAAO,GAAGF,YAAY,GAAG,0BAA0B,GAAGE,eAAe,GAAG,yBAAyB;AAEzG;AAEA,SAASC,kBAAkBA,CAAEv3C,UAAU,EAAG;EAEzC,IAAMw3C,MAAM,GAAG,CACZx3C,UAAU,CAACy3C,oBAAoB,IAAI,CAAC,CAAEz3C,UAAU,CAAC03C,kBAAkB,IAAI13C,UAAU,CAAC4I,OAAO,IAAI5I,UAAU,CAAC23C,qBAAqB,IAAI33C,UAAU,CAAC4H,kBAAkB,IAAI5H,UAAU,CAAC+K,WAAW,IAAI/K,UAAU,CAAC43C,QAAQ,KAAK,UAAU,GAAK,iDAAiD,GAAG,EAAE,EAC3R,CAAE53C,UAAU,CAAC63C,kBAAkB,IAAI73C,UAAU,CAAC4gC,sBAAsB,KAAM5gC,UAAU,CAAC83C,0BAA0B,GAAG,uCAAuC,GAAG,EAAE,EAC5J93C,UAAU,CAAC+3C,oBAAoB,IAAI/3C,UAAU,CAACg4C,4BAA4B,GAAK,0CAA0C,GAAG,EAAE,EAChI,CAAEh4C,UAAU,CAACi4C,yBAAyB,IAAIj4C,UAAU,CAAC0J,MAAM,IAAI1J,UAAU,CAACgK,YAAY,KAAMhK,UAAU,CAACk4C,iCAAiC,GAAG,+CAA+C,GAAG,EAAE,CAC/L;EAED,OAAOV,MAAM,CAACW,MAAM,CAAEC,eAAgB,CAAC,CAAChC,IAAI,CAAE,IAAK,CAAC;AAErD;AAEA,SAASiC,eAAeA,CAAEh8B,OAAO,EAAG;EAEnC,IAAMm7B,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAMv/E,IAAI,IAAIokD,OAAO,EAAG;IAE7B,IAAM9oD,OAAK,GAAG8oD,OAAO,CAAEpkD,IAAI,CAAE;IAE7B,IAAK1E,OAAK,KAAK,KAAK,EAAG;IAEvBikF,MAAM,CAAChgF,IAAI,CAAE,UAAU,GAAGS,IAAI,GAAG,GAAG,GAAG1E,OAAM,CAAC;EAE/C;EAEA,OAAOikF,MAAM,CAACpB,IAAI,CAAE,IAAK,CAAC;AAE3B;AAEA,SAASkC,uBAAuBA,CAAEryB,EAAE,EAAE+V,OAAO,EAAG;EAE/C,IAAMjvC,UAAU,GAAG,CAAC,CAAC;EAErB,IAAM55B,CAAC,GAAG8yD,EAAE,CAACkvB,mBAAmB,CAAEnZ,OAAO,EAAE/V,EAAE,CAACsyB,iBAAkB,CAAC;EAEjE,KAAM,IAAI/kF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAG,EAAG;IAE9B,IAAMisE,IAAI,GAAGxZ,EAAE,CAACuyB,eAAe,CAAExc,OAAO,EAAExoE,CAAE,CAAC;IAC7C,IAAMyE,IAAI,GAAGwnE,IAAI,CAACxnE,IAAI;IAEtB,IAAI0mE,YAAY,GAAG,CAAC;IACpB,IAAKc,IAAI,CAAC/qE,IAAI,KAAKuxD,EAAE,CAACwyB,UAAU,EAAG9Z,YAAY,GAAG,CAAC;IACnD,IAAKc,IAAI,CAAC/qE,IAAI,KAAKuxD,EAAE,CAACyyB,UAAU,EAAG/Z,YAAY,GAAG,CAAC;IACnD,IAAKc,IAAI,CAAC/qE,IAAI,KAAKuxD,EAAE,CAAC0yB,UAAU,EAAGha,YAAY,GAAG,CAAC;;IAEnD;;IAEA5xC,UAAU,CAAE90B,IAAI,CAAE,GAAG;MACpBvD,IAAI,EAAE+qE,IAAI,CAAC/qE,IAAI;MACfipE,QAAQ,EAAE1X,EAAE,CAAC2yB,iBAAiB,CAAE5c,OAAO,EAAE/jE,IAAK,CAAC;MAC/C0mE,YAAY,EAAEA;IACf,CAAC;EAEF;EAEA,OAAO5xC,UAAU;AAElB;AAEA,SAASqrD,eAAeA,CAAErsC,MAAM,EAAG;EAElC,OAAOA,MAAM,KAAK,EAAE;AAErB;AAEA,SAAS8sC,gBAAgBA,CAAE9sC,MAAM,EAAE/L,UAAU,EAAG;EAE/C,IAAM84C,kBAAkB,GAAG94C,UAAU,CAAC+4C,mBAAmB,GAAG/4C,UAAU,CAACg5C,gBAAgB,GAAGh5C,UAAU,CAACi5C,2BAA2B;EAEhI,OAAOltC,MAAM,CACXmtC,OAAO,CAAE,iBAAiB,EAAEl5C,UAAU,CAACm5C,YAAa,CAAC,CACrDD,OAAO,CAAE,kBAAkB,EAAEl5C,UAAU,CAACo5C,aAAc,CAAC,CACvDF,OAAO,CAAE,sBAAsB,EAAEl5C,UAAU,CAACg5C,gBAAiB,CAAC,CAC9DE,OAAO,CAAE,wBAAwB,EAAEJ,kBAAmB,CAAC,CACvDI,OAAO,CAAE,uBAAuB,EAAEl5C,UAAU,CAACq5C,iBAAkB,CAAC,CAChEH,OAAO,CAAE,mBAAmB,EAAEl5C,UAAU,CAACs5C,cAAe,CAAC,CACzDJ,OAAO,CAAE,kBAAkB,EAAEl5C,UAAU,CAACu5C,aAAc,CAAC,CACvDL,OAAO,CAAE,wBAAwB,EAAEl5C,UAAU,CAACw5C,kBAAmB,CAAC,CAClEN,OAAO,CAAE,mCAAmC,EAAEl5C,UAAU,CAACi5C,2BAA4B,CAAC,CACtFC,OAAO,CAAE,yBAAyB,EAAEl5C,UAAU,CAAC+4C,mBAAoB,CAAC,CACpEG,OAAO,CAAE,0BAA0B,EAAEl5C,UAAU,CAACy5C,oBAAqB,CAAC;AAEzE;AAEA,SAASC,wBAAwBA,CAAE3tC,MAAM,EAAE/L,UAAU,EAAG;EAEvD,OAAO+L,MAAM,CACXmtC,OAAO,CAAE,sBAAsB,EAAEl5C,UAAU,CAAC25C,iBAAkB,CAAC,CAC/DT,OAAO,CAAE,wBAAwB,EAAIl5C,UAAU,CAAC25C,iBAAiB,GAAG35C,UAAU,CAAC45C,mBAAsB,CAAC;AAEzG;;AAEA;;AAEA,IAAMC,cAAc,GAAG,kCAAkC;AAEzD,SAASC,eAAeA,CAAE/tC,MAAM,EAAG;EAElC,OAAOA,MAAM,CAACmtC,OAAO,CAAEW,cAAc,EAAEE,eAAgB,CAAC;AAEzD;AAEA,IAAMC,cAAc,GAAG,IAAIC,GAAG,CAAE,CAC/B,CAAE,oBAAoB,EAAE,qBAAqB,CAAE;AAAE;AACjD,CAAE,yBAAyB,EAAE,0BAA0B,CAAE;AAAE;AAC3D,CAAE,iBAAiB,EAAE,iBAAiB,CAAE,CAAE;AAAA,CACzC,CAAC;;AAEH,SAASF,eAAeA,CAAEjF,KAAK,EAAEoF,OAAO,EAAG;EAE1C,IAAInuC,MAAM,GAAG+kB,WAAW,CAAEopB,OAAO,CAAE;EAEnC,IAAKnuC,MAAM,KAAKvxC,SAAS,EAAG;IAE3B,IAAM2/E,UAAU,GAAGH,cAAc,CAACtsE,GAAG,CAAEwsE,OAAQ,CAAC;IAEhD,IAAKC,UAAU,KAAK3/E,SAAS,EAAG;MAE/BuxC,MAAM,GAAG+kB,WAAW,CAAEqpB,UAAU,CAAE;MAClCztE,OAAO,CAACC,IAAI,CAAE,+EAA+E,EAAEutE,OAAO,EAAEC,UAAW,CAAC;IAErH,CAAC,MAAM;MAEN,MAAM,IAAI/jF,KAAK,CAAE,4BAA4B,GAAG8jF,OAAO,GAAG,GAAI,CAAC;IAEhE;EAED;EAEA,OAAOJ,eAAe,CAAE/tC,MAAO,CAAC;AAEjC;;AAEA;;AAEA,IAAMquC,iBAAiB,GAAG,8IAA8I;AAExK,SAASC,WAAWA,CAAEtuC,MAAM,EAAG;EAE9B,OAAOA,MAAM,CAACmtC,OAAO,CAAEkB,iBAAiB,EAAEE,YAAa,CAAC;AAEzD;AAEA,SAASA,YAAYA,CAAExF,KAAK,EAAE5hC,KAAK,EAAEiG,GAAG,EAAEohC,OAAO,EAAG;EAEnD,IAAIxuC,MAAM,GAAG,EAAE;EAEf,KAAM,IAAIv4C,CAAC,GAAG24C,QAAQ,CAAE+G,KAAM,CAAC,EAAE1/C,CAAC,GAAG24C,QAAQ,CAAEgN,GAAI,CAAC,EAAE3lD,CAAC,EAAG,EAAG;IAE5Du4C,MAAM,IAAIwuC,OAAO,CACfrB,OAAO,CAAE,cAAc,EAAE,IAAI,GAAG1lF,CAAC,GAAG,IAAK,CAAC,CAC1C0lF,OAAO,CAAE,sBAAsB,EAAE1lF,CAAE,CAAC;EAEvC;EAEA,OAAOu4C,MAAM;AAEd;;AAEA;;AAEA,SAASyuC,iBAAiBA,CAAEx6C,UAAU,EAAG;EAExC,IAAIy6C,eAAe,GAAG,YAAY,GAAGz6C,UAAU,CAAC2F,SAAS,GAAG,qBAAqB,GAAG3F,UAAU,CAAC2F,SAAS,GAAG,OAAO;EAElH,IAAK3F,UAAU,CAAC2F,SAAS,KAAK,OAAO,EAAG;IAEvC80C,eAAe,IAAI,0BAA0B;EAE9C,CAAC,MAAM,IAAKz6C,UAAU,CAAC2F,SAAS,KAAK,SAAS,EAAG;IAEhD80C,eAAe,IAAI,4BAA4B;EAEhD,CAAC,MAAM,IAAKz6C,UAAU,CAAC2F,SAAS,KAAK,MAAM,EAAG;IAE7C80C,eAAe,IAAI,yBAAyB;EAE7C;EAEA,OAAOA,eAAe;AAEvB;AAEA,SAASC,2BAA2BA,CAAE16C,UAAU,EAAG;EAElD,IAAI26C,mBAAmB,GAAG,sBAAsB;EAEhD,IAAK36C,UAAU,CAAC46C,aAAa,KAAKh/E,YAAY,EAAG;IAEhD++E,mBAAmB,GAAG,oBAAoB;EAE3C,CAAC,MAAM,IAAK36C,UAAU,CAAC46C,aAAa,KAAK/+E,gBAAgB,EAAG;IAE3D8+E,mBAAmB,GAAG,yBAAyB;EAEhD,CAAC,MAAM,IAAK36C,UAAU,CAAC46C,aAAa,KAAK9+E,YAAY,EAAG;IAEvD6+E,mBAAmB,GAAG,oBAAoB;EAE3C;EAEA,OAAOA,mBAAmB;AAE3B;AAEA,SAASE,wBAAwBA,CAAE76C,UAAU,EAAG;EAE/C,IAAI86C,gBAAgB,GAAG,kBAAkB;EAEzC,IAAK96C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAAC+6C,UAAU;MAE7B,KAAKp8E,qBAAqB;MAC1B,KAAKC,qBAAqB;QACzBk8E,gBAAgB,GAAG,kBAAkB;QACrC;MAED,KAAK/7E,uBAAuB;QAC3B+7E,gBAAgB,GAAG,qBAAqB;QACxC;IAEF;EAED;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASE,wBAAwBA,CAAEh7C,UAAU,EAAG;EAE/C,IAAIi7C,gBAAgB,GAAG,wBAAwB;EAE/C,IAAKj7C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAAC+6C,UAAU;MAE7B,KAAKn8E,qBAAqB;QAEzBq8E,gBAAgB,GAAG,wBAAwB;QAC3C;IAEF;EAED;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASC,4BAA4BA,CAAEl7C,UAAU,EAAG;EAEnD,IAAIm7C,oBAAoB,GAAG,sBAAsB;EAEjD,IAAKn7C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAAC2J,OAAO;MAE1B,KAAK1rC,iBAAiB;QACrBk9E,oBAAoB,GAAG,0BAA0B;QACjD;MAED,KAAKj9E,YAAY;QAChBi9E,oBAAoB,GAAG,qBAAqB;QAC5C;MAED,KAAKh9E,YAAY;QAChBg9E,oBAAoB,GAAG,qBAAqB;QAC5C;IAEF;EAED;EAEA,OAAOA,oBAAoB;AAE5B;AAEA,SAASC,kBAAkBA,CAAEp7C,UAAU,EAAG;EAEzC,IAAMq7C,WAAW,GAAGr7C,UAAU,CAAC03C,kBAAkB;EAEjD,IAAK2D,WAAW,KAAK,IAAI,EAAG,OAAO,IAAI;EAEvC,IAAMC,MAAM,GAAG/yE,IAAI,CAACu+D,IAAI,CAAEuU,WAAY,CAAC,GAAG,CAAC;EAE3C,IAAME,WAAW,GAAG,GAAG,GAAGF,WAAW;EAErC,IAAMG,UAAU,GAAG,GAAG,IAAK,CAAC,GAAGjzE,IAAI,CAACa,GAAG,CAAEb,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAEgwE,MAAO,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC,CAAE;EAE1E,OAAO;IAAEE,UAAU,EAAVA,UAAU;IAAED,WAAW,EAAXA,WAAW;IAAED,MAAM,EAANA;EAAO,CAAC;AAE3C;AAEA,SAASG,YAAYA,CAAEhgC,QAAQ,EAAEigC,QAAQ,EAAE17C,UAAU,EAAE07B,aAAa,EAAG;EAEtE;EACA;;EAEA,IAAMzV,EAAE,GAAGxK,QAAQ,CAACjiC,UAAU,CAAC,CAAC;EAEhC,IAAM6iC,OAAO,GAAGrc,UAAU,CAACqc,OAAO;EAElC,IAAIE,YAAY,GAAGvc,UAAU,CAACuc,YAAY;EAC1C,IAAIC,cAAc,GAAGxc,UAAU,CAACwc,cAAc;EAE9C,IAAMm+B,mBAAmB,GAAGD,2BAA2B,CAAE16C,UAAW,CAAC;EACrE,IAAM86C,gBAAgB,GAAGD,wBAAwB,CAAE76C,UAAW,CAAC;EAC/D,IAAMi7C,gBAAgB,GAAGD,wBAAwB,CAAEh7C,UAAW,CAAC;EAC/D,IAAMm7C,oBAAoB,GAAGD,4BAA4B,CAAEl7C,UAAW,CAAC;EACvE,IAAM27C,gBAAgB,GAAGP,kBAAkB,CAAEp7C,UAAW,CAAC;EAEzD,IAAM47C,gBAAgB,GAAG57C,UAAU,CAACmmB,QAAQ,GAAG,EAAE,GAAGoxB,kBAAkB,CAAEv3C,UAAW,CAAC;EAEpF,IAAM67C,aAAa,GAAGxD,eAAe,CAAEh8B,OAAQ,CAAC;EAEhD,IAAM2f,OAAO,GAAG/V,EAAE,CAAC61B,aAAa,CAAC,CAAC;EAElC,IAAIC,YAAY,EAAEC,cAAc;EAChC,IAAIC,aAAa,GAAGj8C,UAAU,CAACmd,WAAW,GAAG,WAAW,GAAGnd,UAAU,CAACmd,WAAW,GAAG,IAAI,GAAG,EAAE;EAE7F,IAAKnd,UAAU,CAACk8C,mBAAmB,EAAG;IAErCH,YAAY,GAAG,CAEd,sBAAsB,GAAG/7C,UAAU,CAACm8C,UAAU,EAC9C,sBAAsB,GAAGn8C,UAAU,CAACo8C,UAAU,EAE9CP,aAAa,CAEb,CAAC1D,MAAM,CAAEC,eAAgB,CAAC,CAAChC,IAAI,CAAE,IAAK,CAAC;IAExC,IAAK2F,YAAY,CAAClkF,MAAM,GAAG,CAAC,EAAG;MAE9BkkF,YAAY,IAAI,IAAI;IAErB;IAEAC,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhB,sBAAsB,GAAG57C,UAAU,CAACm8C,UAAU,EAC9C,sBAAsB,GAAGn8C,UAAU,CAACo8C,UAAU,EAE9CP,aAAa,CAEb,CAAC1D,MAAM,CAAEC,eAAgB,CAAC,CAAChC,IAAI,CAAE,IAAK,CAAC;IAExC,IAAK4F,cAAc,CAACnkF,MAAM,GAAG,CAAC,EAAG;MAEhCmkF,cAAc,IAAI,IAAI;IAEvB;EAED,CAAC,MAAM;IAEND,YAAY,GAAG,CAEdvB,iBAAiB,CAAEx6C,UAAW,CAAC,EAE/B,sBAAsB,GAAGA,UAAU,CAACm8C,UAAU,EAC9C,sBAAsB,GAAGn8C,UAAU,CAACo8C,UAAU,EAE9CP,aAAa,EAEb77C,UAAU,CAACq8C,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDr8C,UAAU,CAACs8C,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAEhEt8C,UAAU,CAACu8C,MAAM,IAAIv8C,UAAU,CAACgL,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5DhL,UAAU,CAACu8C,MAAM,IAAIv8C,UAAU,CAACw8C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjEx8C,UAAU,CAACqI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCrI,UAAU,CAAC0J,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C1J,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAGuxC,gBAAgB,GAAG,EAAE,EACtDj7C,UAAU,CAACwI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDxI,UAAU,CAAC0I,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C1I,UAAU,CAAC4I,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/C5I,UAAU,CAAC8I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD9I,UAAU,CAACy8C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1Ez8C,UAAU,CAAC23C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E33C,UAAU,CAACiJ,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjJ,UAAU,CAACsJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDtJ,UAAU,CAAChkB,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDgkB,UAAU,CAACoI,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3DpI,UAAU,CAAC0H,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1H,UAAU,CAAC2H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E3H,UAAU,CAAC4H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE5H,UAAU,CAACiI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DjI,UAAU,CAACkI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFlI,UAAU,CAACuJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDvJ,UAAU,CAACyJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEzJ,UAAU,CAACwJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ExJ,UAAU,CAACoJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpJ,UAAU,CAACqJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDrJ,UAAU,CAACuI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDvI,UAAU,CAACoE,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDpE,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDhK,UAAU,CAACiK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjK,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDnK,UAAU,CAAC44B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D54B,UAAU,CAAC84B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE;IAEpE;;IAEA94B,UAAU,CAAC08C,KAAK,GAAG,iBAAiB,GAAG18C,UAAU,CAAC08C,KAAK,GAAG,EAAE,EAC5D18C,UAAU,CAAC28C,UAAU,GAAG,sBAAsB,GAAG38C,UAAU,CAAC28C,UAAU,GAAG,EAAE,EAC3E38C,UAAU,CAAC48C,UAAU,GAAG,sBAAsB,GAAG58C,UAAU,CAAC48C,UAAU,GAAG,EAAE,EAC3E58C,UAAU,CAAC68C,OAAO,GAAG,mBAAmB,GAAG78C,UAAU,CAAC68C,OAAO,GAAG,EAAE,EAClE78C,UAAU,CAAC88C,aAAa,GAAG,yBAAyB,GAAG98C,UAAU,CAAC88C,aAAa,GAAG,EAAE,EACpF98C,UAAU,CAAC+8C,SAAS,GAAG,qBAAqB,GAAG/8C,UAAU,CAAC+8C,SAAS,GAAG,EAAE,EACxE/8C,UAAU,CAACg9C,WAAW,GAAG,uBAAuB,GAAGh9C,UAAU,CAACg9C,WAAW,GAAG,EAAE,EAC9Eh9C,UAAU,CAACi9C,iBAAiB,GAAG,6BAA6B,GAAGj9C,UAAU,CAACi9C,iBAAiB,GAAG,EAAE,EAEhGj9C,UAAU,CAACk9C,cAAc,GAAG,0BAA0B,GAAGl9C,UAAU,CAACk9C,cAAc,GAAG,EAAE,EACvFl9C,UAAU,CAACm9C,cAAc,GAAG,0BAA0B,GAAGn9C,UAAU,CAACm9C,cAAc,GAAG,EAAE,EAEvFn9C,UAAU,CAACo9C,eAAe,GAAG,2BAA2B,GAAGp9C,UAAU,CAACo9C,eAAe,GAAG,EAAE,EAE1Fp9C,UAAU,CAACq9C,cAAc,GAAG,0BAA0B,GAAGr9C,UAAU,CAACq9C,cAAc,GAAG,EAAE,EACvFr9C,UAAU,CAACs9C,oBAAoB,GAAG,iCAAiC,GAAGt9C,UAAU,CAACs9C,oBAAoB,GAAG,EAAE,EAC1Gt9C,UAAU,CAACu9C,uBAAuB,GAAG,oCAAoC,GAAGv9C,UAAU,CAACu9C,uBAAuB,GAAG,EAAE,EAEnHv9C,UAAU,CAACw9C,gBAAgB,GAAG,4BAA4B,GAAGx9C,UAAU,CAACw9C,gBAAgB,GAAG,EAAE,EAC7Fx9C,UAAU,CAACy9C,yBAAyB,GAAG,sCAAsC,GAAGz9C,UAAU,CAACy9C,yBAAyB,GAAG,EAAE,EAEzHz9C,UAAU,CAAC09C,eAAe,GAAG,4BAA4B,GAAG19C,UAAU,CAAC09C,eAAe,GAAG,EAAE,EAC3F19C,UAAU,CAAC29C,mBAAmB,GAAG,gCAAgC,GAAG39C,UAAU,CAAC29C,mBAAmB,GAAG,EAAE,EAEvG39C,UAAU,CAAC49C,aAAa,GAAG,yBAAyB,GAAG59C,UAAU,CAAC49C,aAAa,GAAG,EAAE,EACpF59C,UAAU,CAAC69C,kBAAkB,GAAG,+BAA+B,GAAG79C,UAAU,CAAC69C,kBAAkB,GAAG,EAAE,EACpG79C,UAAU,CAAC89C,sBAAsB,GAAG,mCAAmC,GAAG99C,UAAU,CAAC89C,sBAAsB,GAAG,EAAE,EAEhH99C,UAAU,CAAC+9C,iBAAiB,GAAG,6BAA6B,GAAG/9C,UAAU,CAAC+9C,iBAAiB,GAAG,EAAE,EAChG/9C,UAAU,CAACg+C,cAAc,GAAG,0BAA0B,GAAGh+C,UAAU,CAACg+C,cAAc,GAAG,EAAE;IAEvF;;IAEAh+C,UAAU,CAACi+C,cAAc,IAAIj+C,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1F/K,UAAU,CAACiE,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAClDjE,UAAU,CAACk+C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDl+C,UAAU,CAACm+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cn+C,UAAU,CAACo+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cp+C,UAAU,CAACq+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cr+C,UAAU,CAACs+C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDt+C,UAAU,CAAC+K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD/K,UAAU,CAACu+C,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjDv+C,UAAU,CAACktC,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDltC,UAAU,CAACmtC,YAAY,IAAIntC,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE,EAC3F/K,UAAU,CAACotC,WAAW,IAAIptC,UAAU,CAACmmB,QAAQ,GAAK,yBAAyB,GAAG,EAAE,EAChFnmB,UAAU,CAAC6sC,iBAAiB,GAAG,CAAC,IAAI7sC,UAAU,CAACmmB,QAAQ,GAAK,8BAA8B,GAAG,EAAE,EAC/FnmB,UAAU,CAAC6sC,iBAAiB,GAAG,CAAC,IAAI7sC,UAAU,CAACmmB,QAAQ,GAAK,sCAAsC,GAAGnmB,UAAU,CAACw+C,kBAAkB,GAAG,EAAE,EACvIx+C,UAAU,CAAC6sC,iBAAiB,GAAG,CAAC,IAAI7sC,UAAU,CAACmmB,QAAQ,GAAK,6BAA6B,GAAGnmB,UAAU,CAAC6sC,iBAAiB,GAAG,EAAE,EAC/H7sC,UAAU,CAACy+C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDz+C,UAAU,CAAC0+C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD1+C,UAAU,CAAC2+C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D3+C,UAAU,CAAC2+C,gBAAgB,GAAG,UAAU,GAAGhE,mBAAmB,GAAG,EAAE,EAEnE36C,UAAU,CAACsK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAE/DtK,UAAU,CAAC4+C,cAAc,GAAG,CAAC,GAAG,0BAA0B,GAAG,EAAE,EAE/D5+C,UAAU,CAAC6+C,eAAe,GAAG,uBAAuB,GAAG,EAAE,EAEzD7+C,UAAU,CAAC4gC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChE5gC,UAAU,CAAC4gC,sBAAsB,IAAI5gC,UAAU,CAAC83C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,2BAA2B,EAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,0BAA0B,EAC1B,4BAA4B,EAC5B,8BAA8B,EAC9B,8BAA8B,EAE9B,uBAAuB,EAEvB,iCAAiC,EAEjC,QAAQ,EAER,6BAA6B,EAE7B,gCAAgC,EAEhC,QAAQ,EAER,0BAA0B,EAC1B,wBAAwB,EACxB,oBAAoB,EAEpB,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,oBAAoB,EAEpB,0BAA0B,EAE1B,QAAQ,EAER,gCAAgC,EAEhC,wBAAwB,EAExB,4BAA4B,EAE5B,wBAAwB,EAExB,QAAQ,EAER,0EAA0E,EAE1E,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAE/B,0BAA0B,EAE1B,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,QAAQ,EAER,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,SAAS,EAET,QAAQ,EAER,qBAAqB,EAErB,4BAA4B,EAC5B,6BAA6B,EAE7B,QAAQ,EAER,IAAI,CAEJ,CAACK,MAAM,CAAEC,eAAgB,CAAC,CAAChC,IAAI,CAAE,IAAK,CAAC;IAExC4F,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhBpB,iBAAiB,CAAEx6C,UAAW,CAAC,EAE/B,sBAAsB,GAAGA,UAAU,CAACm8C,UAAU,EAC9C,sBAAsB,GAAGn8C,UAAU,CAACo8C,UAAU,EAE9CP,aAAa,EAEb77C,UAAU,CAACu8C,MAAM,IAAIv8C,UAAU,CAACgL,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5DhL,UAAU,CAACu8C,MAAM,IAAIv8C,UAAU,CAACw8C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjEx8C,UAAU,CAACqI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCrI,UAAU,CAACsI,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CtI,UAAU,CAAC0J,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C1J,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAGoxC,gBAAgB,GAAG,EAAE,EACtD96C,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAGuxC,gBAAgB,GAAG,EAAE,EACtDj7C,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAGyxC,oBAAoB,GAAG,EAAE,EAC1DQ,gBAAgB,GAAG,6BAA6B,GAAGA,gBAAgB,CAACH,UAAU,GAAG,EAAE,EACnFG,gBAAgB,GAAG,8BAA8B,GAAGA,gBAAgB,CAACJ,WAAW,GAAG,EAAE,EACrFI,gBAAgB,GAAG,yBAAyB,GAAGA,gBAAgB,CAACL,MAAM,GAAG,IAAI,GAAG,EAAE,EAClFt7C,UAAU,CAACwI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDxI,UAAU,CAAC0I,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C1I,UAAU,CAAC4I,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/C5I,UAAU,CAAC8I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD9I,UAAU,CAACy8C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1Ez8C,UAAU,CAAC23C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E33C,UAAU,CAACsJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDtJ,UAAU,CAAChkB,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDgkB,UAAU,CAACoI,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3DpI,UAAU,CAACwH,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDxH,UAAU,CAAC0H,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1H,UAAU,CAAC2H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E3H,UAAU,CAAC4H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE5H,UAAU,CAAC8H,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD9H,UAAU,CAACiI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DjI,UAAU,CAACkI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFlI,UAAU,CAACuJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDvJ,UAAU,CAACyJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEzJ,UAAU,CAACwJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ExJ,UAAU,CAACoJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpJ,UAAU,CAACqJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDrJ,UAAU,CAACuI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDvI,UAAU,CAAC0K,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD1K,UAAU,CAACoE,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDpE,UAAU,CAAC+G,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C/G,UAAU,CAAC44B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D54B,UAAU,CAAC84B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE,EAEpE94B,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDhK,UAAU,CAACiK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjK,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDnK,UAAU,CAACi+C,cAAc,IAAIj+C,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1F/K,UAAU,CAACiE,YAAY,IAAIjE,UAAU,CAACs8C,eAAe,GAAG,mBAAmB,GAAG,EAAE,EAChFt8C,UAAU,CAACk+C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDl+C,UAAU,CAACm+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cn+C,UAAU,CAACo+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cp+C,UAAU,CAACq+C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cr+C,UAAU,CAACs+C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDt+C,UAAU,CAAC+J,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvD/J,UAAU,CAAC+K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD/K,UAAU,CAACy+C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDz+C,UAAU,CAAC0+C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD1+C,UAAU,CAAC2+C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D3+C,UAAU,CAAC2+C,gBAAgB,GAAG,UAAU,GAAGhE,mBAAmB,GAAG,EAAE,EAEnE36C,UAAU,CAACiG,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElEjG,UAAU,CAAC4+C,cAAc,GAAG,CAAC,GAAG,0BAA0B,GAAG,EAAE,EAE/D5+C,UAAU,CAAC6+C,eAAe,GAAG,uBAAuB,GAAG,EAAE,EAEzD7+C,UAAU,CAAC8+C,kBAAkB,GAAG,8BAA8B,GAAG,EAAE,EAEnE9+C,UAAU,CAAC4gC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChE5gC,UAAU,CAAC4gC,sBAAsB,IAAI5gC,UAAU,CAAC83C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,0BAA0B,EAC1B,8BAA8B,EAC9B,8BAA8B,EAE5B93C,UAAU,CAAC+6B,WAAW,KAAK38D,aAAa,GAAK,sBAAsB,GAAG,EAAE,EACxE4hC,UAAU,CAAC+6B,WAAW,KAAK38D,aAAa,GAAK0yD,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;IAAE;IAC9F9wB,UAAU,CAAC+6B,WAAW,KAAK38D,aAAa,GAAKi5E,sBAAsB,CAAE,aAAa,EAAEr3C,UAAU,CAAC+6B,WAAY,CAAC,GAAG,EAAE,EAEnH/6B,UAAU,CAAC+F,SAAS,GAAG,mBAAmB,GAAG,EAAE,EAC/C/F,UAAU,CAAC++C,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAEzCjuB,WAAW,CAAE,0BAA0B,CAAE;IAAE;IAC3CqmB,wBAAwB,CAAE,qBAAqB,EAAEn3C,UAAU,CAAC2b,gBAAiB,CAAC,EAE9E3b,UAAU,CAACg/C,eAAe,GAAG,wBAAwB,GAAGh/C,UAAU,CAACi/C,YAAY,GAAG,EAAE,EAEpF,IAAI,CAEJ,CAAC9G,MAAM,CAAEC,eAAgB,CAAC,CAAChC,IAAI,CAAE,IAAK,CAAC;EAEzC;EAEA75B,YAAY,GAAGu9B,eAAe,CAAEv9B,YAAa,CAAC;EAC9CA,YAAY,GAAGs8B,gBAAgB,CAAEt8B,YAAY,EAAEvc,UAAW,CAAC;EAC3Duc,YAAY,GAAGm9B,wBAAwB,CAAEn9B,YAAY,EAAEvc,UAAW,CAAC;EAEnEwc,cAAc,GAAGs9B,eAAe,CAAEt9B,cAAe,CAAC;EAClDA,cAAc,GAAGq8B,gBAAgB,CAAEr8B,cAAc,EAAExc,UAAW,CAAC;EAC/Dwc,cAAc,GAAGk9B,wBAAwB,CAAEl9B,cAAc,EAAExc,UAAW,CAAC;EAEvEuc,YAAY,GAAG89B,WAAW,CAAE99B,YAAa,CAAC;EAC1CC,cAAc,GAAG69B,WAAW,CAAE79B,cAAe,CAAC;EAE9C,IAAKxc,UAAU,CAACmmB,QAAQ,IAAInmB,UAAU,CAACk8C,mBAAmB,KAAK,IAAI,EAAG;IAErE;;IAEAD,aAAa,GAAG,mBAAmB;IAEnCF,YAAY,GAAG,CACd,mCAAmC,EACnC,sBAAsB,EACtB,qBAAqB,EACrB,2BAA2B,CAC3B,CAAC3F,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAG2F,YAAY;IAEpCC,cAAc,GAAG,CAChB,oBAAoB,EAClBh8C,UAAU,CAACmd,WAAW,KAAKj2C,KAAK,GAAK,EAAE,GAAG,mDAAmD,EAC7F84B,UAAU,CAACmd,WAAW,KAAKj2C,KAAK,GAAK,EAAE,GAAG,mCAAmC,EAC/E,sCAAsC,EACtC,2BAA2B,EAC3B,6BAA6B,EAC7B,mCAAmC,EACnC,oCAAoC,EACpC,4CAA4C,EAC5C,sCAAsC,EACtC,sCAAsC,EACtC,8CAA8C,EAC9C,wCAAwC,CACxC,CAACkvE,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAG4F,cAAc;EAEvC;EAEA,IAAMkD,UAAU,GAAGjD,aAAa,GAAGF,YAAY,GAAGx/B,YAAY;EAC9D,IAAM4iC,YAAY,GAAGlD,aAAa,GAAGD,cAAc,GAAGx/B,cAAc;;EAEpE;EACA;;EAEA,IAAM4iC,cAAc,GAAG1J,WAAW,CAAEzvB,EAAE,EAAEA,EAAE,CAACqa,aAAa,EAAE4e,UAAW,CAAC;EACtE,IAAMG,gBAAgB,GAAG3J,WAAW,CAAEzvB,EAAE,EAAEA,EAAE,CAACua,eAAe,EAAE2e,YAAa,CAAC;EAE5El5B,EAAE,CAACq5B,YAAY,CAAEtjB,OAAO,EAAEojB,cAAe,CAAC;EAC1Cn5B,EAAE,CAACq5B,YAAY,CAAEtjB,OAAO,EAAEqjB,gBAAiB,CAAC;;EAE5C;;EAEA,IAAKr/C,UAAU,CAACid,mBAAmB,KAAKziD,SAAS,EAAG;IAEnDyrD,EAAE,CAACs5B,kBAAkB,CAAEvjB,OAAO,EAAE,CAAC,EAAEh8B,UAAU,CAACid,mBAAoB,CAAC;EAEpE,CAAC,MAAM,IAAKjd,UAAU,CAACktC,YAAY,KAAK,IAAI,EAAG;IAE9C;IACAjnB,EAAE,CAACs5B,kBAAkB,CAAEvjB,OAAO,EAAE,CAAC,EAAE,UAAW,CAAC;EAEhD;EAEA/V,EAAE,CAACu5B,WAAW,CAAExjB,OAAQ,CAAC;;EAEzB;EACA,IAAKvgB,QAAQ,CAACgkC,KAAK,CAACC,iBAAiB,EAAG;IAEvC,IAAMC,UAAU,GAAG15B,EAAE,CAAC25B,iBAAiB,CAAE5jB,OAAQ,CAAC,CAAC+a,IAAI,CAAC,CAAC;IACzD,IAAM8I,SAAS,GAAG55B,EAAE,CAAC6wB,gBAAgB,CAAEsI,cAAe,CAAC,CAACrI,IAAI,CAAC,CAAC;IAC9D,IAAM+I,WAAW,GAAG75B,EAAE,CAAC6wB,gBAAgB,CAAEuI,gBAAiB,CAAC,CAACtI,IAAI,CAAC,CAAC;IAElE,IAAIgJ,QAAQ,GAAG,IAAI;IACnB,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAK/5B,EAAE,CAACkvB,mBAAmB,CAAEnZ,OAAO,EAAE/V,EAAE,CAACg6B,WAAY,CAAC,KAAK,KAAK,EAAG;MAElEF,QAAQ,GAAG,KAAK;MAEhB,IAAK,OAAOtkC,QAAQ,CAACgkC,KAAK,CAACS,aAAa,KAAK,UAAU,EAAG;QAEzDzkC,QAAQ,CAACgkC,KAAK,CAACS,aAAa,CAAEj6B,EAAE,EAAE+V,OAAO,EAAEojB,cAAc,EAAEC,gBAAiB,CAAC;MAE9E,CAAC,MAAM;QAEN;;QAEA,IAAMc,YAAY,GAAG1J,eAAe,CAAExwB,EAAE,EAAEm5B,cAAc,EAAE,QAAS,CAAC;QACpE,IAAMgB,cAAc,GAAG3J,eAAe,CAAExwB,EAAE,EAAEo5B,gBAAgB,EAAE,UAAW,CAAC;QAE1E3yE,OAAO,CAACywB,KAAK,CACZ,mCAAmC,GAAG8oB,EAAE,CAACo6B,QAAQ,CAAC,CAAC,GAAG,KAAK,GAC3D,kBAAkB,GAAGp6B,EAAE,CAACkvB,mBAAmB,CAAEnZ,OAAO,EAAE/V,EAAE,CAACq6B,eAAgB,CAAC,GAAG,MAAM,GACnF,oBAAoB,GAAGX,UAAU,GAAG,IAAI,GACxCQ,YAAY,GAAG,IAAI,GACnBC,cACD,CAAC;MAEF;IAED,CAAC,MAAM,IAAKT,UAAU,KAAK,EAAE,EAAG;MAE/BjzE,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEgzE,UAAW,CAAC;IAEpE,CAAC,MAAM,IAAKE,SAAS,KAAK,EAAE,IAAIC,WAAW,KAAK,EAAE,EAAG;MAEpDE,eAAe,GAAG,KAAK;IAExB;IAEA,IAAKA,eAAe,EAAG;MAEtB,IAAI,CAACO,WAAW,GAAG;QAElBR,QAAQ,EAAEA,QAAQ;QAElBJ,UAAU,EAAEA,UAAU;QAEtBpjC,YAAY,EAAE;UAEb/wC,GAAG,EAAEq0E,SAAS;UACdW,MAAM,EAAEzE;QAET,CAAC;QAEDv/B,cAAc,EAAE;UAEfhxC,GAAG,EAAEs0E,WAAW;UAChBU,MAAM,EAAExE;QAET;MAED,CAAC;IAEF;EAED;;EAEA;;EAEA;EACA;EACA;;EAEA/1B,EAAE,CAACw6B,YAAY,CAAErB,cAAe,CAAC;EACjCn5B,EAAE,CAACw6B,YAAY,CAAEpB,gBAAiB,CAAC;;EAEnC;;EAEA,IAAIqB,cAAc;EAElB,IAAI,CAAC7S,WAAW,GAAG,YAAY;IAE9B,IAAK6S,cAAc,KAAKlmF,SAAS,EAAG;MAEnCkmF,cAAc,GAAG,IAAIxL,aAAa,CAAEjvB,EAAE,EAAE+V,OAAQ,CAAC;IAElD;IAEA,OAAO0kB,cAAc;EAEtB,CAAC;;EAED;;EAEA,IAAIrjB,gBAAgB;EAEpB,IAAI,CAACI,aAAa,GAAG,YAAY;IAEhC,IAAKJ,gBAAgB,KAAK7iE,SAAS,EAAG;MAErC6iE,gBAAgB,GAAGib,uBAAuB,CAAEryB,EAAE,EAAE+V,OAAQ,CAAC;IAE1D;IAEA,OAAOqB,gBAAgB;EAExB,CAAC;;EAED;;EAEA,IAAI,CAACsjB,OAAO,GAAG,YAAY;IAE1BjlB,aAAa,CAAC4D,sBAAsB,CAAE,IAAK,CAAC;IAE5CrZ,EAAE,CAAC26B,aAAa,CAAE5kB,OAAQ,CAAC;IAC3B,IAAI,CAACA,OAAO,GAAGxhE,SAAS;EAEzB,CAAC;;EAED;;EAEA,IAAI,CAAC9F,IAAI,GAAGsrC,UAAU,CAACm8C,UAAU;EACjC,IAAI,CAAClkF,IAAI,GAAG+nC,UAAU,CAACo8C,UAAU;EACjC,IAAI,CAACz+C,EAAE,GAAGm4C,cAAc,EAAG;EAC3B,IAAI,CAAC4F,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACmF,SAAS,GAAG,CAAC;EAClB,IAAI,CAAC7kB,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACzf,YAAY,GAAG6iC,cAAc;EAClC,IAAI,CAAC5iC,cAAc,GAAG6iC,gBAAgB;EAEtC,OAAO,IAAI;AAEZ;AAEA,IAAIyB,KAAK,GAAG,CAAC;AAAC,IAERC,gBAAgB;EAErB,SAAAA,iBAAA,EAAc;IAAAznF,eAAA,OAAAynF,gBAAA;IAEb,IAAI,CAACC,WAAW,GAAG,IAAI/G,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACgH,aAAa,GAAG,IAAIhH,GAAG,CAAC,CAAC;EAE/B;EAAClgF,YAAA,CAAAgnF,gBAAA;IAAAjnF,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQ4c,QAAQ,EAAG;MAElB,IAAMic,YAAY,GAAGjc,QAAQ,CAACic,YAAY;MAC1C,IAAMC,cAAc,GAAGlc,QAAQ,CAACkc,cAAc;MAE9C,IAAM0kC,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAAE5kC,YAAa,CAAC;MAC9D,IAAM6kC,mBAAmB,GAAG,IAAI,CAACD,eAAe,CAAE3kC,cAAe,CAAC;MAElE,IAAM6kC,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAEhhD,QAAS,CAAC;MAEnE,IAAK+gD,eAAe,CAACppE,GAAG,CAAEipE,iBAAkB,CAAC,KAAK,KAAK,EAAG;QAEzDG,eAAe,CAAClzE,GAAG,CAAE+yE,iBAAkB,CAAC;QACxCA,iBAAiB,CAACL,SAAS,EAAG;MAE/B;MAEA,IAAKQ,eAAe,CAACppE,GAAG,CAAEmpE,mBAAoB,CAAC,KAAK,KAAK,EAAG;QAE3DC,eAAe,CAAClzE,GAAG,CAAEizE,mBAAoB,CAAC;QAC1CA,mBAAmB,CAACP,SAAS,EAAG;MAEjC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/mF,GAAA;IAAAvG,KAAA,EAED,SAAA6pC,OAAQkD,QAAQ,EAAG;MAElB,IAAM+gD,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACvzE,GAAG,CAAE4yB,QAAS,CAAC;MAAC,IAAAihD,UAAA,GAAAhhC,0BAAA,CAEhC8gC,eAAe;QAAAG,MAAA;MAAA;QAA1C,KAAAD,UAAA,CAAAvsF,CAAA,MAAAwsF,MAAA,GAAAD,UAAA,CAAApuF,CAAA,IAAAkD,IAAA,GAA6C;UAAA,IAAjCorF,WAAW,GAAAD,MAAA,CAAAjuF,KAAA;UAEtBkuF,WAAW,CAACZ,SAAS,EAAG;UAExB,IAAKY,WAAW,CAACZ,SAAS,KAAK,CAAC,EAAG,IAAI,CAACG,WAAW,CAACx5B,MAAM,CAAEi6B,WAAW,CAACC,IAAK,CAAC;QAE/E;MAAC,SAAAjhC,GAAA;QAAA8gC,UAAA,CAAAzuF,CAAA,CAAA2tD,GAAA;MAAA;QAAA8gC,UAAA,CAAAxsF,CAAA;MAAA;MAED,IAAI,CAACksF,aAAa,CAACz5B,MAAM,CAAElnB,QAAS,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAAxmC,GAAA;IAAAvG,KAAA,EAED,SAAAouF,kBAAmBrhD,QAAQ,EAAG;MAE7B,OAAO,IAAI,CAAC6gD,eAAe,CAAE7gD,QAAQ,CAACic,YAAa,CAAC,CAAC5e,EAAE;IAExD;EAAC;IAAA7jC,GAAA;IAAAvG,KAAA,EAED,SAAAquF,oBAAqBthD,QAAQ,EAAG;MAE/B,OAAO,IAAI,CAAC6gD,eAAe,CAAE7gD,QAAQ,CAACkc,cAAe,CAAC,CAAC7e,EAAE;IAE1D;EAAC;IAAA7jC,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACqjE,WAAW,CAAC1jD,KAAK,CAAC,CAAC;MACxB,IAAI,CAAC2jD,aAAa,CAAC3jD,KAAK,CAAC,CAAC;IAE3B;EAAC;IAAAxjC,GAAA;IAAAvG,KAAA,EAED,SAAA+tF,2BAA4BhhD,QAAQ,EAAG;MAEtC,IAAMI,KAAK,GAAG,IAAI,CAACugD,aAAa;MAChC,IAAIx0E,GAAG,GAAGi0B,KAAK,CAAChzB,GAAG,CAAE4yB,QAAS,CAAC;MAE/B,IAAK7zB,GAAG,KAAKjS,SAAS,EAAG;QAExBiS,GAAG,GAAG,IAAIiL,GAAG,CAAC,CAAC;QACfgpB,KAAK,CAACj0B,GAAG,CAAE6zB,QAAQ,EAAE7zB,GAAI,CAAC;MAE3B;MAEA,OAAOA,GAAG;IAEX;EAAC;IAAA3S,GAAA;IAAAvG,KAAA,EAED,SAAA4tF,gBAAiBO,IAAI,EAAG;MAEvB,IAAMhhD,KAAK,GAAG,IAAI,CAACsgD,WAAW;MAC9B,IAAIa,KAAK,GAAGnhD,KAAK,CAAChzB,GAAG,CAAEg0E,IAAK,CAAC;MAE7B,IAAKG,KAAK,KAAKrnF,SAAS,EAAG;QAE1BqnF,KAAK,GAAG,IAAIC,gBAAgB,CAAEJ,IAAK,CAAC;QACpChhD,KAAK,CAACj0B,GAAG,CAAEi1E,IAAI,EAAEG,KAAM,CAAC;MAEzB;MAEA,OAAOA,KAAK;IAEb;EAAC;EAAA,OAAAd,gBAAA;AAAA;AAAA,IAIIe,gBAAgB,gBAAA/nF,YAAA,CAErB,SAAA+nF,iBAAaJ,IAAI,EAAG;EAAApoF,eAAA,OAAAwoF,gBAAA;EAEnB,IAAI,CAACnkD,EAAE,GAAGmjD,KAAK,EAAG;EAElB,IAAI,CAACY,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACb,SAAS,GAAG,CAAC;AAEnB,CAAC;AAIF,SAASkB,aAAaA,CAAEtmC,QAAQ,EAAEie,QAAQ,EAAEC,UAAU,EAAEhd,UAAU,EAAEuJ,YAAY,EAAEwV,aAAa,EAAEhf,QAAQ,EAAG;EAE3G,IAAMslC,cAAc,GAAG,IAAI9oD,MAAM,CAAC,CAAC;EACnC,IAAM+oD,cAAc,GAAG,IAAIlB,gBAAgB,CAAC,CAAC;EAC7C,IAAM5U,QAAQ,GAAG,EAAE;EAEnB,IAAM+V,SAAS,GAAGh8B,YAAY,CAACC,QAAQ;EACvC,IAAMya,sBAAsB,GAAG1a,YAAY,CAAC0a,sBAAsB;EAClE,IAAMuhB,wBAAwB,GAAGj8B,YAAY,CAAC0b,cAAc;EAE5D,IAAIj8B,SAAS,GAAGugB,YAAY,CAACvgB,SAAS;EAEtC,IAAMy8C,SAAS,GAAG;IACjBC,iBAAiB,EAAE,OAAO;IAC1BC,oBAAoB,EAAE,cAAc;IACpCC,kBAAkB,EAAE,QAAQ;IAC5B/0C,iBAAiB,EAAE,OAAO;IAC1Bg1C,mBAAmB,EAAE,SAAS;IAC9BC,iBAAiB,EAAE,OAAO;IAC1BC,gBAAgB,EAAE,MAAM;IACxBC,oBAAoB,EAAE,UAAU;IAChCC,oBAAoB,EAAE,UAAU;IAChCC,kBAAkB,EAAE,QAAQ;IAC5BC,iBAAiB,EAAE,OAAO;IAC1BC,kBAAkB,EAAE,QAAQ;IAC5BC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE;EACjB,CAAC;EAED,SAASC,UAAUA,CAAE5vF,KAAK,EAAG;IAE5B,IAAKA,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;IAE9B,YAAA2kB,MAAA,CAAa3kB,KAAK;EAEnB;EAEA,SAAS6vF,aAAaA,CAAE9iD,QAAQ,EAAEmc,MAAM,EAAE4mC,OAAO,EAAEziC,KAAK,EAAE90B,MAAM,EAAG;IAElE,IAAMkf,GAAG,GAAG4V,KAAK,CAAC5V,GAAG;IACrB,IAAMle,QAAQ,GAAGhB,MAAM,CAACgB,QAAQ;IAChC,IAAM8S,WAAW,GAAGU,QAAQ,CAACgjD,sBAAsB,GAAG1iC,KAAK,CAAChhB,WAAW,GAAG,IAAI;IAE9E,IAAM8J,MAAM,GAAG,CAAEpJ,QAAQ,CAACgjD,sBAAsB,GAAG3pB,UAAU,GAAGD,QAAQ,EAAGhsD,GAAG,CAAE4yB,QAAQ,CAACoJ,MAAM,IAAI9J,WAAY,CAAC;IAChH,IAAM83C,kBAAkB,GAAK,CAAC,CAAEhuC,MAAM,IAAQA,MAAM,CAACjuB,OAAO,KAAK1c,uBAAyB,GAAG2qC,MAAM,CAACzwB,KAAK,CAACK,MAAM,GAAG,IAAI;IAEvH,IAAMs+D,QAAQ,GAAGwK,SAAS,CAAE9hD,QAAQ,CAAC5rC,IAAI,CAAE;;IAE3C;IACA;;IAEA,IAAK4rC,QAAQ,CAACqF,SAAS,KAAK,IAAI,EAAG;MAElCA,SAAS,GAAGugB,YAAY,CAACka,eAAe,CAAE9/B,QAAQ,CAACqF,SAAU,CAAC;MAE9D,IAAKA,SAAS,KAAKrF,QAAQ,CAACqF,SAAS,EAAG;QAEvCj5B,OAAO,CAACC,IAAI,CAAE,mCAAmC,EAAE2zB,QAAQ,CAACqF,SAAS,EAAE,sBAAsB,EAAEA,SAAS,EAAE,UAAW,CAAC;MAEvH;IAED;;IAEA;;IAEA,IAAMsO,cAAc,GAAGnnB,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,IAAIF,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,IAAI8C,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK;IAC7H,IAAMw1D,iBAAiB,GAAK54B,cAAc,KAAKz5C,SAAS,GAAKy5C,cAAc,CAACp8C,MAAM,GAAG,CAAC;IAEtF,IAAI2mF,kBAAkB,GAAG,CAAC;IAE1B,IAAK1xD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,KAAKxyB,SAAS,EAAGgkF,kBAAkB,GAAG,CAAC;IAC7E,IAAK1xD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,KAAKxvB,SAAS,EAAGgkF,kBAAkB,GAAG,CAAC;IAC3E,IAAK1xD,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK,KAAK7c,SAAS,EAAGgkF,kBAAkB,GAAG,CAAC;;IAE1E;;IAEA,IAAIjiC,YAAY,EAAEC,cAAc;IAChC,IAAI+mC,oBAAoB,EAAEC,sBAAsB;IAEhD,IAAK5L,QAAQ,EAAG;MAEf,IAAM11B,MAAM,GAAG6U,SAAS,CAAE6gB,QAAQ,CAAE;MAEpCr7B,YAAY,GAAG2F,MAAM,CAAC3F,YAAY;MAClCC,cAAc,GAAG0F,MAAM,CAAC1F,cAAc;IAEvC,CAAC,MAAM;MAEND,YAAY,GAAGjc,QAAQ,CAACic,YAAY;MACpCC,cAAc,GAAGlc,QAAQ,CAACkc,cAAc;MAExCylC,cAAc,CAACv+D,MAAM,CAAE4c,QAAS,CAAC;MAEjCijD,oBAAoB,GAAGtB,cAAc,CAACN,iBAAiB,CAAErhD,QAAS,CAAC;MACnEkjD,sBAAsB,GAAGvB,cAAc,CAACL,mBAAmB,CAAEthD,QAAS,CAAC;IAExE;IAEA,IAAMwgB,mBAAmB,GAAGrF,QAAQ,CAACC,eAAe,CAAC,CAAC;IAEtD,IAAM+nC,gBAAgB,GAAG33D,MAAM,CAACqT,eAAe,KAAK,IAAI;IAExD,IAAMukD,OAAO,GAAG,CAAC,CAAEpjD,QAAQ,CAAC+H,GAAG;IAC/B,IAAMs7C,UAAU,GAAG,CAAC,CAAErjD,QAAQ,CAACgI,MAAM;IACrC,IAAMs7C,UAAU,GAAG,CAAC,CAAEl6C,MAAM;IAC5B,IAAMm6C,SAAS,GAAG,CAAC,CAAEvjD,QAAQ,CAACoI,KAAK;IACnC,IAAMo7C,YAAY,GAAG,CAAC,CAAExjD,QAAQ,CAACkI,QAAQ;IACzC,IAAMu7C,WAAW,GAAG,CAAC,CAAEzjD,QAAQ,CAACsI,OAAO;IACvC,IAAMo7C,aAAa,GAAG,CAAC,CAAE1jD,QAAQ,CAACwI,SAAS;IAC3C,IAAMm7C,mBAAmB,GAAG,CAAC,CAAE3jD,QAAQ,CAAC2I,eAAe;IACvD,IAAMi7C,eAAe,GAAG,CAAC,CAAE5jD,QAAQ,CAACgJ,WAAW;IAE/C,IAAM66C,gBAAgB,GAAG,CAAC,CAAE7jD,QAAQ,CAAC+I,YAAY;IACjD,IAAM+6C,gBAAgB,GAAG,CAAC,CAAE9jD,QAAQ,CAAC8I,YAAY;IAEjD,IAAMi7C,cAAc,GAAG/jD,QAAQ,CAACtkB,UAAU,GAAG,CAAC;IAC9C,IAAMsoE,aAAa,GAAGhkD,QAAQ,CAACkH,SAAS,GAAG,CAAC;IAC5C,IAAM+8C,eAAe,GAAGjkD,QAAQ,CAACwH,WAAW,GAAG,CAAC;IAChD,IAAM08C,SAAS,GAAGlkD,QAAQ,CAACyG,KAAK,GAAG,CAAC;IACpC,IAAM09C,gBAAgB,GAAGnkD,QAAQ,CAAC0J,YAAY,GAAG,CAAC;IAElD,IAAM06C,iBAAiB,GAAGL,cAAc,IAAI,CAAC,CAAE/jD,QAAQ,CAAC8H,aAAa;IAErE,IAAMu8C,gBAAgB,GAAGL,aAAa,IAAI,CAAC,CAAEhkD,QAAQ,CAACoH,YAAY;IAClE,IAAMk9C,uBAAuB,GAAGN,aAAa,IAAI,CAAC,CAAEhkD,QAAQ,CAACsH,kBAAkB;IAC/E,IAAMi9C,0BAA0B,GAAGP,aAAa,IAAI,CAAC,CAAEhkD,QAAQ,CAACqH,qBAAqB;IAErF,IAAMm9C,kBAAkB,GAAGP,eAAe,IAAI,CAAC,CAAEjkD,QAAQ,CAAC2H,cAAc;IACxE,IAAM88C,4BAA4B,GAAGR,eAAe,IAAI,CAAC,CAAEjkD,QAAQ,CAAC4H,uBAAuB;IAE3F,IAAM88C,kBAAkB,GAAGR,SAAS,IAAI,CAAC,CAAElkD,QAAQ,CAACs4B,aAAa;IACjE,IAAMqsB,sBAAsB,GAAGT,SAAS,IAAI,CAAC,CAAElkD,QAAQ,CAACw4B,iBAAiB;IAEzE,IAAMosB,eAAe,GAAG,CAAC,CAAE5kD,QAAQ,CAACiJ,WAAW;IAC/C,IAAM47C,qBAAqB,GAAG,CAAC,CAAE7kD,QAAQ,CAACmJ,gBAAgB;IAC1D,IAAM27C,yBAAyB,GAAG,CAAC,CAAE9kD,QAAQ,CAACkJ,oBAAoB;IAElE,IAAM67C,mBAAmB,GAAGZ,gBAAgB,IAAI,CAAC,CAAEnkD,QAAQ,CAAC2J,eAAe;IAC3E,IAAMq7C,gBAAgB,GAAGb,gBAAgB,IAAI,CAAC,CAAEnkD,QAAQ,CAAC6J,YAAY;IAErE,IAAMo7C,eAAe,GAAG,CAAC,CAAEjlD,QAAQ,CAACyJ,WAAW;IAE/C,IAAMy7C,YAAY,GAAG,CAAC,CAAEllD,QAAQ,CAACiI,QAAQ;IAEzC,IAAMk9C,aAAa,GAAGnlD,QAAQ,CAACoK,SAAS,GAAG,CAAC;IAE5C,IAAMg7C,aAAa,GAAG,CAAC,CAAEplD,QAAQ,CAAC8D,SAAS;IAE3C,IAAMuhD,cAAc,GAAG,CAAC,CAAErlD,QAAQ,CAACqc,UAAU;IAE7C,IAAMipC,iBAAiB,GAAG,CAAC,CAAE94D,QAAQ,CAACC,UAAU,CAACqV,GAAG;IACpD,IAAMyjD,iBAAiB,GAAG,CAAC,CAAE/4D,QAAQ,CAACC,UAAU,CAACsV,GAAG;IACpD,IAAMyjD,iBAAiB,GAAG,CAAC,CAAEh5D,QAAQ,CAACC,UAAU,CAACuV,GAAG;IAEpD,IAAIy4B,WAAW,GAAG38D,aAAa;IAE/B,IAAKkiC,QAAQ,CAAC6F,UAAU,EAAG;MAE1B,IAAK2a,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,CAACilC,gBAAgB,KAAK,IAAI,EAAG;QAEpFhrB,WAAW,GAAGtf,QAAQ,CAACsf,WAAW;MAEnC;IAED;IAEA,IAAM/6B,UAAU,GAAG;MAElBmmB,QAAQ,EAAE+7B,SAAS;MAEnBtK,QAAQ,EAAEA,QAAQ;MAClBuE,UAAU,EAAE77C,QAAQ,CAAC5rC,IAAI;MACzB0nF,UAAU,EAAE97C,QAAQ,CAACroC,IAAI;MAEzBskD,YAAY,EAAEA,YAAY;MAC1BC,cAAc,EAAEA,cAAc;MAC9BH,OAAO,EAAE/b,QAAQ,CAAC+b,OAAO;MAEzBknC,oBAAoB,EAAEA,oBAAoB;MAC1CC,sBAAsB,EAAEA,sBAAsB;MAE9CtH,mBAAmB,EAAE57C,QAAQ,CAAC47C,mBAAmB,KAAK,IAAI;MAC1D/+B,WAAW,EAAE7c,QAAQ,CAAC6c,WAAW;MAEjCxX,SAAS,EAAEA,SAAS;MAEpB02C,UAAU,EAAEoH,gBAAgB;MAC5BnH,eAAe,EAAEmH,gBAAgB,IAAI33D,MAAM,CAACuT,aAAa,KAAK,IAAI;MAElE2mD,sBAAsB,EAAE7D,wBAAwB;MAChDxmC,gBAAgB,EAAImF,mBAAmB,KAAK,IAAI,GAAKrF,QAAQ,CAACE,gBAAgB,GAAKmF,mBAAmB,CAACilC,gBAAgB,KAAK,IAAI,GAAGjlC,mBAAmB,CAAClgC,OAAO,CAAC5I,UAAU,GAAGvT,oBAAsB;MAElM4jC,GAAG,EAAEq7C,OAAO;MACZp7C,MAAM,EAAEq7C,UAAU;MAClBj6C,MAAM,EAAEk6C,UAAU;MAClB7I,UAAU,EAAE6I,UAAU,IAAIl6C,MAAM,CAACjuB,OAAO;MACxCi8D,kBAAkB,EAAEA,kBAAkB;MACtChvC,KAAK,EAAEm7C,SAAS;MAChBr7C,QAAQ,EAAEs7C,YAAY;MACtBl7C,OAAO,EAAEm7C,WAAW;MACpBj7C,SAAS,EAAEk7C,aAAa;MACxB/6C,eAAe,EAAEk5C,wBAAwB,IAAI8B,mBAAmB;MAChE36C,WAAW,EAAE46C,eAAe;MAE5BzH,oBAAoB,EAAEuH,aAAa,IAAI1jD,QAAQ,CAACyI,aAAa,KAAKzkC,oBAAoB;MACtFqzE,qBAAqB,EAAEqM,aAAa,IAAI1jD,QAAQ,CAACyI,aAAa,KAAK1kC,qBAAqB;MAExFglC,YAAY,EAAE86C,gBAAgB;MAC9B/6C,YAAY,EAAEg7C,gBAAgB;MAE9BpoE,UAAU,EAAEqoE,cAAc;MAC1Bj8C,aAAa,EAAEs8C,iBAAiB;MAEhCl9C,SAAS,EAAE88C,aAAa;MACxB58C,YAAY,EAAEi9C,gBAAgB;MAC9B/8C,kBAAkB,EAAEg9C,uBAAuB;MAC3Cj9C,qBAAqB,EAAEk9C,0BAA0B;MAEjD/8C,WAAW,EAAEy8C,eAAe;MAC5Bt8C,cAAc,EAAE68C,kBAAkB;MAClC58C,uBAAuB,EAAE68C,4BAA4B;MAErDh+C,KAAK,EAAEy9C,SAAS;MAChB5rB,aAAa,EAAEosB,kBAAkB;MACjClsB,iBAAiB,EAAEmsB,sBAAsB;MAEzC17C,WAAW,EAAE27C,eAAe;MAC5Bz7C,gBAAgB,EAAE07C,qBAAqB;MACvC37C,oBAAoB,EAAE47C,yBAAyB;MAE/Cp7C,YAAY,EAAEy6C,gBAAgB;MAC9Bx6C,eAAe,EAAEo7C,mBAAmB;MACpCl7C,YAAY,EAAEm7C,gBAAgB;MAE9Bv7C,WAAW,EAAEw7C,eAAe;MAE5BxG,MAAM,EAAEz+C,QAAQ,CAAC6D,WAAW,KAAK,KAAK,IAAI7D,QAAQ,CAACyD,QAAQ,KAAK3nC,cAAc;MAE9EmsC,QAAQ,EAAEi9C,YAAY;MACtB96C,SAAS,EAAE+6C,aAAa;MACxBrhD,SAAS,EAAEshD,aAAa;MAExB/7C,OAAO,EAAErJ,QAAQ,CAACqJ,OAAO;MAEzB;;MAEA+yC,KAAK,EAAEgH,OAAO,IAAIP,UAAU,CAAE7iD,QAAQ,CAAC+H,GAAG,CAAC9rB,OAAQ,CAAC;MACpDsgE,OAAO,EAAEgH,SAAS,IAAIV,UAAU,CAAE7iD,QAAQ,CAACoI,KAAK,CAACnsB,OAAQ,CAAC;MAC1DqgE,UAAU,EAAEkH,YAAY,IAAIX,UAAU,CAAE7iD,QAAQ,CAACkI,QAAQ,CAACjsB,OAAQ,CAAC;MACnEwgE,SAAS,EAAEgH,WAAW,IAAIZ,UAAU,CAAE7iD,QAAQ,CAACsI,OAAO,CAACrsB,OAAQ,CAAC;MAChEygE,WAAW,EAAEgH,aAAa,IAAIb,UAAU,CAAE7iD,QAAQ,CAACwI,SAAS,CAACvsB,OAAQ,CAAC;MACtE0gE,iBAAiB,EAAEgH,mBAAmB,IAAId,UAAU,CAAE7iD,QAAQ,CAAC2I,eAAe,CAAC1sB,OAAQ,CAAC;MACxFugE,aAAa,EAAEoH,eAAe,IAAIf,UAAU,CAAE7iD,QAAQ,CAACgJ,WAAW,CAAC/sB,OAAQ,CAAC;MAE5E2gE,cAAc,EAAEiH,gBAAgB,IAAIhB,UAAU,CAAE7iD,QAAQ,CAAC+I,YAAY,CAAC9sB,OAAQ,CAAC;MAC/E4gE,cAAc,EAAEiH,gBAAgB,IAAIjB,UAAU,CAAE7iD,QAAQ,CAAC8I,YAAY,CAAC7sB,OAAQ,CAAC;MAE/E6gE,eAAe,EAAEsH,iBAAiB,IAAIvB,UAAU,CAAE7iD,QAAQ,CAAC8H,aAAa,CAAC7rB,OAAQ,CAAC;MAElF8gE,cAAc,EAAEsH,gBAAgB,IAAIxB,UAAU,CAAE7iD,QAAQ,CAACoH,YAAY,CAACnrB,OAAQ,CAAC;MAC/E+gE,oBAAoB,EAAEsH,uBAAuB,IAAIzB,UAAU,CAAE7iD,QAAQ,CAACsH,kBAAkB,CAACrrB,OAAQ,CAAC;MAClGghE,uBAAuB,EAAEsH,0BAA0B,IAAI1B,UAAU,CAAE7iD,QAAQ,CAACqH,qBAAqB,CAACprB,OAAQ,CAAC;MAE3GihE,gBAAgB,EAAEsH,kBAAkB,IAAI3B,UAAU,CAAE7iD,QAAQ,CAAC2H,cAAc,CAAC1rB,OAAQ,CAAC;MACrFkhE,yBAAyB,EAAEsH,4BAA4B,IAAI5B,UAAU,CAAE7iD,QAAQ,CAAC4H,uBAAuB,CAAC3rB,OAAQ,CAAC;MAEjHmhE,eAAe,EAAEsH,kBAAkB,IAAI7B,UAAU,CAAE7iD,QAAQ,CAACs4B,aAAa,CAACr8C,OAAQ,CAAC;MACnFohE,mBAAmB,EAAEsH,sBAAsB,IAAI9B,UAAU,CAAE7iD,QAAQ,CAACw4B,iBAAiB,CAACv8C,OAAQ,CAAC;MAE/FqhE,aAAa,EAAEsH,eAAe,IAAI/B,UAAU,CAAE7iD,QAAQ,CAACiJ,WAAW,CAAChtB,OAAQ,CAAC;MAC5EshE,kBAAkB,EAAEsH,qBAAqB,IAAIhC,UAAU,CAAE7iD,QAAQ,CAACmJ,gBAAgB,CAACltB,OAAQ,CAAC;MAC5FuhE,sBAAsB,EAAEsH,yBAAyB,IAAIjC,UAAU,CAAE7iD,QAAQ,CAACkJ,oBAAoB,CAACjtB,OAAQ,CAAC;MAExGwhE,iBAAiB,EAAEsH,mBAAmB,IAAIlC,UAAU,CAAE7iD,QAAQ,CAAC2J,eAAe,CAAC1tB,OAAQ,CAAC;MACxFyhE,cAAc,EAAEsH,gBAAgB,IAAInC,UAAU,CAAE7iD,QAAQ,CAAC6J,YAAY,CAAC5tB,OAAQ,CAAC;MAE/EogE,UAAU,EAAE6I,YAAY,IAAIrC,UAAU,CAAE7iD,QAAQ,CAACiI,QAAQ,CAAChsB,OAAQ,CAAC;MAEnE;;MAEA0hE,cAAc,EAAE,CAAC,CAAEnxD,QAAQ,CAACC,UAAU,CAAC8mB,OAAO,KAAMmwC,aAAa,IAAIK,cAAc,CAAE;MACrFpgD,YAAY,EAAE3D,QAAQ,CAAC2D,YAAY;MACnCi6C,YAAY,EAAE59C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAEnX,QAAQ,CAACC,UAAU,CAAC1V,KAAK,IAAIyV,QAAQ,CAACC,UAAU,CAAC1V,KAAK,CAAC23B,QAAQ,KAAK,CAAC;MACxHmvC,UAAU,EAAEyH,iBAAiB;MAC7BxH,UAAU,EAAEyH,iBAAiB;MAC7BxH,UAAU,EAAEyH,iBAAiB;MAE7BxH,SAAS,EAAExyD,MAAM,CAACiU,QAAQ,KAAK,IAAI,IAAI,CAAC,CAAEjT,QAAQ,CAACC,UAAU,CAAClP,EAAE,KAAM6lE,OAAO,IAAI8B,YAAY,CAAE;MAE/Fx6C,GAAG,EAAE,CAAC,CAAEA,GAAG;MACXuxC,MAAM,EAAEj8C,QAAQ,CAAC0K,GAAG,KAAK,IAAI;MAC7BwxC,OAAO,EAAIxxC,GAAG,IAAIA,GAAG,CAACi7C,SAAW;MAEjCl7C,WAAW,EAAEzK,QAAQ,CAACyK,WAAW,KAAK,IAAI;MAE1CT,eAAe,EAAEhK,QAAQ,CAACgK,eAAe,KAAK,IAAI;MAClDs2B,sBAAsB,EAAEA,sBAAsB;MAE9C2d,QAAQ,EAAEzyD,MAAM,CAACoU,aAAa,KAAK,IAAI;MAEvCgtC,YAAY,EAAEpgD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,KAAKxyB,SAAS;MAC7D2yE,YAAY,EAAErgD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,KAAKxvB,SAAS;MAC3D4yE,WAAW,EAAEtgD,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK,KAAK7c,SAAS;MACzDqyE,iBAAiB,EAAEA,iBAAiB;MACpC2R,kBAAkB,EAAEA,kBAAkB;MAEtCrF,YAAY,EAAE18B,MAAM,CAACypC,WAAW,CAACruF,MAAM;MACvCyhF,cAAc,EAAE78B,MAAM,CAACpwB,KAAK,CAACx0B,MAAM;MACnCuhF,aAAa,EAAE38B,MAAM,CAAC0pC,IAAI,CAACtuF,MAAM;MACjCmhF,gBAAgB,EAAEv8B,MAAM,CAACsZ,YAAY,CAACl+D,MAAM;MAC5CwhF,iBAAiB,EAAE58B,MAAM,CAAC2pC,QAAQ,CAACvuF,MAAM;MACzC0hF,aAAa,EAAE98B,MAAM,CAAC4pC,IAAI,CAACxuF,MAAM;MAEjC2hF,kBAAkB,EAAE/8B,MAAM,CAAC+Y,oBAAoB,CAAC39D,MAAM;MACtD4hF,oBAAoB,EAAEh9B,MAAM,CAAC6Z,cAAc,CAACz+D,MAAM;MAClDkhF,mBAAmB,EAAEt8B,MAAM,CAACuZ,aAAa,CAACn+D,MAAM;MAChDohF,2BAA2B,EAAEx8B,MAAM,CAACw8B,2BAA2B;MAE/D2F,cAAc,EAAEniC,MAAM,CAACmiC,cAAc;MAErCjF,iBAAiB,EAAEj9B,QAAQ,CAAC6lB,SAAS;MACrCqX,mBAAmB,EAAEl9B,QAAQ,CAAC8lB,eAAe;MAE7Cz8B,SAAS,EAAEzF,QAAQ,CAACyF,SAAS;MAE7B44C,gBAAgB,EAAEljC,QAAQ,CAAC6qC,SAAS,CAAC1uE,OAAO,IAAIyrE,OAAO,CAACxrF,MAAM,GAAG,CAAC;MAClE+iF,aAAa,EAAEn/B,QAAQ,CAAC6qC,SAAS,CAAC5xF,IAAI;MAEtCqmE,WAAW,EAAEA,WAAW;MACxB8jB,eAAe,EAAEpjC,QAAQ,CAAC8qC,gBAAgB;MAE1CzH,kBAAkB,EAAE4E,OAAO,IAAMpjD,QAAQ,CAAC+H,GAAG,CAACm+C,cAAc,KAAK,IAAM,IAAM7uE,eAAe,CAACgB,WAAW,CAAE2nB,QAAQ,CAAC+H,GAAG,CAACrwB,UAAW,CAAC,KAAKnT,YAAc;MAEtJohC,kBAAkB,EAAE3F,QAAQ,CAAC2F,kBAAkB;MAE/Cw4C,WAAW,EAAEn+C,QAAQ,CAAC0D,IAAI,KAAK/nC,UAAU;MACzCyiF,SAAS,EAAEp+C,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAQ;MAErCgjF,eAAe,EAAE1+C,QAAQ,CAAC2+C,YAAY,IAAI,CAAC;MAC3CA,YAAY,EAAE3+C,QAAQ,CAAC2+C,YAAY,IAAI,CAAC;MAExChiC,mBAAmB,EAAE3c,QAAQ,CAAC2c,mBAAmB;MAEjDw6B,oBAAoB,EAAEkO,cAAc,IAAIrlD,QAAQ,CAACqc,UAAU,CAACC,WAAW,KAAK,IAAI;MAChFi7B,kBAAkB,EAAE8N,cAAc,IAAIrlD,QAAQ,CAACqc,UAAU,CAACE,SAAS,KAAK,IAAI;MAC5Ek7B,oBAAoB,EAAE4N,cAAc,IAAIrlD,QAAQ,CAACqc,UAAU,CAACG,WAAW,KAAK,IAAI;MAChFm7B,yBAAyB,EAAE0N,cAAc,IAAIrlD,QAAQ,CAACqc,UAAU,CAACI,gBAAgB,KAAK,IAAI;MAE1F+6B,0BAA0B,EAAEoK,SAAS,IAAIvlC,UAAU,CAAC1kC,GAAG,CAAE,gBAAiB,CAAC;MAC3E+/D,4BAA4B,EAAEkK,SAAS,IAAIvlC,UAAU,CAAC1kC,GAAG,CAAE,oBAAqB,CAAC;MACjFigE,iCAAiC,EAAEgK,SAAS,IAAIvlC,UAAU,CAAC1kC,GAAG,CAAE,wBAAyB,CAAC;MAE1FsuB,qBAAqB,EAAEjG,QAAQ,CAACiG,qBAAqB,CAAC;IAEvD,CAAC;IAED,OAAOvG,UAAU;EAElB;EAEA,SAASymD,kBAAkBA,CAAEzmD,UAAU,EAAG;IAEzC,IAAM73B,KAAK,GAAG,EAAE;IAEhB,IAAK63B,UAAU,CAAC43C,QAAQ,EAAG;MAE1BzvE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC43C,QAAS,CAAC;IAElC,CAAC,MAAM;MAENzvE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACujD,oBAAqB,CAAC;MAC7Cp7E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACwjD,sBAAuB,CAAC;IAEhD;IAEA,IAAKxjD,UAAU,CAACqc,OAAO,KAAK7hD,SAAS,EAAG;MAEvC,KAAM,IAAMvC,IAAI,IAAI+nC,UAAU,CAACqc,OAAO,EAAG;QAExCl0C,KAAK,CAAC3Q,IAAI,CAAES,IAAK,CAAC;QAClBkQ,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACqc,OAAO,CAAEpkD,IAAI,CAAG,CAAC;MAEzC;IAED;IAEA,IAAK+nC,UAAU,CAACk8C,mBAAmB,KAAK,KAAK,EAAG;MAE/CwK,4BAA4B,CAAEv+E,KAAK,EAAE63B,UAAW,CAAC;MACjD2mD,0BAA0B,CAAEx+E,KAAK,EAAE63B,UAAW,CAAC;MAC/C73B,KAAK,CAAC3Q,IAAI,CAAEikD,QAAQ,CAACE,gBAAiB,CAAC;IAExC;IAEAxzC,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACuG,qBAAsB,CAAC;IAE9C,OAAOp+B,KAAK,CAACiuE,IAAI,CAAC,CAAC;EAEpB;EAEA,SAASsQ,4BAA4BA,CAAEv+E,KAAK,EAAE63B,UAAU,EAAG;IAE1D73B,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC2F,SAAU,CAAC;IAClCx9B,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC2b,gBAAiB,CAAC;IACzCxzC,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC+6C,UAAW,CAAC;IACnC5yE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC03C,kBAAmB,CAAC;IAC3CvvE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC08C,KAAM,CAAC;IAC9Bv0E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC28C,UAAW,CAAC;IACnCx0E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC48C,UAAW,CAAC;IACnCz0E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC68C,OAAQ,CAAC;IAChC10E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC+8C,SAAU,CAAC;IAClC50E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACg9C,WAAY,CAAC;IACpC70E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACi9C,iBAAkB,CAAC;IAC1C90E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC88C,aAAc,CAAC;IACtC30E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACk9C,cAAe,CAAC;IACvC/0E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACm9C,cAAe,CAAC;IACvCh1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACo9C,eAAgB,CAAC;IACxCj1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACq9C,cAAe,CAAC;IACvCl1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACs9C,oBAAqB,CAAC;IAC7Cn1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACu9C,uBAAwB,CAAC;IAChDp1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACw9C,gBAAiB,CAAC;IACzCr1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACy9C,yBAA0B,CAAC;IAClDt1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC09C,eAAgB,CAAC;IACxCv1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC29C,mBAAoB,CAAC;IAC5Cx1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC49C,aAAc,CAAC;IACtCz1E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC69C,kBAAmB,CAAC;IAC3C11E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC89C,sBAAuB,CAAC;IAC/C31E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC+9C,iBAAkB,CAAC;IAC1C51E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACg+C,cAAe,CAAC;IACvC71E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC2J,OAAQ,CAAC;IAChCxhC,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACw8C,OAAQ,CAAC;IAChCr0E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACsK,eAAgB,CAAC;IACxCniC,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC6sC,iBAAkB,CAAC;IAC1C1kE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC4mD,mBAAoB,CAAC;IAC5Cz+E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACm5C,YAAa,CAAC;IACrChxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACs5C,cAAe,CAAC;IACvCnxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACo5C,aAAc,CAAC;IACtCjxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACg5C,gBAAiB,CAAC;IACzC7wE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACu5C,aAAc,CAAC;IACtCpxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACq5C,iBAAkB,CAAC;IAC1ClxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACw5C,kBAAmB,CAAC;IAC3CrxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACy5C,oBAAqB,CAAC;IAC7CtxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC+4C,mBAAoB,CAAC;IAC5C5wE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACi5C,2BAA4B,CAAC;IACpD9wE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC4+C,cAAe,CAAC;IACvCz2E,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC46C,aAAc,CAAC;IACtCzyE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC+6B,WAAY,CAAC;IACpC5yD,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC25C,iBAAkB,CAAC;IAC1CxxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAAC45C,mBAAoB,CAAC;IAC5CzxE,KAAK,CAAC3Q,IAAI,CAAEwoC,UAAU,CAACi/C,YAAa,CAAC;EAEtC;EAEA,SAAS0H,0BAA0BA,CAAEx+E,KAAK,EAAE63B,UAAU,EAAG;IAExDgiD,cAAc,CAACxoD,UAAU,CAAC,CAAC;IAE3B,IAAKwG,UAAU,CAACmmB,QAAQ,EACvB67B,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACgmD,sBAAsB,EACrChE,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACq8C,UAAU,EACzB2F,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACs8C,eAAe,EAC9B0F,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACsI,MAAM,EACrB05C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC0J,MAAM,EACrBs4C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACy8C,oBAAoB,EACnCuF,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC23C,qBAAqB,EACpCqK,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACwH,SAAS,EACxBw6C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC8H,WAAW,EAC1Bk6C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC0K,SAAS,EACxBs3C,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACiE,YAAY,EAC3B+9C,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACk+C,YAAY,EAC3B8D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACm+C,UAAU,EACzB6D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACo+C,UAAU,EACzB4D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACq+C,UAAU,EACzB2D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACi+C,cAAc,EAC7B+D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAChkB,UAAU,EACzBgmE,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAE5BjxB,KAAK,CAAC3Q,IAAI,CAAEwqF,cAAc,CAAC7oD,IAAK,CAAC;IACjC6oD,cAAc,CAACxoD,UAAU,CAAC,CAAC;IAE3B,IAAKwG,UAAU,CAACgL,GAAG,EAClBg3C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACu8C,MAAM,EACrByF,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC+K,WAAW,EAC1Bi3C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC4gC,sBAAsB,EACrCohB,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACu+C,QAAQ,EACvByD,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACktC,YAAY,EAC3B8U,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACmtC,YAAY,EAC3B6U,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACotC,WAAW,EAC1B4U,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAACiG,kBAAkB,EACjC+7C,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC2+C,gBAAgB,EAC/BqD,cAAc,CAAC5oD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK4G,UAAU,CAAC6+C,eAAe,EAC9BmD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACy+C,WAAW,EAC1BuD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAC0+C,SAAS,EACxBsD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACg/C,eAAe,EAC9BgD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAC+F,SAAS,EACxBi8C,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACgK,YAAY,EAC3Bg4C,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAC+G,KAAK,EACpBi7C,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAC++C,MAAM,EACrBiD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAACs+C,SAAS,EACxB0D,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK4G,UAAU,CAAC8+C,kBAAkB,EACjCkD,cAAc,CAAC5oD,MAAM,CAAE,EAAG,CAAC;IAE5BjxB,KAAK,CAAC3Q,IAAI,CAAEwqF,cAAc,CAAC7oD,IAAK,CAAC;EAElC;EAEA,SAAS00C,WAAWA,CAAEvtC,QAAQ,EAAG;IAEhC,IAAMs3C,QAAQ,GAAGwK,SAAS,CAAE9hD,QAAQ,CAAC5rC,IAAI,CAAE;IAC3C,IAAI2mD,QAAQ;IAEZ,IAAKu8B,QAAQ,EAAG;MAEf,IAAM11B,MAAM,GAAG6U,SAAS,CAAE6gB,QAAQ,CAAE;MACpCv8B,QAAQ,GAAGO,aAAa,CAAC3tC,KAAK,CAAEi0C,MAAM,CAAC7G,QAAS,CAAC;IAElD,CAAC,MAAM;MAENA,QAAQ,GAAG/a,QAAQ,CAAC+a,QAAQ;IAE7B;IAEA,OAAOA,QAAQ;EAEhB;EAEA,SAASwrC,cAAcA,CAAE7mD,UAAU,EAAE07C,QAAQ,EAAG;IAE/C,IAAI1f,OAAO;;IAEX;IACA,KAAM,IAAI5mE,CAAC,GAAG,CAAC,EAAE0xF,EAAE,GAAG3a,QAAQ,CAACt0E,MAAM,EAAEzC,CAAC,GAAG0xF,EAAE,EAAE1xF,CAAC,EAAG,EAAG;MAErD,IAAM2xF,kBAAkB,GAAG5a,QAAQ,CAAE/2E,CAAC,CAAE;MAExC,IAAK2xF,kBAAkB,CAACrL,QAAQ,KAAKA,QAAQ,EAAG;QAE/C1f,OAAO,GAAG+qB,kBAAkB;QAC5B,EAAG/qB,OAAO,CAAC6kB,SAAS;QAEpB;MAED;IAED;IAEA,IAAK7kB,OAAO,KAAKxhE,SAAS,EAAG;MAE5BwhE,OAAO,GAAG,IAAIyf,YAAY,CAAEhgC,QAAQ,EAAEigC,QAAQ,EAAE17C,UAAU,EAAE07B,aAAc,CAAC;MAC3EyQ,QAAQ,CAAC30E,IAAI,CAAEwkE,OAAQ,CAAC;IAEzB;IAEA,OAAOA,OAAO;EAEf;EAEA,SAASgrB,cAAcA,CAAEhrB,OAAO,EAAG;IAElC,IAAK,EAAGA,OAAO,CAAC6kB,SAAS,KAAK,CAAC,EAAG;MAEjC;MACA,IAAMrtF,CAAC,GAAG24E,QAAQ,CAACxkE,OAAO,CAAEq0D,OAAQ,CAAC;MACrCmQ,QAAQ,CAAE34E,CAAC,CAAE,GAAG24E,QAAQ,CAAEA,QAAQ,CAACt0E,MAAM,GAAG,CAAC,CAAE;MAC/Cs0E,QAAQ,CAACzzE,GAAG,CAAC,CAAC;;MAEd;MACAsjE,OAAO,CAAC2kB,OAAO,CAAC,CAAC;IAElB;EAED;EAEA,SAASsG,kBAAkBA,CAAE3mD,QAAQ,EAAG;IAEvC2hD,cAAc,CAAC7kD,MAAM,CAAEkD,QAAS,CAAC;EAElC;EAEA,SAAS3iB,OAAOA,CAAA,EAAG;IAElBskE,cAAc,CAACtkE,OAAO,CAAC,CAAC;EAEzB;EAEA,OAAO;IACNylE,aAAa,EAAEA,aAAa;IAC5BqD,kBAAkB,EAAEA,kBAAkB;IACtC5Y,WAAW,EAAEA,WAAW;IACxBgZ,cAAc,EAAEA,cAAc;IAC9BG,cAAc,EAAEA,cAAc;IAC9BC,kBAAkB,EAAEA,kBAAkB;IACtC;IACA9a,QAAQ,EAAEA,QAAQ;IAClBxuD,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASupE,eAAeA,CAAA,EAAG;EAE1B,IAAIhyB,UAAU,GAAG,IAAI7O,OAAO,CAAC,CAAC;EAE9B,SAAS34C,GAAGA,CAAEoe,MAAM,EAAG;IAEtB,IAAIuc,GAAG,GAAG6sB,UAAU,CAACxnD,GAAG,CAAEoe,MAAO,CAAC;IAElC,IAAKuc,GAAG,KAAK7tC,SAAS,EAAG;MAExB6tC,GAAG,GAAG,CAAC,CAAC;MACR6sB,UAAU,CAACzoD,GAAG,CAAEqf,MAAM,EAAEuc,GAAI,CAAC;IAE9B;IAEA,OAAOA,GAAG;EAEX;EAEA,SAASjL,MAAMA,CAAEtR,MAAM,EAAG;IAEzBopC,UAAU,CAAC1N,MAAM,CAAE17B,MAAO,CAAC;EAE5B;EAEA,SAASpI,MAAMA,CAAEoI,MAAM,EAAEhyB,GAAG,EAAEvG,KAAK,EAAG;IAErC2hE,UAAU,CAACxnD,GAAG,CAAEoe,MAAO,CAAC,CAAEhyB,GAAG,CAAE,GAAGvG,KAAK;EAExC;EAEA,SAASoqB,OAAOA,CAAA,EAAG;IAElBu3C,UAAU,GAAG,IAAI7O,OAAO,CAAC,CAAC;EAE3B;EAEA,OAAO;IACN34C,GAAG,EAAEA,GAAG;IACR0vB,MAAM,EAAEA,MAAM;IACd1Z,MAAM,EAAEA,MAAM;IACd/F,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASwpE,iBAAiBA,CAAEzzF,CAAC,EAAEmY,CAAC,EAAG;EAElC,IAAKnY,CAAC,CAAC0zF,UAAU,KAAKv7E,CAAC,CAACu7E,UAAU,EAAG;IAEpC,OAAO1zF,CAAC,CAAC0zF,UAAU,GAAGv7E,CAAC,CAACu7E,UAAU;EAEnC,CAAC,MAAM,IAAK1zF,CAAC,CAACkoC,WAAW,KAAK/vB,CAAC,CAAC+vB,WAAW,EAAG;IAE7C,OAAOloC,CAAC,CAACkoC,WAAW,GAAG/vB,CAAC,CAAC+vB,WAAW;EAErC,CAAC,MAAM,IAAKloC,CAAC,CAAC4sC,QAAQ,CAAC3C,EAAE,KAAK9xB,CAAC,CAACy0B,QAAQ,CAAC3C,EAAE,EAAG;IAE7C,OAAOjqC,CAAC,CAAC4sC,QAAQ,CAAC3C,EAAE,GAAG9xB,CAAC,CAACy0B,QAAQ,CAAC3C,EAAE;EAErC,CAAC,MAAM,IAAKjqC,CAAC,CAACuqB,CAAC,KAAKpS,CAAC,CAACoS,CAAC,EAAG;IAEzB,OAAOvqB,CAAC,CAACuqB,CAAC,GAAGpS,CAAC,CAACoS,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAOvqB,CAAC,CAACiqC,EAAE,GAAG9xB,CAAC,CAAC8xB,EAAE;EAEnB;AAED;AAEA,SAAS0pD,wBAAwBA,CAAE3zF,CAAC,EAAEmY,CAAC,EAAG;EAEzC,IAAKnY,CAAC,CAAC0zF,UAAU,KAAKv7E,CAAC,CAACu7E,UAAU,EAAG;IAEpC,OAAO1zF,CAAC,CAAC0zF,UAAU,GAAGv7E,CAAC,CAACu7E,UAAU;EAEnC,CAAC,MAAM,IAAK1zF,CAAC,CAACkoC,WAAW,KAAK/vB,CAAC,CAAC+vB,WAAW,EAAG;IAE7C,OAAOloC,CAAC,CAACkoC,WAAW,GAAG/vB,CAAC,CAAC+vB,WAAW;EAErC,CAAC,MAAM,IAAKloC,CAAC,CAACuqB,CAAC,KAAKpS,CAAC,CAACoS,CAAC,EAAG;IAEzB,OAAOpS,CAAC,CAACoS,CAAC,GAAGvqB,CAAC,CAACuqB,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAOvqB,CAAC,CAACiqC,EAAE,GAAG9xB,CAAC,CAAC8xB,EAAE;EAEnB;AAED;AAGA,SAAS2pD,eAAeA,CAAA,EAAG;EAE1B,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAIC,gBAAgB,GAAG,CAAC;EAExB,IAAMzI,MAAM,GAAG,EAAE;EACjB,IAAM0I,YAAY,GAAG,EAAE;EACvB,IAAMtjD,WAAW,GAAG,EAAE;EAEtB,SAASs+B,IAAIA,CAAA,EAAG;IAEf+kB,gBAAgB,GAAG,CAAC;IAEpBzI,MAAM,CAAClnF,MAAM,GAAG,CAAC;IACjB4vF,YAAY,CAAC5vF,MAAM,GAAG,CAAC;IACvBssC,WAAW,CAACtsC,MAAM,GAAG,CAAC;EAEvB;EAEA,SAAS6vF,iBAAiBA,CAAE57D,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAEnpE,CAAC,EAAEq3B,KAAK,EAAG;IAE9E,IAAIqyC,UAAU,GAAGJ,WAAW,CAAEC,gBAAgB,CAAE;IAEhD,IAAKG,UAAU,KAAKntF,SAAS,EAAG;MAE/BmtF,UAAU,GAAG;QACZhqD,EAAE,EAAE7R,MAAM,CAAC6R,EAAE;QACb7R,MAAM,EAAEA,MAAM;QACdgB,QAAQ,EAAEA,QAAQ;QAClBwT,QAAQ,EAAEA,QAAQ;QAClB8mD,UAAU,EAAEA,UAAU;QACtBxrD,WAAW,EAAE9P,MAAM,CAAC8P,WAAW;QAC/B3d,CAAC,EAAEA,CAAC;QACJq3B,KAAK,EAAEA;MACR,CAAC;MAEDiyC,WAAW,CAAEC,gBAAgB,CAAE,GAAGG,UAAU;IAE7C,CAAC,MAAM;MAENA,UAAU,CAAChqD,EAAE,GAAG7R,MAAM,CAAC6R,EAAE;MACzBgqD,UAAU,CAAC77D,MAAM,GAAGA,MAAM;MAC1B67D,UAAU,CAAC76D,QAAQ,GAAGA,QAAQ;MAC9B66D,UAAU,CAACrnD,QAAQ,GAAGA,QAAQ;MAC9BqnD,UAAU,CAACP,UAAU,GAAGA,UAAU;MAClCO,UAAU,CAAC/rD,WAAW,GAAG9P,MAAM,CAAC8P,WAAW;MAC3C+rD,UAAU,CAAC1pE,CAAC,GAAGA,CAAC;MAChB0pE,UAAU,CAACryC,KAAK,GAAGA,KAAK;IAEzB;IAEAkyC,gBAAgB,EAAG;IAEnB,OAAOG,UAAU;EAElB;EAEA,SAASnwF,IAAIA,CAAEs0B,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAEnpE,CAAC,EAAEq3B,KAAK,EAAG;IAEjE,IAAMqyC,UAAU,GAAGD,iBAAiB,CAAE57D,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAEnpE,CAAC,EAAEq3B,KAAM,CAAC;IAExF,IAAKhV,QAAQ,CAAC0J,YAAY,GAAG,GAAG,EAAG;MAElCy9C,YAAY,CAACjwF,IAAI,CAAEmwF,UAAW,CAAC;IAEhC,CAAC,MAAM,IAAKrnD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAAC3sC,IAAI,CAAEmwF,UAAW,CAAC;IAE/B,CAAC,MAAM;MAEN5I,MAAM,CAACvnF,IAAI,CAAEmwF,UAAW,CAAC;IAE1B;EAED;EAEA,SAAS3sB,OAAOA,CAAElvC,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAEnpE,CAAC,EAAEq3B,KAAK,EAAG;IAEpE,IAAMqyC,UAAU,GAAGD,iBAAiB,CAAE57D,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAEnpE,CAAC,EAAEq3B,KAAM,CAAC;IAExF,IAAKhV,QAAQ,CAAC0J,YAAY,GAAG,GAAG,EAAG;MAElCy9C,YAAY,CAACzsB,OAAO,CAAE2sB,UAAW,CAAC;IAEnC,CAAC,MAAM,IAAKrnD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAAC62B,OAAO,CAAE2sB,UAAW,CAAC;IAElC,CAAC,MAAM;MAEN5I,MAAM,CAAC/jB,OAAO,CAAE2sB,UAAW,CAAC;IAE7B;EAED;EAEA,SAAS3Z,IAAIA,CAAE4Z,gBAAgB,EAAEC,qBAAqB,EAAG;IAExD,IAAK9I,MAAM,CAAClnF,MAAM,GAAG,CAAC,EAAGknF,MAAM,CAAC/Q,IAAI,CAAE4Z,gBAAgB,IAAIT,iBAAkB,CAAC;IAC7E,IAAKM,YAAY,CAAC5vF,MAAM,GAAG,CAAC,EAAG4vF,YAAY,CAACzZ,IAAI,CAAE6Z,qBAAqB,IAAIR,wBAAyB,CAAC;IACrG,IAAKljD,WAAW,CAACtsC,MAAM,GAAG,CAAC,EAAGssC,WAAW,CAAC6pC,IAAI,CAAE6Z,qBAAqB,IAAIR,wBAAyB,CAAC;EAEpG;EAEA,SAASnuF,MAAMA,CAAA,EAAG;IAEjB;;IAEA,KAAM,IAAI1F,CAAC,GAAGg0F,gBAAgB,EAAE1kE,EAAE,GAAGykE,WAAW,CAAC1vF,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAEvE,IAAMm0F,UAAU,GAAGJ,WAAW,CAAE/zF,CAAC,CAAE;MAEnC,IAAKm0F,UAAU,CAAChqD,EAAE,KAAK,IAAI,EAAG;MAE9BgqD,UAAU,CAAChqD,EAAE,GAAG,IAAI;MACpBgqD,UAAU,CAAC77D,MAAM,GAAG,IAAI;MACxB67D,UAAU,CAAC76D,QAAQ,GAAG,IAAI;MAC1B66D,UAAU,CAACrnD,QAAQ,GAAG,IAAI;MAC1BqnD,UAAU,CAACryC,KAAK,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IAENypC,MAAM,EAAEA,MAAM;IACd0I,YAAY,EAAEA,YAAY;IAC1BtjD,WAAW,EAAEA,WAAW;IAExBs+B,IAAI,EAAEA,IAAI;IACVjrE,IAAI,EAAEA,IAAI;IACVwjE,OAAO,EAAEA,OAAO;IAChB9hE,MAAM,EAAEA,MAAM;IAEd80E,IAAI,EAAEA;EACP,CAAC;AAEF;AAEA,SAAS8Z,gBAAgBA,CAAA,EAAG;EAE3B,IAAIC,KAAK,GAAG,IAAI1hC,OAAO,CAAC,CAAC;EAEzB,SAAS34C,GAAGA,CAAEkzC,KAAK,EAAEonC,eAAe,EAAG;IAEtC,IAAMC,SAAS,GAAGF,KAAK,CAACr6E,GAAG,CAAEkzC,KAAM,CAAC;IACpC,IAAIsnC,IAAI;IAER,IAAKD,SAAS,KAAKztF,SAAS,EAAG;MAE9B0tF,IAAI,GAAG,IAAIZ,eAAe,CAAC,CAAC;MAC5BS,KAAK,CAACt7E,GAAG,CAAEm0C,KAAK,EAAE,CAAEsnC,IAAI,CAAG,CAAC;IAE7B,CAAC,MAAM;MAEN,IAAKF,eAAe,IAAIC,SAAS,CAACpwF,MAAM,EAAG;QAE1CqwF,IAAI,GAAG,IAAIZ,eAAe,CAAC,CAAC;QAC5BW,SAAS,CAACzwF,IAAI,CAAE0wF,IAAK,CAAC;MAEvB,CAAC,MAAM;QAENA,IAAI,GAAGD,SAAS,CAAED,eAAe,CAAE;MAEpC;IAED;IAEA,OAAOE,IAAI;EAEZ;EAEA,SAASvqE,OAAOA,CAAA,EAAG;IAElBoqE,KAAK,GAAG,IAAI1hC,OAAO,CAAC,CAAC;EAEtB;EAEA,OAAO;IACN34C,GAAG,EAAEA,GAAG;IACRiQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASwqE,aAAaA,CAAA,EAAG;EAExB,IAAM1rC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAEN/uC,GAAG,EAAE,SAAAA,IAAW06E,KAAK,EAAG;MAEvB,IAAK3rC,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE,KAAKnjC,SAAS,EAAG;QAEvC,OAAOiiD,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE;MAE1B;MAEA,IAAI0d,QAAQ;MAEZ,QAAS+sC,KAAK,CAAC1zF,IAAI;QAElB,KAAK,kBAAkB;UACtB2mD,QAAQ,GAAG;YACV7qB,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxBtQ,KAAK,EAAE,IAAIk0B,KAAK,CAAC;UAClB,CAAC;UACD;QAED,KAAK,WAAW;UACf8P,QAAQ,GAAG;YACVruB,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvB6I,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxBtQ,KAAK,EAAE,IAAIk0B,KAAK,CAAC,CAAC;YAClB7O,QAAQ,EAAE,CAAC;YACXi5B,OAAO,EAAE,CAAC;YACVC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,YAAY;UAChBxa,QAAQ,GAAG;YACVruB,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvBtQ,KAAK,EAAE,IAAIk0B,KAAK,CAAC,CAAC;YAClB7O,QAAQ,EAAE,CAAC;YACXm5B,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,iBAAiB;UACrBxa,QAAQ,GAAG;YACV7qB,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxB8uC,QAAQ,EAAE,IAAIlrB,KAAK,CAAC,CAAC;YACrBmrB,WAAW,EAAE,IAAInrB,KAAK,CAAC;UACxB,CAAC;UACD;QAED,KAAK,eAAe;UACnB8P,QAAQ,GAAG;YACVhkC,KAAK,EAAE,IAAIk0B,KAAK,CAAC,CAAC;YAClBve,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvB0gE,SAAS,EAAE,IAAI1gE,OAAO,CAAC,CAAC;YACxB2gE,UAAU,EAAE,IAAI3gE,OAAO,CAAC;UACzB,CAAC;UACD;MAEF;MAEA80B,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE,GAAG0d,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAEA,SAASktC,mBAAmBA,CAAA,EAAG;EAE9B,IAAM9rC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAEN/uC,GAAG,EAAE,SAAAA,IAAW06E,KAAK,EAAG;MAEvB,IAAK3rC,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE,KAAKnjC,SAAS,EAAG;QAEvC,OAAOiiD,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE;MAE1B;MAEA,IAAI0d,QAAQ;MAEZ,QAAS+sC,KAAK,CAAC1zF,IAAI;QAElB,KAAK,kBAAkB;UACtB2mD,QAAQ,GAAG;YACV+Z,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIhoD,OAAO,CAAC;UAC5B,CAAC;UACD;QAED,KAAK,WAAW;UACf8tC,QAAQ,GAAG;YACV+Z,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIhoD,OAAO,CAAC;UAC5B,CAAC;UACD;QAED,KAAK,YAAY;UAChB8tC,QAAQ,GAAG;YACV+Z,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIhoD,OAAO,CAAC,CAAC;YAC5B6oD,gBAAgB,EAAE,CAAC;YACnBC,eAAe,EAAE;UAClB,CAAC;UACD;;QAED;MAED;;MAEA5Z,MAAM,CAAE2rC,KAAK,CAACzqD,EAAE,CAAE,GAAG0d,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAIA,IAAImtC,WAAW,GAAG,CAAC;AAEnB,SAASC,oCAAoCA,CAAEC,MAAM,EAAEC,MAAM,EAAG;EAE/D,OAAO,CAAEA,MAAM,CAACltD,UAAU,GAAG,CAAC,GAAG,CAAC,KAAOitD,MAAM,CAACjtD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKktD,MAAM,CAACtgD,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKqgD,MAAM,CAACrgD,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE;AAEvH;AAEA,SAASugD,WAAWA,CAAEjsC,UAAU,EAAEuJ,YAAY,EAAG;EAEhD,IAAMxlB,KAAK,GAAG,IAAIynD,aAAa,CAAC,CAAC;EAEjC,IAAMU,WAAW,GAAGN,mBAAmB,CAAC,CAAC;EAEzC,IAAM3uB,KAAK,GAAG;IAEbt/C,OAAO,EAAE,CAAC;IAEVwuE,IAAI,EAAE;MACLC,iBAAiB,EAAE,CAAE,CAAC;MACtBC,WAAW,EAAE,CAAE,CAAC;MAChBC,UAAU,EAAE,CAAE,CAAC;MACfC,cAAc,EAAE,CAAE,CAAC;MACnBC,UAAU,EAAE,CAAE,CAAC;MAEfC,qBAAqB,EAAE,CAAE,CAAC;MAC1BC,eAAe,EAAE,CAAE,CAAC;MACpBC,cAAc,EAAE,CAAE,CAAC;MACnBC,WAAW,EAAE,CAAE,CAAC;MAEhB3K,cAAc,EAAE,CAAE;IACnB,CAAC;IAED4K,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpBC,KAAK,EAAE,EAAE;IACTvD,WAAW,EAAE,EAAE;IACfwD,iBAAiB,EAAE,EAAE;IACrBl0B,oBAAoB,EAAE,EAAE;IACxBC,uBAAuB,EAAE,EAAE;IAC3B0wB,IAAI,EAAE,EAAE;IACRpwB,YAAY,EAAE,EAAE;IAChB4zB,UAAU,EAAE,EAAE;IACd3zB,aAAa,EAAE,EAAE;IACjBC,eAAe,EAAE,EAAE;IACnBmwB,QAAQ,EAAE,EAAE;IACZwD,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE,IAAI;IAClBx9D,KAAK,EAAE,EAAE;IACTy9D,WAAW,EAAE,EAAE;IACfxzB,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrB8vB,IAAI,EAAE,EAAE;IACRpN,2BAA2B,EAAE,CAAC;IAC9B2F,cAAc,EAAE;EAEjB,CAAC;EAED,KAAM,IAAIprF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAGomE,KAAK,CAAC6vB,KAAK,CAACjyF,IAAI,CAAE,IAAImwB,OAAO,CAAC,CAAE,CAAC;EAEhE,IAAMoiE,OAAO,GAAG,IAAIpiE,OAAO,CAAC,CAAC;EAC7B,IAAM/S,OAAO,GAAG,IAAIwe,OAAO,CAAC,CAAC;EAC7B,IAAM42D,QAAQ,GAAG,IAAI52D,OAAO,CAAC,CAAC;EAE9B,SAAS2oC,KAAKA,CAAEtf,MAAM,EAAEoiC,eAAe,EAAG;IAEzC,IAAI7rF,CAAC,GAAG,CAAC;MAAEyC,CAAC,GAAG,CAAC;MAAEoW,CAAC,GAAG,CAAC;IAEvB,KAAM,IAAIrY,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAGomE,KAAK,CAAC6vB,KAAK,CAAEj2F,IAAC,CAAE,CAACiZ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9D,IAAIs8E,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIU,sBAAsB,GAAG,CAAC;IAE9B,IAAIrL,cAAc,GAAG,CAAC;;IAEtB;IACAniC,MAAM,CAACuxB,IAAI,CAAEya,oCAAqC,CAAC;;IAEnD;IACA,IAAMyB,WAAW,GAAKrL,eAAe,KAAK,IAAI,GAAKt2E,IAAI,CAACC,EAAE,GAAG,CAAC;IAE9D,KAAM,IAAIhV,IAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG2nD,MAAM,CAAC5kD,MAAM,EAAErE,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;MAEjD,IAAM40F,KAAK,GAAG3rC,MAAM,CAAEjpD,IAAC,CAAE;MAEzB,IAAM6jB,KAAK,GAAG+wE,KAAK,CAAC/wE,KAAK;MACzB,IAAM8yE,SAAS,GAAG/B,KAAK,CAAC+B,SAAS;MACjC,IAAMztD,QAAQ,GAAG0rD,KAAK,CAAC1rD,QAAQ;MAE/B,IAAM4pD,SAAS,GAAK8B,KAAK,CAACjwB,MAAM,IAAIiwB,KAAK,CAACjwB,MAAM,CAAC9vB,GAAG,GAAK+/C,KAAK,CAACjwB,MAAM,CAAC9vB,GAAG,CAACznB,OAAO,GAAG,IAAI;MAExF,IAAKwnE,KAAK,CAACgC,cAAc,EAAG;QAE3Bp3F,CAAC,IAAIqkB,KAAK,CAACrkB,CAAC,GAAGm3F,SAAS,GAAGD,WAAW;QACtCz0F,CAAC,IAAI4hB,KAAK,CAAC5hB,CAAC,GAAG00F,SAAS,GAAGD,WAAW;QACtCr+E,CAAC,IAAIwL,KAAK,CAACxL,CAAC,GAAGs+E,SAAS,GAAGD,WAAW;MAEvC,CAAC,MAAM,IAAK9B,KAAK,CAACiC,YAAY,EAAG;QAEhC,KAAM,IAAIr7D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B4qC,KAAK,CAAC6vB,KAAK,CAAEz6D,CAAC,CAAE,CAAC1gB,eAAe,CAAE85E,KAAK,CAACkC,EAAE,CAACC,YAAY,CAAEv7D,CAAC,CAAE,EAAEm7D,SAAU,CAAC;QAE1E;QAEAvL,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKwJ,KAAK,CAACoC,kBAAkB,EAAG;QAEtC,IAAMnvC,QAAQ,GAAG3a,KAAK,CAAChzB,GAAG,CAAE06E,KAAM,CAAC;QAEnC/sC,QAAQ,CAAChkC,KAAK,CAACnJ,IAAI,CAAEk6E,KAAK,CAAC/wE,KAAM,CAAC,CAAC1I,cAAc,CAAEy5E,KAAK,CAAC+B,SAAS,GAAGD,WAAY,CAAC;QAElF,IAAK9B,KAAK,CAAC3sD,UAAU,EAAG;UAEvB,IAAM08B,MAAM,GAAGiwB,KAAK,CAACjwB,MAAM;UAE3B,IAAMsyB,cAAc,GAAG5B,WAAW,CAACn7E,GAAG,CAAE06E,KAAM,CAAC;UAE/CqC,cAAc,CAACr1B,UAAU,GAAG+C,MAAM,CAACuyB,IAAI;UACvCD,cAAc,CAACp1B,gBAAgB,GAAG8C,MAAM,CAACwyB,UAAU;UACnDF,cAAc,CAACn1B,YAAY,GAAG6C,MAAM,CAAC/tC,MAAM;UAC3CqgE,cAAc,CAACl1B,aAAa,GAAG4C,MAAM,CAACyyB,OAAO;UAE7ChxB,KAAK,CAAC8vB,iBAAiB,CAAEX,iBAAiB,CAAE,GAAG0B,cAAc;UAC7D7wB,KAAK,CAACpE,oBAAoB,CAAEuzB,iBAAiB,CAAE,GAAGzC,SAAS;UAC3D1sB,KAAK,CAACnE,uBAAuB,CAAEszB,iBAAiB,CAAE,GAAGX,KAAK,CAACjwB,MAAM,CAACtiD,MAAM;UAExEuzE,qBAAqB,EAAG;QAEzB;QAEAxvB,KAAK,CAACssB,WAAW,CAAE6C,iBAAiB,CAAE,GAAG1tC,QAAQ;QAEjD0tC,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;QAE/B,IAAMxvC,SAAQ,GAAG3a,KAAK,CAAChzB,GAAG,CAAE06E,KAAM,CAAC;QAEnC/sC,SAAQ,CAACruB,QAAQ,CAACvC,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAE5DmyB,SAAQ,CAAChkC,KAAK,CAACnJ,IAAI,CAAEmJ,KAAM,CAAC,CAAC1I,cAAc,CAAEw7E,SAAS,GAAGD,WAAY,CAAC;QACtE7uC,SAAQ,CAAC3e,QAAQ,GAAGA,QAAQ;QAE5B2e,SAAQ,CAACsa,OAAO,GAAGptD,IAAI,CAACwD,GAAG,CAAEq8E,KAAK,CAACx4E,KAAM,CAAC;QAC1CyrC,SAAQ,CAACua,WAAW,GAAGrtD,IAAI,CAACwD,GAAG,CAAEq8E,KAAK,CAACx4E,KAAK,IAAK,CAAC,GAAGw4E,KAAK,CAAC0C,QAAQ,CAAG,CAAC;QACvEzvC,SAAQ,CAACwa,KAAK,GAAGuyB,KAAK,CAACvyB,KAAK;QAE5B+D,KAAK,CAACusB,IAAI,CAAE8C,UAAU,CAAE,GAAG5tC,SAAQ;QAEnC,IAAM8c,OAAM,GAAGiwB,KAAK,CAACjwB,MAAM;QAE3B,IAAKiwB,KAAK,CAAC//C,GAAG,EAAG;UAEhBuxB,KAAK,CAAC7D,YAAY,CAAEwzB,WAAW,CAAE,GAAGnB,KAAK,CAAC//C,GAAG;UAC7CkhD,WAAW,EAAG;;UAEd;UACA;UACApxB,OAAM,CAAC4yB,cAAc,CAAE3C,KAAM,CAAC;UAE9B,IAAKA,KAAK,CAAC3sD,UAAU,EAAGwuD,sBAAsB,EAAG;QAElD;QAEArwB,KAAK,CAAC3D,eAAe,CAAEgzB,UAAU,CAAE,GAAG9wB,OAAM,CAACtiD,MAAM;QAEnD,IAAKuyE,KAAK,CAAC3sD,UAAU,EAAG;UAEvB,IAAMgvD,eAAc,GAAG5B,WAAW,CAACn7E,GAAG,CAAE06E,KAAM,CAAC;UAE/CqC,eAAc,CAACr1B,UAAU,GAAG+C,OAAM,CAACuyB,IAAI;UACvCD,eAAc,CAACp1B,gBAAgB,GAAG8C,OAAM,CAACwyB,UAAU;UACnDF,eAAc,CAACn1B,YAAY,GAAG6C,OAAM,CAAC/tC,MAAM;UAC3CqgE,eAAc,CAACl1B,aAAa,GAAG4C,OAAM,CAACyyB,OAAO;UAE7ChxB,KAAK,CAAC+vB,UAAU,CAAEV,UAAU,CAAE,GAAGwB,eAAc;UAC/C7wB,KAAK,CAAC5D,aAAa,CAAEizB,UAAU,CAAE,GAAG3C,SAAS;UAE7CgD,cAAc,EAAG;QAElB;QAEAL,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;QAEnC,IAAM3vC,UAAQ,GAAG3a,KAAK,CAAChzB,GAAG,CAAE06E,KAAM,CAAC;QAEnC/sC,UAAQ,CAAChkC,KAAK,CAACnJ,IAAI,CAAEmJ,KAAM,CAAC,CAAC1I,cAAc,CAAEw7E,SAAU,CAAC;QAExD9uC,UAAQ,CAACgtC,SAAS,CAAC57E,GAAG,CAAE27E,KAAK,CAAC/uE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAI,CAAC;QACrDgiC,UAAQ,CAACitC,UAAU,CAAC77E,GAAG,CAAE,GAAG,EAAE27E,KAAK,CAAC9uE,MAAM,GAAG,GAAG,EAAE,GAAI,CAAC;QAEvDsgD,KAAK,CAACwsB,QAAQ,CAAE8C,cAAc,CAAE,GAAG7tC,UAAQ;QAE3C6tC,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;QAEhC,IAAM5vC,UAAQ,GAAG3a,KAAK,CAAChzB,GAAG,CAAE06E,KAAM,CAAC;QAEnC/sC,UAAQ,CAAChkC,KAAK,CAACnJ,IAAI,CAAEk6E,KAAK,CAAC/wE,KAAM,CAAC,CAAC1I,cAAc,CAAEy5E,KAAK,CAAC+B,SAAS,GAAGD,WAAY,CAAC;QAClF7uC,UAAQ,CAAC3e,QAAQ,GAAG0rD,KAAK,CAAC1rD,QAAQ;QAClC2e,UAAQ,CAACwa,KAAK,GAAGuyB,KAAK,CAACvyB,KAAK;QAE5B,IAAKuyB,KAAK,CAAC3sD,UAAU,EAAG;UAEvB,IAAM08B,QAAM,GAAGiwB,KAAK,CAACjwB,MAAM;UAE3B,IAAMsyB,gBAAc,GAAG5B,WAAW,CAACn7E,GAAG,CAAE06E,KAAM,CAAC;UAE/CqC,gBAAc,CAACr1B,UAAU,GAAG+C,QAAM,CAACuyB,IAAI;UACvCD,gBAAc,CAACp1B,gBAAgB,GAAG8C,QAAM,CAACwyB,UAAU;UACnDF,gBAAc,CAACn1B,YAAY,GAAG6C,QAAM,CAAC/tC,MAAM;UAC3CqgE,gBAAc,CAACl1B,aAAa,GAAG4C,QAAM,CAACyyB,OAAO;UAC7CH,gBAAc,CAACr0B,gBAAgB,GAAG+B,QAAM,CAACtvC,MAAM,CAACoP,IAAI;UACpDwyD,gBAAc,CAACp0B,eAAe,GAAG8B,QAAM,CAACtvC,MAAM,CAACqP,GAAG;UAElD0hC,KAAK,CAACkwB,WAAW,CAAEd,WAAW,CAAE,GAAGyB,gBAAc;UACjD7wB,KAAK,CAACtD,cAAc,CAAE0yB,WAAW,CAAE,GAAG1C,SAAS;UAC/C1sB,KAAK,CAACrD,iBAAiB,CAAEyyB,WAAW,CAAE,GAAGZ,KAAK,CAACjwB,MAAM,CAACtiD,MAAM;UAE5DwzE,eAAe,EAAG;QAEnB;QAEAzvB,KAAK,CAACvtC,KAAK,CAAE28D,WAAW,CAAE,GAAG3tC,UAAQ;QAErC2tC,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;QAErC,IAAM7vC,UAAQ,GAAG3a,KAAK,CAAChzB,GAAG,CAAE06E,KAAM,CAAC;QAEnC/sC,UAAQ,CAACob,QAAQ,CAACvoD,IAAI,CAAEk6E,KAAK,CAAC/wE,KAAM,CAAC,CAAC1I,cAAc,CAAEw7E,SAAS,GAAGD,WAAY,CAAC;QAC/E7uC,UAAQ,CAACqb,WAAW,CAACxoD,IAAI,CAAEk6E,KAAK,CAAC1xB,WAAY,CAAC,CAAC/nD,cAAc,CAAEw7E,SAAS,GAAGD,WAAY,CAAC;QAExFtwB,KAAK,CAACysB,IAAI,CAAE8C,UAAU,CAAE,GAAG9tC,UAAQ;QAEnC8tC,UAAU,EAAG;MAEd;IAED;IAEA,IAAKD,cAAc,GAAG,CAAC,EAAG;MAEzB,IAAKhjC,YAAY,CAACC,QAAQ,EAAG;QAE5B;;QAEAyT,KAAK,CAACgwB,YAAY,GAAG32B,WAAW,CAACk4B,WAAW;QAC5CvxB,KAAK,CAACiwB,YAAY,GAAG52B,WAAW,CAACm4B,WAAW;MAE7C,CAAC,MAAM;QAEN;;QAEA,IAAKzuC,UAAU,CAAC1kC,GAAG,CAAE,0BAA2B,CAAC,KAAK,IAAI,EAAG;UAE5D2hD,KAAK,CAACgwB,YAAY,GAAG32B,WAAW,CAACk4B,WAAW;UAC5CvxB,KAAK,CAACiwB,YAAY,GAAG52B,WAAW,CAACm4B,WAAW;QAE7C,CAAC,MAAM,IAAKzuC,UAAU,CAAC1kC,GAAG,CAAE,+BAAgC,CAAC,KAAK,IAAI,EAAG;UAExE2hD,KAAK,CAACgwB,YAAY,GAAG32B,WAAW,CAACo4B,UAAU;UAC3CzxB,KAAK,CAACiwB,YAAY,GAAG52B,WAAW,CAACq4B,UAAU;QAE5C,CAAC,MAAM;UAEN5+E,OAAO,CAACywB,KAAK,CAAE,6EAA8E,CAAC;QAE/F;MAED;IAED;IAEAy8B,KAAK,CAAC4vB,OAAO,CAAE,CAAC,CAAE,GAAGx2F,CAAC;IACtB4mE,KAAK,CAAC4vB,OAAO,CAAE,CAAC,CAAE,GAAG/zF,CAAC;IACtBmkE,KAAK,CAAC4vB,OAAO,CAAE,CAAC,CAAE,GAAG39E,CAAC;IAEtB,IAAMi9E,IAAI,GAAGlvB,KAAK,CAACkvB,IAAI;IAEvB,IAAKA,IAAI,CAACC,iBAAiB,KAAKA,iBAAiB,IAChDD,IAAI,CAACE,WAAW,KAAKA,WAAW,IAChCF,IAAI,CAACG,UAAU,KAAKA,UAAU,IAC9BH,IAAI,CAACI,cAAc,KAAKA,cAAc,IACtCJ,IAAI,CAACK,UAAU,KAAKA,UAAU,IAC9BL,IAAI,CAACM,qBAAqB,KAAKA,qBAAqB,IACpDN,IAAI,CAACO,eAAe,KAAKA,eAAe,IACxCP,IAAI,CAACQ,cAAc,KAAKA,cAAc,IACtCR,IAAI,CAACS,WAAW,KAAKA,WAAW,IAChCT,IAAI,CAAClK,cAAc,KAAKA,cAAc,EAAG;MAEzChlB,KAAK,CAACssB,WAAW,CAACruF,MAAM,GAAGkxF,iBAAiB;MAC5CnvB,KAAK,CAACusB,IAAI,CAACtuF,MAAM,GAAGoxF,UAAU;MAC9BrvB,KAAK,CAACwsB,QAAQ,CAACvuF,MAAM,GAAGqxF,cAAc;MACtCtvB,KAAK,CAACvtC,KAAK,CAACx0B,MAAM,GAAGmxF,WAAW;MAChCpvB,KAAK,CAACysB,IAAI,CAACxuF,MAAM,GAAGsxF,UAAU;MAE9BvvB,KAAK,CAAC8vB,iBAAiB,CAAC7xF,MAAM,GAAGuxF,qBAAqB;MACtDxvB,KAAK,CAACpE,oBAAoB,CAAC39D,MAAM,GAAGuxF,qBAAqB;MACzDxvB,KAAK,CAACkwB,WAAW,CAACjyF,MAAM,GAAGwxF,eAAe;MAC1CzvB,KAAK,CAACtD,cAAc,CAACz+D,MAAM,GAAGwxF,eAAe;MAC7CzvB,KAAK,CAAC+vB,UAAU,CAAC9xF,MAAM,GAAGyxF,cAAc;MACxC1vB,KAAK,CAAC5D,aAAa,CAACn+D,MAAM,GAAGyxF,cAAc;MAC3C1vB,KAAK,CAACnE,uBAAuB,CAAC59D,MAAM,GAAGuxF,qBAAqB;MAC5DxvB,KAAK,CAACrD,iBAAiB,CAAC1+D,MAAM,GAAGwxF,eAAe;MAChDzvB,KAAK,CAAC3D,eAAe,CAACp+D,MAAM,GAAGyxF,cAAc,GAAGC,WAAW,GAAGU,sBAAsB;MACpFrwB,KAAK,CAAC7D,YAAY,CAACl+D,MAAM,GAAG0xF,WAAW;MACvC3vB,KAAK,CAACqf,2BAA2B,GAAGgR,sBAAsB;MAC1DrwB,KAAK,CAACglB,cAAc,GAAGA,cAAc;MAErCkK,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;MAC1CD,IAAI,CAACE,WAAW,GAAGA,WAAW;MAC9BF,IAAI,CAACG,UAAU,GAAGA,UAAU;MAC5BH,IAAI,CAACI,cAAc,GAAGA,cAAc;MACpCJ,IAAI,CAACK,UAAU,GAAGA,UAAU;MAE5BL,IAAI,CAACM,qBAAqB,GAAGA,qBAAqB;MAClDN,IAAI,CAACO,eAAe,GAAGA,eAAe;MACtCP,IAAI,CAACQ,cAAc,GAAGA,cAAc;MACpCR,IAAI,CAACS,WAAW,GAAGA,WAAW;MAE9BT,IAAI,CAAClK,cAAc,GAAGA,cAAc;MAEpChlB,KAAK,CAACt/C,OAAO,GAAGkuE,WAAW,EAAG;IAE/B;EAED;EAEA,SAAS+C,SAASA,CAAE9uC,MAAM,EAAE5zB,MAAM,EAAG;IAEpC,IAAIkgE,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAMzlB,UAAU,GAAG76C,MAAM,CAACC,kBAAkB;IAE5C,KAAM,IAAIt1B,IAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG2nD,MAAM,CAAC5kD,MAAM,EAAErE,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;MAEjD,IAAM40F,KAAK,GAAG3rC,MAAM,CAAEjpD,IAAC,CAAE;MAEzB,IAAK40F,KAAK,CAACoC,kBAAkB,EAAG;QAE/B,IAAMnvC,QAAQ,GAAGue,KAAK,CAACssB,WAAW,CAAE6C,iBAAiB,CAAE;QAEvD1tC,QAAQ,CAAC7qB,SAAS,CAAC/F,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC7D6gE,OAAO,CAACt/D,qBAAqB,CAAE29D,KAAK,CAAC1uF,MAAM,CAACwvB,WAAY,CAAC;QACzDmyB,QAAQ,CAAC7qB,SAAS,CAACjiB,GAAG,CAAEw7E,OAAQ,CAAC;QACjC1uC,QAAQ,CAAC7qB,SAAS,CAACrH,kBAAkB,CAAEu6C,UAAW,CAAC;QAEnDqlB,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;QAE/B,IAAMxvC,UAAQ,GAAGue,KAAK,CAACusB,IAAI,CAAE8C,UAAU,CAAE;QAEzC5tC,UAAQ,CAACruB,QAAQ,CAACvC,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC5DmyB,UAAQ,CAACruB,QAAQ,CAAC1O,YAAY,CAAEolD,UAAW,CAAC;QAE5CroB,UAAQ,CAAC7qB,SAAS,CAAC/F,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC7D6gE,OAAO,CAACt/D,qBAAqB,CAAE29D,KAAK,CAAC1uF,MAAM,CAACwvB,WAAY,CAAC;QACzDmyB,UAAQ,CAAC7qB,SAAS,CAACjiB,GAAG,CAAEw7E,OAAQ,CAAC;QACjC1uC,UAAQ,CAAC7qB,SAAS,CAACrH,kBAAkB,CAAEu6C,UAAW,CAAC;QAEnDulB,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;QAEnC,IAAM3vC,UAAQ,GAAGue,KAAK,CAACwsB,QAAQ,CAAE8C,cAAc,CAAE;QAEjD7tC,UAAQ,CAACruB,QAAQ,CAACvC,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC5DmyB,UAAQ,CAACruB,QAAQ,CAAC1O,YAAY,CAAEolD,UAAW,CAAC;;QAE5C;QACAsmB,QAAQ,CAAC53E,QAAQ,CAAC,CAAC;QACnBwC,OAAO,CAAC1G,IAAI,CAAEk6E,KAAK,CAACl/D,WAAY,CAAC;QACjCtU,OAAO,CAAC/B,WAAW,CAAE6wD,UAAW,CAAC;QACjCsmB,QAAQ,CAACh2D,eAAe,CAAEpf,OAAQ,CAAC;QAEnCymC,UAAQ,CAACgtC,SAAS,CAAC57E,GAAG,CAAE27E,KAAK,CAAC/uE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAI,CAAC;QACrDgiC,UAAQ,CAACitC,UAAU,CAAC77E,GAAG,CAAE,GAAG,EAAE27E,KAAK,CAAC9uE,MAAM,GAAG,GAAG,EAAE,GAAI,CAAC;QAEvD+hC,UAAQ,CAACgtC,SAAS,CAAC/pE,YAAY,CAAE0rE,QAAS,CAAC;QAC3C3uC,UAAQ,CAACitC,UAAU,CAAChqE,YAAY,CAAE0rE,QAAS,CAAC;QAE5Cd,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;QAEhC,IAAM5vC,UAAQ,GAAGue,KAAK,CAACvtC,KAAK,CAAE28D,WAAW,CAAE;QAE3C3tC,UAAQ,CAACruB,QAAQ,CAACvC,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC5DmyB,UAAQ,CAACruB,QAAQ,CAAC1O,YAAY,CAAEolD,UAAW,CAAC;QAE5CslB,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;QAErC,IAAM7vC,UAAQ,GAAGue,KAAK,CAACysB,IAAI,CAAE8C,UAAU,CAAE;QAEzC9tC,UAAQ,CAAC7qB,SAAS,CAAC/F,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;QAC7DmyB,UAAQ,CAAC7qB,SAAS,CAACrH,kBAAkB,CAAEu6C,UAAW,CAAC;QAEnDylB,UAAU,EAAG;MAEd;IAED;EAED;EAEA,OAAO;IACNptB,KAAK,EAAEA,KAAK;IACZwvB,SAAS,EAAEA,SAAS;IACpB3xB,KAAK,EAAEA;EACR,CAAC;AAEF;AAEA,SAAS4xB,gBAAgBA,CAAE7uC,UAAU,EAAEuJ,YAAY,EAAG;EAErD,IAAMzJ,MAAM,GAAG,IAAImsC,WAAW,CAAEjsC,UAAU,EAAEuJ,YAAa,CAAC;EAE1D,IAAMulC,WAAW,GAAG,EAAE;EACtB,IAAMC,YAAY,GAAG,EAAE;EAEvB,SAASjpB,IAAIA,CAAA,EAAG;IAEfgpB,WAAW,CAAC5zF,MAAM,GAAG,CAAC;IACtB6zF,YAAY,CAAC7zF,MAAM,GAAG,CAAC;EAExB;EAEA,SAAS8zF,SAASA,CAAEvD,KAAK,EAAG;IAE3BqD,WAAW,CAACj0F,IAAI,CAAE4wF,KAAM,CAAC;EAE1B;EAEA,SAASwD,UAAUA,CAAEC,WAAW,EAAG;IAElCH,YAAY,CAACl0F,IAAI,CAAEq0F,WAAY,CAAC;EAEjC;EAEA,SAASC,WAAWA,CAAEjN,eAAe,EAAG;IAEvCpiC,MAAM,CAACsf,KAAK,CAAE0vB,WAAW,EAAE5M,eAAgB,CAAC;EAE7C;EAEA,SAASkN,eAAeA,CAAEljE,MAAM,EAAG;IAElC4zB,MAAM,CAAC8uC,SAAS,CAAEE,WAAW,EAAE5iE,MAAO,CAAC;EAExC;EAEA,IAAM+wC,KAAK,GAAG;IACb6xB,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAE1BjvC,MAAM,EAAEA;EACT,CAAC;EAED,OAAO;IACNgmB,IAAI,EAAEA,IAAI;IACV7I,KAAK,EAAEA,KAAK;IACZkyB,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAEhCJ,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA;EACb,CAAC;AAEF;AAEA,SAASI,iBAAiBA,CAAErvC,UAAU,EAAEuJ,YAAY,EAAG;EAEtD,IAAI+lC,YAAY,GAAG,IAAI5lC,OAAO,CAAC,CAAC;EAEhC,SAAS34C,GAAGA,CAAEkzC,KAAK,EAAEonC,eAAe,GAAG,CAAC,EAAG;IAE1C,IAAMkE,gBAAgB,GAAGD,YAAY,CAACv+E,GAAG,CAAEkzC,KAAM,CAAC;IAClD,IAAIurC,WAAW;IAEf,IAAKD,gBAAgB,KAAK1xF,SAAS,EAAG;MAErC2xF,WAAW,GAAG,IAAIX,gBAAgB,CAAE7uC,UAAU,EAAEuJ,YAAa,CAAC;MAC9D+lC,YAAY,CAACx/E,GAAG,CAAEm0C,KAAK,EAAE,CAAEurC,WAAW,CAAG,CAAC;IAE3C,CAAC,MAAM;MAEN,IAAKnE,eAAe,IAAIkE,gBAAgB,CAACr0F,MAAM,EAAG;QAEjDs0F,WAAW,GAAG,IAAIX,gBAAgB,CAAE7uC,UAAU,EAAEuJ,YAAa,CAAC;QAC9DgmC,gBAAgB,CAAC10F,IAAI,CAAE20F,WAAY,CAAC;MAErC,CAAC,MAAM;QAENA,WAAW,GAAGD,gBAAgB,CAAElE,eAAe,CAAE;MAElD;IAED;IAEA,OAAOmE,WAAW;EAEnB;EAEA,SAASxuE,OAAOA,CAAA,EAAG;IAElBsuE,YAAY,GAAG,IAAI5lC,OAAO,CAAC,CAAC;EAE7B;EAEA,OAAO;IACN34C,GAAG,EAAEA,GAAG;IACRiQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEK0kE,iBAAiB,GAAAznF,OAAA,CAAAynF,iBAAA,0BAAA+J,UAAA;EAAA/wE,SAAA,CAAAgnE,iBAAA,EAAA+J,UAAA;EAAA,IAAAC,QAAA,GAAA9wE,YAAA,CAAA8mE,iBAAA;EAEtB,SAAAA,kBAAariD,UAAU,EAAG;IAAA,IAAAssD,OAAA;IAAAhzF,eAAA,OAAA+oF,iBAAA;IAEzBiK,OAAA,GAAAD,QAAA,CAAAz3F,IAAA;IAEA03F,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAK53F,IAAI,GAAG,mBAAmB;IAE/B43F,OAAA,CAAKrN,YAAY,GAAG96E,iBAAiB;IAErCmoF,OAAA,CAAKjkD,GAAG,GAAG,IAAI;IAEfikD,OAAA,CAAK/jD,QAAQ,GAAG,IAAI;IAEpB+jD,OAAA,CAAKrjD,eAAe,GAAG,IAAI;IAC3BqjD,OAAA,CAAKpjD,iBAAiB,GAAG,CAAC;IAC1BojD,OAAA,CAAKnjD,gBAAgB,GAAG,CAAC;IAEzBmjD,OAAA,CAAK3hD,SAAS,GAAG,KAAK;IACtB2hD,OAAA,CAAK1hD,kBAAkB,GAAG,CAAC;IAE3B0hD,OAAA,CAAK7lD,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAssD,OAAA;EAE9B;EAACvyF,YAAA,CAAAsoF,iBAAA;IAAAvoF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAu0C,iBAAA,CAAAnvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC4iE,YAAY,GAAG5iE,MAAM,CAAC4iE,YAAY;MAEvC,IAAI,CAAC52C,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAy3C,iBAAA;AAAA,EA9C8B3+C,QAAQ;AAAA,IAkDlC4+C,oBAAoB,GAAA1nF,OAAA,CAAA0nF,oBAAA,0BAAAkK,UAAA;EAAAnxE,SAAA,CAAAinE,oBAAA,EAAAkK,UAAA;EAAA,IAAAC,QAAA,GAAAlxE,YAAA,CAAA+mE,oBAAA;EAEzB,SAAAA,qBAAatiD,UAAU,EAAG;IAAA,IAAA0sD,OAAA;IAAApzF,eAAA,OAAAgpF,oBAAA;IAEzBoK,OAAA,GAAAD,QAAA,CAAA73F,IAAA;IAEA83F,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAKh4F,IAAI,GAAG,sBAAsB;IAElCg4F,OAAA,CAAKrkD,GAAG,GAAG,IAAI;IAEfqkD,OAAA,CAAKnkD,QAAQ,GAAG,IAAI;IAEpBmkD,OAAA,CAAKzjD,eAAe,GAAG,IAAI;IAC3ByjD,OAAA,CAAKxjD,iBAAiB,GAAG,CAAC;IAC1BwjD,OAAA,CAAKvjD,gBAAgB,GAAG,CAAC;IAEzBujD,OAAA,CAAKjmD,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA0sD,OAAA;EAE9B;EAAC3yF,YAAA,CAAAuoF,oBAAA;IAAAxoF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAw0C,oBAAA,CAAApvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACgsB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAm5C,oBAAA;AAAA,EApCiC5+C,QAAQ;AAwC3C,IAAMkpD,MAAM,GAAG,0DAA0D;AAEzE,IAAMC,QAAQ,GAAG,imCAAimC;AAElnC,SAASC,cAAcA,CAAE9nB,SAAS,EAAE+nB,QAAQ,EAAEC,aAAa,EAAG;EAAA,IAAAC,WAAA;EAE7D,IAAIC,QAAQ,GAAG,IAAIvpC,OAAO,CAAC,CAAC;EAE5B,IAAMwpC,cAAc,GAAG,IAAI5/E,OAAO,CAAC,CAAC;IACnC6/E,aAAa,GAAG,IAAI7/E,OAAO,CAAC,CAAC;IAE7B8/E,SAAS,GAAG,IAAItvE,OAAO,CAAC,CAAC;IAEzBuvE,cAAc,GAAG,IAAIjL,iBAAiB,CAAE;MAAEpD,YAAY,EAAE76E;IAAiB,CAAE,CAAC;IAC5EmpF,iBAAiB,GAAG,IAAIjL,oBAAoB,CAAC,CAAC;IAE9CkL,cAAc,GAAG,CAAC,CAAC;IAEnBC,eAAe,GAAGT,aAAa,CAAC/rB,cAAc;EAE/C,IAAMx7B,UAAU,IAAAwnD,WAAA,OAAAh2E,eAAA,CAAAg2E,WAAA,EAAOlxF,SAAS,EAAIC,QAAQ,GAAAib,eAAA,CAAAg2E,WAAA,EAAIjxF,QAAQ,EAAID,SAAS,GAAAkb,eAAA,CAAAg2E,WAAA,EAAIhxF,UAAU,EAAIA,UAAU,GAAAgxF,WAAA,CAAE;EAEnG,IAAMS,sBAAsB,GAAG,IAAI1xC,cAAc,CAAE;IAClDK,OAAO,EAAE;MACRsxC,WAAW,EAAE;IACd,CAAC;IACDtyC,QAAQ,EAAE;MACTuyC,WAAW,EAAE;QAAEr6F,KAAK,EAAE;MAAK,CAAC;MAC5Bs6F,UAAU,EAAE;QAAEt6F,KAAK,EAAE,IAAIga,OAAO,CAAC;MAAE,CAAC;MACpC6c,MAAM,EAAE;QAAE72B,KAAK,EAAE;MAAI;IACtB,CAAC;IAEDgpD,YAAY,EAAEqwC,MAAM;IACpBpwC,cAAc,EAAEqwC;EAEjB,CAAE,CAAC;EAEH,IAAMiB,wBAAwB,GAAGJ,sBAAsB,CAACz/E,KAAK,CAAC,CAAC;EAC/D6/E,wBAAwB,CAACzxC,OAAO,CAAC0xC,eAAe,GAAG,CAAC;EAEpD,IAAMC,aAAa,GAAG,IAAIx7C,cAAc,CAAC,CAAC;EAC1Cw7C,aAAa,CAAC16C,YAAY,CACzB,UAAU,EACV,IAAIvE,eAAe,CAClB,IAAIliC,YAAY,CAAE,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAG,CAAC,EAC/D,CACD,CACD,CAAC;EAED,IAAMohF,cAAc,GAAG,IAAIh2C,IAAI,CAAE+1C,aAAa,EAAEN,sBAAuB,CAAC;EAExE,IAAM3zC,KAAK,GAAG,IAAI;EAElB,IAAI,CAACniC,OAAO,GAAG,KAAK;EAEpB,IAAI,CAACs2E,UAAU,GAAG,IAAI;EACtB,IAAI,CAAC3wE,WAAW,GAAG,KAAK;EAExB,IAAI,CAAC7oB,IAAI,GAAGkH,YAAY;EACxB,IAAIuyF,aAAa,GAAG,IAAI,CAACz5F,IAAI;EAE7B,IAAI,CAAC4sD,MAAM,GAAG,UAAW7E,MAAM,EAAEmE,KAAK,EAAE/3B,MAAM,EAAG;IAEhD,IAAKkxB,KAAK,CAACniC,OAAO,KAAK,KAAK,EAAG;IAC/B,IAAKmiC,KAAK,CAACm0C,UAAU,KAAK,KAAK,IAAIn0C,KAAK,CAACx8B,WAAW,KAAK,KAAK,EAAG;IAEjE,IAAKk/B,MAAM,CAAC5kD,MAAM,KAAK,CAAC,EAAG;IAE3B,IAAMipD,mBAAmB,GAAGkkB,SAAS,CAACtpB,eAAe,CAAC,CAAC;IACvD,IAAM0yC,cAAc,GAAGppB,SAAS,CAAChkB,iBAAiB,CAAC,CAAC;IACpD,IAAMrB,iBAAiB,GAAGqlB,SAAS,CAAC9jB,oBAAoB,CAAC,CAAC;IAE1D,IAAMmtC,MAAM,GAAGrpB,SAAS,CAACpL,KAAK;;IAE9B;IACAy0B,MAAM,CAACC,WAAW,CAAEnyF,UAAW,CAAC;IAChCkyF,MAAM,CAACjoC,OAAO,CAAC/uC,KAAK,CAACmjD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAC3C6zB,MAAM,CAACjoC,OAAO,CAACjmC,KAAK,CAACouE,OAAO,CAAE,IAAK,CAAC;IACpCF,MAAM,CAACG,cAAc,CAAE,KAAM,CAAC;;IAE9B;;IAEA,IAAMC,KAAK,GAAKN,aAAa,KAAKryF,YAAY,IAAI,IAAI,CAACpH,IAAI,KAAKoH,YAAc;IAC9E,IAAM4yF,OAAO,GAAKP,aAAa,KAAKryF,YAAY,IAAI,IAAI,CAACpH,IAAI,KAAKoH,YAAc;;IAEhF;;IAEA,KAAM,IAAItI,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG25B,MAAM,CAAC5kD,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAEnD,IAAM40F,KAAK,GAAG3rC,MAAM,CAAEjpD,CAAC,CAAE;MACzB,IAAM2kE,MAAM,GAAGiwB,KAAK,CAACjwB,MAAM;MAE3B,IAAKA,MAAM,KAAK39D,SAAS,EAAG;QAE3BkS,OAAO,CAACC,IAAI,CAAE,uBAAuB,EAAEy7E,KAAK,EAAE,gBAAiB,CAAC;QAChE;MAED;MAEA,IAAKjwB,MAAM,CAAC+1B,UAAU,KAAK,KAAK,IAAI/1B,MAAM,CAAC56C,WAAW,KAAK,KAAK,EAAG;MAEnE4vE,cAAc,CAACj/E,IAAI,CAAEiqD,MAAM,CAACyyB,OAAQ,CAAC;MAErC,IAAM+D,kBAAkB,GAAGx2B,MAAM,CAACy2B,eAAe,CAAC,CAAC;MAEnDzB,cAAc,CAACz+E,QAAQ,CAAEigF,kBAAmB,CAAC;MAE7CvB,aAAa,CAACl/E,IAAI,CAAEiqD,MAAM,CAACyyB,OAAQ,CAAC;MAEpC,IAAKuC,cAAc,CAAC3jF,CAAC,GAAGikF,eAAe,IAAIN,cAAc,CAACl4F,CAAC,GAAGw4F,eAAe,EAAG;QAE/E,IAAKN,cAAc,CAAC3jF,CAAC,GAAGikF,eAAe,EAAG;UAEzCL,aAAa,CAAC5jF,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAAE+iF,eAAe,GAAGkB,kBAAkB,CAACnlF,CAAE,CAAC;UACtE2jF,cAAc,CAAC3jF,CAAC,GAAG4jF,aAAa,CAAC5jF,CAAC,GAAGmlF,kBAAkB,CAACnlF,CAAC;UACzD2uD,MAAM,CAACyyB,OAAO,CAACphF,CAAC,GAAG4jF,aAAa,CAAC5jF,CAAC;QAEnC;QAEA,IAAK2jF,cAAc,CAACl4F,CAAC,GAAGw4F,eAAe,EAAG;UAEzCL,aAAa,CAACn4F,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAAE+iF,eAAe,GAAGkB,kBAAkB,CAAC15F,CAAE,CAAC;UACtEk4F,cAAc,CAACl4F,CAAC,GAAGm4F,aAAa,CAACn4F,CAAC,GAAG05F,kBAAkB,CAAC15F,CAAC;UACzDkjE,MAAM,CAACyyB,OAAO,CAAC31F,CAAC,GAAGm4F,aAAa,CAACn4F,CAAC;QAEnC;MAED;MAEA,IAAKkjE,MAAM,CAAC9vB,GAAG,KAAK,IAAI,IAAIomD,KAAK,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,EAAG;QAEhE,IAAMG,IAAI,GAAK,IAAI,CAACn6F,IAAI,KAAKoH,YAAY,GAAK;UAAEggB,SAAS,EAAE3c,aAAa;UAAE0c,SAAS,EAAE1c;QAAc,CAAC,GAAG,CAAC,CAAC;QAEzG,IAAKg5D,MAAM,CAAC9vB,GAAG,KAAK,IAAI,EAAG;UAE1B8vB,MAAM,CAAC9vB,GAAG,CAAC1qB,OAAO,CAAC,CAAC;QAErB;QAEAw6C,MAAM,CAAC9vB,GAAG,GAAG,IAAIvnB,iBAAiB,CAAEqsE,cAAc,CAAC3jF,CAAC,EAAE2jF,cAAc,CAACl4F,CAAC,EAAE45F,IAAK,CAAC;QAC9E12B,MAAM,CAAC9vB,GAAG,CAACznB,OAAO,CAAC3oB,IAAI,GAAGmwF,KAAK,CAACnwF,IAAI,GAAG,YAAY;QAEnDkgE,MAAM,CAACtvC,MAAM,CAACw1B,sBAAsB,CAAC,CAAC;MAEvC;MAEA2mB,SAAS,CAAC3jB,eAAe,CAAE8W,MAAM,CAAC9vB,GAAI,CAAC;MACvC28B,SAAS,CAAC1nC,KAAK,CAAC,CAAC;MAEjB,IAAMwxD,aAAa,GAAG32B,MAAM,CAAC42B,gBAAgB,CAAC,CAAC;MAE/C,KAAM,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGF,aAAa,EAAEE,EAAE,EAAG,EAAG;QAE7C,IAAM1uE,QAAQ,GAAG63C,MAAM,CAAC82B,WAAW,CAAED,EAAG,CAAC;QAEzC3B,SAAS,CAAC5gF,GAAG,CACZ2gF,aAAa,CAAC5jF,CAAC,GAAG8W,QAAQ,CAAC9W,CAAC,EAC5B4jF,aAAa,CAACn4F,CAAC,GAAGqrB,QAAQ,CAACrrB,CAAC,EAC5Bm4F,aAAa,CAAC5jF,CAAC,GAAG8W,QAAQ,CAACrC,CAAC,EAC5BmvE,aAAa,CAACn4F,CAAC,GAAGqrB,QAAQ,CAACpC,CAC5B,CAAC;QAEDmwE,MAAM,CAAC/tE,QAAQ,CAAE+sE,SAAU,CAAC;QAE5Bl1B,MAAM,CAAC4yB,cAAc,CAAE3C,KAAK,EAAE4G,EAAG,CAAC;QAElC9B,QAAQ,GAAG/0B,MAAM,CAAC+2B,UAAU,CAAC,CAAC;QAE9BC,YAAY,CAAEvuC,KAAK,EAAE/3B,MAAM,EAAEsvC,MAAM,CAACtvC,MAAM,EAAEu/D,KAAK,EAAE,IAAI,CAAC1zF,IAAK,CAAC;MAE/D;;MAEA;;MAEA,IAAKyjE,MAAM,CAACi3B,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAAC16F,IAAI,KAAKoH,YAAY,EAAG;QAEvEuzF,OAAO,CAAEl3B,MAAM,EAAEtvC,MAAO,CAAC;MAE1B;MAEAsvC,MAAM,CAAC56C,WAAW,GAAG,KAAK;IAE3B;IAEA4wE,aAAa,GAAG,IAAI,CAACz5F,IAAI;IAEzBqlD,KAAK,CAACx8B,WAAW,GAAG,KAAK;IAEzBynD,SAAS,CAAC3jB,eAAe,CAAEP,mBAAmB,EAAEstC,cAAc,EAAEzuC,iBAAkB,CAAC;EAEpF,CAAC;EAED,SAAS0vC,OAAOA,CAAEl3B,MAAM,EAAEtvC,MAAM,EAAG;IAElC,IAAMiE,QAAQ,GAAGigE,QAAQ,CAACrpE,MAAM,CAAEuqE,cAAe,CAAC;IAElD,IAAKP,sBAAsB,CAACrxC,OAAO,CAACsxC,WAAW,KAAKx1B,MAAM,CAACm3B,WAAW,EAAG;MAExE5B,sBAAsB,CAACrxC,OAAO,CAACsxC,WAAW,GAAGx1B,MAAM,CAACm3B,WAAW;MAC/DxB,wBAAwB,CAACzxC,OAAO,CAACsxC,WAAW,GAAGx1B,MAAM,CAACm3B,WAAW;MAEjE5B,sBAAsB,CAACnwE,WAAW,GAAG,IAAI;MACzCuwE,wBAAwB,CAACvwE,WAAW,GAAG,IAAI;IAE5C;IAEA,IAAK46C,MAAM,CAACo3B,OAAO,KAAK,IAAI,EAAG;MAE9Bp3B,MAAM,CAACo3B,OAAO,GAAG,IAAIzuE,iBAAiB,CAAEqsE,cAAc,CAAC3jF,CAAC,EAAE2jF,cAAc,CAACl4F,CAAE,CAAC;IAE7E;;IAEA;;IAEAy4F,sBAAsB,CAACryC,QAAQ,CAACuyC,WAAW,CAACr6F,KAAK,GAAG4kE,MAAM,CAAC9vB,GAAG,CAACznB,OAAO;IACtE8sE,sBAAsB,CAACryC,QAAQ,CAACwyC,UAAU,CAACt6F,KAAK,GAAG4kE,MAAM,CAACyyB,OAAO;IACjE8C,sBAAsB,CAACryC,QAAQ,CAACjxB,MAAM,CAAC72B,KAAK,GAAG4kE,MAAM,CAAC/tC,MAAM;IAC5D46C,SAAS,CAAC3jB,eAAe,CAAE8W,MAAM,CAACo3B,OAAQ,CAAC;IAC3CvqB,SAAS,CAAC1nC,KAAK,CAAC,CAAC;IACjB0nC,SAAS,CAACwqB,kBAAkB,CAAE3mE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAE4gE,sBAAsB,EAAEO,cAAc,EAAE,IAAK,CAAC;;IAEpG;;IAEAH,wBAAwB,CAACzyC,QAAQ,CAACuyC,WAAW,CAACr6F,KAAK,GAAG4kE,MAAM,CAACo3B,OAAO,CAAC3uE,OAAO;IAC5EktE,wBAAwB,CAACzyC,QAAQ,CAACwyC,UAAU,CAACt6F,KAAK,GAAG4kE,MAAM,CAACyyB,OAAO;IACnEkD,wBAAwB,CAACzyC,QAAQ,CAACjxB,MAAM,CAAC72B,KAAK,GAAG4kE,MAAM,CAAC/tC,MAAM;IAC9D46C,SAAS,CAAC3jB,eAAe,CAAE8W,MAAM,CAAC9vB,GAAI,CAAC;IACvC28B,SAAS,CAAC1nC,KAAK,CAAC,CAAC;IACjB0nC,SAAS,CAACwqB,kBAAkB,CAAE3mE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAEghE,wBAAwB,EAAEG,cAAc,EAAE,IAAK,CAAC;EAEvG;EAEA,SAASwB,gBAAgBA,CAAE3jE,MAAM,EAAEwU,QAAQ,EAAE8nD,KAAK,EAAE1zF,IAAI,EAAG;IAE1D,IAAIspC,MAAM,GAAG,IAAI;IAEjB,IAAM0xD,cAAc,GAAKtH,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKn/D,MAAM,CAAC6jE,sBAAsB,GAAG7jE,MAAM,CAAC8jE,mBAAmB;IAEnH,IAAKF,cAAc,KAAKl1F,SAAS,EAAG;MAEnCwjC,MAAM,GAAG0xD,cAAc;IAExB,CAAC,MAAM;MAEN1xD,MAAM,GAAKoqD,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKsC,iBAAiB,GAAGD,cAAc;MAE7E,IAAOtoB,SAAS,CAAC5C,oBAAoB,IAAI9hC,QAAQ,CAACkF,WAAW,KAAK,IAAI,IAAI3qB,KAAK,CAACC,OAAO,CAAEwlB,QAAQ,CAACgF,cAAe,CAAC,IAAIhF,QAAQ,CAACgF,cAAc,CAACztC,MAAM,KAAK,CAAC,IACvJyoC,QAAQ,CAAC2I,eAAe,IAAI3I,QAAQ,CAAC4I,iBAAiB,KAAK,CAAG,IAC9D5I,QAAQ,CAACiI,QAAQ,IAAIjI,QAAQ,CAACoK,SAAS,GAAG,CAAG,IAC7CpK,QAAQ,CAAC+H,GAAG,IAAI/H,QAAQ,CAACoK,SAAS,GAAG,CAAG,EAAG;QAE7C;QACA;;QAEA,IAAMmlD,IAAI,GAAG7xD,MAAM,CAACh1B,IAAI;UAAE8mF,IAAI,GAAGxvD,QAAQ,CAACt3B,IAAI;QAE9C,IAAI+mF,mBAAmB,GAAGvC,cAAc,CAAEqC,IAAI,CAAE;QAEhD,IAAKE,mBAAmB,KAAKv1F,SAAS,EAAG;UAExCu1F,mBAAmB,GAAG,CAAC,CAAC;UACxBvC,cAAc,CAAEqC,IAAI,CAAE,GAAGE,mBAAmB;QAE7C;QAEA,IAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAI,CAAE;QAEhD,IAAKE,cAAc,KAAKx1F,SAAS,EAAG;UAEnCw1F,cAAc,GAAGhyD,MAAM,CAAC/vB,KAAK,CAAC,CAAC;UAC/B8hF,mBAAmB,CAAED,IAAI,CAAE,GAAGE,cAAc;QAE7C;QAEAhyD,MAAM,GAAGgyD,cAAc;MAExB;IAED;IAEAhyD,MAAM,CAACxC,OAAO,GAAG8E,QAAQ,CAAC9E,OAAO;IACjCwC,MAAM,CAAC2M,SAAS,GAAGrK,QAAQ,CAACqK,SAAS;IAErC,IAAKj2C,IAAI,KAAKoH,YAAY,EAAG;MAE5BkiC,MAAM,CAACgG,IAAI,GAAK1D,QAAQ,CAACmF,UAAU,KAAK,IAAI,GAAKnF,QAAQ,CAACmF,UAAU,GAAGnF,QAAQ,CAAC0D,IAAI;IAErF,CAAC,MAAM;MAENhG,MAAM,CAACgG,IAAI,GAAK1D,QAAQ,CAACmF,UAAU,KAAK,IAAI,GAAKnF,QAAQ,CAACmF,UAAU,GAAGA,UAAU,CAAEnF,QAAQ,CAAC0D,IAAI,CAAE;IAEnG;IAEAhG,MAAM,CAACuK,QAAQ,GAAGjI,QAAQ,CAACiI,QAAQ;IACnCvK,MAAM,CAAC0M,SAAS,GAAGpK,QAAQ,CAACoK,SAAS;IACrC1M,MAAM,CAACqK,GAAG,GAAG/H,QAAQ,CAAC+H,GAAG;IAEzBrK,MAAM,CAACwH,WAAW,GAAGlF,QAAQ,CAACkF,WAAW;IACzCxH,MAAM,CAACsH,cAAc,GAAGhF,QAAQ,CAACgF,cAAc;IAC/CtH,MAAM,CAACuH,gBAAgB,GAAGjF,QAAQ,CAACiF,gBAAgB;IAEnDvH,MAAM,CAACiL,eAAe,GAAG3I,QAAQ,CAAC2I,eAAe;IACjDjL,MAAM,CAACkL,iBAAiB,GAAG5I,QAAQ,CAAC4I,iBAAiB;IACrDlL,MAAM,CAACmL,gBAAgB,GAAG7I,QAAQ,CAAC6I,gBAAgB;IAEnDnL,MAAM,CAAC4M,kBAAkB,GAAGtK,QAAQ,CAACsK,kBAAkB;IACvD5M,MAAM,CAACuM,SAAS,GAAGjK,QAAQ,CAACiK,SAAS;IAErC,IAAK69C,KAAK,CAAC6C,YAAY,KAAK,IAAI,IAAIjtD,MAAM,CAAC2uD,sBAAsB,KAAK,IAAI,EAAG;MAE5E,IAAM1pB,kBAAkB,GAAG+B,SAAS,CAAC9P,UAAU,CAACxnD,GAAG,CAAEswB,MAAO,CAAC;MAC7DilC,kBAAkB,CAACmlB,KAAK,GAAGA,KAAK;IAEjC;IAEA,OAAOpqD,MAAM;EAEd;EAEA,SAASmxD,YAAYA,CAAErjE,MAAM,EAAEjD,MAAM,EAAEonE,YAAY,EAAE7H,KAAK,EAAE1zF,IAAI,EAAG;IAElE,IAAKo3B,MAAM,CAAC0P,OAAO,KAAK,KAAK,EAAG;IAEhC,IAAMA,OAAO,GAAG1P,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2P,MAAM,CAAC4Q,MAAO,CAAC;IAEnD,IAAK+B,OAAO,KAAM1P,MAAM,CAAC+T,MAAM,IAAI/T,MAAM,CAACgU,MAAM,IAAIhU,MAAM,CAACiU,QAAQ,CAAE,EAAG;MAEvE,IAAK,CAAEjU,MAAM,CAAC2P,UAAU,IAAM3P,MAAM,CAAC4P,aAAa,IAAIhnC,IAAI,KAAKoH,YAAc,MAAQ,CAAEgwB,MAAM,CAAC6P,aAAa,IAAIuxD,QAAQ,CAACjoC,gBAAgB,CAAEn5B,MAAO,CAAC,CAAE,EAAG;QAEtJA,MAAM,CAACoP,eAAe,CAACtoB,gBAAgB,CAAEq9E,YAAY,CAACnnE,kBAAkB,EAAEgD,MAAM,CAAC5C,WAAY,CAAC;QAE9F,IAAM4D,QAAQ,GAAGigE,QAAQ,CAACrpE,MAAM,CAAEoI,MAAO,CAAC;QAC1C,IAAMwU,QAAQ,GAAGxU,MAAM,CAACwU,QAAQ;QAEhC,IAAKzlB,KAAK,CAACC,OAAO,CAAEwlB,QAAS,CAAC,EAAG;UAEhC,IAAMyS,MAAM,GAAGjmB,QAAQ,CAACimB,MAAM;UAE9B,KAAM,IAAIm9C,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGp9C,MAAM,CAACl7C,MAAM,EAAEq4F,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;YAEnD,IAAM56C,KAAK,GAAGvC,MAAM,CAAEm9C,CAAC,CAAE;YACzB,IAAMh3C,aAAa,GAAG5Y,QAAQ,CAAEgV,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAKwF,aAAa,IAAIA,aAAa,CAAC1d,OAAO,EAAG;cAE7C,IAAM40D,aAAa,GAAGX,gBAAgB,CAAE3jE,MAAM,EAAEotB,aAAa,EAAEkvC,KAAK,EAAE1zF,IAAK,CAAC;cAE5EswE,SAAS,CAACwqB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAEnjE,QAAQ,EAAEsjE,aAAa,EAAEtkE,MAAM,EAAEwpB,KAAM,CAAC;YAE3F;UAED;QAED,CAAC,MAAM,IAAKhV,QAAQ,CAAC9E,OAAO,EAAG;UAE9B,IAAM40D,eAAa,GAAGX,gBAAgB,CAAE3jE,MAAM,EAAEwU,QAAQ,EAAE8nD,KAAK,EAAE1zF,IAAK,CAAC;UAEvEswE,SAAS,CAACwqB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAEnjE,QAAQ,EAAEsjE,eAAa,EAAEtkE,MAAM,EAAE,IAAK,CAAC;QAE1F;MAED;IAED;IAEA,IAAMmB,QAAQ,GAAGnB,MAAM,CAACmB,QAAQ;IAEhC,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEnD27F,YAAY,CAAEliE,QAAQ,CAAEz5B,CAAC,CAAE,EAAEq1B,MAAM,EAAEonE,YAAY,EAAE7H,KAAK,EAAE1zF,IAAK,CAAC;IAEjE;EAED;AAED;AAEA,SAAS27F,UAAUA,CAAEpqC,EAAE,EAAEtJ,UAAU,EAAEuJ,YAAY,EAAG;EAAA,IAAAoqC,aAAA,EAAAC,WAAA;EAEnD,IAAMpqC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAASqqC,WAAWA,CAAA,EAAG;IAEtB,IAAIC,MAAM,GAAG,KAAK;IAElB,IAAMp5E,KAAK,GAAG,IAAI0G,OAAO,CAAC,CAAC;IAC3B,IAAI2yE,gBAAgB,GAAG,IAAI;IAC3B,IAAMC,iBAAiB,GAAG,IAAI5yE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEnD,OAAO;MAEN6yE,OAAO,EAAE,SAAAA,QAAWC,SAAS,EAAG;QAE/B,IAAKH,gBAAgB,KAAKG,SAAS,IAAI,CAAEJ,MAAM,EAAG;UAEjDxqC,EAAE,CAAC4qC,SAAS,CAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAU,CAAC;UAC1DH,gBAAgB,GAAGG,SAAS;QAE7B;MAED,CAAC;MAEDC,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDv2B,QAAQ,EAAE,SAAAA,SAAWxnE,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAEnY,CAAC,EAAEuyC,kBAAkB,EAAG;QAErD,IAAKA,kBAAkB,KAAK,IAAI,EAAG;UAElCjzC,CAAC,IAAIU,CAAC;UAAE+B,CAAC,IAAI/B,CAAC;UAAEmY,CAAC,IAAInY,CAAC;QAEvB;QAEA2jB,KAAK,CAAC5K,GAAG,CAAEzZ,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAEnY,CAAE,CAAC;QAEvB,IAAKi9F,iBAAiB,CAAC//E,MAAM,CAAEyG,KAAM,CAAC,KAAK,KAAK,EAAG;UAElD4uC,EAAE,CAAC6T,UAAU,CAAE9mE,CAAC,EAAEyC,CAAC,EAAEoW,CAAC,EAAEnY,CAAE,CAAC;UAC3Bi9F,iBAAiB,CAACziF,IAAI,CAAEmJ,KAAM,CAAC;QAEhC;MAED,CAAC;MAED1f,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElB84F,MAAM,GAAG,KAAK;QAEdC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,CAAClkF,GAAG,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;MAExC;IAED,CAAC;EAEF;;EAEA,SAASukF,WAAWA,CAAA,EAAG;IAEtB,IAAIP,MAAM,GAAG,KAAK;IAElB,IAAIQ,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,iBAAiB,GAAG,IAAI;IAE5B,OAAO;MAEN5C,OAAO,EAAE,SAAAA,QAAW3pD,SAAS,EAAG;QAE/B,IAAKA,SAAS,EAAG;UAEhBxL,MAAM,CAAE6sB,EAAE,CAACmrC,UAAW,CAAC;QAExB,CAAC,MAAM;UAEN73D,OAAO,CAAE0sB,EAAE,CAACmrC,UAAW,CAAC;QAEzB;MAED,CAAC;MAEDR,OAAO,EAAE,SAAAA,QAAWS,SAAS,EAAG;QAE/B,IAAKJ,gBAAgB,KAAKI,SAAS,IAAI,CAAEZ,MAAM,EAAG;UAEjDxqC,EAAE,CAACorC,SAAS,CAAEA,SAAU,CAAC;UACzBJ,gBAAgB,GAAGI,SAAS;QAE7B;MAED,CAAC;MAEDC,OAAO,EAAE,SAAAA,QAAW3sD,SAAS,EAAG;QAE/B,IAAKusD,gBAAgB,KAAKvsD,SAAS,EAAG;UAErC,QAASA,SAAS;YAEjB,KAAKlnC,UAAU;cAEdwoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACsrC,KAAM,CAAC;cACxB;YAED,KAAK7zF,WAAW;cAEfuoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACurC,MAAO,CAAC;cACzB;YAED,KAAK7zF,SAAS;cAEbsoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACwrC,IAAK,CAAC;cACvB;YAED,KAAK7zF,cAAc;cAElBqoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACyrC,MAAO,CAAC;cACzB;YAED,KAAK7zF,UAAU;cAEdooD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAAC0rC,KAAM,CAAC;cACxB;YAED,KAAK7zF,iBAAiB;cAErBmoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAAC2rC,MAAO,CAAC;cACzB;YAED,KAAK7zF,YAAY;cAEhBkoD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAAC4rC,OAAQ,CAAC;cAC1B;YAED,KAAK7zF,aAAa;cAEjBioD,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAAC6rC,QAAS,CAAC;cAC3B;YAED;cAEC7rC,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACyrC,MAAO,CAAC;UAE3B;UAEAR,gBAAgB,GAAGvsD,SAAS;QAE7B;MAED,CAAC;MAEDmsD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDv2B,QAAQ,EAAE,SAAAA,SAAWr6C,KAAK,EAAG;QAE5B,IAAKgxE,iBAAiB,KAAKhxE,KAAK,EAAG;UAElC8lC,EAAE,CAAC8rC,UAAU,CAAE5xE,KAAM,CAAC;UACtBgxE,iBAAiB,GAAGhxE,KAAK;QAE1B;MAED,CAAC;MAEDxoB,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElB84F,MAAM,GAAG,KAAK;QAEdQ,gBAAgB,GAAG,IAAI;QACvBC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,GAAG,IAAI;MAEzB;IAED,CAAC;EAEF;EAEA,SAASa,aAAaA,CAAA,EAAG;IAExB,IAAIvB,MAAM,GAAG,KAAK;IAElB,IAAIwB,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,sBAAsB,GAAG,IAAI;IACjC,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAE9B,OAAO;MAENjE,OAAO,EAAE,SAAAA,QAAWkE,WAAW,EAAG;QAEjC,IAAK,CAAEhC,MAAM,EAAG;UAEf,IAAKgC,WAAW,EAAG;YAElBr5D,MAAM,CAAE6sB,EAAE,CAACysC,YAAa,CAAC;UAE1B,CAAC,MAAM;YAENn5D,OAAO,CAAE0sB,EAAE,CAACysC,YAAa,CAAC;UAE3B;QAED;MAED,CAAC;MAED9B,OAAO,EAAE,SAAAA,QAAW+B,WAAW,EAAG;QAEjC,IAAKV,kBAAkB,KAAKU,WAAW,IAAI,CAAElC,MAAM,EAAG;UAErDxqC,EAAE,CAAC0sC,WAAW,CAAEA,WAAY,CAAC;UAC7BV,kBAAkB,GAAGU,WAAW;QAEjC;MAED,CAAC;MAEDrB,OAAO,EAAE,SAAAA,QAAWvsD,WAAW,EAAEC,UAAU,EAAE2tD,WAAW,EAAG;QAE1D,IAAKT,kBAAkB,KAAKntD,WAAW,IAClCotD,iBAAiB,KAAKntD,UAAU,IAChCotD,sBAAsB,KAAKO,WAAW,EAAG;UAE7C1sC,EAAE,CAAClhB,WAAW,CAAEA,WAAW,EAAEC,UAAU,EAAE2tD,WAAY,CAAC;UAEtDT,kBAAkB,GAAGntD,WAAW;UAChCotD,iBAAiB,GAAGntD,UAAU;UAC9BotD,sBAAsB,GAAGO,WAAW;QAErC;MAED,CAAC;MAEDC,KAAK,EAAE,SAAAA,MAAW1tD,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAG;QAE3D,IAAKitD,kBAAkB,KAAKntD,WAAW,IAClCotD,mBAAmB,KAAKntD,YAAY,IACpCotD,mBAAmB,KAAKntD,YAAY,EAAG;UAE3C6gB,EAAE,CAAC4sC,SAAS,CAAE3tD,WAAW,EAAEC,YAAY,EAAEC,YAAa,CAAC;UAEvDitD,kBAAkB,GAAGntD,WAAW;UAChCotD,mBAAmB,GAAGntD,YAAY;UAClCotD,mBAAmB,GAAGntD,YAAY;QAEnC;MAED,CAAC;MAED0rD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDv2B,QAAQ,EAAE,SAAAA,SAAWlY,OAAO,EAAG;QAE9B,IAAKkwC,mBAAmB,KAAKlwC,OAAO,EAAG;UAEtC2D,EAAE,CAAC6sC,YAAY,CAAExwC,OAAQ,CAAC;UAC1BkwC,mBAAmB,GAAGlwC,OAAO;QAE9B;MAED,CAAC;MAED3qD,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElB84F,MAAM,GAAG,KAAK;QAEdwB,kBAAkB,GAAG,IAAI;QACzBC,kBAAkB,GAAG,IAAI;QACzBC,iBAAiB,GAAG,IAAI;QACxBC,sBAAsB,GAAG,IAAI;QAC7BC,kBAAkB,GAAG,IAAI;QACzBC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;MAE3B;IAED,CAAC;EAEF;;EAEA;;EAEA,IAAMO,WAAW,GAAG,IAAIvC,WAAW,CAAC,CAAC;EACrC,IAAMhwE,WAAW,GAAG,IAAIwwE,WAAW,CAAC,CAAC;EACrC,IAAMvwE,aAAa,GAAG,IAAIuxE,aAAa,CAAC,CAAC;EAEzC,IAAMgB,WAAW,GAAG,IAAI3sC,OAAO,CAAC,CAAC;EACjC,IAAM4sC,aAAa,GAAG,IAAI5sC,OAAO,CAAC,CAAC;EAEnC,IAAI6sC,mBAAmB,GAAG,CAAC,CAAC;EAE5B,IAAIC,wBAAwB,GAAG,CAAC,CAAC;EACjC,IAAIC,kBAAkB,GAAG,IAAI/sC,OAAO,CAAC,CAAC;EACtC,IAAIgtC,kBAAkB,GAAG,EAAE;EAE3B,IAAIC,cAAc,GAAG,IAAI;EAEzB,IAAIC,sBAAsB,GAAG,KAAK;EAClC,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,yBAAyB,GAAG,IAAI;EACpC,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,wBAAwB,GAAG,KAAK;EAEpC,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,IAAIC,eAAe,GAAG,IAAI;EAE1B,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,IAAIC,0BAA0B,GAAG,IAAI;EACrC,IAAIC,yBAAyB,GAAG,IAAI;EAEpC,IAAMvzB,WAAW,GAAG5a,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACouC,gCAAiC,CAAC;EAE1E,IAAIC,kBAAkB,GAAG,KAAK;EAC9B,IAAIh6E,OAAO,GAAG,CAAC;EACf,IAAMi6E,SAAS,GAAGtuC,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACuuC,OAAQ,CAAC;EAE/C,IAAKD,SAAS,CAAC5sF,OAAO,CAAE,OAAQ,CAAC,KAAK,CAAE,CAAC,EAAG;IAE3C2S,OAAO,GAAG0xB,UAAU,CAAE,aAAa,CAACC,IAAI,CAAEsoD,SAAU,CAAC,CAAE,CAAC,CAAG,CAAC;IAC5DD,kBAAkB,GAAKh6E,OAAO,IAAI,GAAK;EAExC,CAAC,MAAM,IAAKi6E,SAAS,CAAC5sF,OAAO,CAAE,WAAY,CAAC,KAAK,CAAE,CAAC,EAAG;IAEtD2S,OAAO,GAAG0xB,UAAU,CAAE,iBAAiB,CAACC,IAAI,CAAEsoD,SAAU,CAAC,CAAE,CAAC,CAAG,CAAC;IAChED,kBAAkB,GAAKh6E,OAAO,IAAI,GAAK;EAExC;EAEA,IAAIm6E,kBAAkB,GAAG,IAAI;EAC7B,IAAIC,oBAAoB,GAAG,CAAC,CAAC;EAE7B,IAAMC,YAAY,GAAG1uC,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC2uC,WAAY,CAAC;EACtD,IAAMC,aAAa,GAAG5uC,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAAC6uC,QAAS,CAAC;EAEpD,IAAMC,cAAc,GAAG,IAAIh3E,OAAO,CAAC,CAAC,CAAClN,SAAS,CAAE8jF,YAAa,CAAC;EAC9D,IAAMK,eAAe,GAAG,IAAIj3E,OAAO,CAAC,CAAC,CAAClN,SAAS,CAAEgkF,aAAc,CAAC;EAEhE,SAASI,aAAaA,CAAEvgG,IAAI,EAAEgF,MAAM,EAAEipB,KAAK,EAAEuyE,UAAU,EAAG;IAEzD,IAAMh7E,IAAI,GAAG,IAAIlN,UAAU,CAAE,CAAE,CAAC,CAAC,CAAC;IAClC,IAAM4T,OAAO,GAAGqlC,EAAE,CAACgvC,aAAa,CAAC,CAAC;IAElChvC,EAAE,CAACkvC,WAAW,CAAEzgG,IAAI,EAAEksB,OAAQ,CAAC;IAC/BqlC,EAAE,CAACmvC,aAAa,CAAE1gG,IAAI,EAAEuxD,EAAE,CAACovC,kBAAkB,EAAEpvC,EAAE,CAACqvC,OAAQ,CAAC;IAC3DrvC,EAAE,CAACmvC,aAAa,CAAE1gG,IAAI,EAAEuxD,EAAE,CAACsvC,kBAAkB,EAAEtvC,EAAE,CAACqvC,OAAQ,CAAC;IAE3D,KAAM,IAAI9hG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;MAElC,IAAK2yD,QAAQ,KAAMzxD,IAAI,KAAKuxD,EAAE,CAACuvC,UAAU,IAAI9gG,IAAI,KAAKuxD,EAAE,CAACwvC,gBAAgB,CAAE,EAAG;QAE7ExvC,EAAE,CAACyvC,UAAU,CAAEh8F,MAAM,EAAE,CAAC,EAAEusD,EAAE,CAAC0vC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAET,UAAU,EAAE,CAAC,EAAEjvC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAACgB,aAAa,EAAE/sC,IAAK,CAAC;MAE1F,CAAC,MAAM;QAEN+rC,EAAE,CAAC2vC,UAAU,CAAEl8F,MAAM,GAAGlG,CAAC,EAAE,CAAC,EAAEyyD,EAAE,CAAC0vC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE1vC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAACgB,aAAa,EAAE/sC,IAAK,CAAC;MAElF;IAED;IAEA,OAAO0G,OAAO;EAEf;EAEA,IAAMi1E,aAAa,GAAG,CAAC,CAAC;EACxBA,aAAa,CAAE5vC,EAAE,CAAC6vC,UAAU,CAAE,GAAGb,aAAa,CAAEhvC,EAAE,CAAC6vC,UAAU,EAAE7vC,EAAE,CAAC6vC,UAAU,EAAE,CAAE,CAAC;EACjFD,aAAa,CAAE5vC,EAAE,CAAC8vC,gBAAgB,CAAE,GAAGd,aAAa,CAAEhvC,EAAE,CAAC8vC,gBAAgB,EAAE9vC,EAAE,CAAC+vC,2BAA2B,EAAE,CAAE,CAAC;EAE9G,IAAK7vC,QAAQ,EAAG;IAEf0vC,aAAa,CAAE5vC,EAAE,CAACwvC,gBAAgB,CAAE,GAAGR,aAAa,CAAEhvC,EAAE,CAACwvC,gBAAgB,EAAExvC,EAAE,CAACwvC,gBAAgB,EAAE,CAAC,EAAE,CAAE,CAAC;IACtGI,aAAa,CAAE5vC,EAAE,CAACuvC,UAAU,CAAE,GAAGP,aAAa,CAAEhvC,EAAE,CAACuvC,UAAU,EAAEvvC,EAAE,CAACuvC,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;EAErF;;EAEA;;EAEAzC,WAAW,CAACv4B,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EAClCh6C,WAAW,CAACg6C,QAAQ,CAAE,CAAE,CAAC;EACzB/5C,aAAa,CAAC+5C,QAAQ,CAAE,CAAE,CAAC;EAE3BphC,MAAM,CAAE6sB,EAAE,CAACmrC,UAAW,CAAC;EACvB5wE,WAAW,CAAC8wE,OAAO,CAAE1zF,cAAe,CAAC;EAErCq4F,YAAY,CAAE,KAAM,CAAC;EACrBC,WAAW,CAAE16F,YAAa,CAAC;EAC3B49B,MAAM,CAAE6sB,EAAE,CAACkwC,SAAU,CAAC;EAEtB7H,WAAW,CAAEnyF,UAAW,CAAC;;EAEzB;;EAEA,SAASi9B,MAAMA,CAAEuE,EAAE,EAAG;IAErB,IAAKu1D,mBAAmB,CAAEv1D,EAAE,CAAE,KAAK,IAAI,EAAG;MAEzCsoB,EAAE,CAAC7sB,MAAM,CAAEuE,EAAG,CAAC;MACfu1D,mBAAmB,CAAEv1D,EAAE,CAAE,GAAG,IAAI;IAEjC;EAED;EAEA,SAASpE,OAAOA,CAAEoE,EAAE,EAAG;IAEtB,IAAKu1D,mBAAmB,CAAEv1D,EAAE,CAAE,KAAK,KAAK,EAAG;MAE1CsoB,EAAE,CAAC1sB,OAAO,CAAEoE,EAAG,CAAC;MAChBu1D,mBAAmB,CAAEv1D,EAAE,CAAE,GAAG,KAAK;IAElC;EAED;EAEA,SAASy4D,eAAeA,CAAE18F,MAAM,EAAE28F,WAAW,EAAG;IAE/C,IAAKlD,wBAAwB,CAAEz5F,MAAM,CAAE,KAAK28F,WAAW,EAAG;MAEzDpwC,EAAE,CAACmwC,eAAe,CAAE18F,MAAM,EAAE28F,WAAY,CAAC;MAEzClD,wBAAwB,CAAEz5F,MAAM,CAAE,GAAG28F,WAAW;MAEhD,IAAKlwC,QAAQ,EAAG;QAEf;;QAEA,IAAKzsD,MAAM,KAAKusD,EAAE,CAACqwC,gBAAgB,EAAG;UAErCnD,wBAAwB,CAAEltC,EAAE,CAACswC,WAAW,CAAE,GAAGF,WAAW;QAEzD;QAEA,IAAK38F,MAAM,KAAKusD,EAAE,CAACswC,WAAW,EAAG;UAEhCpD,wBAAwB,CAAEltC,EAAE,CAACqwC,gBAAgB,CAAE,GAAGD,WAAW;QAE9D;MAED;MAEA,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,SAASv5C,WAAWA,CAAE2C,YAAY,EAAE42C,WAAW,EAAG;IAEjD,IAAIv5C,WAAW,GAAGu2C,kBAAkB;IAEpC,IAAI91E,WAAW,GAAG,KAAK;IAEvB,IAAKkiC,YAAY,EAAG;MAEnB3C,WAAW,GAAGs2C,kBAAkB,CAAC1lF,GAAG,CAAE2oF,WAAY,CAAC;MAEnD,IAAKv5C,WAAW,KAAKtiD,SAAS,EAAG;QAEhCsiD,WAAW,GAAG,EAAE;QAChBs2C,kBAAkB,CAAC3mF,GAAG,CAAE4pF,WAAW,EAAEv5C,WAAY,CAAC;MAEnD;MAEA,IAAK2C,YAAY,CAAC58B,4BAA4B,EAAG;QAEhD,IAAMrF,QAAQ,GAAGiiC,YAAY,CAAC7+B,OAAO;QAErC,IAAKk8B,WAAW,CAACjlD,MAAM,KAAK2lB,QAAQ,CAAC3lB,MAAM,IAAIilD,WAAW,CAAE,CAAC,CAAE,KAAKmJ,EAAE,CAACuwC,iBAAiB,EAAG;UAE1F,KAAM,IAAIhjG,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGtF,QAAQ,CAAC3lB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAErDspD,WAAW,CAAEtpD,CAAC,CAAE,GAAGyyD,EAAE,CAACuwC,iBAAiB,GAAGhjG,CAAC;UAE5C;UAEAspD,WAAW,CAACjlD,MAAM,GAAG2lB,QAAQ,CAAC3lB,MAAM;UAEpC0lB,WAAW,GAAG,IAAI;QAEnB;MAED,CAAC,MAAM;QAEN,IAAKu/B,WAAW,CAAE,CAAC,CAAE,KAAKmJ,EAAE,CAACuwC,iBAAiB,EAAG;UAEhD15C,WAAW,CAAE,CAAC,CAAE,GAAGmJ,EAAE,CAACuwC,iBAAiB;UAEvCj5E,WAAW,GAAG,IAAI;QAEnB;MAED;IAED,CAAC,MAAM;MAEN,IAAKu/B,WAAW,CAAE,CAAC,CAAE,KAAKmJ,EAAE,CAACwwC,IAAI,EAAG;QAEnC35C,WAAW,CAAE,CAAC,CAAE,GAAGmJ,EAAE,CAACwwC,IAAI;QAE1Bl5E,WAAW,GAAG,IAAI;MAEnB;IAED;IAEA,IAAKA,WAAW,EAAG;MAElB,IAAK2oC,YAAY,CAACC,QAAQ,EAAG;QAE5BF,EAAE,CAACnJ,WAAW,CAAEA,WAAY,CAAC;MAE9B,CAAC,MAAM;QAENH,UAAU,CAACjvC,GAAG,CAAE,oBAAqB,CAAC,CAACgpF,gBAAgB,CAAE55C,WAAY,CAAC;MAEvE;IAED;EAGD;EAEA,SAAS65C,UAAUA,CAAE36B,OAAO,EAAG;IAE9B,IAAKs3B,cAAc,KAAKt3B,OAAO,EAAG;MAEjC/V,EAAE,CAAC0wC,UAAU,CAAE36B,OAAQ,CAAC;MAExBs3B,cAAc,GAAGt3B,OAAO;MAExB,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,IAAM46B,YAAY,IAAAtG,aAAA,OAAAr5E,eAAA,CAAAq5E,aAAA,EACf7zF,WAAW,EAAIwpD,EAAE,CAAC4wC,QAAQ,GAAA5/E,eAAA,CAAAq5E,aAAA,EAC1B5zF,gBAAgB,EAAIupD,EAAE,CAAC6wC,aAAa,GAAA7/E,eAAA,CAAAq5E,aAAA,EACpC3zF,uBAAuB,EAAIspD,EAAE,CAAC8wC,qBAAqB,GAAAzG,aAAA,CACrD;EAED,IAAKnqC,QAAQ,EAAG;IAEfywC,YAAY,CAAEh6F,WAAW,CAAE,GAAGqpD,EAAE,CAAC+wC,GAAG;IACpCJ,YAAY,CAAE/5F,WAAW,CAAE,GAAGopD,EAAE,CAACgxC,GAAG;EAErC,CAAC,MAAM;IAEN,IAAMz7B,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,kBAAmB,CAAC;IAEtD,IAAK8tD,SAAS,KAAK,IAAI,EAAG;MAEzBo7B,YAAY,CAAEh6F,WAAW,CAAE,GAAG4+D,SAAS,CAAC07B,OAAO;MAC/CN,YAAY,CAAE/5F,WAAW,CAAE,GAAG2+D,SAAS,CAAC27B,OAAO;IAEhD;EAED;EAEA,IAAMC,UAAU,IAAA7G,WAAA,OAAAt5E,eAAA,CAAAs5E,WAAA,EACbzzF,UAAU,EAAImpD,EAAE,CAACoxC,IAAI,GAAApgF,eAAA,CAAAs5E,WAAA,EACrBxzF,SAAS,EAAIkpD,EAAE,CAACqxC,GAAG,GAAArgF,eAAA,CAAAs5E,WAAA,EACnBvzF,cAAc,EAAIipD,EAAE,CAACsxC,SAAS,GAAAtgF,eAAA,CAAAs5E,WAAA,EAC9BrzF,cAAc,EAAI+oD,EAAE,CAACuxC,SAAS,GAAAvgF,eAAA,CAAAs5E,WAAA,EAC9B/yF,sBAAsB,EAAIyoD,EAAE,CAACwxC,kBAAkB,GAAAxgF,eAAA,CAAAs5E,WAAA,EAC/CjzF,cAAc,EAAI2oD,EAAE,CAACyxC,SAAS,GAAAzgF,eAAA,CAAAs5E,WAAA,EAC9BnzF,cAAc,EAAI6oD,EAAE,CAAC0xC,SAAS,GAAA1gF,eAAA,CAAAs5E,WAAA,EAC9BtzF,sBAAsB,EAAIgpD,EAAE,CAAC2xC,mBAAmB,GAAA3gF,eAAA,CAAAs5E,WAAA,EAChDpzF,sBAAsB,EAAI8oD,EAAE,CAAC4xC,mBAAmB,GAAA5gF,eAAA,CAAAs5E,WAAA,EAChDhzF,sBAAsB,EAAI0oD,EAAE,CAAC6xC,mBAAmB,GAAA7gF,eAAA,CAAAs5E,WAAA,EAChDlzF,sBAAsB,EAAI4oD,EAAE,CAAC8xC,mBAAmB,GAAAxH,WAAA,CAClD;EAED,SAASjC,WAAWA,CAAEvqD,QAAQ,EAAEQ,aAAa,EAAEF,QAAQ,EAAEC,QAAQ,EAAEI,kBAAkB,EAAEF,aAAa,EAAEC,aAAa,EAAEwB,kBAAkB,EAAG;IAEzI,IAAKlC,QAAQ,KAAK5nC,UAAU,EAAG;MAE9B,IAAKo3F,sBAAsB,KAAK,IAAI,EAAG;QAEtCh6D,OAAO,CAAE0sB,EAAE,CAAC+xC,KAAM,CAAC;QACnBzE,sBAAsB,GAAG,KAAK;MAE/B;MAEA;IAED;IAEA,IAAKA,sBAAsB,KAAK,KAAK,EAAG;MAEvCn6D,MAAM,CAAE6sB,EAAE,CAAC+xC,KAAM,CAAC;MAClBzE,sBAAsB,GAAG,IAAI;IAE9B;IAEA,IAAKxvD,QAAQ,KAAKvnC,cAAc,EAAG;MAElC,IAAKunC,QAAQ,KAAKyvD,eAAe,IAAIvtD,kBAAkB,KAAK8tD,wBAAwB,EAAG;QAEtF,IAAKN,oBAAoB,KAAKh3F,WAAW,IAAIm3F,yBAAyB,KAAKn3F,WAAW,EAAG;UAExFwpD,EAAE,CAAC1hB,aAAa,CAAE0hB,EAAE,CAAC4wC,QAAS,CAAC;UAE/BpD,oBAAoB,GAAGh3F,WAAW;UAClCm3F,yBAAyB,GAAGn3F,WAAW;QAExC;QAEA,IAAKwpC,kBAAkB,EAAG;UAEzB,QAASlC,QAAQ;YAEhB,KAAK3nC,cAAc;cAClB6pD,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAAC4xC,mBAAmB,EAAE5xC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAAC4xC,mBAAoB,CAAC;cACtF;YAED,KAAKx7F,gBAAgB;cACpB4pD,EAAE,CAACiyC,SAAS,CAAEjyC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAACqxC,GAAI,CAAC;cAC9B;YAED,KAAKh7F,mBAAmB;cACvB2pD,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAAC2xC,mBAAmB,EAAE3xC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACqxC,GAAI,CAAC;cACxE;YAED,KAAK/6F,gBAAgB;cACpB0pD,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACsxC,SAAS,EAAEtxC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACuxC,SAAU,CAAC;cACpE;YAED;cACC9qF,OAAO,CAACywB,KAAK,CAAE,sCAAsC,EAAE4G,QAAS,CAAC;cACjE;UAEF;QAED,CAAC,MAAM;UAEN,QAASA,QAAQ;YAEhB,KAAK3nC,cAAc;cAClB6pD,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACuxC,SAAS,EAAEvxC,EAAE,CAAC4xC,mBAAmB,EAAE5xC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAAC4xC,mBAAoB,CAAC;cAC5F;YAED,KAAKx7F,gBAAgB;cACpB4pD,EAAE,CAACiyC,SAAS,CAAEjyC,EAAE,CAACuxC,SAAS,EAAEvxC,EAAE,CAACqxC,GAAI,CAAC;cACpC;YAED,KAAKh7F,mBAAmB;cACvB2pD,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAAC2xC,mBAAmB,EAAE3xC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACqxC,GAAI,CAAC;cACxE;YAED,KAAK/6F,gBAAgB;cACpB0pD,EAAE,CAACiyC,SAAS,CAAEjyC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACsxC,SAAU,CAAC;cACrC;YAED;cACC7qF,OAAO,CAACywB,KAAK,CAAE,sCAAsC,EAAE4G,QAAS,CAAC;cACjE;UAEF;QAED;QAEA2vD,eAAe,GAAG,IAAI;QACtBC,eAAe,GAAG,IAAI;QACtBE,oBAAoB,GAAG,IAAI;QAC3BC,oBAAoB,GAAG,IAAI;QAE3BN,eAAe,GAAGzvD,QAAQ;QAC1BgwD,wBAAwB,GAAG9tD,kBAAkB;MAE9C;MAEA;IAED;;IAEA;;IAEAvB,kBAAkB,GAAGA,kBAAkB,IAAIH,aAAa;IACxDC,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IACzCI,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IAEzC,IAAKC,aAAa,KAAKkvD,oBAAoB,IAAI/uD,kBAAkB,KAAKkvD,yBAAyB,EAAG;MAEjG3tC,EAAE,CAACkyC,qBAAqB,CAAEvB,YAAY,CAAEryD,aAAa,CAAE,EAAEqyD,YAAY,CAAElyD,kBAAkB,CAAG,CAAC;MAE7F+uD,oBAAoB,GAAGlvD,aAAa;MACpCqvD,yBAAyB,GAAGlvD,kBAAkB;IAE/C;IAEA,IAAKL,QAAQ,KAAKqvD,eAAe,IAAIpvD,QAAQ,KAAKqvD,eAAe,IAAInvD,aAAa,KAAKqvD,oBAAoB,IAAIpvD,aAAa,KAAKqvD,oBAAoB,EAAG;MAEvJ7tC,EAAE,CAACgyC,iBAAiB,CAAEb,UAAU,CAAE/yD,QAAQ,CAAE,EAAE+yD,UAAU,CAAE9yD,QAAQ,CAAE,EAAE8yD,UAAU,CAAE5yD,aAAa,CAAE,EAAE4yD,UAAU,CAAE3yD,aAAa,CAAG,CAAC;MAEhIivD,eAAe,GAAGrvD,QAAQ;MAC1BsvD,eAAe,GAAGrvD,QAAQ;MAC1BuvD,oBAAoB,GAAGrvD,aAAa;MACpCsvD,oBAAoB,GAAGrvD,aAAa;IAErC;IAEA+uD,eAAe,GAAGzvD,QAAQ;IAC1BgwD,wBAAwB,GAAG,KAAK;EAEjC;EAEA,SAASqE,WAAWA,CAAE93D,QAAQ,EAAE+3D,WAAW,EAAG;IAE7C/3D,QAAQ,CAAC0D,IAAI,KAAK/nC,UAAU,GACzBs9B,OAAO,CAAE0sB,EAAE,CAACkwC,SAAU,CAAC,GACvB/8D,MAAM,CAAE6sB,EAAE,CAACkwC,SAAU,CAAC;IAEzB,IAAIzX,SAAS,GAAKp+C,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAU;IAC9C,IAAKq8F,WAAW,EAAG3Z,SAAS,GAAG,CAAEA,SAAS;IAE1CuX,YAAY,CAAEvX,SAAU,CAAC;IAEvBp+C,QAAQ,CAACyD,QAAQ,KAAK3nC,cAAc,IAAIkkC,QAAQ,CAAC6D,WAAW,KAAK,KAAK,GACrEmqD,WAAW,CAAEnyF,UAAW,CAAC,GACzBmyF,WAAW,CAAEhuD,QAAQ,CAACyD,QAAQ,EAAEzD,QAAQ,CAACiE,aAAa,EAAEjE,QAAQ,CAAC+D,QAAQ,EAAE/D,QAAQ,CAACgE,QAAQ,EAAEhE,QAAQ,CAACoE,kBAAkB,EAAEpE,QAAQ,CAACkE,aAAa,EAAElE,QAAQ,CAACmE,aAAa,EAAEnE,QAAQ,CAAC2F,kBAAmB,CAAC;IAE3MzlB,WAAW,CAAC8wE,OAAO,CAAEhxD,QAAQ,CAACqE,SAAU,CAAC;IACzCnkB,WAAW,CAAC+tE,OAAO,CAAEjuD,QAAQ,CAACsE,SAAU,CAAC;IACzCpkB,WAAW,CAACowE,OAAO,CAAEtwD,QAAQ,CAACuE,UAAW,CAAC;IAC1CkuD,WAAW,CAACnC,OAAO,CAAEtwD,QAAQ,CAACoF,UAAW,CAAC;IAE1C,IAAML,YAAY,GAAG/E,QAAQ,CAAC+E,YAAY;IAC1C5kB,aAAa,CAAC8tE,OAAO,CAAElpD,YAAa,CAAC;IACrC,IAAKA,YAAY,EAAG;MAEnB5kB,aAAa,CAACmwE,OAAO,CAAEtwD,QAAQ,CAACwE,gBAAiB,CAAC;MAClDrkB,aAAa,CAAC6wE,OAAO,CAAEhxD,QAAQ,CAACyE,WAAW,EAAEzE,QAAQ,CAAC0E,UAAU,EAAE1E,QAAQ,CAAC2E,eAAgB,CAAC;MAC5FxkB,aAAa,CAACmyE,KAAK,CAAEtyD,QAAQ,CAAC4E,WAAW,EAAE5E,QAAQ,CAAC6E,YAAY,EAAE7E,QAAQ,CAAC8E,YAAa,CAAC;IAE1F;IAEAkzD,gBAAgB,CAAEh4D,QAAQ,CAACsF,aAAa,EAAEtF,QAAQ,CAACuF,mBAAmB,EAAEvF,QAAQ,CAACwF,kBAAmB,CAAC;IAErGxF,QAAQ,CAAC0F,eAAe,KAAK,IAAI,GAC9B5M,MAAM,CAAE6sB,EAAE,CAACsyC,wBAAyB,CAAC,GACrCh/D,OAAO,CAAE0sB,EAAE,CAACsyC,wBAAyB,CAAC;EAE1C;;EAEA;;EAEA,SAAStC,YAAYA,CAAEvX,SAAS,EAAG;IAElC,IAAKsV,gBAAgB,KAAKtV,SAAS,EAAG;MAErC,IAAKA,SAAS,EAAG;QAEhBz4B,EAAE,CAACuyC,SAAS,CAAEvyC,EAAE,CAACwyC,EAAG,CAAC;MAEtB,CAAC,MAAM;QAENxyC,EAAE,CAACuyC,SAAS,CAAEvyC,EAAE,CAACyyC,GAAI,CAAC;MAEvB;MAEA1E,gBAAgB,GAAGtV,SAAS;IAE7B;EAED;EAEA,SAASwX,WAAWA,CAAEyC,QAAQ,EAAG;IAEhC,IAAKA,QAAQ,KAAKp9F,YAAY,EAAG;MAEhC69B,MAAM,CAAE6sB,EAAE,CAACkwC,SAAU,CAAC;MAEtB,IAAKwC,QAAQ,KAAK1E,eAAe,EAAG;QAEnC,IAAK0E,QAAQ,KAAKn9F,YAAY,EAAG;UAEhCyqD,EAAE,CAAC0yC,QAAQ,CAAE1yC,EAAE,CAACwwC,IAAK,CAAC;QAEvB,CAAC,MAAM,IAAKkC,QAAQ,KAAKl9F,aAAa,EAAG;UAExCwqD,EAAE,CAAC0yC,QAAQ,CAAE1yC,EAAE,CAAC2yC,KAAM,CAAC;QAExB,CAAC,MAAM;UAEN3yC,EAAE,CAAC0yC,QAAQ,CAAE1yC,EAAE,CAAC4yC,cAAe,CAAC;QAEjC;MAED;IAED,CAAC,MAAM;MAENt/D,OAAO,CAAE0sB,EAAE,CAACkwC,SAAU,CAAC;IAExB;IAEAlC,eAAe,GAAG0E,QAAQ;EAE3B;EAEA,SAASG,YAAYA,CAAEz/E,KAAK,EAAG;IAE9B,IAAKA,KAAK,KAAK66E,gBAAgB,EAAG;MAEjC,IAAKI,kBAAkB,EAAGruC,EAAE,CAAC8yC,SAAS,CAAE1/E,KAAM,CAAC;MAE/C66E,gBAAgB,GAAG76E,KAAK;IAEzB;EAED;EAEA,SAASi/E,gBAAgBA,CAAE1yD,aAAa,EAAEozD,MAAM,EAAEplB,KAAK,EAAG;IAEzD,IAAKhuC,aAAa,EAAG;MAEpBxM,MAAM,CAAE6sB,EAAE,CAACgzC,mBAAoB,CAAC;MAEhC,IAAK9E,0BAA0B,KAAK6E,MAAM,IAAI5E,yBAAyB,KAAKxgB,KAAK,EAAG;QAEnF3tB,EAAE,CAACrgB,aAAa,CAAEozD,MAAM,EAAEplB,KAAM,CAAC;QAEjCugB,0BAA0B,GAAG6E,MAAM;QACnC5E,yBAAyB,GAAGxgB,KAAK;MAElC;IAED,CAAC,MAAM;MAENr6C,OAAO,CAAE0sB,EAAE,CAACgzC,mBAAoB,CAAC;IAElC;EAED;EAEA,SAASzK,cAAcA,CAAEnuE,WAAW,EAAG;IAEtC,IAAKA,WAAW,EAAG;MAElB+Y,MAAM,CAAE6sB,EAAE,CAACizC,YAAa,CAAC;IAE1B,CAAC,MAAM;MAEN3/D,OAAO,CAAE0sB,EAAE,CAACizC,YAAa,CAAC;IAE3B;EAED;;EAEA;;EAEA,SAASC,aAAaA,CAAEC,SAAS,EAAG;IAEnC,IAAKA,SAAS,KAAK5+F,SAAS,EAAG4+F,SAAS,GAAGnzC,EAAE,CAACozC,QAAQ,GAAGx4B,WAAW,GAAG,CAAC;IAExE,IAAK4zB,kBAAkB,KAAK2E,SAAS,EAAG;MAEvCnzC,EAAE,CAACkzC,aAAa,CAAEC,SAAU,CAAC;MAC7B3E,kBAAkB,GAAG2E,SAAS;IAE/B;EAED;EAEA,SAASjE,WAAWA,CAAEmE,SAAS,EAAEC,YAAY,EAAEH,SAAS,EAAG;IAE1D,IAAKA,SAAS,KAAK5+F,SAAS,EAAG;MAE9B,IAAKi6F,kBAAkB,KAAK,IAAI,EAAG;QAElC2E,SAAS,GAAGnzC,EAAE,CAACozC,QAAQ,GAAGx4B,WAAW,GAAG,CAAC;MAE1C,CAAC,MAAM;QAENu4B,SAAS,GAAG3E,kBAAkB;MAE/B;IAED;IAEA,IAAI+E,YAAY,GAAG9E,oBAAoB,CAAE0E,SAAS,CAAE;IAEpD,IAAKI,YAAY,KAAKh/F,SAAS,EAAG;MAEjCg/F,YAAY,GAAG;QAAE9kG,IAAI,EAAE8F,SAAS;QAAEomB,OAAO,EAAEpmB;MAAU,CAAC;MACtDk6F,oBAAoB,CAAE0E,SAAS,CAAE,GAAGI,YAAY;IAEjD;IAEA,IAAKA,YAAY,CAAC9kG,IAAI,KAAK4kG,SAAS,IAAIE,YAAY,CAAC54E,OAAO,KAAK24E,YAAY,EAAG;MAE/E,IAAK9E,kBAAkB,KAAK2E,SAAS,EAAG;QAEvCnzC,EAAE,CAACkzC,aAAa,CAAEC,SAAU,CAAC;QAC7B3E,kBAAkB,GAAG2E,SAAS;MAE/B;MAEAnzC,EAAE,CAACkvC,WAAW,CAAEmE,SAAS,EAAEC,YAAY,IAAI1D,aAAa,CAAEyD,SAAS,CAAG,CAAC;MAEvEE,YAAY,CAAC9kG,IAAI,GAAG4kG,SAAS;MAC7BE,YAAY,CAAC54E,OAAO,GAAG24E,YAAY;IAEpC;EAED;EAEA,SAASE,aAAaA,CAAA,EAAG;IAExB,IAAMD,YAAY,GAAG9E,oBAAoB,CAAED,kBAAkB,CAAE;IAE/D,IAAK+E,YAAY,KAAKh/F,SAAS,IAAIg/F,YAAY,CAAC9kG,IAAI,KAAK8F,SAAS,EAAG;MAEpEyrD,EAAE,CAACkvC,WAAW,CAAEqE,YAAY,CAAC9kG,IAAI,EAAE,IAAK,CAAC;MAEzC8kG,YAAY,CAAC9kG,IAAI,GAAG8F,SAAS;MAC7Bg/F,YAAY,CAAC54E,OAAO,GAAGpmB,SAAS;IAEjC;EAED;EAEA,SAASk/F,oBAAoBA,CAAA,EAAG;IAE/B,IAAI;MAEHzzC,EAAE,CAACyzC,oBAAoB,CAACn8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAE/C,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASw8D,oBAAoBA,CAAA,EAAG;IAE/B,IAAI;MAEH1zC,EAAE,CAAC0zC,oBAAoB,CAACp8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAE/C,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASy8D,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEH3zC,EAAE,CAAC2zC,aAAa,CAACr8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAExC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS08D,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEH5zC,EAAE,CAAC4zC,aAAa,CAACt8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAExC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS28D,uBAAuBA,CAAA,EAAG;IAElC,IAAI;MAEH7zC,EAAE,CAAC6zC,uBAAuB,CAACv8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAElD,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS48D,uBAAuBA,CAAA,EAAG;IAElC,IAAI;MAEH9zC,EAAE,CAAC8zC,uBAAuB,CAACx8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAElD,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS68D,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEH/zC,EAAE,CAAC+zC,YAAY,CAACz8D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAEvC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS88D,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEHh0C,EAAE,CAACg0C,YAAY,CAAC18D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAEvC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASy4D,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEH3vC,EAAE,CAAC2vC,UAAU,CAACr4D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAErC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASu4D,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEHzvC,EAAE,CAACyvC,UAAU,CAACn4D,KAAK,CAAE0oB,EAAE,EAAE/oB,SAAU,CAAC;IAErC,CAAC,CAAC,OAAQC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;;EAEA;;EAEA,SAAS/c,OAAOA,CAAEA,OAAO,EAAG;IAE3B,IAAK20E,cAAc,CAACnkF,MAAM,CAAEwP,OAAQ,CAAC,KAAK,KAAK,EAAG;MAEjD6lC,EAAE,CAAC7lC,OAAO,CAAEA,OAAO,CAAC5W,CAAC,EAAE4W,OAAO,CAACnrB,CAAC,EAAEmrB,OAAO,CAACnC,CAAC,EAAEmC,OAAO,CAAClC,CAAE,CAAC;MACxD62E,cAAc,CAAC7mF,IAAI,CAAEkS,OAAQ,CAAC;IAE/B;EAED;EAEA,SAASE,QAAQA,CAAEA,QAAQ,EAAG;IAE7B,IAAK00E,eAAe,CAACpkF,MAAM,CAAE0P,QAAS,CAAC,KAAK,KAAK,EAAG;MAEnD2lC,EAAE,CAAC3lC,QAAQ,CAAEA,QAAQ,CAAC9W,CAAC,EAAE8W,QAAQ,CAACrrB,CAAC,EAAEqrB,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAE,CAAC;MAC7D82E,eAAe,CAAC9mF,IAAI,CAAEoS,QAAS,CAAC;IAEjC;EAED;EAEA,SAAS45E,gBAAgBA,CAAEC,aAAa,EAAEn+B,OAAO,EAAG;IAEnD,IAAIvgD,OAAO,GAAGw3E,aAAa,CAACvlF,GAAG,CAAEsuD,OAAQ,CAAC;IAE1C,IAAKvgD,OAAO,KAAKjhB,SAAS,EAAG;MAE5BihB,OAAO,GAAG,IAAI4qC,OAAO,CAAC,CAAC;MAEvB4sC,aAAa,CAACxmF,GAAG,CAAEuvD,OAAO,EAAEvgD,OAAQ,CAAC;IAEtC;IAEA,IAAI2+E,UAAU,GAAG3+E,OAAO,CAAC/N,GAAG,CAAEysF,aAAc,CAAC;IAE7C,IAAKC,UAAU,KAAK5/F,SAAS,EAAG;MAE/B4/F,UAAU,GAAGn0C,EAAE,CAACo0C,oBAAoB,CAAEr+B,OAAO,EAAEm+B,aAAa,CAACliG,IAAK,CAAC;MAEnEwjB,OAAO,CAAChP,GAAG,CAAE0tF,aAAa,EAAEC,UAAW,CAAC;IAEzC;EAED;EAEA,SAASE,mBAAmBA,CAAEH,aAAa,EAAEn+B,OAAO,EAAG;IAEtD,IAAMvgD,OAAO,GAAGw3E,aAAa,CAACvlF,GAAG,CAAEsuD,OAAQ,CAAC;IAC5C,IAAMo+B,UAAU,GAAG3+E,OAAO,CAAC/N,GAAG,CAAEysF,aAAc,CAAC;IAE/C,IAAKnH,WAAW,CAACtlF,GAAG,CAAEsuD,OAAQ,CAAC,KAAKo+B,UAAU,EAAG;MAEhD;MACAn0C,EAAE,CAACq0C,mBAAmB,CAAEt+B,OAAO,EAAEo+B,UAAU,EAAED,aAAa,CAACI,mBAAoB,CAAC;MAEhFvH,WAAW,CAACvmF,GAAG,CAAEuvD,OAAO,EAAEo+B,UAAW,CAAC;IAEvC;EAED;;EAEA;;EAEA,SAASziG,KAAKA,CAAA,EAAG;IAEhB;;IAEAsuD,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAAC+xC,KAAM,CAAC;IACtB/xC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACkwC,SAAU,CAAC;IAC1BlwC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACmrC,UAAW,CAAC;IAC3BnrC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACgzC,mBAAoB,CAAC;IACpChzC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACizC,YAAa,CAAC;IAC7BjzC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACysC,YAAa,CAAC;IAC7BzsC,EAAE,CAAC1sB,OAAO,CAAE0sB,EAAE,CAACsyC,wBAAyB,CAAC;IAEzCtyC,EAAE,CAAC1hB,aAAa,CAAE0hB,EAAE,CAAC4wC,QAAS,CAAC;IAC/B5wC,EAAE,CAACiyC,SAAS,CAAEjyC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAACoxC,IAAK,CAAC;IAC/BpxC,EAAE,CAACgyC,iBAAiB,CAAEhyC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAACoxC,IAAI,EAAEpxC,EAAE,CAACqxC,GAAG,EAAErxC,EAAE,CAACoxC,IAAK,CAAC;IAExDpxC,EAAE,CAAC4qC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;IACtC5qC,EAAE,CAAC6T,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE3B7T,EAAE,CAACorC,SAAS,CAAE,IAAK,CAAC;IACpBprC,EAAE,CAACthB,SAAS,CAAEshB,EAAE,CAACwrC,IAAK,CAAC;IACvBxrC,EAAE,CAAC8rC,UAAU,CAAE,CAAE,CAAC;IAElB9rC,EAAE,CAAC0sC,WAAW,CAAE,UAAW,CAAC;IAC5B1sC,EAAE,CAAClhB,WAAW,CAAEkhB,EAAE,CAACurC,MAAM,EAAE,CAAC,EAAE,UAAW,CAAC;IAC1CvrC,EAAE,CAAC4sC,SAAS,CAAE5sC,EAAE,CAACu0C,IAAI,EAAEv0C,EAAE,CAACu0C,IAAI,EAAEv0C,EAAE,CAACu0C,IAAK,CAAC;IACzCv0C,EAAE,CAAC6sC,YAAY,CAAE,CAAE,CAAC;IAEpB7sC,EAAE,CAAC0yC,QAAQ,CAAE1yC,EAAE,CAACwwC,IAAK,CAAC;IACtBxwC,EAAE,CAACuyC,SAAS,CAAEvyC,EAAE,CAACyyC,GAAI,CAAC;IAEtBzyC,EAAE,CAACrgB,aAAa,CAAE,CAAC,EAAE,CAAE,CAAC;IAExBqgB,EAAE,CAACkzC,aAAa,CAAElzC,EAAE,CAACozC,QAAS,CAAC;IAE/BpzC,EAAE,CAACmwC,eAAe,CAAEnwC,EAAE,CAACswC,WAAW,EAAE,IAAK,CAAC;IAE1C,IAAKpwC,QAAQ,KAAK,IAAI,EAAG;MAExBF,EAAE,CAACmwC,eAAe,CAAEnwC,EAAE,CAACqwC,gBAAgB,EAAE,IAAK,CAAC;MAC/CrwC,EAAE,CAACmwC,eAAe,CAAEnwC,EAAE,CAACw0C,gBAAgB,EAAE,IAAK,CAAC;IAEhD;IAEAx0C,EAAE,CAAC0wC,UAAU,CAAE,IAAK,CAAC;IAErB1wC,EAAE,CAAC8yC,SAAS,CAAE,CAAE,CAAC;IAEjB9yC,EAAE,CAAC7lC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE6lC,EAAE,CAAC1vC,MAAM,CAAC8C,KAAK,EAAE4sC,EAAE,CAAC1vC,MAAM,CAAC+C,MAAO,CAAC;IACrD2sC,EAAE,CAAC3lC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE2lC,EAAE,CAAC1vC,MAAM,CAAC8C,KAAK,EAAE4sC,EAAE,CAAC1vC,MAAM,CAAC+C,MAAO,CAAC;;IAEtD;;IAEA45E,mBAAmB,GAAG,CAAC,CAAC;IAExBuB,kBAAkB,GAAG,IAAI;IACzBC,oBAAoB,GAAG,CAAC,CAAC;IAEzBvB,wBAAwB,GAAG,CAAC,CAAC;IAC7BC,kBAAkB,GAAG,IAAI/sC,OAAO,CAAC,CAAC;IAClCgtC,kBAAkB,GAAG,EAAE;IAEvBC,cAAc,GAAG,IAAI;IAErBC,sBAAsB,GAAG,KAAK;IAC9BC,eAAe,GAAG,IAAI;IACtBC,oBAAoB,GAAG,IAAI;IAC3BC,eAAe,GAAG,IAAI;IACtBC,eAAe,GAAG,IAAI;IACtBC,yBAAyB,GAAG,IAAI;IAChCC,oBAAoB,GAAG,IAAI;IAC3BC,oBAAoB,GAAG,IAAI;IAC3BC,wBAAwB,GAAG,KAAK;IAEhCC,gBAAgB,GAAG,IAAI;IACvBC,eAAe,GAAG,IAAI;IAEtBC,gBAAgB,GAAG,IAAI;IAEvBC,0BAA0B,GAAG,IAAI;IACjCC,yBAAyB,GAAG,IAAI;IAEhCW,cAAc,CAACtoF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEw5C,EAAE,CAAC1vC,MAAM,CAAC8C,KAAK,EAAE4sC,EAAE,CAAC1vC,MAAM,CAAC+C,MAAO,CAAC;IAC7D07E,eAAe,CAACvoF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEw5C,EAAE,CAAC1vC,MAAM,CAAC8C,KAAK,EAAE4sC,EAAE,CAAC1vC,MAAM,CAAC+C,MAAO,CAAC;IAE9Dy5E,WAAW,CAACp7F,KAAK,CAAC,CAAC;IACnB6oB,WAAW,CAAC7oB,KAAK,CAAC,CAAC;IACnB8oB,aAAa,CAAC9oB,KAAK,CAAC,CAAC;EAEtB;EAEA,OAAO;IAENyuD,OAAO,EAAE;MACR/uC,KAAK,EAAE07E,WAAW;MAClB5yE,KAAK,EAAEK,WAAW;MAClB8hC,OAAO,EAAE7hC;IACV,CAAC;IAED2Y,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAEA,OAAO;IAEhB68D,eAAe,EAAEA,eAAe;IAChCt5C,WAAW,EAAEA,WAAW;IAExB65C,UAAU,EAAEA,UAAU;IAEtBrI,WAAW,EAAEA,WAAW;IACxB8J,WAAW,EAAEA,WAAW;IAExBnC,YAAY,EAAEA,YAAY;IAC1BC,WAAW,EAAEA,WAAW;IAExB4C,YAAY,EAAEA,YAAY;IAC1BR,gBAAgB,EAAEA,gBAAgB;IAElC9J,cAAc,EAAEA,cAAc;IAE9B2K,aAAa,EAAEA,aAAa;IAC5BhE,WAAW,EAAEA,WAAW;IACxBsE,aAAa,EAAEA,aAAa;IAC5BC,oBAAoB,EAAEA,oBAAoB;IAC1CC,oBAAoB,EAAEA,oBAAoB;IAC1C/D,UAAU,EAAEA,UAAU;IACtBF,UAAU,EAAEA,UAAU;IAEtBwE,gBAAgB,EAAEA,gBAAgB;IAClCI,mBAAmB,EAAEA,mBAAmB;IAExCN,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BL,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,uBAAuB,EAAEA,uBAAuB;IAChDC,uBAAuB,EAAEA,uBAAuB;IAEhD35E,OAAO,EAAEA,OAAO;IAChBE,QAAQ,EAAEA,QAAQ;IAElB3oB,KAAK,EAAEA;EAER,CAAC;AAEF;AAEA,SAAS+iG,aAAaA,CAAEC,GAAG,EAAEh+C,UAAU,EAAEid,KAAK,EAAE1E,UAAU,EAAEhP,YAAY,EAAE00C,KAAK,EAAEn7B,IAAI,EAAG;EAAA,IAAAo7B,aAAA,EAAAC,WAAA,EAAAC,YAAA;EAEvF,IAAM50C,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EACtC,IAAM0a,WAAW,GAAG3a,YAAY,CAAC2a,WAAW;EAC5C,IAAMM,cAAc,GAAGjb,YAAY,CAACib,cAAc;EAClD,IAAMF,cAAc,GAAG/a,YAAY,CAAC+a,cAAc;EAClD,IAAMc,UAAU,GAAG7b,YAAY,CAAC6b,UAAU;EAC1C,IAAMi5B,kBAAkB,GAAGr+C,UAAU,CAAC1kC,GAAG,CAAE,sCAAuC,CAAC,GAAG0kC,UAAU,CAACjvC,GAAG,CAAE,sCAAuC,CAAC,GAAG,IAAI;EACrJ,IAAMutF,6BAA6B,GAAG,OAAOC,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAChiF,IAAI,CAAEgiF,SAAS,CAACC,SAAU,CAAC;EAE7H,IAAMC,cAAc,GAAG,IAAI/0C,OAAO,CAAC,CAAC;EACpC,IAAIvtC,OAAO;EAEX,IAAMuiF,QAAQ,GAAG,IAAIh1C,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA;;EAEA,IAAIi1C,kBAAkB,GAAG,KAAK;EAE9B,IAAI;IAEHA,kBAAkB,GAAG,OAAOC,eAAe,KAAK;IAC/C;IAAA,GACK,IAAIA,eAAe,CAAE,CAAC,EAAE,CAAE,CAAC,CAAC/hF,UAAU,CAAE,IAAK,CAAC,KAAO,IAAI;EAEhE,CAAC,CAAC,OAAQinC,GAAG,EAAG;;IAEf;EAAA;EAID,SAAS+6C,YAAYA,CAAEniF,KAAK,EAAEC,MAAM,EAAG;IAEtC;;IAEA,OAAOgiF,kBAAkB;IACxB;IACA,IAAIC,eAAe,CAAEliF,KAAK,EAAEC,MAAO,CAAC,GAAGlD,eAAe,CAAE,QAAS,CAAC;EAEpE;EAEA,SAASqlF,WAAWA,CAAExiF,KAAK,EAAEyiF,eAAe,EAAEC,cAAc,EAAEC,OAAO,EAAG;IAEvE,IAAItmF,KAAK,GAAG,CAAC;;IAEb;;IAEA,IAAK2D,KAAK,CAACI,KAAK,GAAGuiF,OAAO,IAAI3iF,KAAK,CAACK,MAAM,GAAGsiF,OAAO,EAAG;MAEtDtmF,KAAK,GAAGsmF,OAAO,GAAGrzF,IAAI,CAACa,GAAG,CAAE6P,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;IAExD;;IAEA;;IAEA,IAAKhE,KAAK,GAAG,CAAC,IAAIomF,eAAe,KAAK,IAAI,EAAG;MAE5C;;MAEA,IAAO,OAAO5hF,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;QAEzE,IAAMrP,KAAK,GAAGgxF,eAAe,GAAGhwF,eAAe,GAAGnD,IAAI,CAACmC,KAAK;QAE5D,IAAM2O,KAAK,GAAG3O,KAAK,CAAE4K,KAAK,GAAG2D,KAAK,CAACI,KAAM,CAAC;QAC1C,IAAMC,MAAM,GAAG5O,KAAK,CAAE4K,KAAK,GAAG2D,KAAK,CAACK,MAAO,CAAC;QAE5C,IAAKR,OAAO,KAAKte,SAAS,EAAGse,OAAO,GAAG0iF,YAAY,CAAEniF,KAAK,EAAEC,MAAO,CAAC;;QAEpE;;QAEA,IAAM/C,MAAM,GAAGolF,cAAc,GAAGH,YAAY,CAAEniF,KAAK,EAAEC,MAAO,CAAC,GAAGR,OAAO;QAEvEvC,MAAM,CAAC8C,KAAK,GAAGA,KAAK;QACpB9C,MAAM,CAAC+C,MAAM,GAAGA,MAAM;QAEtB,IAAMC,OAAO,GAAGhD,MAAM,CAACiD,UAAU,CAAE,IAAK,CAAC;QACzCD,OAAO,CAACI,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEI,KAAK,EAAEC,MAAO,CAAC;QAE/C5M,OAAO,CAACC,IAAI,CAAE,sDAAsD,GAAGsM,KAAK,CAACI,KAAK,GAAG,GAAG,GAAGJ,KAAK,CAACK,MAAM,GAAG,QAAQ,GAAGD,KAAK,GAAG,GAAG,GAAGC,MAAM,GAAG,IAAK,CAAC;QAElJ,OAAO/C,MAAM;MAEd,CAAC,MAAM;QAEN,IAAK,MAAM,IAAI0C,KAAK,EAAG;UAEtBvM,OAAO,CAACC,IAAI,CAAE,wDAAwD,GAAGsM,KAAK,CAACI,KAAK,GAAG,GAAG,GAAGJ,KAAK,CAACK,MAAM,GAAG,IAAK,CAAC;QAEnH;QAEA,OAAOL,KAAK;MAEb;IAED;IAEA,OAAOA,KAAK;EAEb;EAEA,SAAS4iF,cAAcA,CAAE5iF,KAAK,EAAG;IAEhC,OAAO7N,YAAY,CAAE6N,KAAK,CAACI,KAAM,CAAC,IAAIjO,YAAY,CAAE6N,KAAK,CAACK,MAAO,CAAC;EAEnE;EAEA,SAASwiF,sBAAsBA,CAAEl7E,OAAO,EAAG;IAE1C,IAAKulC,QAAQ,EAAG,OAAO,KAAK;IAE5B,OAASvlC,OAAO,CAACjF,KAAK,KAAK1c,mBAAmB,IAAI2hB,OAAO,CAAChF,KAAK,KAAK3c,mBAAmB,IACpF2hB,OAAO,CAAC9E,SAAS,KAAK3c,aAAa,IAAIyhB,OAAO,CAAC9E,SAAS,KAAKtc,YAAc;EAE/E;EAEA,SAASu8F,2BAA2BA,CAAEn7E,OAAO,EAAEo7E,YAAY,EAAG;IAE7D,OAAOp7E,OAAO,CAACjE,eAAe,IAAIq/E,YAAY,IAC7Cp7E,OAAO,CAAC9E,SAAS,KAAK3c,aAAa,IAAIyhB,OAAO,CAAC9E,SAAS,KAAKtc,YAAY;EAE3E;EAEA,SAASy8F,cAAcA,CAAEviG,MAAM,EAAG;IAEjCihG,GAAG,CAACsB,cAAc,CAAEviG,MAAO,CAAC;EAE7B;EAEA,SAASwiG,iBAAiBA,CAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,MAAM,EAAErkF,UAAU,EAAEskF,mBAAmB,GAAG,KAAK,EAAG;IAE3G,IAAKn2C,QAAQ,KAAK,KAAK,EAAG,OAAOi2C,QAAQ;IAEzC,IAAKD,kBAAkB,KAAK,IAAI,EAAG;MAElC,IAAKxB,GAAG,CAAEwB,kBAAkB,CAAE,KAAK3hG,SAAS,EAAG,OAAOmgG,GAAG,CAAEwB,kBAAkB,CAAE;MAE/EzvF,OAAO,CAACC,IAAI,CAAE,2EAA2E,GAAGwvF,kBAAkB,GAAG,IAAK,CAAC;IAExH;IAEA,IAAI3/E,cAAc,GAAG4/E,QAAQ;IAE7B,IAAKA,QAAQ,KAAKzB,GAAG,CAAC4B,GAAG,EAAG;MAE3B,IAAKF,MAAM,KAAK1B,GAAG,CAACj0C,KAAK,EAAGlqC,cAAc,GAAGm+E,GAAG,CAAC6B,IAAI;MACrD,IAAKH,MAAM,KAAK1B,GAAG,CAACh0C,UAAU,EAAGnqC,cAAc,GAAGm+E,GAAG,CAAC8B,IAAI;MAC1D,IAAKJ,MAAM,KAAK1B,GAAG,CAAC1zC,aAAa,EAAGzqC,cAAc,GAAGm+E,GAAG,CAAC+B,EAAE;IAE5D;IAEA,IAAKN,QAAQ,KAAKzB,GAAG,CAACgC,WAAW,EAAG;MAEnC,IAAKN,MAAM,KAAK1B,GAAG,CAAC1zC,aAAa,EAAGzqC,cAAc,GAAGm+E,GAAG,CAACiC,IAAI;MAC7D,IAAKP,MAAM,KAAK1B,GAAG,CAAC/zC,cAAc,EAAGpqC,cAAc,GAAGm+E,GAAG,CAACkC,KAAK;MAC/D,IAAKR,MAAM,KAAK1B,GAAG,CAAC7zC,YAAY,EAAGtqC,cAAc,GAAGm+E,GAAG,CAACmC,KAAK;MAC7D,IAAKT,MAAM,KAAK1B,GAAG,CAAC3zC,IAAI,EAAGxqC,cAAc,GAAGm+E,GAAG,CAACoC,GAAG;MACnD,IAAKV,MAAM,KAAK1B,GAAG,CAAC9zC,KAAK,EAAGrqC,cAAc,GAAGm+E,GAAG,CAACqC,IAAI;MACrD,IAAKX,MAAM,KAAK1B,GAAG,CAAC5zC,GAAG,EAAGvqC,cAAc,GAAGm+E,GAAG,CAACsC,IAAI;IAEpD;IAEA,IAAKb,QAAQ,KAAKzB,GAAG,CAACuC,EAAE,EAAG;MAE1B,IAAKb,MAAM,KAAK1B,GAAG,CAACj0C,KAAK,EAAGlqC,cAAc,GAAGm+E,GAAG,CAACwC,KAAK;MACtD,IAAKd,MAAM,KAAK1B,GAAG,CAACh0C,UAAU,EAAGnqC,cAAc,GAAGm+E,GAAG,CAACyC,KAAK;MAC3D,IAAKf,MAAM,KAAK1B,GAAG,CAAC1zC,aAAa,EAAGzqC,cAAc,GAAGm+E,GAAG,CAAC0C,GAAG;IAE7D;IAEA,IAAKjB,QAAQ,KAAKzB,GAAG,CAAChF,IAAI,EAAG;MAE5B,IAAMz+E,QAAQ,GAAGolF,mBAAmB,GAAG13F,cAAc,GAAG+S,eAAe,CAACgB,WAAW,CAAEX,UAAW,CAAC;MAEjG,IAAKqkF,MAAM,KAAK1B,GAAG,CAACj0C,KAAK,EAAGlqC,cAAc,GAAGm+E,GAAG,CAAC2C,OAAO;MACxD,IAAKjB,MAAM,KAAK1B,GAAG,CAACh0C,UAAU,EAAGnqC,cAAc,GAAGm+E,GAAG,CAAC4C,OAAO;MAC7D,IAAKlB,MAAM,KAAK1B,GAAG,CAAC1zC,aAAa,EAAGzqC,cAAc,GAAKtF,QAAQ,KAAKrS,YAAY,GAAK81F,GAAG,CAAC6C,YAAY,GAAG7C,GAAG,CAAC8C,KAAK;MACjH,IAAKpB,MAAM,KAAK1B,GAAG,CAAC+C,sBAAsB,EAAGlhF,cAAc,GAAGm+E,GAAG,CAACgD,KAAK;MACvE,IAAKtB,MAAM,KAAK1B,GAAG,CAACiD,sBAAsB,EAAGphF,cAAc,GAAGm+E,GAAG,CAACkD,OAAO;IAE1E;IAEA,IAAKrhF,cAAc,KAAKm+E,GAAG,CAAC8B,IAAI,IAAIjgF,cAAc,KAAKm+E,GAAG,CAAC6B,IAAI,IAC9DhgF,cAAc,KAAKm+E,GAAG,CAACyC,KAAK,IAAI5gF,cAAc,KAAKm+E,GAAG,CAACwC,KAAK,IAC5D3gF,cAAc,KAAKm+E,GAAG,CAAC4C,OAAO,IAAI/gF,cAAc,KAAKm+E,GAAG,CAAC2C,OAAO,EAAG;MAEnE3gD,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC;IAE3C;IAEA,OAAO8O,cAAc;EAEtB;EAEA,SAASshF,YAAYA,CAAEl9E,OAAO,EAAE3H,KAAK,EAAE+iF,YAAY,EAAG;IAErD,IAAKD,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,KAAK,IAAI,IAAMp7E,OAAO,CAACm9E,oBAAoB,IAAIn9E,OAAO,CAAC9E,SAAS,KAAK3c,aAAa,IAAIyhB,OAAO,CAAC9E,SAAS,KAAKtc,YAAc,EAAG;MAErL,OAAO+I,IAAI,CAACu+D,IAAI,CAAEv+D,IAAI,CAACa,GAAG,CAAE6P,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAE,CAAC,GAAG,CAAC;IAE9D,CAAC,MAAM,IAAKsH,OAAO,CAACtE,OAAO,KAAK9hB,SAAS,IAAIomB,OAAO,CAACtE,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG;MAEzE;;MAEA,OAAO+oB,OAAO,CAACtE,OAAO,CAACzkB,MAAM;IAE9B,CAAC,MAAM,IAAK+oB,OAAO,CAACo9E,mBAAmB,IAAInjF,KAAK,CAACC,OAAO,CAAE8F,OAAO,CAAC3H,KAAM,CAAC,EAAG;MAE3E,OAAOA,KAAK,CAACqD,OAAO,CAACzkB,MAAM;IAE5B,CAAC,MAAM;MAEN;;MAEA,OAAO,CAAC;IAET;EAED;;EAEA;;EAEA,SAASomG,cAAcA,CAAElpG,CAAC,EAAG;IAE5B,IAAKA,CAAC,KAAKoK,aAAa,IAAIpK,CAAC,KAAKqK,0BAA0B,IAAIrK,CAAC,KAAKuK,yBAAyB,EAAG;MAEjG,OAAOq7F,GAAG,CAACrF,OAAO;IAEnB;IAEA,OAAOqF,GAAG,CAACuD,MAAM;EAElB;;EAEA;;EAEA,SAASn6B,gBAAgBA,CAAE77D,KAAK,EAAG;IAElC,IAAM0Y,OAAO,GAAG1Y,KAAK,CAACxO,MAAM;IAE5BknB,OAAO,CAAC/Y,mBAAmB,CAAE,SAAS,EAAEk8D,gBAAiB,CAAC;IAE1Do6B,iBAAiB,CAAEv9E,OAAQ,CAAC;IAE5B,IAAKA,OAAO,CAAC4lE,cAAc,EAAG;MAE7B4U,cAAc,CAAC5zC,MAAM,CAAE5mC,OAAQ,CAAC;IAEjC;EAED;EAEA,SAASw9E,qBAAqBA,CAAEl2F,KAAK,EAAG;IAEvC,IAAMu3C,YAAY,GAAGv3C,KAAK,CAACxO,MAAM;IAEjC+lD,YAAY,CAAC53C,mBAAmB,CAAE,SAAS,EAAEu2F,qBAAsB,CAAC;IAEpEC,sBAAsB,CAAE5+C,YAAa,CAAC;EAEvC;;EAEA;;EAEA,SAAS0+C,iBAAiBA,CAAEv9E,OAAO,EAAG;IAErC,IAAM09E,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAK09E,iBAAiB,CAACC,WAAW,KAAK/jG,SAAS,EAAG;;IAEnD;;IAEA,IAAM6hB,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAC7B,IAAMmiF,aAAa,GAAGnD,QAAQ,CAAC3tF,GAAG,CAAE2O,MAAO,CAAC;IAE5C,IAAKmiF,aAAa,EAAG;MAEpB,IAAMjF,YAAY,GAAGiF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAClElF,YAAY,CAAC1Y,SAAS,EAAG;;MAEzB;;MAEA,IAAK0Y,YAAY,CAAC1Y,SAAS,KAAK,CAAC,EAAG;QAEnC6d,aAAa,CAAE99E,OAAQ,CAAC;MAEzB;;MAEA;;MAEA,IAAK3tB,MAAM,CAACuF,IAAI,CAAEgmG,aAAc,CAAC,CAAC3mG,MAAM,KAAK,CAAC,EAAG;QAEhDwjG,QAAQ,CAAC7zC,MAAM,CAAEnrC,MAAO,CAAC;MAE1B;IAED;IAEA64C,UAAU,CAAC93B,MAAM,CAAExc,OAAQ,CAAC;EAE7B;EAEA,SAAS89E,aAAaA,CAAE99E,OAAO,EAAG;IAEjC,IAAM09E,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IACnD+5E,GAAG,CAAC+D,aAAa,CAAEJ,iBAAiB,CAACK,cAAe,CAAC;IAErD,IAAMtiF,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAC7B,IAAMmiF,aAAa,GAAGnD,QAAQ,CAAC3tF,GAAG,CAAE2O,MAAO,CAAC;IAC5C,OAAOmiF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;IAEpDh/B,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;EAExB;EAEA,SAAS6gF,sBAAsBA,CAAE5+C,YAAY,EAAG;IAE/C,IAAM7+B,OAAO,GAAG6+B,YAAY,CAAC7+B,OAAO;IAEpC,IAAMg+E,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAC7D,IAAM6+C,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAK09E,iBAAiB,CAACK,cAAc,KAAKnkG,SAAS,EAAG;MAErDmgG,GAAG,CAAC+D,aAAa,CAAEJ,iBAAiB,CAACK,cAAe,CAAC;MAErDl/B,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;IAExB;IAEA,IAAKiiC,YAAY,CAAC/+B,YAAY,EAAG;MAEhC++B,YAAY,CAAC/+B,YAAY,CAAC/C,OAAO,CAAC,CAAC;IAEpC;IAEA,IAAK8hC,YAAY,CAACuC,uBAAuB,EAAG;MAE3C,KAAM,IAAIxuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKqnB,KAAK,CAACC,OAAO,CAAE8jF,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAG,CAAC,EAAG;UAEtE,KAAM,IAAIsrG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAE,CAACqE,MAAM,EAAEinG,KAAK,EAAG,EAAGnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAE,CAAEsrG,KAAK,CAAG,CAAC;QAEhL,CAAC,MAAM;UAENnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAG,CAAC;QAExE;QAEA,IAAKorG,sBAAsB,CAACI,kBAAkB,EAAGrE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACI,kBAAkB,CAAExrG,CAAC,CAAG,CAAC;MAE1H;IAED,CAAC,MAAM;MAEN,IAAKqnB,KAAK,CAACC,OAAO,CAAE8jF,sBAAsB,CAACC,kBAAmB,CAAC,EAAG;QAEjE,KAAM,IAAIC,MAAK,GAAG,CAAC,EAAEA,MAAK,GAAGF,sBAAsB,CAACC,kBAAkB,CAAChnG,MAAM,EAAEinG,MAAK,EAAG,EAAGnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAEC,MAAK,CAAG,CAAC;MAEtK,CAAC,MAAM;QAENnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAmB,CAAC;MAEnE;MAEA,IAAKD,sBAAsB,CAACI,kBAAkB,EAAGrE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACI,kBAAmB,CAAC;MACpH,IAAKJ,sBAAsB,CAACM,8BAA8B,EAAGvE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACM,8BAA+B,CAAC;MAE3I,IAAKN,sBAAsB,CAACO,wBAAwB,EAAG;QAEtD,KAAM,IAAI3rG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGorG,sBAAsB,CAACO,wBAAwB,CAACtnG,MAAM,EAAErE,IAAC,EAAG,EAAG;UAEnF,IAAKorG,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAE,EAAGmnG,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAG,CAAC;QAE3I;MAED;MAEA,IAAKorG,sBAAsB,CAACQ,wBAAwB,EAAGzE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACQ,wBAAyB,CAAC;IAEjI;IAEA,IAAK3/C,YAAY,CAAC58B,4BAA4B,EAAG;MAEhD,KAAM,IAAIrvB,IAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGlC,OAAO,CAAC/oB,MAAM,EAAErE,IAAC,GAAGsvB,EAAE,EAAEtvB,IAAC,EAAG,EAAG;QAEpD,IAAM6rG,oBAAoB,GAAGnqC,UAAU,CAACxnD,GAAG,CAAEkT,OAAO,CAAEptB,IAAC,CAAG,CAAC;QAE3D,IAAK6rG,oBAAoB,CAACV,cAAc,EAAG;UAE1ChE,GAAG,CAAC+D,aAAa,CAAEW,oBAAoB,CAACV,cAAe,CAAC;UAExDl/B,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;QAExB;QAEA03C,UAAU,CAAC93B,MAAM,CAAExc,OAAO,CAAEptB,IAAC,CAAG,CAAC;MAElC;IAED;IAEA0hE,UAAU,CAAC93B,MAAM,CAAExc,OAAQ,CAAC;IAC5Bs0C,UAAU,CAAC93B,MAAM,CAAEqiB,YAAa,CAAC;EAElC;;EAEA;;EAEA,IAAI6/C,YAAY,GAAG,CAAC;EAEpB,SAASC,iBAAiBA,CAAA,EAAG;IAE5BD,YAAY,GAAG,CAAC;EAEjB;EAEA,SAAShwB,mBAAmBA,CAAA,EAAG;IAE9B,IAAMkwB,WAAW,GAAGF,YAAY;IAEhC,IAAKE,WAAW,IAAI3+B,WAAW,EAAG;MAEjCn0D,OAAO,CAACC,IAAI,CAAE,qCAAqC,GAAG6yF,WAAW,GAAG,8CAA8C,GAAG3+B,WAAY,CAAC;IAEnI;IAEAy+B,YAAY,IAAI,CAAC;IAEjB,OAAOE,WAAW;EAEnB;EAEA,SAASC,kBAAkBA,CAAE7+E,OAAO,EAAG;IAEtC,IAAMzY,KAAK,GAAG,EAAE;IAEhBA,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAACjF,KAAM,CAAC;IAC3BxT,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAChF,KAAM,CAAC;IAC3BzT,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAACY,KAAK,IAAI,CAAE,CAAC;IAChCrZ,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC/E,SAAU,CAAC;IAC/B1T,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC9E,SAAU,CAAC;IAC/B3T,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC5E,UAAW,CAAC;IAChC7T,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAACpE,cAAe,CAAC;IACpCrU,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC7E,MAAO,CAAC;IAC5B5T,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAClsB,IAAK,CAAC;IAC1ByT,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAACjE,eAAgB,CAAC;IACrCxU,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAChE,gBAAiB,CAAC;IACtCzU,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC/D,KAAM,CAAC;IAC3B1U,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC9D,eAAgB,CAAC;IACrC3U,KAAK,CAAC3Q,IAAI,CAAEopB,OAAO,CAAC5I,UAAW,CAAC;IAEhC,OAAO7P,KAAK,CAACiuE,IAAI,CAAC,CAAC;EAEpB;;EAEA;;EAEA,SAASnE,YAAYA,CAAErxD,OAAO,EAAE8+E,IAAI,EAAG;IAEtC,IAAMpB,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAAC4lE,cAAc,EAAGmZ,kBAAkB,CAAE/+E,OAAQ,CAAC;IAE3D,IAAKA,OAAO,CAAC3D,qBAAqB,KAAK,KAAK,IAAI2D,OAAO,CAACtG,OAAO,GAAG,CAAC,IAAIgkF,iBAAiB,CAACsB,SAAS,KAAKh/E,OAAO,CAACtG,OAAO,EAAG;MAExH,IAAMrB,KAAK,GAAG2H,OAAO,CAAC3H,KAAK;MAE3B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErBvM,OAAO,CAACC,IAAI,CAAE,yEAA0E,CAAC;MAE1F,CAAC,MAAM,IAAKsM,KAAK,CAAChgB,QAAQ,KAAK,KAAK,EAAG;QAEtCyT,OAAO,CAACC,IAAI,CAAE,wEAAyE,CAAC;MAEzF,CAAC,MAAM;QAENkzF,aAAa,CAAEvB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAK,CAAC;QACjD;MAED;IAED;IAEA9lC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAC7E,UAAU,EAAEwI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAE3F;EAEA,SAASntB,iBAAiBA,CAAE3xD,OAAO,EAAE8+E,IAAI,EAAG;IAE3C,IAAMpB,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAACtG,OAAO,GAAG,CAAC,IAAIgkF,iBAAiB,CAACsB,SAAS,KAAKh/E,OAAO,CAACtG,OAAO,EAAG;MAE7EulF,aAAa,CAAEvB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAK,CAAC;MACjD;IAED;IAEA9lC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAClF,gBAAgB,EAAE6I,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAEjG;EAEA,SAASvtB,YAAYA,CAAEvxD,OAAO,EAAE8+E,IAAI,EAAG;IAEtC,IAAMpB,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAACtG,OAAO,GAAG,CAAC,IAAIgkF,iBAAiB,CAACsB,SAAS,KAAKh/E,OAAO,CAACtG,OAAO,EAAG;MAE7EulF,aAAa,CAAEvB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAK,CAAC;MACjD;IAED;IAEA9lC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAACnF,UAAU,EAAE8I,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAE3F;EAEA,SAASrtB,cAAcA,CAAEzxD,OAAO,EAAE8+E,IAAI,EAAG;IAExC,IAAMpB,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAACtG,OAAO,GAAG,CAAC,IAAIgkF,iBAAiB,CAACsB,SAAS,KAAKh/E,OAAO,CAACtG,OAAO,EAAG;MAE7EwlF,iBAAiB,CAAExB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAK,CAAC;MACrD;IAED;IAEA9lC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAEjG;EAEA,IAAMK,YAAY,IAAAlF,aAAA,OAAA5jF,eAAA,CAAA4jF,aAAA,EACf77F,cAAc,EAAI27F,GAAG,CAACqF,MAAM,GAAA/oF,eAAA,CAAA4jF,aAAA,EAC5B57F,mBAAmB,EAAI07F,GAAG,CAACsF,aAAa,GAAAhpF,eAAA,CAAA4jF,aAAA,EACxC37F,sBAAsB,EAAIy7F,GAAG,CAACuF,eAAe,GAAArF,aAAA,CAC/C;EAED,IAAMsF,UAAU,IAAArF,WAAA,OAAA7jF,eAAA,CAAA6jF,WAAA,EACb37F,aAAa,EAAIw7F,GAAG,CAACrF,OAAO,GAAAr+E,eAAA,CAAA6jF,WAAA,EAC5B17F,0BAA0B,EAAIu7F,GAAG,CAACyF,sBAAsB,GAAAnpF,eAAA,CAAA6jF,WAAA,EACxDx7F,yBAAyB,EAAIq7F,GAAG,CAAC0F,qBAAqB,GAAAppF,eAAA,CAAA6jF,WAAA,EAEtDt7F,YAAY,EAAIm7F,GAAG,CAACuD,MAAM,GAAAjnF,eAAA,CAAA6jF,WAAA,EAC1Br7F,yBAAyB,EAAIk7F,GAAG,CAAC2F,qBAAqB,GAAArpF,eAAA,CAAA6jF,WAAA,EACtDn7F,wBAAwB,EAAIg7F,GAAG,CAAC4F,oBAAoB,GAAAzF,WAAA,CACtD;EAED,IAAM0F,WAAW,IAAAzF,YAAA,OAAA9jF,eAAA,CAAA8jF,YAAA,EACd/0F,YAAY,EAAI20F,GAAG,CAACpJ,KAAK,GAAAt6E,eAAA,CAAA8jF,YAAA,EACzBx0F,aAAa,EAAIo0F,GAAG,CAACnJ,MAAM,GAAAv6E,eAAA,CAAA8jF,YAAA,EAC3B90F,WAAW,EAAI00F,GAAG,CAAClJ,IAAI,GAAAx6E,eAAA,CAAA8jF,YAAA,EACvB50F,gBAAgB,EAAIw0F,GAAG,CAACjJ,MAAM,GAAAz6E,eAAA,CAAA8jF,YAAA,EAC9B70F,YAAY,EAAIy0F,GAAG,CAAChJ,KAAK,GAAA16E,eAAA,CAAA8jF,YAAA,EACzBz0F,mBAAmB,EAAIq0F,GAAG,CAAC/I,MAAM,GAAA36E,eAAA,CAAA8jF,YAAA,EACjC30F,cAAc,EAAIu0F,GAAG,CAAC9I,OAAO,GAAA56E,eAAA,CAAA8jF,YAAA,EAC7B10F,eAAe,EAAIs0F,GAAG,CAAC7I,QAAQ,GAAAiJ,YAAA,CACjC;EAED,SAAS0F,oBAAoBA,CAAEC,WAAW,EAAE9/E,OAAO,EAAEo7E,YAAY,EAAG;IAEnE,IAAKA,YAAY,EAAG;MAEnBrB,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACgG,cAAc,EAAEZ,YAAY,CAAEn/E,OAAO,CAACjF,KAAK,CAAG,CAAC;MACnFg/E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACiG,cAAc,EAAEb,YAAY,CAAEn/E,OAAO,CAAChF,KAAK,CAAG,CAAC;MAEnF,IAAK8kF,WAAW,KAAK/F,GAAG,CAACnF,UAAU,IAAIkL,WAAW,KAAK/F,GAAG,CAAClF,gBAAgB,EAAG;QAE7EkF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACkG,cAAc,EAAEd,YAAY,CAAEn/E,OAAO,CAACY,KAAK,CAAG,CAAC;MAEpF;MAEAm5E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACpF,kBAAkB,EAAE4K,UAAU,CAAEv/E,OAAO,CAAC/E,SAAS,CAAG,CAAC;MACzF8+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACtF,kBAAkB,EAAE8K,UAAU,CAAEv/E,OAAO,CAAC9E,SAAS,CAAG,CAAC;IAE1F,CAAC,MAAM;MAEN6+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACgG,cAAc,EAAEhG,GAAG,CAACsF,aAAc,CAAC;MACvEtF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACiG,cAAc,EAAEjG,GAAG,CAACsF,aAAc,CAAC;MAEvE,IAAKS,WAAW,KAAK/F,GAAG,CAACnF,UAAU,IAAIkL,WAAW,KAAK/F,GAAG,CAAClF,gBAAgB,EAAG;QAE7EkF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACkG,cAAc,EAAElG,GAAG,CAACsF,aAAc,CAAC;MAExE;MAEA,IAAKr/E,OAAO,CAACjF,KAAK,KAAK1c,mBAAmB,IAAI2hB,OAAO,CAAChF,KAAK,KAAK3c,mBAAmB,EAAG;QAErFyN,OAAO,CAACC,IAAI,CAAE,+HAAgI,CAAC;MAEhJ;MAEAguF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACpF,kBAAkB,EAAE0I,cAAc,CAAEr9E,OAAO,CAAC/E,SAAU,CAAE,CAAC;MAC7F8+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACtF,kBAAkB,EAAE4I,cAAc,CAAEr9E,OAAO,CAAC9E,SAAU,CAAE,CAAC;MAE7F,IAAK8E,OAAO,CAAC9E,SAAS,KAAK3c,aAAa,IAAIyhB,OAAO,CAAC9E,SAAS,KAAKtc,YAAY,EAAG;QAEhFkN,OAAO,CAACC,IAAI,CAAE,iIAAkI,CAAC;MAElJ;IAED;IAEA,IAAKiU,OAAO,CAACkgF,eAAe,EAAG;MAE9BnG,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACoG,oBAAoB,EAAEpG,GAAG,CAACqG,sBAAuB,CAAC;MACtFrG,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACsG,oBAAoB,EAAET,WAAW,CAAE5/E,OAAO,CAACkgF,eAAe,CAAG,CAAC;IAEnG;IAEA,IAAKnkD,UAAU,CAAC1kC,GAAG,CAAE,gCAAiC,CAAC,KAAK,IAAI,EAAG;MAElE,IAAMujD,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,gCAAiC,CAAC;MAEpE,IAAKkT,OAAO,CAAC/E,SAAS,KAAK1c,aAAa,EAAG;MAC3C,IAAKyhB,OAAO,CAAC9E,SAAS,KAAKxc,yBAAyB,IAAIshB,OAAO,CAAC9E,SAAS,KAAKnc,wBAAwB,EAAG;MACzG,IAAKihB,OAAO,CAAClsB,IAAI,KAAKyL,SAAS,IAAIw8C,UAAU,CAAC1kC,GAAG,CAAE,0BAA2B,CAAC,KAAK,KAAK,EAAG,OAAO,CAAC;MACpG,IAAKkuC,QAAQ,KAAK,KAAK,IAAMvlC,OAAO,CAAClsB,IAAI,KAAK0L,aAAa,IAAIu8C,UAAU,CAAC1kC,GAAG,CAAE,+BAAgC,CAAC,KAAK,KAAO,EAAG,OAAO,CAAC;;MAEvI,IAAK2I,OAAO,CAAC5E,UAAU,GAAG,CAAC,IAAIk5C,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC,CAACsgF,mBAAmB,EAAG;QAE9EvG,GAAG,CAACwG,aAAa,CAAET,WAAW,EAAEllC,SAAS,CAAC4lC,0BAA0B,EAAE74F,IAAI,CAACY,GAAG,CAAEyX,OAAO,CAAC5E,UAAU,EAAEkqC,YAAY,CAACga,gBAAgB,CAAC,CAAE,CAAE,CAAC;QACvIhL,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC,CAACsgF,mBAAmB,GAAGtgF,OAAO,CAAC5E,UAAU;MAEnE;IAED;EAED;EAEA,SAASqlF,WAAWA,CAAE/C,iBAAiB,EAAE19E,OAAO,EAAG;IAElD,IAAI0gF,WAAW,GAAG,KAAK;IAEvB,IAAKhD,iBAAiB,CAACC,WAAW,KAAK/jG,SAAS,EAAG;MAElD8jG,iBAAiB,CAACC,WAAW,GAAG,IAAI;MAEpC39E,OAAO,CAACrZ,gBAAgB,CAAE,SAAS,EAAEw8D,gBAAiB,CAAC;IAExD;;IAEA;;IAEA,IAAM1nD,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAC7B,IAAImiF,aAAa,GAAGnD,QAAQ,CAAC3tF,GAAG,CAAE2O,MAAO,CAAC;IAE1C,IAAKmiF,aAAa,KAAKhkG,SAAS,EAAG;MAElCgkG,aAAa,GAAG,CAAC,CAAC;MAClBnD,QAAQ,CAAC5uF,GAAG,CAAE4P,MAAM,EAAEmiF,aAAc,CAAC;IAEtC;;IAEA;;IAEA,IAAM+C,eAAe,GAAG9B,kBAAkB,CAAE7+E,OAAQ,CAAC;IAErD,IAAK2gF,eAAe,KAAKjD,iBAAiB,CAACG,UAAU,EAAG;MAEvD;;MAEA,IAAKD,aAAa,CAAE+C,eAAe,CAAE,KAAK/mG,SAAS,EAAG;QAErD;;QAEAgkG,aAAa,CAAE+C,eAAe,CAAE,GAAG;UAClC3gF,OAAO,EAAE+5E,GAAG,CAAC1F,aAAa,CAAC,CAAC;UAC5BpU,SAAS,EAAE;QACZ,CAAC;QAEDphB,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;;QAEvB;QACA;;QAEA8jF,WAAW,GAAG,IAAI;MAEnB;MAEA9C,aAAa,CAAE+C,eAAe,CAAE,CAAC1gB,SAAS,EAAG;;MAE7C;MACA;;MAEA,IAAM0Y,YAAY,GAAGiF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAElE,IAAKlF,YAAY,KAAK/+F,SAAS,EAAG;QAEjCgkG,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE,CAAC5d,SAAS,EAAG;QAE1D,IAAK0Y,YAAY,CAAC1Y,SAAS,KAAK,CAAC,EAAG;UAEnC6d,aAAa,CAAE99E,OAAQ,CAAC;QAEzB;MAED;;MAEA;;MAEA09E,iBAAiB,CAACG,UAAU,GAAG8C,eAAe;MAC9CjD,iBAAiB,CAACK,cAAc,GAAGH,aAAa,CAAE+C,eAAe,CAAE,CAAC3gF,OAAO;IAE5E;IAEA,OAAO0gF,WAAW;EAEnB;EAEA,SAASzB,aAAaA,CAAEvB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAI,EAAG;IAE1D,IAAIgB,WAAW,GAAG/F,GAAG,CAAC7E,UAAU;IAEhC,IAAKl1E,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAAC4gF,wBAAwB,EAAGd,WAAW,GAAG/F,GAAG,CAAClF,gBAAgB;IACxG,IAAK70E,OAAO,CAACsB,eAAe,EAAGw+E,WAAW,GAAG/F,GAAG,CAACnF,UAAU;IAE3D,IAAM8L,WAAW,GAAGD,WAAW,CAAE/C,iBAAiB,EAAE19E,OAAQ,CAAC;IAC7D,IAAMvE,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAE7Bu9C,KAAK,CAACu7B,WAAW,CAAEuL,WAAW,EAAEpC,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;IAEvF,IAAM+B,gBAAgB,GAAGvsC,UAAU,CAACxnD,GAAG,CAAE2O,MAAO,CAAC;IAEjD,IAAKA,MAAM,CAAC/B,OAAO,KAAKmnF,gBAAgB,CAAC7B,SAAS,IAAI0B,WAAW,KAAK,IAAI,EAAG;MAE5E1nC,KAAK,CAACu/B,aAAa,CAAEwB,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;MAE1C,IAAMppB,gBAAgB,GAAG3+D,eAAe,CAACe,YAAY,CAAEf,eAAe,CAACI,iBAAkB,CAAC;MAC1F,IAAM2pF,gBAAgB,GAAG9gF,OAAO,CAAC5I,UAAU,KAAKzT,YAAY,GAAG,IAAI,GAAGoT,eAAe,CAACe,YAAY,CAAEkI,OAAO,CAAC5I,UAAW,CAAC;MACxH,IAAM2pF,gBAAgB,GAAG/gF,OAAO,CAAC5I,UAAU,KAAKzT,YAAY,IAAI+xE,gBAAgB,KAAKorB,gBAAgB,GAAG/G,GAAG,CAACiH,IAAI,GAAGjH,GAAG,CAACkH,qBAAqB;MAE5IlH,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACoH,mBAAmB,EAAEnhF,OAAO,CAAC/D,KAAM,CAAC;MACzD89E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACqH,8BAA8B,EAAEphF,OAAO,CAAChE,gBAAiB,CAAC;MAC/E+9E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsH,gBAAgB,EAAErhF,OAAO,CAAC9D,eAAgB,CAAC;MAChE69E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACuH,kCAAkC,EAAEP,gBAAiB,CAAC;MAE3E,IAAMjG,eAAe,GAAGI,sBAAsB,CAAEl7E,OAAQ,CAAC,IAAIi7E,cAAc,CAAEj7E,OAAO,CAAC3H,KAAM,CAAC,KAAK,KAAK;MACtG,IAAIA,KAAK,GAAGwiF,WAAW,CAAE76E,OAAO,CAAC3H,KAAK,EAAEyiF,eAAe,EAAE,KAAK,EAAEz6B,cAAe,CAAC;MAChFhoD,KAAK,GAAGkpF,gBAAgB,CAAEvhF,OAAO,EAAE3H,KAAM,CAAC;MAE1C,IAAM+iF,YAAY,GAAGH,cAAc,CAAE5iF,KAAM,CAAC,IAAIktC,QAAQ;QACvDi2C,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAC7E,MAAM,EAAE6E,OAAO,CAAC5I,UAAW,CAAC;MAE/D,IAAIqkF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;QACzC0tG,gBAAgB,GAAGlG,iBAAiB,CAAEt7E,OAAO,CAACpE,cAAc,EAAE4/E,QAAQ,EAAEC,MAAM,EAAEz7E,OAAO,CAAC5I,UAAU,EAAE4I,OAAO,CAAC4lE,cAAe,CAAC;MAE7Hia,oBAAoB,CAAEC,WAAW,EAAE9/E,OAAO,EAAEo7E,YAAa,CAAC;MAE1D,IAAIqG,MAAM;MACV,IAAM/lF,OAAO,GAAGsE,OAAO,CAACtE,OAAO;MAE/B,IAAMgmF,aAAa,GAAKn8C,QAAQ,IAAIvlC,OAAO,CAAC4lE,cAAc,KAAK,IAAM;MACrE,IAAM+b,cAAc,GAAKd,gBAAgB,CAAC7B,SAAS,KAAKplG,SAAS,IAAQ8mG,WAAW,KAAK,IAAM;MAC/F,IAAMkB,MAAM,GAAG1E,YAAY,CAAEl9E,OAAO,EAAE3H,KAAK,EAAE+iF,YAAa,CAAC;MAE3D,IAAKp7E,OAAO,CAAC6hF,cAAc,EAAG;QAE7B;;QAEAL,gBAAgB,GAAGzH,GAAG,CAAC+H,eAAe;QAEtC,IAAKv8C,QAAQ,EAAG;UAEf,IAAKvlC,OAAO,CAAClsB,IAAI,KAAKyL,SAAS,EAAG;YAEjCiiG,gBAAgB,GAAGzH,GAAG,CAACgI,kBAAkB;UAE1C,CAAC,MAAM,IAAK/hF,OAAO,CAAClsB,IAAI,KAAKwL,eAAe,EAAG;YAE9CkiG,gBAAgB,GAAGzH,GAAG,CAACiI,iBAAiB;UAEzC,CAAC,MAAM,IAAKhiF,OAAO,CAAClsB,IAAI,KAAK6L,kBAAkB,EAAG;YAEjD6hG,gBAAgB,GAAGzH,GAAG,CAACkI,gBAAgB;UAExC,CAAC,MAAM;YAENT,gBAAgB,GAAGzH,GAAG,CAACmI,iBAAiB,CAAC,CAAC;UAE3C;QAED,CAAC,MAAM;UAEN,IAAKliF,OAAO,CAAClsB,IAAI,KAAKyL,SAAS,EAAG;YAEjCuM,OAAO,CAACywB,KAAK,CAAE,8DAA+D,CAAC;UAEhF;QAED;;QAEA;;QAEA,IAAKvc,OAAO,CAAC7E,MAAM,KAAKnb,WAAW,IAAIwhG,gBAAgB,KAAKzH,GAAG,CAAC+H,eAAe,EAAG;UAEjF;UACA;UACA;UACA,IAAK9hF,OAAO,CAAClsB,IAAI,KAAKsL,iBAAiB,IAAI4gB,OAAO,CAAClsB,IAAI,KAAKwL,eAAe,EAAG;YAE7EwM,OAAO,CAACC,IAAI,CAAE,6FAA8F,CAAC;YAE7GiU,OAAO,CAAClsB,IAAI,GAAGwL,eAAe;YAC9Bm8F,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;UAEvC;QAED;QAEA,IAAKksB,OAAO,CAAC7E,MAAM,KAAKlb,kBAAkB,IAAIuhG,gBAAgB,KAAKzH,GAAG,CAAC+H,eAAe,EAAG;UAExF;UACA;UACAN,gBAAgB,GAAGzH,GAAG,CAACoI,aAAa;;UAEpC;UACA;UACA;UACA,IAAKniF,OAAO,CAAClsB,IAAI,KAAK6L,kBAAkB,EAAG;YAE1CmM,OAAO,CAACC,IAAI,CAAE,kFAAmF,CAAC;YAElGiU,OAAO,CAAClsB,IAAI,GAAG6L,kBAAkB;YACjC87F,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;UAEvC;QAED;;QAEA;;QAEA,IAAK6tG,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpB1oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEsM,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UAErF,CAAC,MAAM;YAENsgD,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEsM,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;UAE9G;QAED;MAED,CAAC,MAAM,IAAKz7E,OAAO,CAAC7F,aAAa,EAAG;QAEnC;QACA;QACA;;QAEA,IAAKuB,OAAO,CAACzkB,MAAM,GAAG,CAAC,IAAImkG,YAAY,EAAG;UAEzC,IAAKsG,aAAa,IAAIC,cAAc,EAAG;YAEtC3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAE9lF,OAAO,CAAE,CAAC,CAAE,CAACjD,KAAK,EAAEiD,OAAO,CAAE,CAAC,CAAE,CAAChD,MAAO,CAAC;UAExG;UAEA,KAAM,IAAI9lB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGxG,OAAO,CAACzkB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAEpD6uG,MAAM,GAAG/lF,OAAO,CAAE9oB,CAAC,CAAE;YAErB,IAAK8uG,aAAa,EAAG;cAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEtiG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE6uG,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;YAE3G,CAAC,MAAM;cAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEtiG,CAAC,EAAE4uG,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;YAEvH;UAED;UAEA0G,OAAO,CAACjE,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK2lF,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;YAE1F;YAEAsgD,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE78E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;UAExG,CAAC,MAAM;YAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEsM,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;UAEpH;QAED;MAED,CAAC,MAAM,IAAK0G,OAAO,CAACo9E,mBAAmB,EAAG;QAEzC,IAAKp9E,OAAO,CAAC4gF,wBAAwB,EAAG;UAEvC,IAAKc,aAAa,IAAIC,cAAc,EAAG;YAEtC3oC,KAAK,CAACqgC,YAAY,CAAEU,GAAG,CAAClF,gBAAgB,EAAE+M,MAAM,EAAEJ,gBAAgB,EAAE9lF,OAAO,CAAE,CAAC,CAAE,CAACjD,KAAK,EAAEiD,OAAO,CAAE,CAAC,CAAE,CAAChD,MAAM,EAAEL,KAAK,CAACkH,KAAM,CAAC;UAE3H;UAEA,KAAM,IAAI3sB,IAAC,GAAG,CAAC,EAAEsvB,IAAE,GAAGxG,OAAO,CAACzkB,MAAM,EAAErE,IAAC,GAAGsvB,IAAE,EAAEtvB,IAAC,EAAG,EAAG;YAEpD6uG,MAAM,GAAG/lF,OAAO,CAAE9oB,IAAC,CAAE;YAErB,IAAKotB,OAAO,CAAC7E,MAAM,KAAKtb,UAAU,EAAG;cAEpC,IAAK27F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAKkG,aAAa,EAAG;kBAEpB1oC,KAAK,CAACmgC,uBAAuB,CAAEY,GAAG,CAAClF,gBAAgB,EAAEjiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE6uG,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAEi8E,QAAQ,EAAEiG,MAAM,CAACnoF,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;gBAEzI,CAAC,MAAM;kBAEN0/C,KAAK,CAAC+/B,oBAAoB,CAAEgB,GAAG,CAAClF,gBAAgB,EAAEjiG,IAAC,EAAE4uG,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAE,CAAC,EAAEkiF,MAAM,CAACnoF,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;gBAExI;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;cAEjH;YAED,CAAC,MAAM;cAEN,IAAK21F,aAAa,EAAG;gBAEpB1oC,KAAK,CAACigC,aAAa,CAAEc,GAAG,CAAClF,gBAAgB,EAAEjiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE6uG,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAEjI,CAAC,MAAM;gBAEN0/C,KAAK,CAAC87B,UAAU,CAAEiF,GAAG,CAAClF,gBAAgB,EAAEjiG,IAAC,EAAE4uG,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAE,CAAC,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAE1I;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAKooF,aAAa,IAAIC,cAAc,EAAG;YAEtC3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAE9lF,OAAO,CAAE,CAAC,CAAE,CAACjD,KAAK,EAAEiD,OAAO,CAAE,CAAC,CAAE,CAAChD,MAAO,CAAC;UAExG;UAEA,KAAM,IAAI9lB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAGxG,OAAO,CAACzkB,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;YAEpD6uG,MAAM,GAAG/lF,OAAO,CAAE9oB,IAAC,CAAE;YAErB,IAAKotB,OAAO,CAAC7E,MAAM,KAAKtb,UAAU,EAAG;cAEpC,IAAK27F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAKkG,aAAa,EAAG;kBAEpB1oC,KAAK,CAACkgC,uBAAuB,CAAEa,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE6uG,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE8iF,QAAQ,EAAEiG,MAAM,CAACnoF,IAAK,CAAC;gBAE7G,CAAC,MAAM;kBAEN0/C,KAAK,CAAC8/B,oBAAoB,CAAEiB,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE4uG,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE,CAAC,EAAE+oF,MAAM,CAACnoF,IAAK,CAAC;gBAE/G;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;cAEjH;YAED,CAAC,MAAM;cAEN,IAAK21F,aAAa,EAAG;gBAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE6uG,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAE3G,CAAC,MAAM;gBAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE4uG,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAEvH;YAED;UAED;QAED;MAED,CAAC,MAAM,IAAK0G,OAAO,CAACW,kBAAkB,EAAG;QAExC,IAAK+gF,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErB3oC,KAAK,CAACqgC,YAAY,CAAEU,GAAG,CAAClF,gBAAgB,EAAE+M,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAM,CAAC;UAE7G;UAEAy5C,KAAK,CAACigC,aAAa,CAAEc,GAAG,CAAClF,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEx8E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;QAE9H,CAAC,MAAM;UAEN0/C,KAAK,CAAC87B,UAAU,CAAEiF,GAAG,CAAClF,gBAAgB,EAAE,CAAC,EAAE2M,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAE,CAAC,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;QAEvI;MAED,CAAC,MAAM,IAAK0G,OAAO,CAACsB,eAAe,EAAG;QAErC,IAAKogF,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErB3oC,KAAK,CAACqgC,YAAY,CAAEU,GAAG,CAACnF,UAAU,EAAEgN,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAM,CAAC;UAEvG;UAEAy5C,KAAK,CAACigC,aAAa,CAAEc,GAAG,CAACnF,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEv8E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;QAExH,CAAC,MAAM;UAEN0/C,KAAK,CAAC87B,UAAU,CAAEiF,GAAG,CAACnF,UAAU,EAAE,CAAC,EAAE4M,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACkH,KAAK,EAAE,CAAC,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;QAEjI;MAED,CAAC,MAAM,IAAK0G,OAAO,CAACm9E,oBAAoB,EAAG;QAE1C,IAAKwE,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpB1oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UAE1F,CAAC,MAAM;YAEN,IAAID,KAAK,GAAGJ,KAAK,CAACI,KAAK;cAAEC,MAAM,GAAGL,KAAK,CAACK,MAAM;YAE9C,KAAM,IAAI9lB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgvG,MAAM,EAAEhvG,IAAC,EAAG,EAAG;cAEnComE,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE4uG,gBAAgB,EAAE/oF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;cAEjGhjF,KAAK,KAAK,CAAC;cACXC,MAAM,KAAK,CAAC;YAEb;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA;QACA;QACA;;QAEA,IAAKgD,OAAO,CAACzkB,MAAM,GAAG,CAAC,IAAImkG,YAAY,EAAG;UAEzC,IAAKsG,aAAa,IAAIC,cAAc,EAAG;YAEtC3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAE9lF,OAAO,CAAE,CAAC,CAAE,CAACjD,KAAK,EAAEiD,OAAO,CAAE,CAAC,CAAE,CAAChD,MAAO,CAAC;UAExG;UAEA,KAAM,IAAI9lB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAGxG,OAAO,CAACzkB,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;YAEpD6uG,MAAM,GAAG/lF,OAAO,CAAE9oB,IAAC,CAAE;YAErB,IAAK8uG,aAAa,EAAG;cAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE4oG,QAAQ,EAAEC,MAAM,EAAEgG,MAAO,CAAC;YAEzE,CAAC,MAAM;cAENzoC,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEtiG,IAAC,EAAE4uG,gBAAgB,EAAEhG,QAAQ,EAAEC,MAAM,EAAEgG,MAAO,CAAC;YAElF;UAED;UAEAzhF,OAAO,CAACjE,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK2lF,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE0M,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;YAE1F;YAEAsgD,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEsG,QAAQ,EAAEC,MAAM,EAAEpjF,KAAM,CAAC;UAExE,CAAC,MAAM;YAEN2gD,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEsM,gBAAgB,EAAEhG,QAAQ,EAAEC,MAAM,EAAEpjF,KAAM,CAAC;UAEjF;QAED;MAED;MAEA,IAAK8iF,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAEyE,WAAY,CAAC;MAE9B;MAEAe,gBAAgB,CAAC7B,SAAS,GAAGvjF,MAAM,CAAC/B,OAAO;MAE3C,IAAKsG,OAAO,CAAC5D,QAAQ,EAAG4D,OAAO,CAAC5D,QAAQ,CAAE4D,OAAQ,CAAC;IAEpD;IAEA09E,iBAAiB,CAACsB,SAAS,GAAGh/E,OAAO,CAACtG,OAAO;EAE9C;EAEA,SAASwlF,iBAAiBA,CAAExB,iBAAiB,EAAE19E,OAAO,EAAE8+E,IAAI,EAAG;IAE9D,IAAK9+E,OAAO,CAAC3H,KAAK,CAACphB,MAAM,KAAK,CAAC,EAAG;IAElC,IAAMypG,WAAW,GAAGD,WAAW,CAAE/C,iBAAiB,EAAE19E,OAAQ,CAAC;IAC7D,IAAMvE,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAE7Bu9C,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;IAEhG,IAAM+B,gBAAgB,GAAGvsC,UAAU,CAACxnD,GAAG,CAAE2O,MAAO,CAAC;IAEjD,IAAKA,MAAM,CAAC/B,OAAO,KAAKmnF,gBAAgB,CAAC7B,SAAS,IAAI0B,WAAW,KAAK,IAAI,EAAG;MAE5E1nC,KAAK,CAACu/B,aAAa,CAAEwB,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;MAE1C,IAAMppB,gBAAgB,GAAG3+D,eAAe,CAACe,YAAY,CAAEf,eAAe,CAACI,iBAAkB,CAAC;MAC1F,IAAM2pF,gBAAgB,GAAG9gF,OAAO,CAAC5I,UAAU,KAAKzT,YAAY,GAAG,IAAI,GAAGoT,eAAe,CAACe,YAAY,CAAEkI,OAAO,CAAC5I,UAAW,CAAC;MACxH,IAAM2pF,gBAAgB,GAAG/gF,OAAO,CAAC5I,UAAU,KAAKzT,YAAY,IAAI+xE,gBAAgB,KAAKorB,gBAAgB,GAAG/G,GAAG,CAACiH,IAAI,GAAGjH,GAAG,CAACkH,qBAAqB;MAE5IlH,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACoH,mBAAmB,EAAEnhF,OAAO,CAAC/D,KAAM,CAAC;MACzD89E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACqH,8BAA8B,EAAEphF,OAAO,CAAChE,gBAAiB,CAAC;MAC/E+9E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsH,gBAAgB,EAAErhF,OAAO,CAAC9D,eAAgB,CAAC;MAChE69E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACuH,kCAAkC,EAAEP,gBAAiB,CAAC;MAE3E,IAAMqB,YAAY,GAAKpiF,OAAO,CAACo9E,mBAAmB,IAAIp9E,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAAC+kF,mBAAqB;MAC9F,IAAMjjF,aAAa,GAAK6F,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,IAAI2H,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAAC8B,aAAe;MAEhF,IAAMkoF,SAAS,GAAG,EAAE;MAEpB,KAAM,IAAIzvG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAEwvG,YAAY,IAAI,CAAEjoF,aAAa,EAAG;UAExCkoF,SAAS,CAAEzvG,CAAC,CAAE,GAAGioG,WAAW,CAAE76E,OAAO,CAAC3H,KAAK,CAAEzlB,CAAC,CAAE,EAAE,KAAK,EAAE,IAAI,EAAE2tE,cAAe,CAAC;QAEhF,CAAC,MAAM;UAEN8hC,SAAS,CAAEzvG,CAAC,CAAE,GAAGunB,aAAa,GAAG6F,OAAO,CAAC3H,KAAK,CAAEzlB,CAAC,CAAE,CAACylB,KAAK,GAAG2H,OAAO,CAAC3H,KAAK,CAAEzlB,CAAC,CAAE;QAE/E;QAEAyvG,SAAS,CAAEzvG,CAAC,CAAE,GAAG2uG,gBAAgB,CAAEvhF,OAAO,EAAEqiF,SAAS,CAAEzvG,CAAC,CAAG,CAAC;MAE7D;MAEA,IAAMylB,KAAK,GAAGgqF,SAAS,CAAE,CAAC,CAAE;QAC3BjH,YAAY,GAAGH,cAAc,CAAE5iF,KAAM,CAAC,IAAIktC,QAAQ;QAClDi2C,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAC7E,MAAM,EAAE6E,OAAO,CAAC5I,UAAW,CAAC;QAC9DqkF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;QACtC0tG,gBAAgB,GAAGlG,iBAAiB,CAAEt7E,OAAO,CAACpE,cAAc,EAAE4/E,QAAQ,EAAEC,MAAM,EAAEz7E,OAAO,CAAC5I,UAAW,CAAC;MAErG,IAAMsqF,aAAa,GAAKn8C,QAAQ,IAAIvlC,OAAO,CAAC4lE,cAAc,KAAK,IAAM;MACrE,IAAM+b,cAAc,GAAKd,gBAAgB,CAAC7B,SAAS,KAAKplG,SAAS,IAAQ8mG,WAAW,KAAK,IAAM;MAC/F,IAAIkB,MAAM,GAAG1E,YAAY,CAAEl9E,OAAO,EAAE3H,KAAK,EAAE+iF,YAAa,CAAC;MAEzDyE,oBAAoB,CAAE9F,GAAG,CAAC5E,gBAAgB,EAAEn1E,OAAO,EAAEo7E,YAAa,CAAC;MAEnE,IAAI1/E,OAAO;MAEX,IAAK0mF,YAAY,EAAG;QAEnB,IAAKV,aAAa,IAAIC,cAAc,EAAG;UAEtC3oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC5E,gBAAgB,EAAEyM,MAAM,EAAEJ,gBAAgB,EAAEnpF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAEhG;QAEA,KAAM,IAAI9lB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B8oB,OAAO,GAAG2mF,SAAS,CAAEzvG,IAAC,CAAE,CAAC8oB,OAAO;UAEhC,KAAM,IAAI0S,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1S,OAAO,CAACzkB,MAAM,EAAEm3B,CAAC,EAAG,EAAG;YAE3C,IAAMqzE,MAAM,GAAG/lF,OAAO,CAAE0S,CAAC,CAAE;YAE3B,IAAKpO,OAAO,CAAC7E,MAAM,KAAKtb,UAAU,EAAG;cAEpC,IAAK27F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAKkG,aAAa,EAAG;kBAEpB1oC,KAAK,CAACkgC,uBAAuB,CAAEa,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEqzE,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE8iF,QAAQ,EAAEiG,MAAM,CAACnoF,IAAK,CAAC;gBAElI,CAAC,MAAM;kBAEN0/C,KAAK,CAAC8/B,oBAAoB,CAAEiB,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,CAAC,EAAEozE,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE,CAAC,EAAE+oF,MAAM,CAACnoF,IAAK,CAAC;gBAEpI;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,iGAAkG,CAAC;cAElH;YAED,CAAC,MAAM;cAEN,IAAK21F,aAAa,EAAG;gBAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEqzE,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAEhI,CAAC,MAAM;gBAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,CAAC,EAAEozE,gBAAgB,EAAEC,MAAM,CAAChpF,KAAK,EAAEgpF,MAAM,CAAC/oF,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEgG,MAAM,CAACnoF,IAAK,CAAC;cAE5I;YAED;UAED;QAED;MAED,CAAC,MAAM;QAENoC,OAAO,GAAGsE,OAAO,CAACtE,OAAO;QAEzB,IAAKgmF,aAAa,IAAIC,cAAc,EAAG;UAEtC;UACA;UACA;;UAEA,IAAKjmF,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG2qG,MAAM,EAAG;UAEnC5oC,KAAK,CAACogC,YAAY,CAAEW,GAAG,CAAC5E,gBAAgB,EAAEyM,MAAM,EAAEJ,gBAAgB,EAAEa,SAAS,CAAE,CAAC,CAAE,CAAC5pF,KAAK,EAAE4pF,SAAS,CAAE,CAAC,CAAE,CAAC3pF,MAAO,CAAC;QAElH;QAEA,KAAM,IAAI9lB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B,IAAKunB,aAAa,EAAG;YAEpB,IAAKunF,aAAa,EAAG;cAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEyvG,SAAS,CAAEzvG,IAAC,CAAE,CAAC6lB,KAAK,EAAE4pF,SAAS,CAAEzvG,IAAC,CAAE,CAAC8lB,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE4G,SAAS,CAAEzvG,IAAC,CAAE,CAAC0mB,IAAK,CAAC;YAExJ,CAAC,MAAM;cAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAE,CAAC,EAAE4uG,gBAAgB,EAAEa,SAAS,CAAEzvG,IAAC,CAAE,CAAC6lB,KAAK,EAAE4pF,SAAS,CAAEzvG,IAAC,CAAE,CAAC8lB,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE4G,SAAS,CAAEzvG,IAAC,CAAE,CAAC0mB,IAAK,CAAC;YAEpK;YAEA,KAAM,IAAI8U,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG1S,OAAO,CAACzkB,MAAM,EAAEm3B,GAAC,EAAG,EAAG;cAE3C,IAAMqzE,OAAM,GAAG/lF,OAAO,CAAE0S,GAAC,CAAE;cAC3B,IAAMk0E,WAAW,GAAGb,OAAM,CAACppF,KAAK,CAAEzlB,IAAC,CAAE,CAACylB,KAAK;cAE3C,IAAKqpF,aAAa,EAAG;gBAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEk0E,WAAW,CAAC7pF,KAAK,EAAE6pF,WAAW,CAAC5pF,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE6G,WAAW,CAAChpF,IAAK,CAAC;cAEnJ,CAAC,MAAM;gBAEN0/C,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,GAAC,GAAG,CAAC,EAAEozE,gBAAgB,EAAEc,WAAW,CAAC7pF,KAAK,EAAE6pF,WAAW,CAAC5pF,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE6G,WAAW,CAAChpF,IAAK,CAAC;cAE/J;YAED;UAED,CAAC,MAAM;YAEN,IAAKooF,aAAa,EAAG;cAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE4oG,QAAQ,EAAEC,MAAM,EAAE4G,SAAS,CAAEzvG,IAAC,CAAG,CAAC;YAEtG,CAAC,MAAM;cAENomE,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAE,CAAC,EAAE4uG,gBAAgB,EAAEhG,QAAQ,EAAEC,MAAM,EAAE4G,SAAS,CAAEzvG,IAAC,CAAG,CAAC;YAE/G;YAEA,KAAM,IAAIw7B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG1S,OAAO,CAACzkB,MAAM,EAAEm3B,GAAC,EAAG,EAAG;cAE3C,IAAMqzE,QAAM,GAAG/lF,OAAO,CAAE0S,GAAC,CAAE;cAE3B,IAAKszE,aAAa,EAAG;gBAEpB1oC,KAAK,CAACggC,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEotE,QAAQ,EAAEC,MAAM,EAAEgG,QAAM,CAACppF,KAAK,CAAEzlB,IAAC,CAAG,CAAC;cAE7G,CAAC,MAAM;gBAENomE,KAAK,CAACg8B,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEw7B,GAAC,GAAG,CAAC,EAAEozE,gBAAgB,EAAEhG,QAAQ,EAAEC,MAAM,EAAEgG,QAAM,CAACppF,KAAK,CAAEzlB,IAAC,CAAG,CAAC;cAEtH;YAED;UAED;QAED;MAED;MAEA,IAAKuoG,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,EAAG;QAE3D;QACAC,cAAc,CAAEtB,GAAG,CAAC5E,gBAAiB,CAAC;MAEvC;MAEA0L,gBAAgB,CAAC7B,SAAS,GAAGvjF,MAAM,CAAC/B,OAAO;MAE3C,IAAKsG,OAAO,CAAC5D,QAAQ,EAAG4D,OAAO,CAAC5D,QAAQ,CAAE4D,OAAQ,CAAC;IAEpD;IAEA09E,iBAAiB,CAACsB,SAAS,GAAGh/E,OAAO,CAACtG,OAAO;EAE9C;;EAEA;;EAEA;EACA,SAAS6oF,uBAAuBA,CAAE9M,WAAW,EAAE52C,YAAY,EAAE7+B,OAAO,EAAEwiF,UAAU,EAAEC,aAAa,EAAEvE,KAAK,EAAG;IAExG,IAAM1C,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAC7E,MAAM,EAAE6E,OAAO,CAAC5I,UAAW,CAAC;IACpE,IAAMqkF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;IAC5C,IAAM0tG,gBAAgB,GAAGlG,iBAAiB,CAAEt7E,OAAO,CAACpE,cAAc,EAAE4/E,QAAQ,EAAEC,MAAM,EAAEz7E,OAAO,CAAC5I,UAAW,CAAC;IAC1G,IAAM4mF,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAE7D,IAAK,CAAEm/C,sBAAsB,CAAC0E,qBAAqB,EAAG;MAErD,IAAMjqF,KAAK,GAAG9Q,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEq2C,YAAY,CAACpmC,KAAK,IAAIylF,KAAM,CAAC;MACxD,IAAMxlF,MAAM,GAAG/Q,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEq2C,YAAY,CAACnmC,MAAM,IAAIwlF,KAAM,CAAC;MAE1D,IAAKuE,aAAa,KAAK1I,GAAG,CAACnF,UAAU,IAAI6N,aAAa,KAAK1I,GAAG,CAAClF,gBAAgB,EAAG;QAEjF77B,KAAK,CAAC87B,UAAU,CAAE2N,aAAa,EAAEvE,KAAK,EAAEsD,gBAAgB,EAAE/oF,KAAK,EAAEC,MAAM,EAAEmmC,YAAY,CAACt/B,KAAK,EAAE,CAAC,EAAEi8E,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MAEzH,CAAC,MAAM;QAENziC,KAAK,CAACg8B,UAAU,CAAEyN,aAAa,EAAEvE,KAAK,EAAEsD,gBAAgB,EAAE/oF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE8iF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MAErG;IAED;IAEAziC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;IAErD,IAAKkN,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;MAEzCu7C,kBAAkB,CAACwI,kCAAkC,CAAE7I,GAAG,CAACpE,WAAW,EAAE6M,UAAU,EAAEC,aAAa,EAAEnuC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC,CAAC+9E,cAAc,EAAE,CAAC,EAAE8E,sBAAsB,CAAEhkD,YAAa,CAAE,CAAC;IAEzL,CAAC,MAAM,IAAK4jD,aAAa,KAAK1I,GAAG,CAAC7E,UAAU,IAAMuN,aAAa,IAAI1I,GAAG,CAAC3E,2BAA2B,IAAIqN,aAAa,IAAI1I,GAAG,CAAC+I,2BAA6B,EAAG;MAAE;;MAE5J/I,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACpE,WAAW,EAAE6M,UAAU,EAAEC,aAAa,EAAEnuC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC,CAAC+9E,cAAc,EAAEG,KAAM,CAAC;IAExH;IAEAllC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;EAE/C;;EAGA;EACA,SAASqN,wBAAwBA,CAAEC,YAAY,EAAEpkD,YAAY,EAAEqkD,aAAa,EAAG;IAE9EnJ,GAAG,CAACoJ,gBAAgB,CAAEpJ,GAAG,CAACqJ,YAAY,EAAEH,YAAa,CAAC;IAEtD,IAAKpkD,YAAY,CAACj/B,WAAW,IAAI,CAAEi/B,YAAY,CAACh/B,aAAa,EAAG;MAE/D,IAAI2hF,gBAAgB,GAAKj8C,QAAQ,KAAK,IAAI,GAAKw0C,GAAG,CAACiI,iBAAiB,GAAGjI,GAAG,CAACmI,iBAAiB;MAE5F,IAAKgB,aAAa,IAAIP,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;QAE1D,IAAM/+B,YAAY,GAAG++B,YAAY,CAAC/+B,YAAY;QAE9C,IAAKA,YAAY,IAAIA,YAAY,CAAC+hF,cAAc,EAAG;UAElD,IAAK/hF,YAAY,CAAChsB,IAAI,KAAKyL,SAAS,EAAG;YAEtCiiG,gBAAgB,GAAGzH,GAAG,CAACgI,kBAAkB;UAE1C,CAAC,MAAM,IAAKjiF,YAAY,CAAChsB,IAAI,KAAKwL,eAAe,EAAG;YAEnDkiG,gBAAgB,GAAGzH,GAAG,CAACiI,iBAAiB;UAEzC;QAED;QAEA,IAAMjiF,OAAO,GAAG8iF,sBAAsB,CAAEhkD,YAAa,CAAC;QAEtD,IAAK8jD,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;UAEzCu7C,kBAAkB,CAACiJ,iCAAiC,CAAEtJ,GAAG,CAACqJ,YAAY,EAAErjF,OAAO,EAAEyhF,gBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;QAE7I,CAAC,MAAM;UAENqhF,GAAG,CAACuJ,8BAA8B,CAAEvJ,GAAG,CAACqJ,YAAY,EAAErjF,OAAO,EAAEyhF,gBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;QAE3H;MAED,CAAC,MAAM;QAENqhF,GAAG,CAACwJ,mBAAmB,CAAExJ,GAAG,CAACqJ,YAAY,EAAE5B,gBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;MAEvG;MAEAqhF,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC0J,gBAAgB,EAAE1J,GAAG,CAACqJ,YAAY,EAAEH,YAAa,CAAC;IAErG,CAAC,MAAM,IAAKpkD,YAAY,CAACj/B,WAAW,IAAIi/B,YAAY,CAACh/B,aAAa,EAAG;MAEpE,IAAME,QAAO,GAAG8iF,sBAAsB,CAAEhkD,YAAa,CAAC;MAEtD,IAAKqkD,aAAa,IAAIP,kBAAkB,CAAE9jD,YAAa,CAAC,KAAK,KAAK,EAAG;QAEpEk7C,GAAG,CAACuJ,8BAA8B,CAAEvJ,GAAG,CAACqJ,YAAY,EAAErjF,QAAO,EAAEg6E,GAAG,CAACkI,gBAAgB,EAAEpjD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;MAE/H,CAAC,MAAM,IAAKiqF,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;QAEhDu7C,kBAAkB,CAACiJ,iCAAiC,CAAEtJ,GAAG,CAACqJ,YAAY,EAAErjF,QAAO,EAAEg6E,GAAG,CAACkI,gBAAgB,EAAEpjD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;MAEjJ,CAAC,MAAM;QAENqhF,GAAG,CAACwJ,mBAAmB,CAAExJ,GAAG,CAACqJ,YAAY,EAAErJ,GAAG,CAACoI,aAAa,EAAEtjD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;MAExG;MAGAqhF,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC2J,wBAAwB,EAAE3J,GAAG,CAACqJ,YAAY,EAAEH,YAAa,CAAC;IAE7G,CAAC,MAAM;MAEN,IAAMrmF,QAAQ,GAAGiiC,YAAY,CAAC58B,4BAA4B,KAAK,IAAI,GAAG48B,YAAY,CAAC7+B,OAAO,GAAG,CAAE6+B,YAAY,CAAC7+B,OAAO,CAAE;MAErH,KAAM,IAAIptB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgqB,QAAQ,CAAC3lB,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE5C,IAAMotB,OAAO,GAAGpD,QAAQ,CAAEhqB,CAAC,CAAE;QAE7B,IAAM4oG,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAC7E,MAAM,EAAE6E,OAAO,CAAC5I,UAAW,CAAC;QACpE,IAAMqkF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,OAAO,CAAClsB,IAAK,CAAC;QAC5C,IAAM0tG,iBAAgB,GAAGlG,iBAAiB,CAAEt7E,OAAO,CAACpE,cAAc,EAAE4/E,QAAQ,EAAEC,MAAM,EAAEz7E,OAAO,CAAC5I,UAAW,CAAC;QAC1G,IAAM2I,SAAO,GAAG8iF,sBAAsB,CAAEhkD,YAAa,CAAC;QAEtD,IAAKqkD,aAAa,IAAIP,kBAAkB,CAAE9jD,YAAa,CAAC,KAAK,KAAK,EAAG;UAEpEk7C,GAAG,CAACuJ,8BAA8B,CAAEvJ,GAAG,CAACqJ,YAAY,EAAErjF,SAAO,EAAEyhF,iBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;QAE3H,CAAC,MAAM,IAAKiqF,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;UAEhDu7C,kBAAkB,CAACiJ,iCAAiC,CAAEtJ,GAAG,CAACqJ,YAAY,EAAErjF,SAAO,EAAEyhF,iBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;QAE7I,CAAC,MAAM;UAENqhF,GAAG,CAACwJ,mBAAmB,CAAExJ,GAAG,CAACqJ,YAAY,EAAE5B,iBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;QAEvG;MAED;IAED;IAEAqhF,GAAG,CAACoJ,gBAAgB,CAAEpJ,GAAG,CAACqJ,YAAY,EAAE,IAAK,CAAC;EAE/C;;EAEA;EACA,SAASO,iBAAiBA,CAAElO,WAAW,EAAE52C,YAAY,EAAG;IAEvD,IAAM+kD,MAAM,GAAK/kD,YAAY,IAAIA,YAAY,CAACuC,uBAAyB;IACvE,IAAKwiD,MAAM,EAAG,MAAM,IAAIpuG,KAAK,CAAE,yDAA0D,CAAC;IAE1FwjE,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;IAErD,IAAK,EAAI52C,YAAY,CAAC/+B,YAAY,IAAI++B,YAAY,CAAC/+B,YAAY,CAAC+hF,cAAc,CAAE,EAAG;MAElF,MAAM,IAAIrsG,KAAK,CAAE,qEAAsE,CAAC;IAEzF;;IAEA;IACA,IAAK,CAAE8+D,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC/+B,YAAa,CAAC,CAACi+E,cAAc,IAC/Dl/C,YAAY,CAAC/+B,YAAY,CAACzH,KAAK,CAACI,KAAK,KAAKomC,YAAY,CAACpmC,KAAK,IAC5DomC,YAAY,CAAC/+B,YAAY,CAACzH,KAAK,CAACK,MAAM,KAAKmmC,YAAY,CAACnmC,MAAM,EAAG;MAElEmmC,YAAY,CAAC/+B,YAAY,CAACzH,KAAK,CAACI,KAAK,GAAGomC,YAAY,CAACpmC,KAAK;MAC1DomC,YAAY,CAAC/+B,YAAY,CAACzH,KAAK,CAACK,MAAM,GAAGmmC,YAAY,CAACnmC,MAAM;MAC5DmmC,YAAY,CAAC/+B,YAAY,CAACnD,WAAW,GAAG,IAAI;IAE7C;IAEA00D,YAAY,CAAExyB,YAAY,CAAC/+B,YAAY,EAAE,CAAE,CAAC;IAE5C,IAAM+jF,iBAAiB,GAAGvvC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC/+B,YAAa,CAAC,CAACi+E,cAAc;IACpF,IAAMh+E,OAAO,GAAG8iF,sBAAsB,CAAEhkD,YAAa,CAAC;IAEtD,IAAKA,YAAY,CAAC/+B,YAAY,CAAC3E,MAAM,KAAKnb,WAAW,EAAG;MAEvD,IAAK2iG,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;QAEzCu7C,kBAAkB,CAACwI,kCAAkC,CAAE7I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC0J,gBAAgB,EAAE1J,GAAG,CAAC7E,UAAU,EAAE2O,iBAAiB,EAAE,CAAC,EAAE9jF,OAAQ,CAAC;MAE9I,CAAC,MAAM;QAENg6E,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC0J,gBAAgB,EAAE1J,GAAG,CAAC7E,UAAU,EAAE2O,iBAAiB,EAAE,CAAE,CAAC;MAExG;IAED,CAAC,MAAM,IAAKhlD,YAAY,CAAC/+B,YAAY,CAAC3E,MAAM,KAAKlb,kBAAkB,EAAG;MAErE,IAAK0iG,kBAAkB,CAAE9jD,YAAa,CAAC,EAAG;QAEzCu7C,kBAAkB,CAACwI,kCAAkC,CAAE7I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC2J,wBAAwB,EAAE3J,GAAG,CAAC7E,UAAU,EAAE2O,iBAAiB,EAAE,CAAC,EAAE9jF,OAAQ,CAAC;MAEtJ,CAAC,MAAM;QAENg6E,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAAC2J,wBAAwB,EAAE3J,GAAG,CAAC7E,UAAU,EAAE2O,iBAAiB,EAAE,CAAE,CAAC;MAEhH;IAED,CAAC,MAAM;MAEN,MAAM,IAAIruG,KAAK,CAAE,6BAA8B,CAAC;IAEjD;EAED;;EAEA;EACA,SAASsuG,sBAAsBA,CAAEjlD,YAAY,EAAG;IAE/C,IAAMm/C,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAC7D,IAAM+kD,MAAM,GAAK/kD,YAAY,CAACuC,uBAAuB,KAAK,IAAM;IAEhE,IAAKvC,YAAY,CAAC/+B,YAAY,IAAI,CAAEk+E,sBAAsB,CAAC+F,yBAAyB,EAAG;MAEtF,IAAKH,MAAM,EAAG,MAAM,IAAIpuG,KAAK,CAAE,0DAA2D,CAAC;MAE3FmuG,iBAAiB,CAAE3F,sBAAsB,CAACC,kBAAkB,EAAEp/C,YAAa,CAAC;IAE7E,CAAC,MAAM;MAEN,IAAK+kD,MAAM,EAAG;QAEb5F,sBAAsB,CAACI,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIxrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9BomE,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAG,CAAC;UACxForG,sBAAsB,CAACI,kBAAkB,CAAExrG,CAAC,CAAE,GAAGmnG,GAAG,CAACiK,kBAAkB,CAAC,CAAC;UACzEhB,wBAAwB,CAAEhF,sBAAsB,CAACI,kBAAkB,CAAExrG,CAAC,CAAE,EAAEisD,YAAY,EAAE,KAAM,CAAC;QAEhG;MAED,CAAC,MAAM;QAENma,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;QACnFD,sBAAsB,CAACI,kBAAkB,GAAGrE,GAAG,CAACiK,kBAAkB,CAAC,CAAC;QACpEhB,wBAAwB,CAAEhF,sBAAsB,CAACI,kBAAkB,EAAEv/C,YAAY,EAAE,KAAM,CAAC;MAE3F;IAED;IAEAma,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;EAE/C;;EAEA;EACA,SAASsO,cAAcA,CAAEplD,YAAY,EAAEqlD,YAAY,EAAEpkF,YAAY,EAAG;IAEnE,IAAMk+E,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAE7D,IAAKqlD,YAAY,KAAKtqG,SAAS,EAAG;MAEjC2oG,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,EAAEp/C,YAAY,EAAEA,YAAY,CAAC7+B,OAAO,EAAE+5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC7E,UAAU,EAAE,CAAE,CAAC;IAEnJ;IAEA,IAAKp1E,YAAY,KAAKlmB,SAAS,EAAG;MAEjCkqG,sBAAsB,CAAEjlD,YAAa,CAAC;IAEvC;EAED;;EAEA;EACA,SAASslD,iBAAiBA,CAAEtlD,YAAY,EAAG;IAE1C,IAAM7+B,OAAO,GAAG6+B,YAAY,CAAC7+B,OAAO;IAEpC,IAAMg+E,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAC7D,IAAM6+C,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC;IAEnD6+B,YAAY,CAACl4C,gBAAgB,CAAE,SAAS,EAAE62F,qBAAsB,CAAC;IAEjE,IAAK3+C,YAAY,CAAC58B,4BAA4B,KAAK,IAAI,EAAG;MAEzD,IAAKy7E,iBAAiB,CAACK,cAAc,KAAKnkG,SAAS,EAAG;QAErD8jG,iBAAiB,CAACK,cAAc,GAAGhE,GAAG,CAAC1F,aAAa,CAAC,CAAC;MAEvD;MAEAqJ,iBAAiB,CAACsB,SAAS,GAAGh/E,OAAO,CAACtG,OAAO;MAC7CmlD,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;IAExB;IAEA,IAAMgnF,MAAM,GAAK/kD,YAAY,CAACuC,uBAAuB,KAAK,IAAM;IAChE,IAAMgjD,uBAAuB,GAAKvlD,YAAY,CAAC58B,4BAA4B,KAAK,IAAM;IACtF,IAAMm5E,YAAY,GAAGH,cAAc,CAAEp8C,YAAa,CAAC,IAAI0G,QAAQ;;IAE/D;;IAEA,IAAKq+C,MAAM,EAAG;MAEb5F,sBAAsB,CAACC,kBAAkB,GAAG,EAAE;MAE9C,KAAM,IAAIrrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK2yD,QAAQ,IAAIvlC,OAAO,CAACtE,OAAO,IAAIsE,OAAO,CAACtE,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG;UAEhE+mG,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAE,GAAG,EAAE;UAEnD,KAAM,IAAIsrG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGl+E,OAAO,CAACtE,OAAO,CAACzkB,MAAM,EAAEinG,KAAK,EAAG,EAAG;YAE/DF,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAE,CAAEsrG,KAAK,CAAE,GAAGnE,GAAG,CAACsK,iBAAiB,CAAC,CAAC;UAElF;QAED,CAAC,MAAM;UAENrG,sBAAsB,CAACC,kBAAkB,CAAErrG,CAAC,CAAE,GAAGmnG,GAAG,CAACsK,iBAAiB,CAAC,CAAC;QAEzE;MAED;IAED,CAAC,MAAM;MAEN,IAAK9+C,QAAQ,IAAIvlC,OAAO,CAACtE,OAAO,IAAIsE,OAAO,CAACtE,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG;QAEhE+mG,sBAAsB,CAACC,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIC,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAGl+E,OAAO,CAACtE,OAAO,CAACzkB,MAAM,EAAEinG,OAAK,EAAG,EAAG;UAE/DF,sBAAsB,CAACC,kBAAkB,CAAEC,OAAK,CAAE,GAAGnE,GAAG,CAACsK,iBAAiB,CAAC,CAAC;QAE7E;MAED,CAAC,MAAM;QAENrG,sBAAsB,CAACC,kBAAkB,GAAGlE,GAAG,CAACsK,iBAAiB,CAAC,CAAC;MAEpE;MAEA,IAAKD,uBAAuB,EAAG;QAE9B,IAAK9+C,YAAY,CAACpJ,WAAW,EAAG;UAE/B,IAAMt/B,QAAQ,GAAGiiC,YAAY,CAAC7+B,OAAO;UAErC,KAAM,IAAIptB,IAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGtF,QAAQ,CAAC3lB,MAAM,EAAErE,IAAC,GAAGsvB,EAAE,EAAEtvB,IAAC,EAAG,EAAG;YAErD,IAAM6rG,oBAAoB,GAAGnqC,UAAU,CAACxnD,GAAG,CAAE8P,QAAQ,CAAEhqB,IAAC,CAAG,CAAC;YAE5D,IAAK6rG,oBAAoB,CAACV,cAAc,KAAKnkG,SAAS,EAAG;cAExD6kG,oBAAoB,CAACV,cAAc,GAAGhE,GAAG,CAAC1F,aAAa,CAAC,CAAC;cAEzDx1B,IAAI,CAACuL,MAAM,CAACxtD,QAAQ,EAAG;YAExB;UAED;QAED,CAAC,MAAM;UAEN9Q,OAAO,CAACC,IAAI,CAAE,+GAAgH,CAAC;QAEhI;MAED;MAEA,IAAOw5C,QAAQ,IAAI1G,YAAY,CAAC9+B,OAAO,GAAG,CAAC,IAAM4iF,kBAAkB,CAAE9jD,YAAa,CAAC,KAAK,KAAK,EAAG;QAE/F,IAAMjiC,SAAQ,GAAGwnF,uBAAuB,GAAGpkF,OAAO,GAAG,CAAEA,OAAO,CAAE;QAEhEg+E,sBAAsB,CAACM,8BAA8B,GAAGvE,GAAG,CAACsK,iBAAiB,CAAC,CAAC;QAC/ErG,sBAAsB,CAACO,wBAAwB,GAAG,EAAE;QAEpDvlC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;QAE/F,KAAM,IAAI1rG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgqB,SAAQ,CAAC3lB,MAAM,EAAErE,IAAC,EAAG,EAAG;UAE5C,IAAMotB,QAAO,GAAGpD,SAAQ,CAAEhqB,IAAC,CAAE;UAC7BorG,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAE,GAAGmnG,GAAG,CAACiK,kBAAkB,CAAC,CAAC;UAE/EjK,GAAG,CAACoJ,gBAAgB,CAAEpJ,GAAG,CAACqJ,YAAY,EAAEpF,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAG,CAAC;UAE9F,IAAM4oG,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEyI,QAAO,CAAC7E,MAAM,EAAE6E,QAAO,CAAC5I,UAAW,CAAC;UACpE,IAAMqkF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEyI,QAAO,CAAClsB,IAAK,CAAC;UAC5C,IAAM0tG,gBAAgB,GAAGlG,iBAAiB,CAAEt7E,QAAO,CAACpE,cAAc,EAAE4/E,QAAQ,EAAEC,MAAM,EAAEz7E,QAAO,CAAC5I,UAAU,EAAEynC,YAAY,CAACsmC,gBAAgB,KAAK,IAAK,CAAC;UAClJ,IAAMplE,OAAO,GAAG8iF,sBAAsB,CAAEhkD,YAAa,CAAC;UACtDk7C,GAAG,CAACuJ,8BAA8B,CAAEvJ,GAAG,CAACqJ,YAAY,EAAErjF,OAAO,EAAEyhF,gBAAgB,EAAE3iD,YAAY,CAACpmC,KAAK,EAAEomC,YAAY,CAACnmC,MAAO,CAAC;UAE1HqhF,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAGhjG,IAAC,EAAEmnG,GAAG,CAACqJ,YAAY,EAAEpF,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAG,CAAC;QAElJ;QAEAmnG,GAAG,CAACoJ,gBAAgB,CAAEpJ,GAAG,CAACqJ,YAAY,EAAE,IAAK,CAAC;QAE9C,IAAKvkD,YAAY,CAACj/B,WAAW,EAAG;UAE/Bo+E,sBAAsB,CAACQ,wBAAwB,GAAGzE,GAAG,CAACiK,kBAAkB,CAAC,CAAC;UAC1EhB,wBAAwB,CAAEhF,sBAAsB,CAACQ,wBAAwB,EAAE3/C,YAAY,EAAE,IAAK,CAAC;QAEhG;QAEAma,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;MAE/C;IAED;;IAEA;;IAEA,IAAKiO,MAAM,EAAG;MAEb5qC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAe,CAAC;MAC3E8B,oBAAoB,CAAE9F,GAAG,CAAC5E,gBAAgB,EAAEn1E,OAAO,EAAEo7E,YAAa,CAAC;MAEnE,KAAM,IAAIxoG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAK2yD,QAAQ,IAAIvlC,OAAO,CAACtE,OAAO,IAAIsE,OAAO,CAACtE,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG;UAEhE,KAAM,IAAIinG,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAGl+E,OAAO,CAACtE,OAAO,CAACzkB,MAAM,EAAEinG,OAAK,EAAG,EAAG;YAE/DqE,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,CAAErrG,IAAC,CAAE,CAAEsrG,OAAK,CAAE,EAAEr/C,YAAY,EAAE7+B,OAAO,EAAE+5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAEsrG,OAAM,CAAC;UAE7K;QAED,CAAC,MAAM;UAENqE,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,CAAErrG,IAAC,CAAE,EAAEisD,YAAY,EAAE7+B,OAAO,EAAE+5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAGxiG,IAAC,EAAE,CAAE,CAAC;QAEhK;MAED;MAEA,IAAKuoG,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAEtB,GAAG,CAAC5E,gBAAiB,CAAC;MAEvC;MAEAn8B,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC,MAAM,IAAKuL,uBAAuB,EAAG;MAErC,IAAMxnF,UAAQ,GAAGiiC,YAAY,CAAC7+B,OAAO;MAErC,KAAM,IAAIptB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAGtF,UAAQ,CAAC3lB,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;QAErD,IAAM4vG,UAAU,GAAG5lF,UAAQ,CAAEhqB,IAAC,CAAE;QAChC,IAAM6rG,qBAAoB,GAAGnqC,UAAU,CAACxnD,GAAG,CAAE01F,UAAW,CAAC;QAEzDxpC,KAAK,CAACu7B,WAAW,CAAEwF,GAAG,CAAC7E,UAAU,EAAEuJ,qBAAoB,CAACV,cAAe,CAAC;QACxE8B,oBAAoB,CAAE9F,GAAG,CAAC7E,UAAU,EAAEsN,UAAU,EAAEpH,YAAa,CAAC;QAChEmH,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,EAAEp/C,YAAY,EAAE2jD,UAAU,EAAEzI,GAAG,CAACnE,iBAAiB,GAAGhjG,IAAC,EAAEmnG,GAAG,CAAC7E,UAAU,EAAE,CAAE,CAAC;QAE5I,IAAKiG,2BAA2B,CAAEqH,UAAU,EAAEpH,YAAa,CAAC,EAAG;UAE9DC,cAAc,CAAEtB,GAAG,CAAC7E,UAAW,CAAC;QAEjC;MAED;MAEAl8B,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC,MAAM;MAEN,IAAIyL,aAAa,GAAGvK,GAAG,CAAC7E,UAAU;MAElC,IAAKr2C,YAAY,CAACl9B,qBAAqB,IAAIk9B,YAAY,CAAC59B,wBAAwB,EAAG;QAElF,IAAKskC,QAAQ,EAAG;UAEf++C,aAAa,GAAGzlD,YAAY,CAACl9B,qBAAqB,GAAGo4E,GAAG,CAACnF,UAAU,GAAGmF,GAAG,CAAClF,gBAAgB;QAE3F,CAAC,MAAM;UAEN/oF,OAAO,CAACywB,KAAK,CAAE,iGAAkG,CAAC;QAEnH;MAED;MAEAy8B,KAAK,CAACu7B,WAAW,CAAE+P,aAAa,EAAE5G,iBAAiB,CAACK,cAAe,CAAC;MACpE8B,oBAAoB,CAAEyE,aAAa,EAAEtkF,OAAO,EAAEo7E,YAAa,CAAC;MAE5D,IAAK71C,QAAQ,IAAIvlC,OAAO,CAACtE,OAAO,IAAIsE,OAAO,CAACtE,OAAO,CAACzkB,MAAM,GAAG,CAAC,EAAG;QAEhE,KAAM,IAAIinG,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAGl+E,OAAO,CAACtE,OAAO,CAACzkB,MAAM,EAAEinG,OAAK,EAAG,EAAG;UAE/DqE,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,CAAEC,OAAK,CAAE,EAAEr/C,YAAY,EAAE7+B,OAAO,EAAE+5E,GAAG,CAACnE,iBAAiB,EAAE0O,aAAa,EAAEpG,OAAM,CAAC;QAElJ;MAED,CAAC,MAAM;QAENqE,uBAAuB,CAAEvE,sBAAsB,CAACC,kBAAkB,EAAEp/C,YAAY,EAAE7+B,OAAO,EAAE+5E,GAAG,CAACnE,iBAAiB,EAAE0O,aAAa,EAAE,CAAE,CAAC;MAErI;MAEA,IAAKnJ,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAEiJ,aAAc,CAAC;MAEhC;MAEAtrC,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB;;IAEA;;IAEA,IAAKh6C,YAAY,CAACj/B,WAAW,EAAG;MAE/BkkF,sBAAsB,CAAEjlD,YAAa,CAAC;IAEvC;EAED;EAEA,SAAS0lD,wBAAwBA,CAAE1lD,YAAY,EAAG;IAEjD,IAAMu8C,YAAY,GAAGH,cAAc,CAAEp8C,YAAa,CAAC,IAAI0G,QAAQ;IAE/D,IAAM3oC,QAAQ,GAAGiiC,YAAY,CAAC58B,4BAA4B,KAAK,IAAI,GAAG48B,YAAY,CAAC7+B,OAAO,GAAG,CAAE6+B,YAAY,CAAC7+B,OAAO,CAAE;IAErH,KAAM,IAAIptB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGtF,QAAQ,CAAC3lB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAErD,IAAMotB,OAAO,GAAGpD,QAAQ,CAAEhqB,CAAC,CAAE;MAE7B,IAAKuoG,2BAA2B,CAAEn7E,OAAO,EAAEo7E,YAAa,CAAC,EAAG;QAE3D,IAAMtiG,MAAM,GAAG+lD,YAAY,CAACuC,uBAAuB,GAAG24C,GAAG,CAAC5E,gBAAgB,GAAG4E,GAAG,CAAC7E,UAAU;QAC3F,IAAMyD,YAAY,GAAGrkC,UAAU,CAACxnD,GAAG,CAAEkT,OAAQ,CAAC,CAAC+9E,cAAc;QAE7D/kC,KAAK,CAACu7B,WAAW,CAAEz7F,MAAM,EAAE6/F,YAAa,CAAC;QACzC0C,cAAc,CAAEviG,MAAO,CAAC;QACxBkgE,KAAK,CAAC6/B,aAAa,CAAC,CAAC;MAEtB;IAED;EAED;EAEA,SAAS2L,6BAA6BA,CAAE3lD,YAAY,EAAG;IAEtD,IAAO0G,QAAQ,IAAI1G,YAAY,CAAC9+B,OAAO,GAAG,CAAC,IAAM4iF,kBAAkB,CAAE9jD,YAAa,CAAC,KAAK,KAAK,EAAG;MAE/F,IAAMjiC,QAAQ,GAAGiiC,YAAY,CAAC58B,4BAA4B,GAAG48B,YAAY,CAAC7+B,OAAO,GAAG,CAAE6+B,YAAY,CAAC7+B,OAAO,CAAE;MAC5G,IAAMvH,KAAK,GAAGomC,YAAY,CAACpmC,KAAK;MAChC,IAAMC,MAAM,GAAGmmC,YAAY,CAACnmC,MAAM;MAClC,IAAI6f,IAAI,GAAGwhE,GAAG,CAAC0K,gBAAgB;MAC/B,IAAMC,iBAAiB,GAAG,EAAE;MAC5B,IAAMC,UAAU,GAAG9lD,YAAY,CAACh/B,aAAa,GAAGk6E,GAAG,CAAC2J,wBAAwB,GAAG3J,GAAG,CAAC0J,gBAAgB;MACnG,IAAMzF,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;MAC7D,IAAMulD,uBAAuB,GAAKvlD,YAAY,CAAC58B,4BAA4B,KAAK,IAAM;;MAEtF;MACA,IAAKmiF,uBAAuB,EAAG;QAE9B,KAAM,IAAIxxG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgqB,QAAQ,CAAC3lB,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE5ComE,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;UAC/FvE,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAGhjG,CAAC,EAAEmnG,GAAG,CAACqJ,YAAY,EAAE,IAAK,CAAC;UAEjGpqC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;UACnFlE,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,GAAGhjG,CAAC,EAAEmnG,GAAG,CAAC7E,UAAU,EAAE,IAAI,EAAE,CAAE,CAAC;QAErG;MAED;MAEAl8B,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACF,gBAAgB,EAAEmE,sBAAsB,CAACM,8BAA+B,CAAC;MACpGtlC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAEsI,sBAAsB,CAACC,kBAAmB,CAAC;MAExF,KAAM,IAAIrrG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgqB,QAAQ,CAAC3lB,MAAM,EAAErE,IAAC,EAAG,EAAG;QAE5C8xG,iBAAiB,CAAC9tG,IAAI,CAAEmjG,GAAG,CAACnE,iBAAiB,GAAGhjG,IAAE,CAAC;QAEnD,IAAKisD,YAAY,CAACj/B,WAAW,EAAG;UAE/B8kF,iBAAiB,CAAC9tG,IAAI,CAAE+tG,UAAW,CAAC;QAErC;QAEA,IAAMC,iBAAiB,GAAK5G,sBAAsB,CAAC6G,mBAAmB,KAAKjrG,SAAS,GAAKokG,sBAAsB,CAAC6G,mBAAmB,GAAG,KAAK;QAE3I,IAAKD,iBAAiB,KAAK,KAAK,EAAG;UAElC,IAAK/lD,YAAY,CAACj/B,WAAW,EAAG2Y,IAAI,IAAIwhE,GAAG,CAAC+K,gBAAgB;UAC5D,IAAKjmD,YAAY,CAACh/B,aAAa,EAAG0Y,IAAI,IAAIwhE,GAAG,CAACgL,kBAAkB;QAEjE;QAEA,IAAKX,uBAAuB,EAAG;UAE9BrK,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACF,gBAAgB,EAAEE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAACqJ,YAAY,EAAEpF,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAG,CAAC;QAEnJ;QAEA,IAAKgyG,iBAAiB,KAAK,IAAI,EAAG;UAEjC7K,GAAG,CAACiL,qBAAqB,CAAEjL,GAAG,CAACF,gBAAgB,EAAE,CAAE8K,UAAU,CAAG,CAAC;UACjE5K,GAAG,CAACiL,qBAAqB,CAAEjL,GAAG,CAACrE,gBAAgB,EAAE,CAAEiP,UAAU,CAAG,CAAC;QAElE;QAEA,IAAKP,uBAAuB,EAAG;UAE9B,IAAMzL,YAAY,GAAGrkC,UAAU,CAACxnD,GAAG,CAAE8P,QAAQ,CAAEhqB,IAAC,CAAG,CAAC,CAACmrG,cAAc;UACnEhE,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC7E,UAAU,EAAEyD,YAAY,EAAE,CAAE,CAAC;QAEzG;QAEAoB,GAAG,CAACkL,eAAe,CAAE,CAAC,EAAE,CAAC,EAAExsF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAED,KAAK,EAAEC,MAAM,EAAE6f,IAAI,EAAEwhE,GAAG,CAACrF,OAAQ,CAAC;QAElF,IAAK2F,6BAA6B,EAAG;UAEpCN,GAAG,CAACiL,qBAAqB,CAAEjL,GAAG,CAACF,gBAAgB,EAAE6K,iBAAkB,CAAC;QAErE;MAGD;MAEA1rC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACF,gBAAgB,EAAE,IAAK,CAAC;MACnD7gC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAE,IAAK,CAAC;;MAEnD;MACA,IAAK0O,uBAAuB,EAAG;QAE9B,KAAM,IAAIxxG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgqB,QAAQ,CAAC3lB,MAAM,EAAErE,IAAC,EAAG,EAAG;UAE5ComE,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;UAC/FvE,GAAG,CAACyJ,uBAAuB,CAAEzJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAGhjG,IAAC,EAAEmnG,GAAG,CAACqJ,YAAY,EAAEpF,sBAAsB,CAACO,wBAAwB,CAAE3rG,IAAC,CAAG,CAAC;UAEjJ,IAAM+lG,aAAY,GAAGrkC,UAAU,CAACxnD,GAAG,CAAE8P,QAAQ,CAAEhqB,IAAC,CAAG,CAAC,CAACmrG,cAAc;UAEnE/kC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;UACnFlE,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,GAAGhjG,IAAC,EAAEmnG,GAAG,CAAC7E,UAAU,EAAEyD,aAAY,EAAE,CAAE,CAAC;QAE7G;MAED;MAEA3/B,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAEsI,sBAAsB,CAACM,8BAA+B,CAAC;IAErG;EAED;EAEA,SAASuE,sBAAsBA,CAAEhkD,YAAY,EAAG;IAE/C,OAAOl3C,IAAI,CAACY,GAAG,CAAE44D,UAAU,EAAEtiB,YAAY,CAAC9+B,OAAQ,CAAC;EAEpD;EAEA,SAAS4iF,kBAAkBA,CAAE9jD,YAAY,EAAG;IAE3C,IAAMm/C,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;IAE7D,OAAO0G,QAAQ,IAAI1G,YAAY,CAAC9+B,OAAO,GAAG,CAAC,IAAIg8B,UAAU,CAAC1kC,GAAG,CAAE,sCAAuC,CAAC,KAAK,IAAI,IAAI2mF,sBAAsB,CAACkH,oBAAoB,KAAK,KAAK;EAE1K;EAEA,SAASnG,kBAAkBA,CAAE/+E,OAAO,EAAG;IAEtC,IAAM+kC,KAAK,GAAG8Z,IAAI,CAACne,MAAM,CAACqE,KAAK;;IAE/B;;IAEA,IAAKy1C,cAAc,CAAC1tF,GAAG,CAAEkT,OAAQ,CAAC,KAAK+kC,KAAK,EAAG;MAE9Cy1C,cAAc,CAAC3uF,GAAG,CAAEmU,OAAO,EAAE+kC,KAAM,CAAC;MACpC/kC,OAAO,CAAC8C,MAAM,CAAC,CAAC;IAEjB;EAED;EAEA,SAASy+E,gBAAgBA,CAAEvhF,OAAO,EAAE3H,KAAK,EAAG;IAE3C,IAAMjB,UAAU,GAAG4I,OAAO,CAAC5I,UAAU;IACrC,IAAM+D,MAAM,GAAG6E,OAAO,CAAC7E,MAAM;IAC7B,IAAMrnB,IAAI,GAAGksB,OAAO,CAAClsB,IAAI;IAEzB,IAAKksB,OAAO,CAACo9E,mBAAmB,KAAK,IAAI,IAAIp9E,OAAO,CAAC4lE,cAAc,KAAK,IAAI,IAAI5lE,OAAO,CAAC7E,MAAM,KAAK5U,YAAY,EAAG,OAAO8R,KAAK;IAE9H,IAAKjB,UAAU,KAAKvT,oBAAoB,IAAIuT,UAAU,KAAKzT,YAAY,EAAG;MAEzE;;MAEA,IAAKoT,eAAe,CAACgB,WAAW,CAAEX,UAAW,CAAC,KAAKnT,YAAY,EAAG;QAEjE,IAAKshD,QAAQ,KAAK,KAAK,EAAG;UAEzB;;UAEA,IAAKxJ,UAAU,CAAC1kC,GAAG,CAAE,UAAW,CAAC,KAAK,IAAI,IAAI8D,MAAM,KAAKtb,UAAU,EAAG;YAErEmgB,OAAO,CAAC7E,MAAM,GAAG5U,YAAY;;YAE7B;;YAEAyZ,OAAO,CAAC9E,SAAS,GAAGtc,YAAY;YAChCohB,OAAO,CAACjE,eAAe,GAAG,KAAK;UAEhC,CAAC,MAAM;YAEN;;YAEA1D,KAAK,GAAGF,UAAU,CAACc,YAAY,CAAEZ,KAAM,CAAC;UAEzC;QAED,CAAC,MAAM;UAEN;;UAEA,IAAK8C,MAAM,KAAKtb,UAAU,IAAI/L,IAAI,KAAKmL,gBAAgB,EAAG;YAEzD6M,OAAO,CAACC,IAAI,CAAE,yFAA0F,CAAC;UAE1G;QAED;MAED,CAAC,MAAM;QAEND,OAAO,CAACywB,KAAK,CAAE,uDAAuD,EAAEnlB,UAAW,CAAC;MAErF;IAED;IAEA,OAAOiB,KAAK;EAEb;;EAEA;;EAEA,IAAI,CAACq2D,mBAAmB,GAAGA,mBAAmB;EAC9C,IAAI,CAACiwB,iBAAiB,GAAGA,iBAAiB;EAE1C,IAAI,CAACttB,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACM,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACJ,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACE,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACwyB,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACE,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACI,wBAAwB,GAAGA,wBAAwB;EACxD,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;EAClE,IAAI,CAACV,sBAAsB,GAAGA,sBAAsB;EACpD,IAAI,CAACvB,uBAAuB,GAAGA,uBAAuB;EACtD,IAAI,CAACI,kBAAkB,GAAGA,kBAAkB;AAE7C;AAEA,SAASwC,UAAUA,CAAE9/C,EAAE,EAAEtJ,UAAU,EAAEuJ,YAAY,EAAG;EAEnD,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAAShuC,OAAOA,CAAE/iB,CAAC,EAAE4iB,UAAU,GAAGzT,YAAY,EAAG;IAEhD,IAAIi3D,SAAS;IAEb,IAAMtkD,QAAQ,GAAGS,eAAe,CAACgB,WAAW,CAAEX,UAAW,CAAC;IAE1D,IAAK5iB,CAAC,KAAKyK,gBAAgB,EAAG,OAAOomD,EAAE,CAACgB,aAAa;IACrD,IAAK7xD,CAAC,KAAKiL,qBAAqB,EAAG,OAAO4lD,EAAE,CAACy3C,sBAAsB;IACnE,IAAKtoG,CAAC,KAAKkL,qBAAqB,EAAG,OAAO2lD,EAAE,CAAC23C,sBAAsB;IAEnE,IAAKxoG,CAAC,KAAK0K,QAAQ,EAAG,OAAOmmD,EAAE,CAACe,IAAI;IACpC,IAAK5xD,CAAC,KAAK2K,SAAS,EAAG,OAAOkmD,EAAE,CAACY,KAAK;IACtC,IAAKzxD,CAAC,KAAK4K,iBAAiB,EAAG,OAAOimD,EAAE,CAACW,cAAc;IACvD,IAAKxxD,CAAC,KAAK6K,OAAO,EAAG,OAAOgmD,EAAE,CAACc,GAAG;IAClC,IAAK3xD,CAAC,KAAK8K,eAAe,EAAG,OAAO+lD,EAAE,CAACa,YAAY;IACnD,IAAK1xD,CAAC,KAAK+K,SAAS,EAAG,OAAO8lD,EAAE,CAACS,KAAK;IAEtC,IAAKtxD,CAAC,KAAKgL,aAAa,EAAG;MAE1B,IAAK+lD,QAAQ,EAAG,OAAOF,EAAE,CAACU,UAAU;MAEpC6U,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,wBAAyB,CAAC;MAEtD,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACwqC,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;IAEA,IAAK5wG,CAAC,KAAKoL,WAAW,EAAG,OAAOylD,EAAE,CAACggD,KAAK;IACxC,IAAK7wG,CAAC,KAAKqL,UAAU,EAAG,OAAOwlD,EAAE,CAAC0vC,IAAI;IACtC,IAAKvgG,CAAC,KAAKsL,eAAe,EAAG,OAAOulD,EAAE,CAACigD,SAAS;IAChD,IAAK9wG,CAAC,KAAKuL,oBAAoB,EAAG,OAAOslD,EAAE,CAACkgD,eAAe;IAC3D,IAAK/wG,CAAC,KAAKwL,WAAW,EAAG,OAAOqlD,EAAE,CAACy8C,eAAe;IAClD,IAAKttG,CAAC,KAAKyL,kBAAkB,EAAG,OAAOolD,EAAE,CAAC88C,aAAa;;IAEvD;;IAEA,IAAK3tG,CAAC,KAAK+R,YAAY,EAAG;MAEzBq0D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,UAAW,CAAC;MAExC,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAAC4qC,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKhxG,CAAC,KAAK0L,SAAS,EAAG,OAAOmlD,EAAE,CAACs2C,GAAG;IACpC,IAAKnnG,CAAC,KAAK2L,gBAAgB,EAAG,OAAOklD,EAAE,CAAC02C,WAAW;IACnD,IAAKvnG,CAAC,KAAK4L,QAAQ,EAAG,OAAOilD,EAAE,CAACi3C,EAAE;IAClC,IAAK9nG,CAAC,KAAK6L,eAAe,EAAG,OAAOglD,EAAE,CAACogD,UAAU;IACjD,IAAKjxG,CAAC,KAAK8L,iBAAiB,EAAG,OAAO+kD,EAAE,CAACqgD,YAAY;;IAErD;;IAEA,IAAKlxG,CAAC,KAAK+L,oBAAoB,IAAI/L,CAAC,KAAKgM,qBAAqB,IAAIhM,CAAC,KAAKiM,qBAAqB,IAAIjM,CAAC,KAAKkM,qBAAqB,EAAG;MAE9H,IAAK4V,QAAQ,KAAKrS,YAAY,EAAG;QAEhC22D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,oCAAqC,CAAC;QAElE,IAAK8tD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAKpmE,CAAC,KAAK+L,oBAAoB,EAAG,OAAOq6D,SAAS,CAAC+qC,6BAA6B;UAChF,IAAKnxG,CAAC,KAAKgM,qBAAqB,EAAG,OAAOo6D,SAAS,CAACgrC,mCAAmC;UACvF,IAAKpxG,CAAC,KAAKiM,qBAAqB,EAAG,OAAOm6D,SAAS,CAACirC,mCAAmC;UACvF,IAAKrxG,CAAC,KAAKkM,qBAAqB,EAAG,OAAOk6D,SAAS,CAACkrC,mCAAmC;QAExF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAENlrC,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,+BAAgC,CAAC;QAE7D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAKpmE,CAAC,KAAK+L,oBAAoB,EAAG,OAAOq6D,SAAS,CAACmrC,4BAA4B;UAC/E,IAAKvxG,CAAC,KAAKgM,qBAAqB,EAAG,OAAOo6D,SAAS,CAACorC,6BAA6B;UACjF,IAAKxxG,CAAC,KAAKiM,qBAAqB,EAAG,OAAOm6D,SAAS,CAACqrC,6BAA6B;UACjF,IAAKzxG,CAAC,KAAKkM,qBAAqB,EAAG,OAAOk6D,SAAS,CAACsrC,6BAA6B;QAElF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;IAED;;IAEA;;IAEA,IAAK1xG,CAAC,KAAKmM,uBAAuB,IAAInM,CAAC,KAAKoM,uBAAuB,IAAIpM,CAAC,KAAKqM,wBAAwB,IAAIrM,CAAC,KAAKsM,wBAAwB,EAAG;MAEzI85D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,gCAAiC,CAAC;MAE9D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKpmE,CAAC,KAAKmM,uBAAuB,EAAG,OAAOi6D,SAAS,CAACurC,+BAA+B;QACrF,IAAK3xG,CAAC,KAAKoM,uBAAuB,EAAG,OAAOg6D,SAAS,CAACwrC,+BAA+B;QACrF,IAAK5xG,CAAC,KAAKqM,wBAAwB,EAAG,OAAO+5D,SAAS,CAACyrC,gCAAgC;QACvF,IAAK7xG,CAAC,KAAKsM,wBAAwB,EAAG,OAAO85D,SAAS,CAAC0rC,gCAAgC;MAExF,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAK9xG,CAAC,KAAKuM,eAAe,EAAG;MAE5B65D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,+BAAgC,CAAC;MAE7D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAAC2rC,yBAAyB;MAE3C,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAK/xG,CAAC,KAAKwM,eAAe,IAAIxM,CAAC,KAAKyM,oBAAoB,EAAG;MAE1D25D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKpmE,CAAC,KAAKwM,eAAe,EAAG,OAASsV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC4rC,qBAAqB,GAAG5rC,SAAS,CAAC6rC,oBAAoB;QACpI,IAAKjyG,CAAC,KAAKyM,oBAAoB,EAAG,OAASqV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC8rC,gCAAgC,GAAG9rC,SAAS,CAAC+rC,yBAAyB;MAE1J,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKnyG,CAAC,KAAK0M,oBAAoB,IAAI1M,CAAC,KAAK2M,oBAAoB,IAAI3M,CAAC,KAAK4M,oBAAoB,IAC1F5M,CAAC,KAAK6M,oBAAoB,IAAI7M,CAAC,KAAK8M,oBAAoB,IAAI9M,CAAC,KAAK+M,oBAAoB,IACtF/M,CAAC,KAAKgN,oBAAoB,IAAIhN,CAAC,KAAKiN,oBAAoB,IAAIjN,CAAC,KAAKkN,qBAAqB,IACvFlN,CAAC,KAAKmN,qBAAqB,IAAInN,CAAC,KAAKoN,qBAAqB,IAAIpN,CAAC,KAAKqN,sBAAsB,IAC1FrN,CAAC,KAAKsN,sBAAsB,IAAItN,CAAC,KAAKuN,sBAAsB,EAAG;MAE/D64D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,+BAAgC,CAAC;MAE7D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKpmE,CAAC,KAAK0M,oBAAoB,EAAG,OAASoV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACgsC,oCAAoC,GAAGhsC,SAAS,CAACisC,4BAA4B;QAChK,IAAKryG,CAAC,KAAK2M,oBAAoB,EAAG,OAASmV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACksC,oCAAoC,GAAGlsC,SAAS,CAACmsC,4BAA4B;QAChK,IAAKvyG,CAAC,KAAK4M,oBAAoB,EAAG,OAASkV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACosC,oCAAoC,GAAGpsC,SAAS,CAACqsC,4BAA4B;QAChK,IAAKzyG,CAAC,KAAK6M,oBAAoB,EAAG,OAASiV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACssC,oCAAoC,GAAGtsC,SAAS,CAACusC,4BAA4B;QAChK,IAAK3yG,CAAC,KAAK8M,oBAAoB,EAAG,OAASgV,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACwsC,oCAAoC,GAAGxsC,SAAS,CAACysC,4BAA4B;QAChK,IAAK7yG,CAAC,KAAK+M,oBAAoB,EAAG,OAAS+U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC0sC,oCAAoC,GAAG1sC,SAAS,CAAC2sC,4BAA4B;QAChK,IAAK/yG,CAAC,KAAKgN,oBAAoB,EAAG,OAAS8U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC4sC,oCAAoC,GAAG5sC,SAAS,CAAC6sC,4BAA4B;QAChK,IAAKjzG,CAAC,KAAKiN,oBAAoB,EAAG,OAAS6U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC8sC,oCAAoC,GAAG9sC,SAAS,CAAC+sC,4BAA4B;QAChK,IAAKnzG,CAAC,KAAKkN,qBAAqB,EAAG,OAAS4U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACgtC,qCAAqC,GAAGhtC,SAAS,CAACitC,6BAA6B;QACnK,IAAKrzG,CAAC,KAAKmN,qBAAqB,EAAG,OAAS2U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACktC,qCAAqC,GAAGltC,SAAS,CAACmtC,6BAA6B;QACnK,IAAKvzG,CAAC,KAAKoN,qBAAqB,EAAG,OAAS0U,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACotC,qCAAqC,GAAGptC,SAAS,CAACqtC,6BAA6B;QACnK,IAAKzzG,CAAC,KAAKqN,sBAAsB,EAAG,OAASyU,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACstC,sCAAsC,GAAGttC,SAAS,CAACutC,8BAA8B;QACtK,IAAK3zG,CAAC,KAAKsN,sBAAsB,EAAG,OAASwU,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAACwtC,sCAAsC,GAAGxtC,SAAS,CAACytC,8BAA8B;QACtK,IAAK7zG,CAAC,KAAKuN,sBAAsB,EAAG,OAASuU,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC0tC,sCAAsC,GAAG1tC,SAAS,CAAC2tC,8BAA8B;MAEvK,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAK/zG,CAAC,KAAKwN,gBAAgB,IAAIxN,CAAC,KAAKyN,sBAAsB,IAAIzN,CAAC,KAAK0N,wBAAwB,EAAG;MAE/F04D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKpmE,CAAC,KAAKwN,gBAAgB,EAAG,OAASsU,QAAQ,KAAKrS,YAAY,GAAK22D,SAAS,CAAC4tC,oCAAoC,GAAG5tC,SAAS,CAAC6tC,8BAA8B;QAC9J,IAAKj0G,CAAC,KAAKyN,sBAAsB,EAAG,OAAO24D,SAAS,CAAC8tC,oCAAoC;QACzF,IAAKl0G,CAAC,KAAK0N,wBAAwB,EAAG,OAAO04D,SAAS,CAAC+tC,sCAAsC;MAE9F,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKn0G,CAAC,KAAK2N,gBAAgB,IAAI3N,CAAC,KAAK4N,uBAAuB,IAAI5N,CAAC,KAAK6N,sBAAsB,IAAI7N,CAAC,KAAK8N,6BAA6B,EAAG;MAErIs4D,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKpmE,CAAC,KAAKwN,gBAAgB,EAAG,OAAO44D,SAAS,CAACguC,wBAAwB;QACvE,IAAKp0G,CAAC,KAAK4N,uBAAuB,EAAG,OAAOw4D,SAAS,CAACiuC,+BAA+B;QACrF,IAAKr0G,CAAC,KAAK6N,sBAAsB,EAAG,OAAOu4D,SAAS,CAACkuC,8BAA8B;QACnF,IAAKt0G,CAAC,KAAK8N,6BAA6B,EAAG,OAAOs4D,SAAS,CAACmuC,qCAAqC;MAElG,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKv0G,CAAC,KAAKmL,kBAAkB,EAAG;MAE/B,IAAK4lD,QAAQ,EAAG,OAAOF,EAAE,CAAC2jD,iBAAiB;MAE3CpuC,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,qBAAsB,CAAC;MAEnD,IAAK8tD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACquC,uBAAuB;MAEzC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,OAAS5jD,EAAE,CAAE7wD,CAAC,CAAE,KAAKoF,SAAS,GAAKyrD,EAAE,CAAE7wD,CAAC,CAAE,GAAG,IAAI;EAElD;EAEA,OAAO;IAAE+iB,OAAO,EAAEA;EAAQ,CAAC;AAE5B;AAAC,IAEK2xF,WAAW,GAAAlvG,OAAA,CAAAkvG,WAAA,0BAAAC,kBAAA;EAAA1uF,SAAA,CAAAyuF,WAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAzuF,YAAA,CAAAuuF,WAAA;EAEhB,SAAAA,YAAa3hG,KAAK,GAAG,EAAE,EAAG;IAAA,IAAA8hG,OAAA;IAAA3wG,eAAA,OAAAwwG,WAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAp1G,IAAA;IAEAq1G,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAK9pD,OAAO,GAAGh4C,KAAK;IAAC,OAAA8hG,OAAA;EAEtB;EAAC,OAAAlwG,YAAA,CAAA+vG,WAAA;AAAA,EAVwBrsD,iBAAiB;AAAA,IAcrC0sD,KAAK,GAAAvvG,OAAA,CAAAuvG,KAAA,0BAAAC,UAAA;EAAA/uF,SAAA,CAAA8uF,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA9uF,YAAA,CAAA4uF,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAAhxG,eAAA,OAAA6wG,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAz1G,IAAA;IAEA01G,OAAA,CAAKC,OAAO,GAAG,IAAI;IAEnBD,OAAA,CAAK51G,IAAI,GAAG,OAAO;IAAC,OAAA41G,OAAA;EAErB;EAAC,OAAAvwG,YAAA,CAAAowG,KAAA;AAAA,EAVkB3vE,QAAQ;AAc5B,IAAMgwE,UAAU,GAAG;EAAE91G,IAAI,EAAE;AAAO,CAAC;AAAC,IAE9B+1G,eAAe;EAEpB,SAAAA,gBAAA,EAAc;IAAAnxG,eAAA,OAAAmxG,eAAA;IAEb,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,IAAI;EAElB;EAAC7wG,YAAA,CAAA0wG,eAAA;IAAA3wG,GAAA;IAAAvG,KAAA,EAED,SAAAs3G,aAAA,EAAe;MAEd,IAAK,IAAI,CAACD,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIT,KAAK,CAAC,CAAC;QACxB,IAAI,CAACS,KAAK,CAACluF,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAACkuF,KAAK,CAACpvE,OAAO,GAAG,KAAK;QAE1B,IAAI,CAACovE,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;QACtB,IAAI,CAACF,KAAK,CAACG,UAAU,GAAG;UAAEC,QAAQ,EAAE;QAAM,CAAC;MAE5C;MAEA,OAAO,IAAI,CAACJ,KAAK;IAElB;EAAC;IAAA9wG,GAAA;IAAAvG,KAAA,EAED,SAAA03G,kBAAA,EAAoB;MAEnB,IAAK,IAAI,CAACP,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,GAAG,IAAIP,KAAK,CAAC,CAAC;QAC7B,IAAI,CAACO,UAAU,CAAChuF,gBAAgB,GAAG,KAAK;QACxC,IAAI,CAACguF,UAAU,CAAClvE,OAAO,GAAG,KAAK;QAC/B,IAAI,CAACkvE,UAAU,CAACQ,iBAAiB,GAAG,KAAK;QACzC,IAAI,CAACR,UAAU,CAACS,cAAc,GAAG,IAAIxjF,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC+iF,UAAU,CAACU,kBAAkB,GAAG,KAAK;QAC1C,IAAI,CAACV,UAAU,CAACW,eAAe,GAAG,IAAI1jF,OAAO,CAAC,CAAC;MAEhD;MAEA,OAAO,IAAI,CAAC+iF,UAAU;IAEvB;EAAC;IAAA5wG,GAAA;IAAAvG,KAAA,EAED,SAAA+3G,aAAA,EAAe;MAEd,IAAK,IAAI,CAACX,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIR,KAAK,CAAC,CAAC;QACxB,IAAI,CAACQ,KAAK,CAACjuF,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAACiuF,KAAK,CAACnvE,OAAO,GAAG,KAAK;QAC1B,IAAI,CAACmvE,KAAK,CAACO,iBAAiB,GAAG,KAAK;QACpC,IAAI,CAACP,KAAK,CAACQ,cAAc,GAAG,IAAIxjF,OAAO,CAAC,CAAC;QACzC,IAAI,CAACgjF,KAAK,CAACS,kBAAkB,GAAG,KAAK;QACrC,IAAI,CAACT,KAAK,CAACU,eAAe,GAAG,IAAI1jF,OAAO,CAAC,CAAC;MAE3C;MAEA,OAAO,IAAI,CAACgjF,KAAK;IAElB;EAAC;IAAA7wG,GAAA;IAAAvG,KAAA,EAED,SAAA0U,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACwiG,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAACziG,aAAa,CAAEC,KAAM,CAAC;MAEvC;MAEA,IAAK,IAAI,CAACyiG,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAAC1iG,aAAa,CAAEC,KAAM,CAAC;MAElC;MAEA,IAAK,IAAI,CAAC0iG,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAAC3iG,aAAa,CAAEC,KAAM,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAApO,GAAA;IAAAvG,KAAA,EAED,SAAAg4G,QAASC,WAAW,EAAG;MAEtB,IAAKA,WAAW,IAAIA,WAAW,CAACC,IAAI,EAAG;QAEtC,IAAMA,IAAI,GAAG,IAAI,CAACb,KAAK;QAEvB,IAAKa,IAAI,EAAG;UAAA,IAAAC,UAAA,GAAAnrD,0BAAA,CAEeirD,WAAW,CAACC,IAAI,CAACj2G,MAAM,CAAC,CAAC;YAAAm2G,MAAA;UAAA;YAAnD,KAAAD,UAAA,CAAA12G,CAAA,MAAA22G,MAAA,GAAAD,UAAA,CAAAv4G,CAAA,IAAAkD,IAAA,GAAsD;cAAA,IAA1Cu1G,UAAU,GAAAD,MAAA,CAAAp4G,KAAA;cAErB;cACA,IAAI,CAACs4G,aAAa,CAAEJ,IAAI,EAAEG,UAAW,CAAC;YAEvC;UAAC,SAAAnrD,GAAA;YAAAirD,UAAA,CAAA54G,CAAA,CAAA2tD,GAAA;UAAA;YAAAirD,UAAA,CAAA32G,CAAA;UAAA;QAEF;MAED;MAEA,IAAI,CAACkT,aAAa,CAAE;QAAEvT,IAAI,EAAE,WAAW;QAAEwlB,IAAI,EAAEsxF;MAAY,CAAE,CAAC;MAE9D,OAAO,IAAI;IAEZ;EAAC;IAAA1xG,GAAA;IAAAvG,KAAA,EAED,SAAAu4G,WAAYN,WAAW,EAAG;MAEzB,IAAI,CAACvjG,aAAa,CAAE;QAAEvT,IAAI,EAAE,cAAc;QAAEwlB,IAAI,EAAEsxF;MAAY,CAAE,CAAC;MAEjE,IAAK,IAAI,CAACd,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAAClvE,OAAO,GAAG,KAAK;MAEhC;MAEA,IAAK,IAAI,CAACmvE,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACnvE,OAAO,GAAG,KAAK;MAE3B;MAEA,IAAK,IAAI,CAACovE,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACpvE,OAAO,GAAG,KAAK;MAE3B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1hC,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQ8nF,WAAW,EAAE7lD,KAAK,EAAEomD,cAAc,EAAG;MAE5C,IAAIC,SAAS,GAAG,IAAI;MACpB,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,QAAQ,GAAG,IAAI;MAEnB,IAAMC,SAAS,GAAG,IAAI,CAACzB,UAAU;MACjC,IAAM0B,IAAI,GAAG,IAAI,CAACzB,KAAK;MACvB,IAAMc,IAAI,GAAG,IAAI,CAACb,KAAK;MAEvB,IAAKY,WAAW,IAAI7lD,KAAK,CAAC0mD,OAAO,CAACC,eAAe,KAAK,iBAAiB,EAAG;QAEzE,IAAKb,IAAI,IAAID,WAAW,CAACC,IAAI,EAAG;UAE/BS,QAAQ,GAAG,IAAI;UAAC,IAAAK,UAAA,GAAAhsD,0BAAA,CAEUirD,WAAW,CAACC,IAAI,CAACj2G,MAAM,CAAC,CAAC;YAAAg3G,MAAA;UAAA;YAAnD,KAAAD,UAAA,CAAAv3G,CAAA,MAAAw3G,MAAA,GAAAD,UAAA,CAAAp5G,CAAA,IAAAkD,IAAA,GAAsD;cAAA,IAA1Cu1G,UAAU,GAAAY,MAAA,CAAAj5G,KAAA;cAErB;cACA,IAAMk5G,SAAS,GAAG9mD,KAAK,CAAC+mD,YAAY,CAAEd,UAAU,EAAEG,cAAe,CAAC;;cAElE;cACA,IAAMY,KAAK,GAAG,IAAI,CAACd,aAAa,CAAEJ,IAAI,EAAEG,UAAW,CAAC;cAEpD,IAAKa,SAAS,KAAK,IAAI,EAAG;gBAEzBE,KAAK,CAAC92F,MAAM,CAAChF,SAAS,CAAE47F,SAAS,CAACG,SAAS,CAAC/2F,MAAO,CAAC;gBACpD82F,KAAK,CAAC92F,MAAM,CAAC0hB,SAAS,CAAEo1E,KAAK,CAAC3/E,QAAQ,EAAE2/E,KAAK,CAACx3F,QAAQ,EAAEw3F,KAAK,CAACr3F,KAAM,CAAC;gBACrEq3F,KAAK,CAACtxE,sBAAsB,GAAG,IAAI;gBACnCsxE,KAAK,CAACE,WAAW,GAAGJ,SAAS,CAACriF,MAAM;cAErC;cAEAuiF,KAAK,CAACnxE,OAAO,GAAGixE,SAAS,KAAK,IAAI;YAEnC;;YAEA;;YAEA;UAAA,SAAAhsD,GAAA;YAAA8rD,UAAA,CAAAz5G,CAAA,CAAA2tD,GAAA;UAAA;YAAA8rD,UAAA,CAAAx3G,CAAA;UAAA;UACA,IAAM+3G,QAAQ,GAAGrB,IAAI,CAACX,MAAM,CAAE,kBAAkB,CAAE;UAClD,IAAMiC,QAAQ,GAAGtB,IAAI,CAACX,MAAM,CAAE,WAAW,CAAE;UAC3C,IAAMpuE,QAAQ,GAAGowE,QAAQ,CAAC9/E,QAAQ,CAAC9c,UAAU,CAAE68F,QAAQ,CAAC//E,QAAS,CAAC;UAElE,IAAMggF,eAAe,GAAG,IAAI;UAC5B,IAAMC,SAAS,GAAG,KAAK;UAEvB,IAAKxB,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAItuE,QAAQ,GAAGswE,eAAe,GAAGC,SAAS,EAAG;YAEzExB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,KAAK;YAChC,IAAI,CAAC/iG,aAAa,CAAE;cACnBvT,IAAI,EAAE,UAAU;cAChBw4G,UAAU,EAAE1B,WAAW,CAAC0B,UAAU;cAClCxzG,MAAM,EAAE;YACT,CAAE,CAAC;UAEJ,CAAC,MAAM,IAAK,CAAE+xG,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAItuE,QAAQ,IAAIswE,eAAe,GAAGC,SAAS,EAAG;YAEnFxB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,IAAI;YAC/B,IAAI,CAAC/iG,aAAa,CAAE;cACnBvT,IAAI,EAAE,YAAY;cAClBw4G,UAAU,EAAE1B,WAAW,CAAC0B,UAAU;cAClCxzG,MAAM,EAAE;YACT,CAAE,CAAC;UAEJ;QAED,CAAC,MAAM;UAEN,IAAK0yG,IAAI,KAAK,IAAI,IAAIZ,WAAW,CAAC2B,SAAS,EAAG;YAE7ClB,QAAQ,GAAGtmD,KAAK,CAACynD,OAAO,CAAE5B,WAAW,CAAC2B,SAAS,EAAEpB,cAAe,CAAC;YAEjE,IAAKE,QAAQ,KAAK,IAAI,EAAG;cAExBG,IAAI,CAACv2F,MAAM,CAAChF,SAAS,CAAEo7F,QAAQ,CAACW,SAAS,CAAC/2F,MAAO,CAAC;cAClDu2F,IAAI,CAACv2F,MAAM,CAAC0hB,SAAS,CAAE60E,IAAI,CAACp/E,QAAQ,EAAEo/E,IAAI,CAACj3F,QAAQ,EAAEi3F,IAAI,CAAC92F,KAAM,CAAC;cACjE82F,IAAI,CAAC/wE,sBAAsB,GAAG,IAAI;cAElC,IAAK4wE,QAAQ,CAACd,cAAc,EAAG;gBAE9BiB,IAAI,CAAClB,iBAAiB,GAAG,IAAI;gBAC7BkB,IAAI,CAACjB,cAAc,CAACj9F,IAAI,CAAE+9F,QAAQ,CAACd,cAAe,CAAC;cAEpD,CAAC,MAAM;gBAENiB,IAAI,CAAClB,iBAAiB,GAAG,KAAK;cAE/B;cAEA,IAAKe,QAAQ,CAACZ,eAAe,EAAG;gBAE/Be,IAAI,CAAChB,kBAAkB,GAAG,IAAI;gBAC9BgB,IAAI,CAACf,eAAe,CAACn9F,IAAI,CAAE+9F,QAAQ,CAACZ,eAAgB,CAAC;cAEtD,CAAC,MAAM;gBAENe,IAAI,CAAChB,kBAAkB,GAAG,KAAK;cAEhC;YAED;UAED;QAED;QAEA,IAAKe,SAAS,KAAK,IAAI,EAAG;UAEzBH,SAAS,GAAGrmD,KAAK,CAACynD,OAAO,CAAE5B,WAAW,CAAC6B,cAAc,EAAEtB,cAAe,CAAC;;UAEvE;UACA,IAAKC,SAAS,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAG;YAE9CD,SAAS,GAAGC,QAAQ;UAErB;UAEA,IAAKD,SAAS,KAAK,IAAI,EAAG;YAEzBG,SAAS,CAACt2F,MAAM,CAAChF,SAAS,CAAEm7F,SAAS,CAACY,SAAS,CAAC/2F,MAAO,CAAC;YACxDs2F,SAAS,CAACt2F,MAAM,CAAC0hB,SAAS,CAAE40E,SAAS,CAACn/E,QAAQ,EAAEm/E,SAAS,CAACh3F,QAAQ,EAAEg3F,SAAS,CAAC72F,KAAM,CAAC;YACrF62F,SAAS,CAAC9wE,sBAAsB,GAAG,IAAI;YAEvC,IAAK2wE,SAAS,CAACb,cAAc,EAAG;cAE/BgB,SAAS,CAACjB,iBAAiB,GAAG,IAAI;cAClCiB,SAAS,CAAChB,cAAc,CAACj9F,IAAI,CAAE89F,SAAS,CAACb,cAAe,CAAC;YAE1D,CAAC,MAAM;cAENgB,SAAS,CAACjB,iBAAiB,GAAG,KAAK;YAEpC;YAEA,IAAKc,SAAS,CAACX,eAAe,EAAG;cAEhCc,SAAS,CAACf,kBAAkB,GAAG,IAAI;cACnCe,SAAS,CAACd,eAAe,CAACn9F,IAAI,CAAE89F,SAAS,CAACX,eAAgB,CAAC;YAE5D,CAAC,MAAM;cAENc,SAAS,CAACf,kBAAkB,GAAG,KAAK;YAErC;YAEA,IAAI,CAACnjG,aAAa,CAAEuiG,UAAW,CAAC;UAEjC;QAED;MAGD;MAEA,IAAK2B,SAAS,KAAK,IAAI,EAAG;QAEzBA,SAAS,CAAC3wE,OAAO,GAAKwwE,SAAS,KAAK,IAAM;MAE3C;MAEA,IAAKI,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAAC5wE,OAAO,GAAKywE,QAAQ,KAAK,IAAM;MAErC;MAEA,IAAKR,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAACjwE,OAAO,GAAK0wE,QAAQ,KAAK,IAAM;MAErC;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAApyG,GAAA;IAAAvG,KAAA,EAEA,SAAAs4G,cAAeJ,IAAI,EAAEG,UAAU,EAAG;MAEjC,IAAKH,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE,KAAK9yG,SAAS,EAAG;QAExD,IAAMmyG,KAAK,GAAG,IAAIxC,KAAK,CAAC,CAAC;QACzBwC,KAAK,CAACjwF,gBAAgB,GAAG,KAAK;QAC9BiwF,KAAK,CAACnxE,OAAO,GAAG,KAAK;QACrBiwE,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE,GAAGX,KAAK;QAE3ClB,IAAI,CAACt9F,GAAG,CAAEw+F,KAAM,CAAC;MAElB;MAEA,OAAOlB,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE;IAE3C;EAAC;EAAA,OAAA7C,eAAA;AAAA;AAAA,IAII8C,YAAY,GAAA3yG,OAAA,CAAA2yG,YAAA,0BAAAC,SAAA;EAAAnyF,SAAA,CAAAkyF,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAlyF,YAAA,CAAAgyF,YAAA;EAEjB,SAAAA,aAAal0F,KAAK,EAAEC,MAAM,EAAE5kB,IAAI,EAAE+mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAED,MAAM,EAAG;IAAA,IAAA2xF,OAAA;IAAAp0G,eAAA,OAAAi0G,YAAA;IAEnGxxF,MAAM,GAAGA,MAAM,KAAKvhB,SAAS,GAAGuhB,MAAM,GAAGnb,WAAW;IAEpD,IAAKmb,MAAM,KAAKnb,WAAW,IAAImb,MAAM,KAAKlb,kBAAkB,EAAG;MAE9D,MAAM,IAAIzK,KAAK,CAAE,kFAAmF,CAAC;IAEtG;IAEA,IAAK1B,IAAI,KAAK8F,SAAS,IAAIuhB,MAAM,KAAKnb,WAAW,EAAGlM,IAAI,GAAGwL,eAAe;IAC1E,IAAKxL,IAAI,KAAK8F,SAAS,IAAIuhB,MAAM,KAAKlb,kBAAkB,EAAGnM,IAAI,GAAG6L,kBAAkB;IAEpFmtG,OAAA,GAAAD,QAAA,CAAA74G,IAAA,OAAO,IAAI,EAAE6mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU;IAElF0xF,OAAA,CAAKjL,cAAc,GAAG,IAAI;IAE1BiL,OAAA,CAAKz0F,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAE7Co0F,OAAA,CAAK7xF,SAAS,GAAGA,SAAS,KAAKrhB,SAAS,GAAGqhB,SAAS,GAAG1c,aAAa;IACpEuuG,OAAA,CAAK5xF,SAAS,GAAGA,SAAS,KAAKthB,SAAS,GAAGshB,SAAS,GAAG3c,aAAa;IAEpEuuG,OAAA,CAAK7wF,KAAK,GAAG,KAAK;IAClB6wF,OAAA,CAAK/wF,eAAe,GAAG,KAAK;IAE5B+wF,OAAA,CAAK5M,eAAe,GAAG,IAAI;IAAC,OAAA4M,OAAA;EAE7B;EAAC3zG,YAAA,CAAAwzG,YAAA;IAAAzzG,GAAA;IAAAvG,KAAA,EAGD,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAy/D,YAAA,CAAAr6G,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACykF,eAAe,GAAGzkF,MAAM,CAACykF,eAAe;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAhnG,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAy/D,YAAA,CAAAr6G,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAACsmF,eAAe,KAAK,IAAI,EAAG5mF,IAAI,CAAC4mF,eAAe,GAAG,IAAI,CAACA,eAAe;MAEhF,OAAO5mF,IAAI;IAEZ;EAAC;EAAA,OAAAqzF,YAAA;AAAA,EAlDyBpyF,OAAO;AAAA,IAsD5BwyF,YAAY,0BAAAC,iBAAA;EAAAvyF,SAAA,CAAAsyF,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAtyF,YAAA,CAAAoyF,YAAA;EAEjB,SAAAA,aAAalyD,QAAQ,EAAEwK,EAAE,EAAG;IAAA,IAAA6nD,OAAA;IAAAx0G,eAAA,OAAAq0G,YAAA;IAE3BG,OAAA,GAAAD,QAAA,CAAAj5G,IAAA;IAEA,IAAMmlD,KAAK,GAAA39B,sBAAA,CAAA0xF,OAAA,CAAO;IAElB,IAAIzB,OAAO,GAAG,IAAI;IAElB,IAAI0B,sBAAsB,GAAG,GAAG;IAEhC,IAAIhC,cAAc,GAAG,IAAI;IACzB,IAAIiC,kBAAkB,GAAG,aAAa;IACtC;IACA,IAAIC,SAAS,GAAG,GAAG;IACnB,IAAIC,oBAAoB,GAAG,IAAI;IAE/B,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAMxhF,UAAU,GAAGk5B,EAAE,CAACuoD,oBAAoB,CAAC,CAAC;IAC5C,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAMC,WAAW,GAAG,EAAE;IACtB,IAAMC,sBAAsB,GAAG,EAAE;;IAEjC;;IAEA,IAAMC,OAAO,GAAG,IAAIpxD,iBAAiB,CAAC,CAAC;IACvCoxD,OAAO,CAACp1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC1By1E,OAAO,CAACvuF,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;IAEhC,IAAM+wF,OAAO,GAAG,IAAIrxD,iBAAiB,CAAC,CAAC;IACvCqxD,OAAO,CAACr1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC1B01E,OAAO,CAACxuF,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;IAEhC,IAAMoiC,OAAO,GAAG,CAAE0uD,OAAO,EAAEC,OAAO,CAAE;IAEpC,IAAMC,QAAQ,GAAG,IAAIjF,WAAW,CAAC,CAAC;IAClCiF,QAAQ,CAACt1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC3B21E,QAAQ,CAACt1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAE3B,IAAI41E,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,gBAAgB,GAAG,IAAI;;IAE3B;;IAEAnB,OAAA,CAAKoB,gBAAgB,GAAG,IAAI;IAC5BpB,OAAA,CAAKl2F,OAAO,GAAG,KAAK;IAEpBk2F,OAAA,CAAKqB,YAAY,GAAG,KAAK;IAEzBrB,OAAA,CAAKsB,aAAa,GAAG,UAAWrnG,KAAK,EAAG;MAEvC,IAAIsnG,UAAU,GAAGV,WAAW,CAAE5mG,KAAK,CAAE;MAErC,IAAKsnG,UAAU,KAAK70G,SAAS,EAAG;QAE/B60G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAE5mG,KAAK,CAAE,GAAGsnG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAACpE,iBAAiB,CAAC,CAAC;IAEtC,CAAC;IAED6C,OAAA,CAAKwB,iBAAiB,GAAG,UAAWvnG,KAAK,EAAG;MAE3C,IAAIsnG,UAAU,GAAGV,WAAW,CAAE5mG,KAAK,CAAE;MAErC,IAAKsnG,UAAU,KAAK70G,SAAS,EAAG;QAE/B60G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAE5mG,KAAK,CAAE,GAAGsnG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAAC/D,YAAY,CAAC,CAAC;IAEjC,CAAC;IAEDwC,OAAA,CAAKyB,OAAO,GAAG,UAAWxnG,KAAK,EAAG;MAEjC,IAAIsnG,UAAU,GAAGV,WAAW,CAAE5mG,KAAK,CAAE;MAErC,IAAKsnG,UAAU,KAAK70G,SAAS,EAAG;QAE/B60G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAE5mG,KAAK,CAAE,GAAGsnG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAACxE,YAAY,CAAC,CAAC;IAEjC,CAAC;;IAED;;IAEA,SAAS2E,cAAcA,CAAEtnG,KAAK,EAAG;MAEhC,IAAMunG,eAAe,GAAGb,sBAAsB,CAACjnG,OAAO,CAAEO,KAAK,CAACsjG,WAAY,CAAC;MAE3E,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;QAE9B;MAED;MAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;MAEjD,IAAKJ,UAAU,KAAK70G,SAAS,EAAG;QAE/B60G,UAAU,CAAC3rF,MAAM,CAAExb,KAAK,CAACsjG,WAAW,EAAEtjG,KAAK,CAACy9C,KAAK,EAAEuoD,oBAAoB,IAAInC,cAAe,CAAC;QAC3FsD,UAAU,CAACpnG,aAAa,CAAE;UAAEvT,IAAI,EAAEwT,KAAK,CAACxT,IAAI;UAAEwlB,IAAI,EAAEhS,KAAK,CAACsjG;QAAY,CAAE,CAAC;MAE1E;IAED;IAEA,SAASkE,YAAYA,CAAA,EAAG;MAEvBrD,OAAO,CAACxkG,mBAAmB,CAAE,QAAQ,EAAE2nG,cAAe,CAAC;MACvDnD,OAAO,CAACxkG,mBAAmB,CAAE,aAAa,EAAE2nG,cAAe,CAAC;MAC5DnD,OAAO,CAACxkG,mBAAmB,CAAE,WAAW,EAAE2nG,cAAe,CAAC;MAC1DnD,OAAO,CAACxkG,mBAAmB,CAAE,SAAS,EAAE2nG,cAAe,CAAC;MACxDnD,OAAO,CAACxkG,mBAAmB,CAAE,cAAc,EAAE2nG,cAAe,CAAC;MAC7DnD,OAAO,CAACxkG,mBAAmB,CAAE,YAAY,EAAE2nG,cAAe,CAAC;MAC3DnD,OAAO,CAACxkG,mBAAmB,CAAE,KAAK,EAAE6nG,YAAa,CAAC;MAClDrD,OAAO,CAACxkG,mBAAmB,CAAE,oBAAoB,EAAE8nG,oBAAqB,CAAC;MAEzE,KAAM,IAAIn8G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGm7G,WAAW,CAAC92G,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE/C,IAAMg4G,WAAW,GAAGoD,sBAAsB,CAAEp7G,CAAC,CAAE;QAE/C,IAAKg4G,WAAW,KAAK,IAAI,EAAG;QAE5BoD,sBAAsB,CAAEp7G,CAAC,CAAE,GAAG,IAAI;QAElCm7G,WAAW,CAAEn7G,CAAC,CAAE,CAACs4G,UAAU,CAAEN,WAAY,CAAC;MAE3C;MAEAwD,iBAAiB,GAAG,IAAI;MACxBC,gBAAgB,GAAG,IAAI;;MAEvB;;MAEAxzD,QAAQ,CAAC4F,eAAe,CAAEotD,mBAAoB,CAAC;MAE/CH,WAAW,GAAG,IAAI;MAClBD,WAAW,GAAG,IAAI;MAClBD,SAAS,GAAG,IAAI;MAChB/B,OAAO,GAAG,IAAI;MACdqC,eAAe,GAAG,IAAI;;MAEtB;;MAEAluE,SAAS,CAAC1nC,IAAI,CAAC,CAAC;MAEhBihD,KAAK,CAACo1D,YAAY,GAAG,KAAK;MAE1Bp1D,KAAK,CAAC9xC,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAa,CAAE,CAAC;IAE9C;IAEAo5G,OAAA,CAAK8B,yBAAyB,GAAG,UAAWr8G,KAAK,EAAG;MAEnDw6G,sBAAsB,GAAGx6G,KAAK;MAE9B,IAAKwmD,KAAK,CAACo1D,YAAY,KAAK,IAAI,EAAG;QAElCziG,OAAO,CAACC,IAAI,CAAE,uEAAwE,CAAC;MAExF;IAED,CAAC;IAEDmhG,OAAA,CAAK+B,qBAAqB,GAAG,UAAWt8G,KAAK,EAAG;MAE/Cy6G,kBAAkB,GAAGz6G,KAAK;MAE1B,IAAKwmD,KAAK,CAACo1D,YAAY,KAAK,IAAI,EAAG;QAElCziG,OAAO,CAACC,IAAI,CAAE,0EAA2E,CAAC;MAE3F;IAED,CAAC;IAEDmhG,OAAA,CAAKgC,iBAAiB,GAAG,YAAY;MAEpC,OAAO5B,oBAAoB,IAAInC,cAAc;IAE9C,CAAC;IAED+B,OAAA,CAAKiC,iBAAiB,GAAG,UAAWC,KAAK,EAAG;MAE3C9B,oBAAoB,GAAG8B,KAAK;IAE7B,CAAC;IAEDlC,OAAA,CAAKmC,YAAY,GAAG,YAAY;MAE/B,OAAO5B,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAGC,WAAW;IAExD,CAAC;IAEDR,OAAA,CAAKoC,UAAU,GAAG,YAAY;MAE7B,OAAO9B,SAAS;IAEjB,CAAC;IAEDN,OAAA,CAAKqC,QAAQ,GAAG,YAAY;MAE3B,OAAO5B,OAAO;IAEf,CAAC;IAEDT,OAAA,CAAKsC,UAAU,GAAG,YAAY;MAE7B,OAAO/D,OAAO;IAEf,CAAC;IAEDyB,OAAA,CAAKuC,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAA19G,mBAAA,GAAAqF,IAAA,CAAG,SAAAs4G,QAAiBj9G,KAAK;QAAA,IAAAk9G,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,mBAAA,EAAAjS,sBAAA;QAAA,OAAA/rG,mBAAA,GAAAuB,IAAA,UAAA08G,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAp4G,IAAA,GAAAo4G,SAAA,CAAA/5G,IAAA;YAAA;cAEvCq1G,OAAO,GAAG94G,KAAK;cAAC,MAEX84G,OAAO,KAAK,IAAI;gBAAA0E,SAAA,CAAA/5G,IAAA;gBAAA;cAAA;cAEpBy3G,mBAAmB,GAAGhzD,QAAQ,CAACC,eAAe,CAAC,CAAC;cAEhD2wD,OAAO,CAAC9kG,gBAAgB,CAAE,QAAQ,EAAEioG,cAAe,CAAC;cACpDnD,OAAO,CAAC9kG,gBAAgB,CAAE,aAAa,EAAEioG,cAAe,CAAC;cACzDnD,OAAO,CAAC9kG,gBAAgB,CAAE,WAAW,EAAEioG,cAAe,CAAC;cACvDnD,OAAO,CAAC9kG,gBAAgB,CAAE,SAAS,EAAEioG,cAAe,CAAC;cACrDnD,OAAO,CAAC9kG,gBAAgB,CAAE,cAAc,EAAEioG,cAAe,CAAC;cAC1DnD,OAAO,CAAC9kG,gBAAgB,CAAE,YAAY,EAAEioG,cAAe,CAAC;cACxDnD,OAAO,CAAC9kG,gBAAgB,CAAE,KAAK,EAAEmoG,YAAa,CAAC;cAC/CrD,OAAO,CAAC9kG,gBAAgB,CAAE,oBAAoB,EAAEooG,oBAAqB,CAAC;cAAC,MAElE5iF,UAAU,CAACikF,YAAY,KAAK,IAAI;gBAAAD,SAAA,CAAA/5G,IAAA;gBAAA;cAAA;cAAA+5G,SAAA,CAAA/5G,IAAA;cAAA,OAE9BivD,EAAE,CAACgrD,gBAAgB,CAAC,CAAC;YAAA;cAI5B,IAAO5E,OAAO,CAAClgB,WAAW,CAAC1yD,MAAM,KAAKj/B,SAAS,IAAQihD,QAAQ,CAACyK,YAAY,CAACC,QAAQ,KAAK,KAAO,EAAG;gBAE7FsqD,SAAS,GAAG;kBACjBS,SAAS,EAAI7E,OAAO,CAAClgB,WAAW,CAAC1yD,MAAM,KAAKj/B,SAAS,GAAKuyB,UAAU,CAACmkF,SAAS,GAAG,IAAI;kBACrF1gG,KAAK,EAAE,IAAI;kBACX2P,KAAK,EAAE4M,UAAU,CAAC5M,KAAK;kBACvBmiC,OAAO,EAAEv1B,UAAU,CAACu1B,OAAO;kBAC3ByrD,sBAAsB,EAAEA;gBACzB,CAAC;gBAEDO,WAAW,GAAG,IAAI6C,YAAY,CAAE9E,OAAO,EAAEpmD,EAAE,EAAEwqD,SAAU,CAAC;gBAExDpE,OAAO,CAAC+E,iBAAiB,CAAE;kBAAEC,SAAS,EAAE/C;gBAAY,CAAE,CAAC;gBAEvDI,eAAe,GAAG,IAAI5tF,iBAAiB,CACtCwtF,WAAW,CAACgD,gBAAgB,EAC5BhD,WAAW,CAACiD,iBAAiB,EAC7B;kBACCx1F,MAAM,EAAEtb,UAAU;kBAClB/L,IAAI,EAAEmL,gBAAgB;kBACtBmY,UAAU,EAAEyjC,QAAQ,CAACE,gBAAgB;kBACrCl7B,aAAa,EAAEsM,UAAU,CAACu1B;gBAC3B,CACD,CAAC;cAEF,CAAC,MAAM;gBAEFouD,WAAW,GAAG,IAAI;gBAClBC,SAAS,GAAG,IAAI;gBAChBC,aAAa,GAAG,IAAI;gBAExB,IAAK7jF,UAAU,CAAC5M,KAAK,EAAG;kBAEvBywF,aAAa,GAAG7jF,UAAU,CAACu1B,OAAO,GAAG2D,EAAE,CAAC48C,gBAAgB,GAAG58C,EAAE,CAAC28C,iBAAiB;kBAC/E8N,WAAW,GAAG3jF,UAAU,CAACu1B,OAAO,GAAGzhD,kBAAkB,GAAGD,WAAW;kBACnE+vG,SAAS,GAAG5jF,UAAU,CAACu1B,OAAO,GAAG/hD,kBAAkB,GAAGL,eAAe;gBAEtE;gBAEM2wG,mBAAmB,GAAG;kBAC3BW,WAAW,EAAEvrD,EAAE,CAACw3C,KAAK;kBACrBiT,WAAW,EAAEE,aAAa;kBAC1B1mB,WAAW,EAAE6jB;gBACd,CAAC;gBAEDK,SAAS,GAAG,IAAIqD,cAAc,CAAEpF,OAAO,EAAEpmD,EAAG,CAAC;gBAE7CooD,WAAW,GAAGD,SAAS,CAACsD,qBAAqB,CAAEb,mBAAoB,CAAC;gBAEpExE,OAAO,CAAC+E,iBAAiB,CAAE;kBAAE33E,MAAM,EAAE,CAAE40E,WAAW;gBAAG,CAAE,CAAC;gBAExDK,eAAe,GAAG,IAAI5tF,iBAAiB,CACtCutF,WAAW,CAACsD,YAAY,EACxBtD,WAAW,CAACuD,aAAa,EACzB;kBACC71F,MAAM,EAAEtb,UAAU;kBAClB/L,IAAI,EAAEmL,gBAAgB;kBACtB6gB,YAAY,EAAE,IAAI6sF,YAAY,CAAEc,WAAW,CAACsD,YAAY,EAAEtD,WAAW,CAACuD,aAAa,EAAEjB,SAAS,EAAEn2G,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEk2G,WAAY,CAAC;kBAC/KjwF,aAAa,EAAEsM,UAAU,CAACu1B,OAAO;kBACjCtqC,UAAU,EAAEyjC,QAAQ,CAACE,gBAAgB;kBACrCh7B,OAAO,EAAEoM,UAAU,CAACmkF,SAAS,GAAG,CAAC,GAAG;gBACrC,CAAE,CAAC;gBAEEtS,sBAAsB,GAAGnjD,QAAQ,CAACyZ,UAAU,CAACxnD,GAAG,CAAEghG,eAAgB,CAAC;gBACzE9P,sBAAsB,CAAC6G,mBAAmB,GAAG4I,WAAW,CAAC7I,iBAAiB;cAE3E;cAEAkJ,eAAe,CAAC3oB,gBAAgB,GAAG,IAAI,CAAC,CAAC;;cAEzC,IAAI,CAAC8rB,YAAY,CAAE5D,SAAU,CAAC;cAE9BC,oBAAoB,GAAG,IAAI;cAAC6C,SAAA,CAAA/5G,IAAA;cAAA,OACLq1G,OAAO,CAACyF,qBAAqB,CAAE9D,kBAAmB,CAAC;YAAA;cAA1EjC,cAAc,GAAAgF,SAAA,CAAAt6G,IAAA;cAEd+pC,SAAS,CAACulB,UAAU,CAAEsmD,OAAQ,CAAC;cAC/B7rE,SAAS,CAAC0S,KAAK,CAAC,CAAC;cAEjB6G,KAAK,CAACo1D,YAAY,GAAG,IAAI;cAEzBp1D,KAAK,CAAC9xC,aAAa,CAAE;gBAAEvT,IAAI,EAAE;cAAe,CAAE,CAAC;YAAC;YAAA;cAAA,OAAAq8G,SAAA,CAAAj4G,IAAA;UAAA;QAAA,GAAA03G,OAAA;MAAA,CAIjD;MAAA,iBAAAuB,GAAA;QAAA,OAAAzB,IAAA,CAAA/yE,KAAA,OAAAL,SAAA;MAAA;IAAA;IAED4wE,OAAA,CAAKpzC,uBAAuB,GAAG,YAAY;MAE1C,IAAK2xC,OAAO,KAAK,IAAI,EAAG;QAEvB,OAAOA,OAAO,CAAC5xC,oBAAoB;MAEpC;IAED,CAAC;IAED,SAASk1C,oBAAoBA,CAAEznG,KAAK,EAAG;MAEtC;;MAEA,KAAM,IAAI1U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0U,KAAK,CAAC8pG,OAAO,CAACn6G,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEjD,IAAMg4G,WAAW,GAAGtjG,KAAK,CAAC8pG,OAAO,CAAEx+G,CAAC,CAAE;QACtC,IAAMuU,KAAK,GAAG6mG,sBAAsB,CAACjnG,OAAO,CAAE6jG,WAAY,CAAC;QAE3D,IAAKzjG,KAAK,IAAI,CAAC,EAAG;UAEjB6mG,sBAAsB,CAAE7mG,KAAK,CAAE,GAAG,IAAI;UACtC4mG,WAAW,CAAE5mG,KAAK,CAAE,CAAC+jG,UAAU,CAAEN,WAAY,CAAC;QAE/C;MAED;;MAEA;;MAEA,KAAM,IAAIh4G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0U,KAAK,CAAC+pG,KAAK,CAACp6G,MAAM,EAAErE,IAAC,EAAG,EAAG;QAE/C,IAAMg4G,YAAW,GAAGtjG,KAAK,CAAC+pG,KAAK,CAAEz+G,IAAC,CAAE;QAEpC,IAAIi8G,eAAe,GAAGb,sBAAsB,CAACjnG,OAAO,CAAE6jG,YAAY,CAAC;QAEnE,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;UAE9B;;UAEA,KAAM,IAAIj8G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGm7G,WAAW,CAAC92G,MAAM,EAAErE,IAAC,EAAG,EAAG;YAE/C,IAAKA,IAAC,IAAIo7G,sBAAsB,CAAC/2G,MAAM,EAAG;cAEzC+2G,sBAAsB,CAACp3G,IAAI,CAAEg0G,YAAY,CAAC;cAC1CiE,eAAe,GAAGj8G,IAAC;cACnB;YAED,CAAC,MAAM,IAAKo7G,sBAAsB,CAAEp7G,IAAC,CAAE,KAAK,IAAI,EAAG;cAElDo7G,sBAAsB,CAAEp7G,IAAC,CAAE,GAAGg4G,YAAW;cACzCiE,eAAe,GAAGj8G,IAAC;cACnB;YAED;UAED;;UAEA;;UAEA,IAAKi8G,eAAe,KAAK,CAAE,CAAC,EAAG;QAEhC;QAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;QAEjD,IAAKJ,UAAU,EAAG;UAEjBA,UAAU,CAAC9D,OAAO,CAAEC,YAAY,CAAC;QAElC;MAED;IAED;;IAEA;;IAEA,IAAM0G,UAAU,GAAG,IAAIvqF,OAAO,CAAC,CAAC;IAChC,IAAMwqF,UAAU,GAAG,IAAIxqF,OAAO,CAAC,CAAC;;IAEhC;AACF;AACA;AACA;AACA;AACA;IACE,SAASyqF,sBAAsBA,CAAEvpF,MAAM,EAAEgmF,OAAO,EAAEC,OAAO,EAAG;MAE3DoD,UAAU,CAACznF,qBAAqB,CAAEokF,OAAO,CAAC3lF,WAAY,CAAC;MACvDipF,UAAU,CAAC1nF,qBAAqB,CAAEqkF,OAAO,CAAC5lF,WAAY,CAAC;MAEvD,IAAMmpF,GAAG,GAAGH,UAAU,CAAChiG,UAAU,CAAEiiG,UAAW,CAAC;MAE/C,IAAMG,KAAK,GAAGzD,OAAO,CAAC9lF,gBAAgB,CAACha,QAAQ;MAC/C,IAAMwjG,KAAK,GAAGzD,OAAO,CAAC/lF,gBAAgB,CAACha,QAAQ;;MAE/C;MACA;MACA;MACA,IAAMkpB,IAAI,GAAGq6E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC9C,IAAMp6E,GAAG,GAAGo6E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC7C,IAAME,MAAM,GAAG,CAAEF,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC9C,IAAMG,SAAS,GAAG,CAAEH,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAEjD,IAAMI,OAAO,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC/C,IAAMK,QAAQ,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAChD,IAAM16E,IAAI,GAAGI,IAAI,GAAGy6E,OAAO;MAC3B,IAAM56E,KAAK,GAAGG,IAAI,GAAG06E,QAAQ;;MAE7B;MACA;MACA,IAAMC,OAAO,GAAGP,GAAG,IAAK,CAAEK,OAAO,GAAGC,QAAQ,CAAE;MAC9C,IAAME,OAAO,GAAGD,OAAO,GAAG,CAAEF,OAAO;;MAEnC;MACA7D,OAAO,CAAC3lF,WAAW,CAACqO,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACvT,KAAM,CAAC;MACjFuT,MAAM,CAAC8T,UAAU,CAAEk2E,OAAQ,CAAC;MAC5BhqF,MAAM,CAACgU,UAAU,CAAE+1E,OAAQ,CAAC;MAC5B/pF,MAAM,CAACK,WAAW,CAAC+L,OAAO,CAAEpM,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACvT,KAAM,CAAC;MAC9EuT,MAAM,CAACC,kBAAkB,CAAC5a,IAAI,CAAE2a,MAAM,CAACK,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;;MAE7D;MACA;MACA;MACA,IAAM2+F,KAAK,GAAG76E,IAAI,GAAG26E,OAAO;MAC5B,IAAMG,IAAI,GAAG76E,GAAG,GAAG06E,OAAO;MAC1B,IAAMI,KAAK,GAAGn7E,IAAI,GAAGg7E,OAAO;MAC5B,IAAMI,MAAM,GAAGn7E,KAAK,IAAKu6E,GAAG,GAAGQ,OAAO,CAAE;MACxC,IAAMK,IAAI,GAAGV,MAAM,GAAGt6E,GAAG,GAAG66E,IAAI,GAAGD,KAAK;MACxC,IAAMK,OAAO,GAAGV,SAAS,GAAGv6E,GAAG,GAAG66E,IAAI,GAAGD,KAAK;MAE9CjqF,MAAM,CAACE,gBAAgB,CAAC6O,eAAe,CAAEo7E,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEL,KAAK,EAAEC,IAAK,CAAC;MACpFlqF,MAAM,CAACI,uBAAuB,CAAC/a,IAAI,CAAE2a,MAAM,CAACE,gBAAiB,CAAC,CAAC5U,MAAM,CAAC,CAAC;IAExE;IAEA,SAASi/F,YAAYA,CAAEvqF,MAAM,EAAEgS,MAAM,EAAG;MAEvC,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBhS,MAAM,CAACK,WAAW,CAAChb,IAAI,CAAE2a,MAAM,CAAChT,MAAO,CAAC;MAEzC,CAAC,MAAM;QAENgT,MAAM,CAACK,WAAW,CAACtW,gBAAgB,CAAEioB,MAAM,CAAC3R,WAAW,EAAEL,MAAM,CAAChT,MAAO,CAAC;MAEzE;MAEAgT,MAAM,CAACC,kBAAkB,CAAC5a,IAAI,CAAE2a,MAAM,CAACK,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;IAE9D;IAEA25F,OAAA,CAAKsF,YAAY,GAAG,UAAWvqF,MAAM,EAAG;MAEvC,IAAKwjF,OAAO,KAAK,IAAI,EAAG;MAExB0C,QAAQ,CAAC92E,IAAI,GAAG62E,OAAO,CAAC72E,IAAI,GAAG42E,OAAO,CAAC52E,IAAI,GAAGpP,MAAM,CAACoP,IAAI;MACzD82E,QAAQ,CAAC72E,GAAG,GAAG42E,OAAO,CAAC52E,GAAG,GAAG22E,OAAO,CAAC32E,GAAG,GAAGrP,MAAM,CAACqP,GAAG;MAErD,IAAK82E,iBAAiB,KAAKD,QAAQ,CAAC92E,IAAI,IAAIg3E,gBAAgB,KAAKF,QAAQ,CAAC72E,GAAG,EAAG;QAE/E;;QAEAm0E,OAAO,CAAC+E,iBAAiB,CAAE;UAC1BiC,SAAS,EAAEtE,QAAQ,CAAC92E,IAAI;UACxBq7E,QAAQ,EAAEvE,QAAQ,CAAC72E;QACpB,CAAE,CAAC;QAEH82E,iBAAiB,GAAGD,QAAQ,CAAC92E,IAAI;QACjCg3E,gBAAgB,GAAGF,QAAQ,CAAC72E,GAAG;MAEhC;MAEA,IAAM2C,MAAM,GAAGhS,MAAM,CAACgS,MAAM;MAC5B,IAAMslB,OAAO,GAAG4uD,QAAQ,CAAC5uD,OAAO;MAEhCizD,YAAY,CAAErE,QAAQ,EAAEl0E,MAAO,CAAC;MAEhC,KAAM,IAAIrnC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2sD,OAAO,CAACtoD,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE3C4/G,YAAY,CAAEjzD,OAAO,CAAE3sD,CAAC,CAAE,EAAEqnC,MAAO,CAAC;MAErC;;MAEA;;MAEA,IAAKslB,OAAO,CAACtoD,MAAM,KAAK,CAAC,EAAG;QAE3Bu6G,sBAAsB,CAAErD,QAAQ,EAAEF,OAAO,EAAEC,OAAQ,CAAC;MAErD,CAAC,MAAM;QAEN;;QAEAC,QAAQ,CAAChmF,gBAAgB,CAAC7a,IAAI,CAAE2gG,OAAO,CAAC9lF,gBAAiB,CAAC;MAE3D;;MAEA;;MAEAwqF,gBAAgB,CAAE1qF,MAAM,EAAEkmF,QAAQ,EAAEl0E,MAAO,CAAC;IAE7C,CAAC;IAED,SAAS04E,gBAAgBA,CAAE1qF,MAAM,EAAEkmF,QAAQ,EAAEl0E,MAAM,EAAG;MAErD,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBhS,MAAM,CAAChT,MAAM,CAAC3H,IAAI,CAAE6gG,QAAQ,CAAC7lF,WAAY,CAAC;MAE3C,CAAC,MAAM;QAENL,MAAM,CAAChT,MAAM,CAAC3H,IAAI,CAAE2sB,MAAM,CAAC3R,WAAY,CAAC;QACxCL,MAAM,CAAChT,MAAM,CAAC1B,MAAM,CAAC,CAAC;QACtB0U,MAAM,CAAChT,MAAM,CAACnH,QAAQ,CAAEqgG,QAAQ,CAAC7lF,WAAY,CAAC;MAE/C;MAEAL,MAAM,CAAChT,MAAM,CAAC0hB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACvT,KAAM,CAAC;MAC3EuT,MAAM,CAAC6V,iBAAiB,CAAE,IAAK,CAAC;MAEhC7V,MAAM,CAACE,gBAAgB,CAAC7a,IAAI,CAAE6gG,QAAQ,CAAChmF,gBAAiB,CAAC;MACzDF,MAAM,CAACI,uBAAuB,CAAC/a,IAAI,CAAE6gG,QAAQ,CAAC9lF,uBAAwB,CAAC;MAEvE,IAAKJ,MAAM,CAACk1B,mBAAmB,EAAG;QAEjCl1B,MAAM,CAAC+0B,GAAG,GAAGn1C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACm2C,IAAI,CAAE,CAAC,GAAG71B,MAAM,CAACE,gBAAgB,CAACha,QAAQ,CAAE,CAAC,CAAG,CAAC;QACjF8Z,MAAM,CAACm1B,IAAI,GAAG,CAAC;MAEhB;IAED;IAEA8vD,OAAA,CAAK0F,SAAS,GAAG,YAAY;MAE5B,OAAOzE,QAAQ;IAEhB,CAAC;IAEDjB,OAAA,CAAK2F,YAAY,GAAG,YAAY;MAE/B,IAAKpF,WAAW,KAAK,IAAI,IAAIC,WAAW,KAAK,IAAI,EAAG;QAEnD,OAAO9zG,SAAS;MAEjB;MAEA,OAAOyzG,SAAS;IAEjB,CAAC;IAEDH,OAAA,CAAK+D,YAAY,GAAG,UAAWt+G,KAAK,EAAG;MAEtC;MACA;;MAEA06G,SAAS,GAAG16G,KAAK;MAEjB,IAAK86G,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAACqF,cAAc,GAAGngH,KAAK;MAEnC;MAEA,IAAK+6G,WAAW,KAAK,IAAI,IAAIA,WAAW,CAACoF,cAAc,KAAKl5G,SAAS,EAAG;QAEvE8zG,WAAW,CAACoF,cAAc,GAAGngH,KAAK;MAEnC;IAED,CAAC;;IAED;;IAEA,IAAIogH,wBAAwB,GAAG,IAAI;IAEnC,SAASluD,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;MAExCwoD,IAAI,GAAGxoD,KAAK,CAACiuD,aAAa,CAAE1F,oBAAoB,IAAInC,cAAe,CAAC;MACpEwC,OAAO,GAAG5oD,KAAK;MAEf,IAAKwoD,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAM0F,KAAK,GAAG1F,IAAI,CAAC0F,KAAK;QAExB,IAAKvF,WAAW,KAAK,IAAI,EAAG;UAE3B7yD,QAAQ,CAACq4D,0BAA0B,CAAEpF,eAAe,EAAEJ,WAAW,CAACjY,WAAY,CAAC;UAC/E56C,QAAQ,CAAC4F,eAAe,CAAEqtD,eAAgB,CAAC;QAE5C;QAEA,IAAIqF,mBAAmB,GAAG,KAAK;;QAE/B;;QAEA,IAAKF,KAAK,CAACh8G,MAAM,KAAKk3G,QAAQ,CAAC5uD,OAAO,CAACtoD,MAAM,EAAG;UAE/Ck3G,QAAQ,CAAC5uD,OAAO,CAACtoD,MAAM,GAAG,CAAC;UAC3Bk8G,mBAAmB,GAAG,IAAI;QAE3B;QAEA,KAAM,IAAIvgH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqgH,KAAK,CAACh8G,MAAM,EAAErE,CAAC,EAAG,EAAG;UAEzC,IAAM0qD,IAAI,GAAG21D,KAAK,CAAErgH,CAAC,CAAE;UAEvB,IAAI8sB,QAAQ,GAAG,IAAI;UAEnB,IAAKguF,WAAW,KAAK,IAAI,EAAG;YAE3BhuF,QAAQ,GAAGguF,WAAW,CAACrf,WAAW,CAAE/wC,IAAK,CAAC;UAE3C,CAAC,MAAM;YAEN,IAAM81D,UAAU,GAAG5F,SAAS,CAAC6F,eAAe,CAAE5F,WAAW,EAAEnwD,IAAK,CAAC;YACjE59B,QAAQ,GAAG0zF,UAAU,CAAC1zF,QAAQ;;YAE9B;YACA,IAAK9sB,CAAC,KAAK,CAAC,EAAG;cAEdioD,QAAQ,CAACy4D,uBAAuB,CAC/BxF,eAAe,EACfsF,UAAU,CAAClP,YAAY,EACvBuJ,WAAW,CAAC7I,iBAAiB,GAAGhrG,SAAS,GAAGw5G,UAAU,CAACG,mBAAoB,CAAC;cAE7E14D,QAAQ,CAAC4F,eAAe,CAAEqtD,eAAgB,CAAC;YAE5C;UAED;UAEA,IAAI7lF,MAAM,GAAGs3B,OAAO,CAAE3sD,CAAC,CAAE;UAEzB,IAAKq1B,MAAM,KAAKruB,SAAS,EAAG;YAE3BquB,MAAM,GAAG,IAAI40B,iBAAiB,CAAC,CAAC;YAChC50B,MAAM,CAAC4Q,MAAM,CAACL,MAAM,CAAE5lC,CAAE,CAAC;YACzBq1B,MAAM,CAACvI,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;YAC/BoiC,OAAO,CAAE3sD,CAAC,CAAE,GAAGq1B,MAAM;UAEtB;UAEAA,MAAM,CAAChT,MAAM,CAAChF,SAAS,CAAEqtC,IAAI,CAAC0uD,SAAS,CAAC/2F,MAAO,CAAC;UAChDgT,MAAM,CAAChT,MAAM,CAAC0hB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACvT,KAAM,CAAC;UAC3EuT,MAAM,CAACE,gBAAgB,CAAClY,SAAS,CAAEqtC,IAAI,CAACn1B,gBAAiB,CAAC;UAC1DF,MAAM,CAACI,uBAAuB,CAAC/a,IAAI,CAAE2a,MAAM,CAACE,gBAAiB,CAAC,CAAC5U,MAAM,CAAC,CAAC;UACvE0U,MAAM,CAACvI,QAAQ,CAAC7T,GAAG,CAAE6T,QAAQ,CAAC9W,CAAC,EAAE8W,QAAQ,CAACrrB,CAAC,EAAEqrB,QAAQ,CAACjH,KAAK,EAAEiH,QAAQ,CAAChH,MAAO,CAAC;UAE9E,IAAK9lB,CAAC,KAAK,CAAC,EAAG;YAEdu7G,QAAQ,CAACl5F,MAAM,CAAC3H,IAAI,CAAE2a,MAAM,CAAChT,MAAO,CAAC;YACrCk5F,QAAQ,CAACl5F,MAAM,CAAC0hB,SAAS,CAAEw3E,QAAQ,CAAC/hF,QAAQ,EAAE+hF,QAAQ,CAACxrF,UAAU,EAAEwrF,QAAQ,CAACz5F,KAAM,CAAC;UAEpF;UAEA,IAAKy+F,mBAAmB,KAAK,IAAI,EAAG;YAEnChF,QAAQ,CAAC5uD,OAAO,CAAC3oD,IAAI,CAAEqxB,MAAO,CAAC;UAEhC;QAED;MAED;;MAEA;;MAEA,KAAM,IAAIr1B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGm7G,WAAW,CAAC92G,MAAM,EAAErE,IAAC,EAAG,EAAG;QAE/C,IAAMg4G,WAAW,GAAGoD,sBAAsB,CAAEp7G,IAAC,CAAE;QAC/C,IAAM67G,UAAU,GAAGV,WAAW,CAAEn7G,IAAC,CAAE;QAEnC,IAAKg4G,WAAW,KAAK,IAAI,IAAI6D,UAAU,KAAK70G,SAAS,EAAG;UAEvD60G,UAAU,CAAC3rF,MAAM,CAAE8nF,WAAW,EAAE7lD,KAAK,EAAEuoD,oBAAoB,IAAInC,cAAe,CAAC;QAEhF;MAED;MAEA,IAAK4H,wBAAwB,EAAGA,wBAAwB,CAAEjuD,IAAI,EAAEC,KAAM,CAAC;MAEvE,IAAKA,KAAK,CAACyuD,cAAc,EAAG;QAE3Br6D,KAAK,CAAC9xC,aAAa,CAAE;UAAEvT,IAAI,EAAE,gBAAgB;UAAEwlB,IAAI,EAAEyrC;QAAM,CAAE,CAAC;MAE/D;MAEA4oD,OAAO,GAAG,IAAI;IAEf;IAEA,IAAM/tE,SAAS,GAAG,IAAI6kB,cAAc,CAAC,CAAC;IAEtC7kB,SAAS,CAACslB,gBAAgB,CAAEL,gBAAiB,CAAC;IAE9CqoD,OAAA,CAAKhoD,gBAAgB,GAAG,UAAWz/B,QAAQ,EAAG;MAE7CstF,wBAAwB,GAAGttF,QAAQ;IAEpC,CAAC;IAEDynF,OAAA,CAAKnwF,OAAO,GAAG,YAAY,CAAC,CAAC;IAAC,OAAAmwF,OAAA;EAE/B;EAAC,OAAA/zG,YAAA,CAAA4zG,YAAA;AAAA,EAzuByBrmG,eAAe;AA6uB1C,SAAS+sG,cAAcA,CAAE54D,QAAQ,EAAEyZ,UAAU,EAAG;EAE/C,SAASo/C,uBAAuBA,CAAEjsE,GAAG,EAAE+U,OAAO,EAAG;IAEhD,IAAK/U,GAAG,CAAC3rB,gBAAgB,KAAK,IAAI,EAAG;MAEpC2rB,GAAG,CAAClrB,YAAY,CAAC,CAAC;IAEnB;IAEAigC,OAAO,CAAC7pD,KAAK,CAAC2a,IAAI,CAAEm6B,GAAG,CAACxyB,MAAO,CAAC;EAEjC;EAEA,SAAS0+F,kBAAkBA,CAAEl5D,QAAQ,EAAErQ,GAAG,EAAG;IAE5CA,GAAG,CAAC3zB,KAAK,CAACw1B,MAAM,CAAEwO,QAAQ,CAACyZ,QAAQ,CAACvhE,KAAK,EAAEioD,yBAAyB,CAAEC,QAAS,CAAE,CAAC;IAElF,IAAKzQ,GAAG,CAACwpE,KAAK,EAAG;MAEhBn5D,QAAQ,CAACuZ,OAAO,CAACrhE,KAAK,GAAGy3C,GAAG,CAAC/S,IAAI;MACjCojB,QAAQ,CAACwZ,MAAM,CAACthE,KAAK,GAAGy3C,GAAG,CAAC9S,GAAG;IAEhC,CAAC,MAAM,IAAK8S,GAAG,CAACi7C,SAAS,EAAG;MAE3B5qC,QAAQ,CAACsZ,UAAU,CAACphE,KAAK,GAAGy3C,GAAG,CAACypE,OAAO;IAExC;EAED;EAEA,SAASC,uBAAuBA,CAAEr5D,QAAQ,EAAE/a,QAAQ,EAAEq0E,UAAU,EAAEr7F,MAAM,EAAEs7F,wBAAwB,EAAG;IAEpG,IAAKt0E,QAAQ,CAACsN,mBAAmB,EAAG;MAEnCinE,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACw0E,qBAAqB,EAAG;MAE5CD,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACy0E,kBAAkB,EAAG;MAEzCF,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;MAC3C00E,mBAAmB,CAAE35D,QAAQ,EAAE/a,QAAS,CAAC;IAE1C,CAAC,MAAM,IAAKA,QAAQ,CAAC20E,mBAAmB,EAAG;MAE1CJ,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;MAC3C40E,oBAAoB,CAAE75D,QAAQ,EAAE/a,QAAS,CAAC;IAE3C,CAAC,MAAM,IAAKA,QAAQ,CAACgjD,sBAAsB,EAAG;MAE7CuxB,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;MAC3C60E,uBAAuB,CAAE95D,QAAQ,EAAE/a,QAAS,CAAC;MAE7C,IAAKA,QAAQ,CAAC80E,sBAAsB,EAAG;QAEtCC,uBAAuB,CAAEh6D,QAAQ,EAAE/a,QAAQ,EAAEs0E,wBAAyB,CAAC;MAExE;IAED,CAAC,MAAM,IAAKt0E,QAAQ,CAACg1E,oBAAoB,EAAG;MAE3CT,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;MAC3Ci1E,qBAAqB,CAAEl6D,QAAQ,EAAE/a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACisD,mBAAmB,EAAG;MAE1CsoB,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACqsD,sBAAsB,EAAG;MAE7CkoB,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;MAC3Ck1E,uBAAuB,CAAEn6D,QAAQ,EAAE/a,QAAS,CAAC;IAE9C,CAAC,MAAM,IAAKA,QAAQ,CAACm1E,oBAAoB,EAAG;MAE3CZ,qBAAqB,CAAEx5D,QAAQ,EAAE/a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACo1E,mBAAmB,EAAG;MAE1CC,mBAAmB,CAAEt6D,QAAQ,EAAE/a,QAAS,CAAC;MAEzC,IAAKA,QAAQ,CAACs1E,oBAAoB,EAAG;QAEpCC,mBAAmB,CAAEx6D,QAAQ,EAAE/a,QAAS,CAAC;MAE1C;IAED,CAAC,MAAM,IAAKA,QAAQ,CAACw1E,gBAAgB,EAAG;MAEvCC,qBAAqB,CAAE16D,QAAQ,EAAE/a,QAAQ,EAAEq0E,UAAU,EAAEr7F,MAAO,CAAC;IAEhE,CAAC,MAAM,IAAKgnB,QAAQ,CAAC01E,gBAAgB,EAAG;MAEvCC,sBAAsB,CAAE56D,QAAQ,EAAE/a,QAAS,CAAC;IAE7C,CAAC,MAAM,IAAKA,QAAQ,CAAC41E,gBAAgB,EAAG;MAEvC76D,QAAQ,CAAChkC,KAAK,CAAC9jB,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACjpB,KAAM,CAAC;MAC3CgkC,QAAQ,CAACnX,OAAO,CAAC3wC,KAAK,GAAG+sC,QAAQ,CAAC4D,OAAO;IAE1C,CAAC,MAAM,IAAK5D,QAAQ,CAAC8b,gBAAgB,EAAG;MAEvC9b,QAAQ,CAAC4c,kBAAkB,GAAG,KAAK,CAAC,CAAC;IAEtC;EAED;;EAEA,SAAS23D,qBAAqBA,CAAEx5D,QAAQ,EAAE/a,QAAQ,EAAG;IAEpD+a,QAAQ,CAACnX,OAAO,CAAC3wC,KAAK,GAAG+sC,QAAQ,CAAC4D,OAAO;IAEzC,IAAK5D,QAAQ,CAACjpB,KAAK,EAAG;MAErBgkC,QAAQ,CAAC6X,OAAO,CAAC3/D,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACjpB,KAAM,CAAC;IAE9C;IAEA,IAAKipB,QAAQ,CAAC4G,QAAQ,EAAG;MAExBmU,QAAQ,CAACnU,QAAQ,CAAC3zC,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAAC4G,QAAS,CAAC,CAACv4B,cAAc,CAAE2xB,QAAQ,CAAC6G,iBAAkB,CAAC;IAE/F;IAEA,IAAK7G,QAAQ,CAAC+H,GAAG,EAAG;MAEnBgT,QAAQ,CAAChT,GAAG,CAAC90C,KAAK,GAAG+sC,QAAQ,CAAC+H,GAAG;MAEjCisE,uBAAuB,CAAEh0E,QAAQ,CAAC+H,GAAG,EAAEgT,QAAQ,CAAC8X,YAAa,CAAC;IAE/D;IAEA,IAAK7yB,QAAQ,CAACiI,QAAQ,EAAG;MAExB8S,QAAQ,CAAC9S,QAAQ,CAACh1C,KAAK,GAAG+sC,QAAQ,CAACiI,QAAQ;MAE3C+rE,uBAAuB,CAAEh0E,QAAQ,CAACiI,QAAQ,EAAE8S,QAAQ,CAAC+X,iBAAkB,CAAC;IAEzE;IAEA,IAAK9yB,QAAQ,CAACsI,OAAO,EAAG;MAEvByS,QAAQ,CAACzS,OAAO,CAACr1C,KAAK,GAAG+sC,QAAQ,CAACsI,OAAO;MAEzC0rE,uBAAuB,CAAEh0E,QAAQ,CAACsI,OAAO,EAAEyS,QAAQ,CAAC0Y,gBAAiB,CAAC;MAEtE1Y,QAAQ,CAACxS,SAAS,CAACt1C,KAAK,GAAG+sC,QAAQ,CAACuI,SAAS;MAE7C,IAAKvI,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAQ,EAAG;QAEjCq/C,QAAQ,CAACxS,SAAS,CAACt1C,KAAK,IAAI,CAAE,CAAC;MAEhC;IAED;IAEA,IAAK+sC,QAAQ,CAACwI,SAAS,EAAG;MAEzBuS,QAAQ,CAACvS,SAAS,CAACv1C,KAAK,GAAG+sC,QAAQ,CAACwI,SAAS;MAE7CwrE,uBAAuB,CAAEh0E,QAAQ,CAACwI,SAAS,EAAEuS,QAAQ,CAAC4Y,kBAAmB,CAAC;MAE1E5Y,QAAQ,CAACrS,WAAW,CAACz1C,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAAC0I,WAAY,CAAC;MAEvD,IAAK1I,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAQ,EAAG;QAEjCq/C,QAAQ,CAACrS,WAAW,CAACz1C,KAAK,CAAC+b,MAAM,CAAC,CAAC;MAEpC;IAED;IAEA,IAAKgxB,QAAQ,CAAC2I,eAAe,EAAG;MAE/BoS,QAAQ,CAACpS,eAAe,CAAC11C,KAAK,GAAG+sC,QAAQ,CAAC2I,eAAe;MAEzDqrE,uBAAuB,CAAEh0E,QAAQ,CAAC2I,eAAe,EAAEoS,QAAQ,CAAC8Y,wBAAyB,CAAC;MAEtF9Y,QAAQ,CAACnS,iBAAiB,CAAC31C,KAAK,GAAG+sC,QAAQ,CAAC4I,iBAAiB;MAC7DmS,QAAQ,CAAClS,gBAAgB,CAAC51C,KAAK,GAAG+sC,QAAQ,CAAC6I,gBAAgB;IAE5D;IAEA,IAAK7I,QAAQ,CAACgJ,WAAW,EAAG;MAE3B+R,QAAQ,CAAC/R,WAAW,CAAC/1C,KAAK,GAAG+sC,QAAQ,CAACgJ,WAAW;MAEjDgrE,uBAAuB,CAAEh0E,QAAQ,CAACgJ,WAAW,EAAE+R,QAAQ,CAACgZ,oBAAqB,CAAC;IAE/E;IAEA,IAAK/zB,QAAQ,CAACiJ,WAAW,EAAG;MAE3B8R,QAAQ,CAAC9R,WAAW,CAACh2C,KAAK,GAAG+sC,QAAQ,CAACiJ,WAAW;MAEjD+qE,uBAAuB,CAAEh0E,QAAQ,CAACiJ,WAAW,EAAE8R,QAAQ,CAACiY,oBAAqB,CAAC;IAE/E;IAEA,IAAKhzB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B2Q,QAAQ,CAAC3Q,SAAS,CAACn3C,KAAK,GAAG+sC,QAAQ,CAACoK,SAAS;IAE9C;IAEA,IAAMhB,MAAM,GAAGwrB,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC,CAACoJ,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb2R,QAAQ,CAAC3R,MAAM,CAACn2C,KAAK,GAAGm2C,MAAM;MAE9B2R,QAAQ,CAACmY,UAAU,CAACjgE,KAAK,GAAKm2C,MAAM,CAACiY,aAAa,IAAIjY,MAAM,CAACzsB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExGo+B,QAAQ,CAACxR,YAAY,CAACt2C,KAAK,GAAG+sC,QAAQ,CAACuJ,YAAY;MACnDwR,QAAQ,CAACoY,GAAG,CAAClgE,KAAK,GAAG+sC,QAAQ,CAACmzB,GAAG;MACjCpY,QAAQ,CAACvR,eAAe,CAACv2C,KAAK,GAAG+sC,QAAQ,CAACwJ,eAAe;IAE1D;IAEA,IAAKxJ,QAAQ,CAACkI,QAAQ,EAAG;MAExB6S,QAAQ,CAAC7S,QAAQ,CAACj1C,KAAK,GAAG+sC,QAAQ,CAACkI,QAAQ;;MAE3C;MACA,IAAM0hD,WAAW,GAAKzuC,QAAQ,CAAC8qC,gBAAgB,KAAK,IAAI,GAAKh+E,IAAI,CAACC,EAAE,GAAG,CAAC;MAExE6yC,QAAQ,CAAC5S,iBAAiB,CAACl1C,KAAK,GAAG+sC,QAAQ,CAACmI,iBAAiB,GAAGyhD,WAAW;MAE3EoqB,uBAAuB,CAAEh0E,QAAQ,CAACkI,QAAQ,EAAE6S,QAAQ,CAACwY,iBAAkB,CAAC;IAEzE;IAEA,IAAKvzB,QAAQ,CAACoI,KAAK,EAAG;MAErB2S,QAAQ,CAAC3S,KAAK,CAACn1C,KAAK,GAAG+sC,QAAQ,CAACoI,KAAK;MACrC2S,QAAQ,CAAC1S,cAAc,CAACp1C,KAAK,GAAG+sC,QAAQ,CAACqI,cAAc;MAEvD2rE,uBAAuB,CAAEh0E,QAAQ,CAACoI,KAAK,EAAE2S,QAAQ,CAACsY,cAAe,CAAC;IAEnE;EAED;EAEA,SAASgiD,mBAAmBA,CAAEt6D,QAAQ,EAAE/a,QAAQ,EAAG;IAElD+a,QAAQ,CAAC6X,OAAO,CAAC3/D,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACjpB,KAAM,CAAC;IAC7CgkC,QAAQ,CAACnX,OAAO,CAAC3wC,KAAK,GAAG+sC,QAAQ,CAAC4D,OAAO;IAEzC,IAAK5D,QAAQ,CAAC+H,GAAG,EAAG;MAEnBgT,QAAQ,CAAChT,GAAG,CAAC90C,KAAK,GAAG+sC,QAAQ,CAAC+H,GAAG;MAEjCisE,uBAAuB,CAAEh0E,QAAQ,CAAC+H,GAAG,EAAEgT,QAAQ,CAAC8X,YAAa,CAAC;IAE/D;EAED;EAEA,SAAS0iD,mBAAmBA,CAAEx6D,QAAQ,EAAE/a,QAAQ,EAAG;IAElD+a,QAAQ,CAAC7Q,QAAQ,CAACj3C,KAAK,GAAG+sC,QAAQ,CAACkK,QAAQ;IAC3C6Q,QAAQ,CAACic,SAAS,CAAC/jE,KAAK,GAAG+sC,QAAQ,CAACkK,QAAQ,GAAGlK,QAAQ,CAACmK,OAAO;IAC/D4Q,QAAQ,CAAC/lC,KAAK,CAAC/hB,KAAK,GAAG+sC,QAAQ,CAAChrB,KAAK;EAEtC;EAEA,SAASygG,qBAAqBA,CAAE16D,QAAQ,EAAE/a,QAAQ,EAAEq0E,UAAU,EAAEr7F,MAAM,EAAG;IAExE+hC,QAAQ,CAAC6X,OAAO,CAAC3/D,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACjpB,KAAM,CAAC;IAC7CgkC,QAAQ,CAACnX,OAAO,CAAC3wC,KAAK,GAAG+sC,QAAQ,CAAC4D,OAAO;IACzCmX,QAAQ,CAAC1vB,IAAI,CAACp4B,KAAK,GAAG+sC,QAAQ,CAAC3U,IAAI,GAAGgpF,UAAU;IAChDt5D,QAAQ,CAAC/lC,KAAK,CAAC/hB,KAAK,GAAG+lB,MAAM,GAAG,GAAG;IAEnC,IAAKgnB,QAAQ,CAAC+H,GAAG,EAAG;MAEnBgT,QAAQ,CAAChT,GAAG,CAAC90C,KAAK,GAAG+sC,QAAQ,CAAC+H,GAAG;MAEjCisE,uBAAuB,CAAEh0E,QAAQ,CAAC+H,GAAG,EAAEgT,QAAQ,CAACyb,WAAY,CAAC;IAE9D;IAEA,IAAKx2B,QAAQ,CAACiI,QAAQ,EAAG;MAExB8S,QAAQ,CAAC9S,QAAQ,CAACh1C,KAAK,GAAG+sC,QAAQ,CAACiI,QAAQ;MAE3C+rE,uBAAuB,CAAEh0E,QAAQ,CAACiI,QAAQ,EAAE8S,QAAQ,CAAC+X,iBAAkB,CAAC;IAEzE;IAEA,IAAK9yB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B2Q,QAAQ,CAAC3Q,SAAS,CAACn3C,KAAK,GAAG+sC,QAAQ,CAACoK,SAAS;IAE9C;EAED;EAEA,SAASurE,sBAAsBA,CAAE56D,QAAQ,EAAE/a,QAAQ,EAAG;IAErD+a,QAAQ,CAAC6X,OAAO,CAAC3/D,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACjpB,KAAM,CAAC;IAC7CgkC,QAAQ,CAACnX,OAAO,CAAC3wC,KAAK,GAAG+sC,QAAQ,CAAC4D,OAAO;IACzCmX,QAAQ,CAAClmC,QAAQ,CAAC5hB,KAAK,GAAG+sC,QAAQ,CAACnrB,QAAQ;IAE3C,IAAKmrB,QAAQ,CAAC+H,GAAG,EAAG;MAEnBgT,QAAQ,CAAChT,GAAG,CAAC90C,KAAK,GAAG+sC,QAAQ,CAAC+H,GAAG;MAEjCisE,uBAAuB,CAAEh0E,QAAQ,CAAC+H,GAAG,EAAEgT,QAAQ,CAAC8X,YAAa,CAAC;IAE/D;IAEA,IAAK7yB,QAAQ,CAACiI,QAAQ,EAAG;MAExB8S,QAAQ,CAAC9S,QAAQ,CAACh1C,KAAK,GAAG+sC,QAAQ,CAACiI,QAAQ;MAE3C+rE,uBAAuB,CAAEh0E,QAAQ,CAACiI,QAAQ,EAAE8S,QAAQ,CAAC+X,iBAAkB,CAAC;IAEzE;IAEA,IAAK9yB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B2Q,QAAQ,CAAC3Q,SAAS,CAACn3C,KAAK,GAAG+sC,QAAQ,CAACoK,SAAS;IAE9C;EAED;EAEA,SAASwqE,oBAAoBA,CAAE75D,QAAQ,EAAE/a,QAAQ,EAAG;IAEnD+a,QAAQ,CAACjU,QAAQ,CAAC7zC,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAAC8G,QAAS,CAAC;IACjDiU,QAAQ,CAAC9T,SAAS,CAACh0C,KAAK,GAAGgV,IAAI,CAACa,GAAG,CAAEk3B,QAAQ,CAACiH,SAAS,EAAE,IAAK,CAAC,CAAC,CAAC;EAElE;;EAEA,SAASytE,mBAAmBA,CAAE35D,QAAQ,EAAE/a,QAAQ,EAAG;IAElD,IAAKA,QAAQ,CAACyJ,WAAW,EAAG;MAE3BsR,QAAQ,CAACtR,WAAW,CAACx2C,KAAK,GAAG+sC,QAAQ,CAACyJ,WAAW;IAElD;EAED;EAEA,SAASorE,uBAAuBA,CAAE95D,QAAQ,EAAE/a,QAAQ,EAAG;IAEtD+a,QAAQ,CAACvU,SAAS,CAACvzC,KAAK,GAAG+sC,QAAQ,CAACwG,SAAS;IAE7C,IAAKxG,QAAQ,CAAC+I,YAAY,EAAG;MAE5BgS,QAAQ,CAAChS,YAAY,CAAC91C,KAAK,GAAG+sC,QAAQ,CAAC+I,YAAY;MAEnDirE,uBAAuB,CAAEh0E,QAAQ,CAAC+I,YAAY,EAAEgS,QAAQ,CAACkZ,qBAAsB,CAAC;IAEjF;IAEAlZ,QAAQ,CAACxU,SAAS,CAACtzC,KAAK,GAAG+sC,QAAQ,CAACuG,SAAS;IAE7C,IAAKvG,QAAQ,CAAC8I,YAAY,EAAG;MAE5BiS,QAAQ,CAACjS,YAAY,CAAC71C,KAAK,GAAG+sC,QAAQ,CAAC8I,YAAY;MAEnDkrE,uBAAuB,CAAEh0E,QAAQ,CAAC8I,YAAY,EAAEiS,QAAQ,CAACoZ,qBAAsB,CAAC;IAEjF;IAEA,IAAM/qB,MAAM,GAAGwrB,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC,CAACoJ,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb;MACA2R,QAAQ,CAACzR,eAAe,CAACr2C,KAAK,GAAG+sC,QAAQ,CAACsJ,eAAe;IAE1D;EAED;EAEA,SAASyrE,uBAAuBA,CAAEh6D,QAAQ,EAAE/a,QAAQ,EAAEs0E,wBAAwB,EAAG;IAEhFv5D,QAAQ,CAACoY,GAAG,CAAClgE,KAAK,GAAG+sC,QAAQ,CAACmzB,GAAG,CAAC,CAAC;;IAEnC,IAAKnzB,QAAQ,CAACyG,KAAK,GAAG,CAAC,EAAG;MAEzBsU,QAAQ,CAACrU,UAAU,CAACzzC,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAAC0G,UAAW,CAAC,CAACr4B,cAAc,CAAE2xB,QAAQ,CAACyG,KAAM,CAAC;MAEtFsU,QAAQ,CAACpU,cAAc,CAAC1zC,KAAK,GAAG+sC,QAAQ,CAAC2G,cAAc;MAEvD,IAAK3G,QAAQ,CAACs4B,aAAa,EAAG;QAE7Bvd,QAAQ,CAACud,aAAa,CAACrlE,KAAK,GAAG+sC,QAAQ,CAACs4B,aAAa;QAErD07C,uBAAuB,CAAEh0E,QAAQ,CAACs4B,aAAa,EAAEvd,QAAQ,CAACwd,sBAAuB,CAAC;MAEnF;MAEA,IAAKv4B,QAAQ,CAACw4B,iBAAiB,EAAG;QAEjCzd,QAAQ,CAACyd,iBAAiB,CAACvlE,KAAK,GAAG+sC,QAAQ,CAACw4B,iBAAiB;QAE7Dw7C,uBAAuB,CAAEh0E,QAAQ,CAACw4B,iBAAiB,EAAEzd,QAAQ,CAAC0d,0BAA2B,CAAC;MAE3F;IAED;IAEA,IAAKz4B,QAAQ,CAACkH,SAAS,GAAG,CAAC,EAAG;MAE7B6T,QAAQ,CAAC7T,SAAS,CAACj0C,KAAK,GAAG+sC,QAAQ,CAACkH,SAAS;MAC7C6T,QAAQ,CAAC5T,kBAAkB,CAACl0C,KAAK,GAAG+sC,QAAQ,CAACmH,kBAAkB;MAE/D,IAAKnH,QAAQ,CAACoH,YAAY,EAAG;QAE5B2T,QAAQ,CAAC3T,YAAY,CAACn0C,KAAK,GAAG+sC,QAAQ,CAACoH,YAAY;QAEnD4sE,uBAAuB,CAAEh0E,QAAQ,CAACoH,YAAY,EAAE2T,QAAQ,CAACgd,qBAAsB,CAAC;MAEjF;MAEA,IAAK/3B,QAAQ,CAACqH,qBAAqB,EAAG;QAErC0T,QAAQ,CAAC1T,qBAAqB,CAACp0C,KAAK,GAAG+sC,QAAQ,CAACqH,qBAAqB;QAErE2sE,uBAAuB,CAAEh0E,QAAQ,CAACqH,qBAAqB,EAAE0T,QAAQ,CAACkd,8BAA+B,CAAC;MAEnG;MAEA,IAAKj4B,QAAQ,CAACsH,kBAAkB,EAAG;QAElCyT,QAAQ,CAACzT,kBAAkB,CAACr0C,KAAK,GAAG+sC,QAAQ,CAACsH,kBAAkB;QAE/D0sE,uBAAuB,CAAEh0E,QAAQ,CAACsH,kBAAkB,EAAEyT,QAAQ,CAACid,2BAA4B,CAAC;QAE5Fjd,QAAQ,CAACxT,oBAAoB,CAACt0C,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACuH,oBAAqB,CAAC;QAEzE,IAAKvH,QAAQ,CAAC0D,IAAI,KAAKhoC,QAAQ,EAAG;UAEjCq/C,QAAQ,CAACxT,oBAAoB,CAACt0C,KAAK,CAAC+b,MAAM,CAAC,CAAC;QAE7C;MAED;IAED;IAEA,IAAKgxB,QAAQ,CAACwH,WAAW,GAAG,CAAC,EAAG;MAE/BuT,QAAQ,CAACvT,WAAW,CAACv0C,KAAK,GAAG+sC,QAAQ,CAACwH,WAAW;MACjDuT,QAAQ,CAACtT,cAAc,CAACx0C,KAAK,GAAG+sC,QAAQ,CAACyH,cAAc;MACvDsT,QAAQ,CAACod,2BAA2B,CAACllE,KAAK,GAAG+sC,QAAQ,CAAC0H,yBAAyB,CAAE,CAAC,CAAE;MACpFqT,QAAQ,CAACqd,2BAA2B,CAACnlE,KAAK,GAAG+sC,QAAQ,CAAC0H,yBAAyB,CAAE,CAAC,CAAE;MAEpF,IAAK1H,QAAQ,CAAC2H,cAAc,EAAG;QAE9BoT,QAAQ,CAACpT,cAAc,CAAC10C,KAAK,GAAG+sC,QAAQ,CAAC2H,cAAc;QAEvDqsE,uBAAuB,CAAEh0E,QAAQ,CAAC2H,cAAc,EAAEoT,QAAQ,CAACmd,uBAAwB,CAAC;MAErF;MAEA,IAAKl4B,QAAQ,CAAC4H,uBAAuB,EAAG;QAEvCmT,QAAQ,CAACnT,uBAAuB,CAAC30C,KAAK,GAAG+sC,QAAQ,CAAC4H,uBAAuB;QAEzEosE,uBAAuB,CAAEh0E,QAAQ,CAAC4H,uBAAuB,EAAEmT,QAAQ,CAACsd,gCAAiC,CAAC;MAEvG;IAED;IAEA,IAAKr4B,QAAQ,CAAC0J,YAAY,GAAG,CAAC,EAAG;MAEhCqR,QAAQ,CAACrR,YAAY,CAACz2C,KAAK,GAAG+sC,QAAQ,CAAC0J,YAAY;MACnDqR,QAAQ,CAAC6d,sBAAsB,CAAC3lE,KAAK,GAAGqhH,wBAAwB,CAACh0F,OAAO;MACxEy6B,QAAQ,CAAC4d,uBAAuB,CAAC1lE,KAAK,CAACkZ,GAAG,CAAEmoG,wBAAwB,CAACv7F,KAAK,EAAEu7F,wBAAwB,CAACt7F,MAAO,CAAC;MAE7G,IAAKgnB,QAAQ,CAAC2J,eAAe,EAAG;QAE/BoR,QAAQ,CAACpR,eAAe,CAAC12C,KAAK,GAAG+sC,QAAQ,CAAC2J,eAAe;QAEzDqqE,uBAAuB,CAAEh0E,QAAQ,CAAC2J,eAAe,EAAEoR,QAAQ,CAAC2d,wBAAyB,CAAC;MAEvF;MAEA3d,QAAQ,CAACnR,SAAS,CAAC32C,KAAK,GAAG+sC,QAAQ,CAAC4J,SAAS;MAE7C,IAAK5J,QAAQ,CAAC6J,YAAY,EAAG;QAE5BkR,QAAQ,CAAClR,YAAY,CAAC52C,KAAK,GAAG+sC,QAAQ,CAAC6J,YAAY;QAEnDmqE,uBAAuB,CAAEh0E,QAAQ,CAAC6J,YAAY,EAAEkR,QAAQ,CAAC8d,qBAAsB,CAAC;MAEjF;MAEA9d,QAAQ,CAACjR,mBAAmB,CAAC72C,KAAK,GAAG+sC,QAAQ,CAAC8J,mBAAmB;MACjEiR,QAAQ,CAAChR,gBAAgB,CAAC92C,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAAC+J,gBAAiB,CAAC;IAElE;IAEA,IAAK/J,QAAQ,CAACtkB,UAAU,GAAG,CAAC,EAAG;MAE9Bq/B,QAAQ,CAACie,gBAAgB,CAAC/lE,KAAK,CAACkZ,GAAG,CAAE6zB,QAAQ,CAACtkB,UAAU,GAAGzT,IAAI,CAACwD,GAAG,CAAEu0B,QAAQ,CAAC6H,kBAAmB,CAAC,EAAE7H,QAAQ,CAACtkB,UAAU,GAAGzT,IAAI,CAACyD,GAAG,CAAEs0B,QAAQ,CAAC6H,kBAAmB,CAAE,CAAC;MAEnK,IAAK7H,QAAQ,CAAC8H,aAAa,EAAG;QAE7BiT,QAAQ,CAACjT,aAAa,CAAC70C,KAAK,GAAG+sC,QAAQ,CAAC8H,aAAa;QAErDksE,uBAAuB,CAAEh0E,QAAQ,CAAC8H,aAAa,EAAEiT,QAAQ,CAACke,sBAAuB,CAAC;MAEnF;IAED;IAEAle,QAAQ,CAAChU,iBAAiB,CAAC9zC,KAAK,GAAG+sC,QAAQ,CAAC+G,iBAAiB;IAC7DgU,QAAQ,CAAC/T,aAAa,CAAC/zC,KAAK,CAAC2a,IAAI,CAAEoyB,QAAQ,CAACgH,aAAc,CAAC;IAE3D,IAAKhH,QAAQ,CAACmJ,gBAAgB,EAAG;MAEhC4R,QAAQ,CAAC5R,gBAAgB,CAACl2C,KAAK,GAAG+sC,QAAQ,CAACmJ,gBAAgB;MAE3D6qE,uBAAuB,CAAEh0E,QAAQ,CAACmJ,gBAAgB,EAAE4R,QAAQ,CAAC+d,yBAA0B,CAAC;IAEzF;IAEA,IAAK94B,QAAQ,CAACkJ,oBAAoB,EAAG;MAEpC6R,QAAQ,CAAC7R,oBAAoB,CAACj2C,KAAK,GAAG+sC,QAAQ,CAACkJ,oBAAoB;MAEnE8qE,uBAAuB,CAAEh0E,QAAQ,CAACkJ,oBAAoB,EAAE6R,QAAQ,CAACge,6BAA8B,CAAC;IAEjG;EAED;EAEA,SAASk8C,qBAAqBA,CAAEl6D,QAAQ,EAAE/a,QAAQ,EAAG;IAEpD,IAAKA,QAAQ,CAACgI,MAAM,EAAG;MAEtB+S,QAAQ,CAAC/S,MAAM,CAAC/0C,KAAK,GAAG+sC,QAAQ,CAACgI,MAAM;IAExC;EAED;EAEA,SAASktE,uBAAuBA,CAAEn6D,QAAQ,EAAE/a,QAAQ,EAAG;IAEtD,IAAM8nD,KAAK,GAAGlzB,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC,CAAC8nD,KAAK;IAE9C/sC,QAAQ,CAAC2c,iBAAiB,CAACzkE,KAAK,CAACk3B,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;IAC3EmyB,QAAQ,CAAC4c,YAAY,CAAC1kE,KAAK,GAAG60F,KAAK,CAACjwB,MAAM,CAACtvC,MAAM,CAACoP,IAAI;IACtDojB,QAAQ,CAAC6c,WAAW,CAAC3kE,KAAK,GAAG60F,KAAK,CAACjwB,MAAM,CAACtvC,MAAM,CAACqP,GAAG;EAErD;EAEA,OAAO;IACNq8E,kBAAkB,EAAEA,kBAAkB;IACtCG,uBAAuB,EAAEA;EAC1B,CAAC;AAEF;AAEA,SAASyB,mBAAmBA,CAAElwD,EAAE,EAAEwZ,IAAI,EAAEvZ,YAAY,EAAE0T,KAAK,EAAG;EAE7D,IAAIxT,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIgwD,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,sBAAsB,GAAG,EAAE;EAE/B,IAAMC,gBAAgB,GAAKpwD,YAAY,CAACC,QAAQ,GAAKF,EAAE,CAAC74B,YAAY,CAAE64B,EAAE,CAACswD,2BAA4B,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE5G,SAASC,IAAIA,CAAErc,aAAa,EAAEn+B,OAAO,EAAG;IAEvC,IAAMy6C,YAAY,GAAGz6C,OAAO,CAACA,OAAO;IACpCpC,KAAK,CAAC0gC,mBAAmB,CAAEH,aAAa,EAAEsc,YAAa,CAAC;EAEzD;EAEA,SAAS/yF,MAAMA,CAAEy2E,aAAa,EAAEn+B,OAAO,EAAG;IAEzC,IAAI7lD,MAAM,GAAGiwC,OAAO,CAAE+zC,aAAa,CAACx8D,EAAE,CAAE;IAExC,IAAKxnB,MAAM,KAAK3b,SAAS,EAAG;MAE3Bk8G,oBAAoB,CAAEvc,aAAc,CAAC;MAErChkF,MAAM,GAAGmwC,YAAY,CAAE6zC,aAAc,CAAC;MACtC/zC,OAAO,CAAE+zC,aAAa,CAACx8D,EAAE,CAAE,GAAGxnB,MAAM;MAEpCgkF,aAAa,CAAC5yF,gBAAgB,CAAE,SAAS,EAAEovG,uBAAwB,CAAC;IAErE;;IAEA;;IAEA,IAAMF,YAAY,GAAGz6C,OAAO,CAACA,OAAO;IACpCpC,KAAK,CAACsgC,gBAAgB,CAAEC,aAAa,EAAEsc,YAAa,CAAC;;IAErD;;IAEA,IAAM9wD,KAAK,GAAG8Z,IAAI,CAACne,MAAM,CAACqE,KAAK;IAE/B,IAAKywD,UAAU,CAAEjc,aAAa,CAACx8D,EAAE,CAAE,KAAKgoB,KAAK,EAAG;MAE/CixD,gBAAgB,CAAEzc,aAAc,CAAC;MAEjCic,UAAU,CAAEjc,aAAa,CAACx8D,EAAE,CAAE,GAAGgoB,KAAK;IAEvC;EAED;EAEA,SAASW,YAAYA,CAAE6zC,aAAa,EAAG;IAEtC;;IAEA,IAAM0c,iBAAiB,GAAGC,yBAAyB,CAAC,CAAC;IACrD3c,aAAa,CAACI,mBAAmB,GAAGsc,iBAAiB;IAErD,IAAM1gG,MAAM,GAAG8vC,EAAE,CAACK,YAAY,CAAC,CAAC;IAChC,IAAM36B,IAAI,GAAGwuE,aAAa,CAAC4c,MAAM;IACjC,IAAM5nE,KAAK,GAAGgrD,aAAa,CAAChrD,KAAK;IAEjC8W,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC+wD,cAAc,EAAE7gG,MAAO,CAAC;IAC1C8vC,EAAE,CAACQ,UAAU,CAAER,EAAE,CAAC+wD,cAAc,EAAErrF,IAAI,EAAEwjB,KAAM,CAAC;IAC/C8W,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC+wD,cAAc,EAAE,IAAK,CAAC;IACxC/wD,EAAE,CAACgxD,cAAc,CAAEhxD,EAAE,CAAC+wD,cAAc,EAAEH,iBAAiB,EAAE1gG,MAAO,CAAC;IAEjE,OAAOA,MAAM;EAEd;EAEA,SAAS2gG,yBAAyBA,CAAA,EAAG;IAEpC,KAAM,IAAItjH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8iH,gBAAgB,EAAE9iH,CAAC,EAAG,EAAG;MAE7C,IAAK6iH,sBAAsB,CAAC1uG,OAAO,CAAEnU,CAAE,CAAC,KAAK,CAAE,CAAC,EAAG;QAElD6iH,sBAAsB,CAAC7+G,IAAI,CAAEhE,CAAE,CAAC;QAChC,OAAOA,CAAC;MAET;IAED;IAEAkZ,OAAO,CAACywB,KAAK,CAAE,uFAAwF,CAAC;IAExG,OAAO,CAAC;EAET;EAEA,SAASy5E,gBAAgBA,CAAEzc,aAAa,EAAG;IAE1C,IAAMhkF,MAAM,GAAGiwC,OAAO,CAAE+zC,aAAa,CAACx8D,EAAE,CAAE;IAC1C,IAAM0d,QAAQ,GAAG8+C,aAAa,CAAC9+C,QAAQ;IACvC,IAAM3a,KAAK,GAAGy5D,aAAa,CAAC+c,OAAO;IAEnCjxD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC+wD,cAAc,EAAE7gG,MAAO,CAAC;IAE1C,KAAM,IAAI3iB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGu4B,QAAQ,CAACxjD,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;MAErD,IAAM4pD,OAAO,GAAG/B,QAAQ,CAAE7nD,CAAC,CAAE;;MAE7B;;MAEA,IAAK2jH,iBAAiB,CAAE/5D,OAAO,EAAE5pD,CAAC,EAAEktC,KAAM,CAAC,KAAK,IAAI,EAAG;QAEtD,IAAM5vB,MAAM,GAAGssC,OAAO,CAACg6D,QAAQ;QAE/B,IAAM5hH,MAAM,GAAGqlB,KAAK,CAACC,OAAO,CAAEsiC,OAAO,CAAC7pD,KAAM,CAAC,GAAG6pD,OAAO,CAAC7pD,KAAK,GAAG,CAAE6pD,OAAO,CAAC7pD,KAAK,CAAE;QAEjF,IAAI8jH,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAI7jH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgC,MAAM,CAACqC,MAAM,EAAErE,IAAC,EAAG,EAAG;UAE1C,IAAMD,OAAK,GAAGiC,MAAM,CAAEhC,IAAC,CAAE;UAEzB,IAAMisE,KAAI,GAAG63C,cAAc,CAAE/jH,OAAM,CAAC;UAEpC,IAAK,OAAOA,OAAK,KAAK,QAAQ,EAAG;YAEhC6pD,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK;YAC3B0yD,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAAC+wD,cAAc,EAAElmG,MAAM,GAAGumG,WAAW,EAAEj6D,OAAO,CAACm6D,MAAO,CAAC;UAE5E,CAAC,MAAM,IAAKhkH,OAAK,CAAC2e,SAAS,EAAG;YAE7B;;YAEAkrC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,CAAC,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YACzCquC,OAAO,CAACm6D,MAAM,CAAE,EAAE,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;YAC1CquC,OAAO,CAACm6D,MAAM,CAAE,EAAE,CAAE,GAAGhkH,OAAK,CAACwb,QAAQ,CAAE,CAAC,CAAE;UAE3C,CAAC,MAAM;YAENxb,OAAK,CAACwd,OAAO,CAAEqsC,OAAO,CAACm6D,MAAM,EAAEF,WAAY,CAAC;YAE5CA,WAAW,IAAI53C,KAAI,CAAC+3C,OAAO,GAAG3qG,YAAY,CAACs6C,iBAAiB;UAE7D;QAED;QAEAlB,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAAC+wD,cAAc,EAAElmG,MAAM,EAAEssC,OAAO,CAACm6D,MAAO,CAAC;MAE9D;IAED;IAEAtxD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC+wD,cAAc,EAAE,IAAK,CAAC;EAEzC;EAEA,SAASG,iBAAiBA,CAAE/5D,OAAO,EAAEr1C,KAAK,EAAE24B,KAAK,EAAG;IAEnD,IAAMntC,KAAK,GAAG6pD,OAAO,CAAC7pD,KAAK;IAE3B,IAAKmtC,KAAK,CAAE34B,KAAK,CAAE,KAAKvN,SAAS,EAAG;MAEnC;;MAEA,IAAK,OAAOjH,KAAK,KAAK,QAAQ,EAAG;QAEhCmtC,KAAK,CAAE34B,KAAK,CAAE,GAAGxU,KAAK;MAEvB,CAAC,MAAM;QAEN,IAAMiC,MAAM,GAAGqlB,KAAK,CAACC,OAAO,CAAEvnB,KAAM,CAAC,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;QAEzD,IAAMkkH,UAAU,GAAG,EAAE;QAErB,KAAM,IAAIjkH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,MAAM,CAACqC,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE1CikH,UAAU,CAACjgH,IAAI,CAAEhC,MAAM,CAAEhC,CAAC,CAAE,CAACya,KAAK,CAAC,CAAE,CAAC;QAEvC;QAEAyyB,KAAK,CAAE34B,KAAK,CAAE,GAAG0vG,UAAU;MAE5B;MAEA,OAAO,IAAI;IAEZ,CAAC,MAAM;MAEN;;MAEA,IAAK,OAAOlkH,KAAK,KAAK,QAAQ,EAAG;QAEhC,IAAKmtC,KAAK,CAAE34B,KAAK,CAAE,KAAKxU,KAAK,EAAG;UAE/BmtC,KAAK,CAAE34B,KAAK,CAAE,GAAGxU,KAAK;UACtB,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAEN,IAAMmkH,aAAa,GAAG78F,KAAK,CAACC,OAAO,CAAE4lB,KAAK,CAAE34B,KAAK,CAAG,CAAC,GAAG24B,KAAK,CAAE34B,KAAK,CAAE,GAAG,CAAE24B,KAAK,CAAE34B,KAAK,CAAE,CAAE;QAC3F,IAAMvS,OAAM,GAAGqlB,KAAK,CAACC,OAAO,CAAEvnB,KAAM,CAAC,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;QAEzD,KAAM,IAAIC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkkH,aAAa,CAAC7/G,MAAM,EAAErE,IAAC,EAAG,EAAG;UAEjD,IAAMmkH,YAAY,GAAGD,aAAa,CAAElkH,IAAC,CAAE;UAEvC,IAAKmkH,YAAY,CAAC/mG,MAAM,CAAEpb,OAAM,CAAEhC,IAAC,CAAG,CAAC,KAAK,KAAK,EAAG;YAEnDmkH,YAAY,CAACzpG,IAAI,CAAE1Y,OAAM,CAAEhC,IAAC,CAAG,CAAC;YAChC,OAAO,IAAI;UAEZ;QAED;MAED;IAED;IAEA,OAAO,KAAK;EAEb;EAEA,SAASkjH,oBAAoBA,CAAEvc,aAAa,EAAG;IAE9C;IACA;;IAEA,IAAM9+C,QAAQ,GAAG8+C,aAAa,CAAC9+C,QAAQ;IAEvC,IAAIvqC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChB,IAAM8mG,SAAS,GAAG,EAAE,CAAC,CAAC;IACtB,IAAIC,WAAW,GAAG,CAAC,CAAC,CAAC;;IAErB,KAAM,IAAIrkH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGumD,QAAQ,CAACxjD,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEnD,IAAM4pD,OAAO,GAAG/B,QAAQ,CAAE7nD,CAAC,CAAE;MAE7B,IAAMskH,KAAK,GAAG;QACbC,QAAQ,EAAE,CAAC;QAAE;QACbP,OAAO,EAAE,CAAC,CAAC;MACZ,CAAC;;MAED,IAAMhiH,MAAM,GAAGqlB,KAAK,CAACC,OAAO,CAAEsiC,OAAO,CAAC7pD,KAAM,CAAC,GAAG6pD,OAAO,CAAC7pD,KAAK,GAAG,CAAE6pD,OAAO,CAAC7pD,KAAK,CAAE;MAEjF,KAAM,IAAIy7B,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAG1+C,MAAM,CAACqC,MAAM,EAAEm3B,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;QAEnD,IAAMz7B,OAAK,GAAGiC,MAAM,CAAEw5B,CAAC,CAAE;QAEzB,IAAMywC,MAAI,GAAG63C,cAAc,CAAE/jH,OAAM,CAAC;QAEpCukH,KAAK,CAACC,QAAQ,IAAIt4C,MAAI,CAACs4C,QAAQ;QAC/BD,KAAK,CAACN,OAAO,IAAI/3C,MAAI,CAAC+3C,OAAO;MAE9B;;MAEA;;MAEAp6D,OAAO,CAACm6D,MAAM,GAAG,IAAI1qG,YAAY,CAAEirG,KAAK,CAACN,OAAO,GAAG3qG,YAAY,CAACs6C,iBAAkB,CAAC;MACnF/J,OAAO,CAACg6D,QAAQ,GAAGtmG,MAAM;;MAEzB;;MAEA,IAAKtd,CAAC,GAAG,CAAC,EAAG;QAEZqkH,WAAW,GAAG/mG,MAAM,GAAG8mG,SAAS;QAEhC,IAAMI,oBAAoB,GAAGJ,SAAS,GAAGC,WAAW;;QAEpD;;QAEA,IAAKA,WAAW,KAAK,CAAC,IAAMG,oBAAoB,GAAGF,KAAK,CAACC,QAAQ,GAAK,CAAC,EAAG;UAEzE;;UAEAjnG,MAAM,IAAM8mG,SAAS,GAAGC,WAAa;UACrCz6D,OAAO,CAACg6D,QAAQ,GAAGtmG,MAAM;QAE1B;MAED;MAEAA,MAAM,IAAIgnG,KAAK,CAACN,OAAO;IAExB;;IAEA;;IAEAK,WAAW,GAAG/mG,MAAM,GAAG8mG,SAAS;IAEhC,IAAKC,WAAW,GAAG,CAAC,EAAG/mG,MAAM,IAAM8mG,SAAS,GAAGC,WAAa;;IAE5D;;IAEA1d,aAAa,CAAC4c,MAAM,GAAGjmG,MAAM;IAC7BqpF,aAAa,CAAC+c,OAAO,GAAG,CAAC,CAAC;IAE1B,OAAO,IAAI;EAEZ;EAEA,SAASI,cAAcA,CAAE/jH,KAAK,EAAG;IAEhC,IAAMksE,IAAI,GAAG;MACZs4C,QAAQ,EAAE,CAAC;MAAE;MACbP,OAAO,EAAE,CAAC,CAAC;IACZ,CAAC;;IAED;;IAEA,IAAK,OAAOjkH,KAAK,KAAK,QAAQ,EAAG;MAEhC;;MAEAksE,IAAI,CAACs4C,QAAQ,GAAG,CAAC;MACjBt4C,IAAI,CAAC+3C,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKjkH,KAAK,CAACka,SAAS,EAAG;MAE7B;;MAEAgyD,IAAI,CAACs4C,QAAQ,GAAG,CAAC;MACjBt4C,IAAI,CAAC+3C,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKjkH,KAAK,CAACs0B,SAAS,IAAIt0B,KAAK,CAACosC,OAAO,EAAG;MAE9C;;MAEA8/B,IAAI,CAACs4C,QAAQ,GAAG,EAAE;MAClBt4C,IAAI,CAAC+3C,OAAO,GAAG,EAAE,CAAC,CAAC;IAEpB,CAAC,MAAM,IAAKjkH,KAAK,CAAC4qB,SAAS,EAAG;MAE7B;;MAEAshD,IAAI,CAACs4C,QAAQ,GAAG,EAAE;MAClBt4C,IAAI,CAAC+3C,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKjkH,KAAK,CAAC2e,SAAS,EAAG;MAE7B;;MAEAutD,IAAI,CAACs4C,QAAQ,GAAG,EAAE;MAClBt4C,IAAI,CAAC+3C,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKjkH,KAAK,CAACqgC,SAAS,EAAG;MAE7B;;MAEA6rC,IAAI,CAACs4C,QAAQ,GAAG,EAAE;MAClBt4C,IAAI,CAAC+3C,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKjkH,KAAK,CAAC4oB,SAAS,EAAG;MAE7BzP,OAAO,CAACC,IAAI,CAAE,6EAA8E,CAAC;IAE9F,CAAC,MAAM;MAEND,OAAO,CAACC,IAAI,CAAE,sDAAsD,EAAEpZ,KAAM,CAAC;IAE9E;IAEA,OAAOksE,IAAI;EAEZ;EAEA,SAASk3C,uBAAuBA,CAAEzuG,KAAK,EAAG;IAEzC,IAAMiyF,aAAa,GAAGjyF,KAAK,CAACxO,MAAM;IAElCygG,aAAa,CAACtyF,mBAAmB,CAAE,SAAS,EAAE8uG,uBAAwB,CAAC;IAEvE,IAAM5uG,KAAK,GAAGsuG,sBAAsB,CAAC1uG,OAAO,CAAEwyF,aAAa,CAACI,mBAAoB,CAAC;IACjF8b,sBAAsB,CAACruG,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;IAEzCk+C,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAE+zC,aAAa,CAACx8D,EAAE,CAAG,CAAC;IAE9C,OAAOyoB,OAAO,CAAE+zC,aAAa,CAACx8D,EAAE,CAAE;IAClC,OAAOy4E,UAAU,CAAEjc,aAAa,CAACx8D,EAAE,CAAE;EAEtC;EAEA,SAAShgB,OAAOA,CAAA,EAAG;IAElB,KAAM,IAAMggB,EAAE,IAAIyoB,OAAO,EAAG;MAE3BH,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAEzoB,EAAE,CAAG,CAAC;IAEjC;IAEA04E,sBAAsB,GAAG,EAAE;IAC3BjwD,OAAO,GAAG,CAAC,CAAC;IACZgwD,UAAU,GAAG,CAAC,CAAC;EAEhB;EAEA,OAAO;IAENI,IAAI,EAAEA,IAAI;IACV9yF,MAAM,EAAEA,MAAM;IAEd/F,OAAO,EAAEA;EAEV,CAAC;AAEF;AAAC,IAEKs6F,aAAa,GAAAr9G,OAAA,CAAAq9G,aAAA;EAElB,SAAAA,cAAaj4E,UAAU,GAAG,CAAC,CAAC,EAAG;IAAA1mC,eAAA,OAAA2+G,aAAA;IAE9B,IAAAC,kBAAA,GAWIl4E,UAAU,CAVbzpB,MAAM;MAANA,MAAM,GAAA2hG,kBAAA,cAAG5hG,mBAAmB,CAAC,CAAC,GAAA4hG,kBAAA;MAAAC,mBAAA,GAU3Bn4E,UAAU,CATbzmB,OAAO;MAAPA,OAAO,GAAA4+F,mBAAA,cAAG,IAAI,GAAAA,mBAAA;MAAAC,iBAAA,GASXp4E,UAAU,CARb7f,KAAK;MAALA,KAAK,GAAAi4F,iBAAA,cAAG,IAAI,GAAAA,iBAAA;MAAAC,mBAAA,GAQTr4E,UAAU,CAPbsiB,OAAO;MAAPA,OAAO,GAAA+1D,mBAAA,cAAG,IAAI,GAAAA,mBAAA;MAAAC,iBAAA,GAOXt4E,UAAU,CANbxvB,KAAK;MAALA,KAAK,GAAA8nG,iBAAA,cAAG,KAAK,GAAAA,iBAAA;MAAAC,qBAAA,GAMVv4E,UAAU,CALbkxE,SAAS;MAATA,SAAS,GAAAqH,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAC,qBAAA,GAKdx4E,UAAU,CAJbiG,kBAAkB;MAAlBA,kBAAkB,GAAAuyE,qBAAA,cAAG,IAAI,GAAAA,qBAAA;MAAAC,qBAAA,GAItBz4E,UAAU,CAHb04E,qBAAqB;MAArBA,qBAAqB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAE,qBAAA,GAG1B34E,UAAU,CAFb44E,eAAe;MAAfA,eAAe,GAAAD,qBAAA,cAAG,SAAS,GAAAA,qBAAA;MAAAE,qBAAA,GAExB74E,UAAU,CADb84E,4BAA4B;MAA5BA,4BAA4B,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAGrC,IAAI,CAACE,eAAe,GAAG,IAAI;IAE3B,IAAIC,MAAM;IAEV,IAAKz/F,OAAO,KAAK,IAAI,EAAG;MAEvBy/F,MAAM,GAAGz/F,OAAO,CAACi1F,oBAAoB,CAAC,CAAC,CAACh+F,KAAK;IAE9C,CAAC,MAAM;MAENwoG,MAAM,GAAGxoG,KAAK;IAEf;IAEA,IAAMyoG,cAAc,GAAG,IAAInsG,WAAW,CAAE,CAAE,CAAC;IAC3C,IAAMosG,aAAa,GAAG,IAAIjsG,UAAU,CAAE,CAAE,CAAC;IAEzC,IAAIksG,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,kBAAkB,GAAG,IAAI;;IAE7B;IACA;;IAEA,IAAMC,eAAe,GAAG,EAAE;IAC1B,IAAMC,gBAAgB,GAAG,EAAE;;IAE3B;;IAEA,IAAI,CAACC,UAAU,GAAGhjG,MAAM;;IAExB;IACA,IAAI,CAACkpE,KAAK,GAAG;MAEZ;AACH;AACA;AACA;MACGC,iBAAiB,EAAE,IAAI;MACvB;AACH;AACA;AACA;MACGQ,aAAa,EAAE;IAChB,CAAC;;IAED;;IAEA,IAAI,CAACvlB,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;;IAEA,IAAI,CAAC0+C,WAAW,GAAG,IAAI;;IAEvB;;IAEA,IAAI,CAACl0E,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC88B,oBAAoB,GAAG,KAAK;;IAEjC;;IAEA,IAAI,CAACq3C,iBAAiB,GAAGj1G,cAAc;;IAEvC;;IAEA,IAAI,CAAC+hF,gBAAgB,GAAG,KAAK;;IAE7B;;IAEA,IAAI,CAACxrB,WAAW,GAAG38D,aAAa;IAChC,IAAI,CAACs7G,mBAAmB,GAAG,GAAG;;IAE9B;;IAEA,IAAMC,KAAK,GAAG,IAAI;IAElB,IAAIC,cAAc,GAAG,KAAK;;IAE1B;;IAEA,IAAIC,sBAAsB,GAAG,CAAC;IAC9B,IAAIC,yBAAyB,GAAG,CAAC;IACjC,IAAIC,oBAAoB,GAAG,IAAI;IAC/B,IAAIC,kBAAkB,GAAG,CAAE,CAAC;IAE5B,IAAIC,cAAc,GAAG,IAAI;IAEzB,IAAMC,gBAAgB,GAAG,IAAIn8F,OAAO,CAAC,CAAC;IACtC,IAAMo8F,eAAe,GAAG,IAAIp8F,OAAO,CAAC,CAAC;IACrC,IAAIq8F,mBAAmB,GAAG,IAAI;IAE9B,IAAMC,kBAAkB,GAAG,IAAI9uE,KAAK,CAAE,QAAS,CAAC;IAChD,IAAI+uE,kBAAkB,GAAG,CAAC;;IAE1B;;IAEA,IAAIC,MAAM,GAAGhkG,MAAM,CAAC8C,KAAK;IACzB,IAAImhG,OAAO,GAAGjkG,MAAM,CAAC+C,MAAM;IAE3B,IAAImhG,WAAW,GAAG,CAAC;IACnB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,gBAAgB,GAAG,IAAI;IAE3B,IAAMttB,SAAS,GAAG,IAAItvE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEw8F,MAAM,EAAEC,OAAQ,CAAC;IACtD,IAAMI,QAAQ,GAAG,IAAI78F,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEw8F,MAAM,EAAEC,OAAQ,CAAC;IACrD,IAAIK,YAAY,GAAG,KAAK;;IAExB;;IAEA,IAAM3tB,QAAQ,GAAG,IAAIvpC,OAAO,CAAC,CAAC;;IAE9B;;IAEA,IAAIm3D,gBAAgB,GAAG,KAAK;IAC5B,IAAIC,qBAAqB,GAAG,KAAK;;IAEjC;;IAEA,IAAIC,yBAAyB,GAAG,IAAI;;IAEpC;;IAEA,IAAMC,iBAAiB,GAAG,IAAI7nF,OAAO,CAAC,CAAC;IAEvC,IAAMovB,QAAQ,GAAG,IAAIj1C,OAAO,CAAC,CAAC;IAC9B,IAAM2tG,QAAQ,GAAG,IAAIvzF,OAAO,CAAC,CAAC;IAE9B,IAAMwzF,WAAW,GAAG;MAAEz7E,UAAU,EAAE,IAAI;MAAEsL,GAAG,EAAE,IAAI;MAAEpL,WAAW,EAAE,IAAI;MAAEw7E,gBAAgB,EAAE,IAAI;MAAE37E,OAAO,EAAE;IAAK,CAAC;IAE7G,SAAS47E,mBAAmBA,CAAA,EAAG;MAE9B,OAAOtB,oBAAoB,KAAK,IAAI,GAAGU,WAAW,GAAG,CAAC;IAEvD;;IAEA;;IAEA,IAAI9f,GAAG,GAAGphF,OAAO;IAEjB,SAASC,UAAUA,CAAE8hG,YAAY,EAAEC,iBAAiB,EAAG;MAEtD,KAAM,IAAI/nH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8nH,YAAY,CAACzjH,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEhD,IAAMgoH,WAAW,GAAGF,YAAY,CAAE9nH,CAAC,CAAE;QACrC,IAAM+lB,SAAO,GAAGhD,MAAM,CAACiD,UAAU,CAAEgiG,WAAW,EAAED,iBAAkB,CAAC;QACnE,IAAKhiG,SAAO,KAAK,IAAI,EAAG,OAAOA,SAAO;MAEvC;MAEA,OAAO,IAAI;IAEZ;IAEA,IAAI;MAEH,IAAMgiG,iBAAiB,GAAG;QACzB/qG,KAAK,EAAE,IAAI;QACX2P,KAAK,EAALA,KAAK;QACLmiC,OAAO,EAAPA,OAAO;QACP4uD,SAAS,EAATA,SAAS;QACTjrE,kBAAkB,EAAlBA,kBAAkB;QAClByyE,qBAAqB,EAArBA,qBAAqB;QACrBE,eAAe,EAAfA,eAAe;QACfE,4BAA4B,EAA5BA;MACD,CAAC;;MAED;MACA,IAAK,cAAc,IAAIviG,MAAM,EAAGA,MAAM,CAAC+8B,YAAY,CAAE,aAAa,eAAAp7B,MAAA,CAAevd,QAAQ,CAAG,CAAC;;MAE7F;MACA4b,MAAM,CAAChP,gBAAgB,CAAE,kBAAkB,EAAEk0G,aAAa,EAAE,KAAM,CAAC;MACnEllG,MAAM,CAAChP,gBAAgB,CAAE,sBAAsB,EAAEm0G,gBAAgB,EAAE,KAAM,CAAC;MAC1EnlG,MAAM,CAAChP,gBAAgB,CAAE,2BAA2B,EAAEo0G,sBAAsB,EAAE,KAAM,CAAC;MAErF,IAAKhhB,GAAG,KAAK,IAAI,EAAG;QAEnB,IAAM2gB,YAAY,GAAG,CAAE,QAAQ,EAAE,OAAO,EAAE,oBAAoB,CAAE;QAEhE,IAAK3B,KAAK,CAACiC,gBAAgB,KAAK,IAAI,EAAG;UAEtCN,YAAY,CAACO,KAAK,CAAC,CAAC;QAErB;QAEAlhB,GAAG,GAAGnhF,UAAU,CAAE8hG,YAAY,EAAEC,iBAAkB,CAAC;QAEnD,IAAK5gB,GAAG,KAAK,IAAI,EAAG;UAEnB,IAAKnhF,UAAU,CAAE8hG,YAAa,CAAC,EAAG;YAEjC,MAAM,IAAIllH,KAAK,CAAE,6DAA8D,CAAC;UAEjF,CAAC,MAAM;YAEN,MAAM,IAAIA,KAAK,CAAE,+BAAgC,CAAC;UAEnD;QAED;MAED;MAEA,IAAK,OAAO0lH,qBAAqB,KAAK,WAAW,IAAInhB,GAAG,YAAYmhB,qBAAqB,EAAG;QAAE;;QAE7FpvG,OAAO,CAACC,IAAI,CAAE,0FAA2F,CAAC;MAE3G;;MAEA;;MAEA,IAAKguF,GAAG,CAACt6B,wBAAwB,KAAK7lE,SAAS,EAAG;QAEjDmgG,GAAG,CAACt6B,wBAAwB,GAAG,YAAY;UAE1C,OAAO;YAAE,UAAU,EAAE,CAAC;YAAE,UAAU,EAAE,CAAC;YAAE,WAAW,EAAE;UAAE,CAAC;QAExD,CAAC;MAEF;IAED,CAAC,CAAC,OAAQljC,KAAK,EAAG;MAEjBzwB,OAAO,CAACywB,KAAK,CAAE,uBAAuB,GAAGA,KAAK,CAACvmB,OAAQ,CAAC;MACxD,MAAMumB,KAAK;IAEZ;IAEA,IAAIwf,UAAU,EAAEuJ,YAAY,EAAE0T,KAAK,EAAE6F,IAAI;IACzC,IAAIvK,UAAU,EAAE13C,QAAQ,EAAEk8C,QAAQ,EAAEC,UAAU,EAAE5sC,UAAU,EAAE+R,UAAU,EAAE+6B,OAAO;IAC/E,IAAIkiD,YAAY,EAAEh9E,SAAS,EAAEi9E,WAAW,EAAE/vB,YAAY,EAAEvvC,QAAQ,EAAE4pC,SAAS;IAE3E,IAAI5mD,UAAU,EAAEu8E,YAAY,EAAEC,cAAc,EAAEC,qBAAqB;IAEnE,IAAIvhB,KAAK,EAAEl/B,aAAa,EAAEpf,cAAc;IAExC,SAAS8/D,aAAaA,CAAA,EAAG;MAExBz/D,UAAU,GAAG,IAAIguB,eAAe,CAAEgwB,GAAI,CAAC;MAEvCz0C,YAAY,GAAG,IAAI8Z,iBAAiB,CAAE26B,GAAG,EAAEh+C,UAAU,EAAE3c,UAAW,CAAC;MAEnE2c,UAAU,CAAC8lB,IAAI,CAAEvc,YAAa,CAAC;MAE/B00C,KAAK,GAAG,IAAImL,UAAU,CAAEpL,GAAG,EAAEh+C,UAAU,EAAEuJ,YAAa,CAAC;MAEvD0T,KAAK,GAAG,IAAIy2B,UAAU,CAAEsK,GAAG,EAAEh+C,UAAU,EAAEuJ,YAAa,CAAC;MAEvDuZ,IAAI,GAAG,IAAIgM,SAAS,CAAEkvB,GAAI,CAAC;MAC3BzlC,UAAU,GAAG,IAAIgyB,eAAe,CAAC,CAAC;MAClC1pE,QAAQ,GAAG,IAAIk9E,aAAa,CAAEC,GAAG,EAAEh+C,UAAU,EAAEid,KAAK,EAAE1E,UAAU,EAAEhP,YAAY,EAAE00C,KAAK,EAAEn7B,IAAK,CAAC;MAC7F/F,QAAQ,GAAG,IAAIkK,aAAa,CAAE+1C,KAAM,CAAC;MACrChgD,UAAU,GAAG,IAAIyQ,eAAe,CAAEuvC,KAAM,CAAC;MACzC5sF,UAAU,GAAG,IAAIi5B,eAAe,CAAE20C,GAAG,EAAEz0C,YAAa,CAAC;MACrDwV,aAAa,GAAG,IAAIL,kBAAkB,CAAEs/B,GAAG,EAAEh+C,UAAU,EAAE5vB,UAAU,EAAEm5B,YAAa,CAAC;MACnFpnB,UAAU,GAAG,IAAI+rC,eAAe,CAAE8vB,GAAG,EAAE5tE,UAAU,EAAE0yC,IAAI,EAAE/D,aAAc,CAAC;MACxE7B,OAAO,GAAG,IAAIqU,YAAY,CAAEysB,GAAG,EAAE77D,UAAU,EAAE/R,UAAU,EAAE0yC,IAAK,CAAC;MAC/Dw8C,YAAY,GAAG,IAAI1vC,iBAAiB,CAAEouB,GAAG,EAAEz0C,YAAY,EAAE1oC,QAAS,CAAC;MACnEk/B,QAAQ,GAAG,IAAIulB,aAAa,CAAE/M,UAAW,CAAC;MAC1C6mD,YAAY,GAAG,IAAIh6B,aAAa,CAAE43B,KAAK,EAAEjgD,QAAQ,EAAEC,UAAU,EAAEhd,UAAU,EAAEuJ,YAAY,EAAEwV,aAAa,EAAEhf,QAAS,CAAC;MAClH3d,SAAS,GAAG,IAAIs1E,cAAc,CAAEsF,KAAK,EAAEzkD,UAAW,CAAC;MACnD8mD,WAAW,GAAG,IAAIl0B,gBAAgB,CAAC,CAAC;MACpCmE,YAAY,GAAG,IAAID,iBAAiB,CAAErvC,UAAU,EAAEuJ,YAAa,CAAC;MAChExmB,UAAU,GAAG,IAAI+5B,eAAe,CAAEkgD,KAAK,EAAEjgD,QAAQ,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEm/C,MAAM,EAAE/yE,kBAAmB,CAAC;MAC3GqgD,SAAS,GAAG,IAAIwG,cAAc,CAAE6sB,KAAK,EAAE9/C,OAAO,EAAE3T,YAAa,CAAC;MAC9D5J,cAAc,GAAG,IAAI65D,mBAAmB,CAAExb,GAAG,EAAEl7B,IAAI,EAAEvZ,YAAY,EAAE0T,KAAM,CAAC;MAE1EsiD,cAAc,GAAG,IAAI18C,mBAAmB,CAAEm7B,GAAG,EAAEh+C,UAAU,EAAE8iB,IAAI,EAAEvZ,YAAa,CAAC;MAC/Ei2D,qBAAqB,GAAG,IAAI5wC,0BAA0B,CAAEovB,GAAG,EAAEh+C,UAAU,EAAE8iB,IAAI,EAAEvZ,YAAa,CAAC;MAE7FuZ,IAAI,CAAC0M,QAAQ,GAAG4vC,YAAY,CAAC5vC,QAAQ;MAErCwtC,KAAK,CAACzzD,YAAY,GAAGA,YAAY;MACjCyzD,KAAK,CAACh9D,UAAU,GAAGA,UAAU;MAC7Bg9D,KAAK,CAACzkD,UAAU,GAAGA,UAAU;MAC7BykD,KAAK,CAACqC,WAAW,GAAGA,WAAW;MAC/BrC,KAAK,CAACrzB,SAAS,GAAGA,SAAS;MAC3BqzB,KAAK,CAAC//C,KAAK,GAAGA,KAAK;MACnB+/C,KAAK,CAACl6C,IAAI,GAAGA,IAAI;IAElB;IAEA28C,aAAa,CAAC,CAAC;;IAEf;;IAEA,IAAMh7D,EAAE,GAAG,IAAIusD,YAAY,CAAEgM,KAAK,EAAEhf,GAAI,CAAC;IAEzC,IAAI,CAACv5C,EAAE,GAAGA,EAAE;;IAEZ;;IAEA,IAAI,CAAC5nC,UAAU,GAAG,YAAY;MAE7B,OAAOmhF,GAAG;IAEX,CAAC;IAED,IAAI,CAAC6T,oBAAoB,GAAG,YAAY;MAEvC,OAAO7T,GAAG,CAAC6T,oBAAoB,CAAC,CAAC;IAElC,CAAC;IAED,IAAI,CAAC6N,gBAAgB,GAAG,YAAY;MAEnC,IAAM7gD,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,oBAAqB,CAAC;MACxD,IAAK8tD,SAAS,EAAGA,SAAS,CAAC8gD,WAAW,CAAC,CAAC;IAEzC,CAAC;IAED,IAAI,CAACC,mBAAmB,GAAG,YAAY;MAEtC,IAAM/gD,SAAS,GAAG7e,UAAU,CAACjvC,GAAG,CAAE,oBAAqB,CAAC;MACxD,IAAK8tD,SAAS,EAAGA,SAAS,CAACghD,cAAc,CAAC,CAAC;IAE5C,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhC,OAAOhC,WAAW;IAEnB,CAAC;IAED,IAAI,CAACiC,aAAa,GAAG,UAAWnpH,KAAK,EAAG;MAEvC,IAAKA,KAAK,KAAKiH,SAAS,EAAG;MAE3BigH,WAAW,GAAGlnH,KAAK;MAEnB,IAAI,CAACstB,OAAO,CAAE05F,MAAM,EAAEC,OAAO,EAAE,KAAM,CAAC;IAEvC,CAAC;IAED,IAAI,CAACpuF,OAAO,GAAG,UAAW1yB,MAAM,EAAG;MAElC,OAAOA,MAAM,CAAC+S,GAAG,CAAE8tG,MAAM,EAAEC,OAAQ,CAAC;IAErC,CAAC;IAED,IAAI,CAAC35F,OAAO,GAAG,UAAWxH,KAAK,EAAEC,MAAM,EAAEqjG,WAAW,GAAG,IAAI,EAAG;MAE7D,IAAKv7D,EAAE,CAAC+tD,YAAY,EAAG;QAEtBziG,OAAO,CAACC,IAAI,CAAE,wEAAyE,CAAC;QACxF;MAED;MAEA4tG,MAAM,GAAGlhG,KAAK;MACdmhG,OAAO,GAAGlhG,MAAM;MAEhB/C,MAAM,CAAC8C,KAAK,GAAG9Q,IAAI,CAACmC,KAAK,CAAE2O,KAAK,GAAGohG,WAAY,CAAC;MAChDlkG,MAAM,CAAC+C,MAAM,GAAG/Q,IAAI,CAACmC,KAAK,CAAE4O,MAAM,GAAGmhG,WAAY,CAAC;MAElD,IAAKkC,WAAW,KAAK,IAAI,EAAG;QAE3BpmG,MAAM,CAACC,KAAK,CAAC6C,KAAK,GAAGA,KAAK,GAAG,IAAI;QACjC9C,MAAM,CAACC,KAAK,CAAC8C,MAAM,GAAGA,MAAM,GAAG,IAAI;MAEpC;MAEA,IAAI,CAACsjG,WAAW,CAAE,CAAC,EAAE,CAAC,EAAEvjG,KAAK,EAAEC,MAAO,CAAC;IAExC,CAAC;IAED,IAAI,CAACujG,oBAAoB,GAAG,UAAWnjH,MAAM,EAAG;MAE/C,OAAOA,MAAM,CAAC+S,GAAG,CAAE8tG,MAAM,GAAGE,WAAW,EAAED,OAAO,GAAGC,WAAY,CAAC,CAAC/vG,KAAK,CAAC,CAAC;IAEzE,CAAC;IAED,IAAI,CAACoyG,oBAAoB,GAAG,UAAWzjG,KAAK,EAAEC,MAAM,EAAEq7F,UAAU,EAAG;MAElE4F,MAAM,GAAGlhG,KAAK;MACdmhG,OAAO,GAAGlhG,MAAM;MAEhBmhG,WAAW,GAAG9F,UAAU;MAExBp+F,MAAM,CAAC8C,KAAK,GAAG9Q,IAAI,CAACmC,KAAK,CAAE2O,KAAK,GAAGs7F,UAAW,CAAC;MAC/Cp+F,MAAM,CAAC+C,MAAM,GAAG/Q,IAAI,CAACmC,KAAK,CAAE4O,MAAM,GAAGq7F,UAAW,CAAC;MAEjD,IAAI,CAACiI,WAAW,CAAE,CAAC,EAAE,CAAC,EAAEvjG,KAAK,EAAEC,MAAO,CAAC;IAExC,CAAC;IAED,IAAI,CAACyjG,kBAAkB,GAAG,UAAWrjH,MAAM,EAAG;MAE7C,OAAOA,MAAM,CAACwU,IAAI,CAAEgsG,gBAAiB,CAAC;IAEvC,CAAC;IAED,IAAI,CAACjrB,WAAW,GAAG,UAAWv1F,MAAM,EAAG;MAEtC,OAAOA,MAAM,CAACwU,IAAI,CAAEm/E,SAAU,CAAC;IAEhC,CAAC;IAED,IAAI,CAACuvB,WAAW,GAAG,UAAWpzG,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAG;MAEnD,IAAK9P,CAAC,CAAC2U,SAAS,EAAG;QAElBkvE,SAAS,CAAC5gF,GAAG,CAAEjD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACvU,CAAC,EAAEuU,CAAC,CAACyU,CAAC,EAAEzU,CAAC,CAAC0U,CAAE,CAAC;MAEpC,CAAC,MAAM;QAENmvE,SAAS,CAAC5gF,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAO,CAAC;MAErC;MAEAsgD,KAAK,CAACt5C,QAAQ,CAAE45F,gBAAgB,CAAChsG,IAAI,CAAEm/E,SAAU,CAAC,CAAC1+E,cAAc,CAAE8rG,WAAY,CAAC,CAAC/vG,KAAK,CAAC,CAAE,CAAC;IAE3F,CAAC;IAED,IAAI,CAACsyG,UAAU,GAAG,UAAWtjH,MAAM,EAAG;MAErC,OAAOA,MAAM,CAACwU,IAAI,CAAE0sG,QAAS,CAAC;IAE/B,CAAC;IAED,IAAI,CAACqC,UAAU,GAAG,UAAWzzG,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAG;MAElD,IAAK9P,CAAC,CAAC2U,SAAS,EAAG;QAElBy8F,QAAQ,CAACnuG,GAAG,CAAEjD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACvU,CAAC,EAAEuU,CAAC,CAACyU,CAAC,EAAEzU,CAAC,CAAC0U,CAAE,CAAC;MAEnC,CAAC,MAAM;QAEN08F,QAAQ,CAACnuG,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAO,CAAC;MAEpC;MAEAsgD,KAAK,CAACx5C,OAAO,CAAE+5F,eAAe,CAACjsG,IAAI,CAAE0sG,QAAS,CAAC,CAACjsG,cAAc,CAAE8rG,WAAY,CAAC,CAAC/vG,KAAK,CAAC,CAAE,CAAC;IAExF,CAAC;IAED,IAAI,CAACwyG,cAAc,GAAG,YAAY;MAEjC,OAAOrC,YAAY;IAEpB,CAAC;IAED,IAAI,CAACrsB,cAAc,GAAG,UAAW2uB,OAAO,EAAG;MAE1CvjD,KAAK,CAAC40B,cAAc,CAAEqsB,YAAY,GAAGsC,OAAQ,CAAC;IAE/C,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,UAAW9mH,MAAM,EAAG;MAExCokH,WAAW,GAAGpkH,MAAM;IAErB,CAAC;IAED,IAAI,CAAC+mH,kBAAkB,GAAG,UAAW/mH,MAAM,EAAG;MAE7CqkH,gBAAgB,GAAGrkH,MAAM;IAE1B,CAAC;;IAED;;IAEA,IAAI,CAAC2kE,aAAa,GAAG,UAAWvhE,MAAM,EAAG;MAExC,OAAOA,MAAM,CAACwU,IAAI,CAAEwxB,UAAU,CAACu7B,aAAa,CAAC,CAAE,CAAC;IAEjD,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhCx7B,UAAU,CAACw7B,aAAa,CAAC39B,KAAK,CAAEmC,UAAU,EAAExC,SAAU,CAAC;IAExD,CAAC;IAED,IAAI,CAACi+B,aAAa,GAAG,YAAY;MAEhC,OAAOz7B,UAAU,CAACy7B,aAAa,CAAC,CAAC;IAElC,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhC17B,UAAU,CAAC07B,aAAa,CAAC79B,KAAK,CAAEmC,UAAU,EAAExC,SAAU,CAAC;IAExD,CAAC;IAED,IAAI,CAACI,KAAK,GAAG,UAAWjmB,KAAK,GAAG,IAAI,EAAE8I,KAAK,GAAG,IAAI,EAAEmiC,OAAO,GAAG,IAAI,EAAG;MAEpE,IAAIg7D,IAAI,GAAG,CAAC;MAEZ,IAAKjmG,KAAK,EAAG;QAEZ;QACA,IAAIkmG,eAAe,GAAG,KAAK;QAC3B,IAAKxD,oBAAoB,KAAK,IAAI,EAAG;UAEpC,IAAMyD,YAAY,GAAGzD,oBAAoB,CAACn5F,OAAO,CAAC7E,MAAM;UACxDwhG,eAAe,GAAGC,YAAY,KAAKt8G,iBAAiB,IACnDs8G,YAAY,KAAKv8G,eAAe,IAChCu8G,YAAY,KAAKz8G,gBAAgB;QAEnC;;QAEA;QACA;QACA,IAAKw8G,eAAe,EAAG;UAEtB,IAAME,UAAU,GAAG1D,oBAAoB,CAACn5F,OAAO,CAAClsB,IAAI;UACpD,IAAMgpH,cAAc,GAAGD,UAAU,KAAK59G,gBAAgB,IACrD49G,UAAU,KAAKv9G,eAAe,IAC9Bu9G,UAAU,KAAKz9G,iBAAiB,IAChCy9G,UAAU,KAAKl9G,kBAAkB,IACjCk9G,UAAU,KAAKp9G,qBAAqB,IACpCo9G,UAAU,KAAKn9G,qBAAqB;UAErC,IAAMw5D,UAAU,GAAGp6B,UAAU,CAACu7B,aAAa,CAAC,CAAC;UAC7C,IAAMvnE,CAAC,GAAGgsC,UAAU,CAACy7B,aAAa,CAAC,CAAC;UACpC,IAAMnoE,CAAC,GAAG8mE,UAAU,CAAC9mE,CAAC;UACtB,IAAMyC,CAAC,GAAGqkE,UAAU,CAACrkE,CAAC;UACtB,IAAMoW,CAAC,GAAGiuD,UAAU,CAACjuD,CAAC;UAEtB,IAAK6xG,cAAc,EAAG;YAErBzE,cAAc,CAAE,CAAC,CAAE,GAAGjmH,CAAC;YACvBimH,cAAc,CAAE,CAAC,CAAE,GAAGxjH,CAAC;YACvBwjH,cAAc,CAAE,CAAC,CAAE,GAAGptG,CAAC;YACvBotG,cAAc,CAAE,CAAC,CAAE,GAAGvlH,CAAC;YACvBinG,GAAG,CAACgjB,cAAc,CAAEhjB,GAAG,CAACijB,KAAK,EAAE,CAAC,EAAE3E,cAAe,CAAC;UAEnD,CAAC,MAAM;YAENC,aAAa,CAAE,CAAC,CAAE,GAAGlmH,CAAC;YACtBkmH,aAAa,CAAE,CAAC,CAAE,GAAGzjH,CAAC;YACtByjH,aAAa,CAAE,CAAC,CAAE,GAAGrtG,CAAC;YACtBqtG,aAAa,CAAE,CAAC,CAAE,GAAGxlH,CAAC;YACtBinG,GAAG,CAACkjB,aAAa,CAAEljB,GAAG,CAACijB,KAAK,EAAE,CAAC,EAAE1E,aAAc,CAAC;UAEjD;QAED,CAAC,MAAM;UAENoE,IAAI,IAAI3iB,GAAG,CAAC0K,gBAAgB;QAE7B;MAED;MAEA,IAAKllF,KAAK,EAAGm9F,IAAI,IAAI3iB,GAAG,CAAC+K,gBAAgB;MACzC,IAAKpjD,OAAO,EAAGg7D,IAAI,IAAI3iB,GAAG,CAACgL,kBAAkB;MAE7ChL,GAAG,CAACr9D,KAAK,CAAEggF,IAAK,CAAC;IAElB,CAAC;IAED,IAAI,CAACxjD,UAAU,GAAG,YAAY;MAE7B,IAAI,CAACx8B,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,KAAM,CAAC;IAEjC,CAAC;IAED,IAAI,CAACy0D,UAAU,GAAG,YAAY;MAE7B,IAAI,CAACz0D,KAAK,CAAE,KAAK,EAAE,IAAI,EAAE,KAAM,CAAC;IAEjC,CAAC;IAED,IAAI,CAACw1D,YAAY,GAAG,YAAY;MAE/B,IAAI,CAACx1D,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,IAAK,CAAC;IAEjC,CAAC;;IAED;;IAEA,IAAI,CAAC3f,OAAO,GAAG,YAAY;MAE1BpH,MAAM,CAAC1O,mBAAmB,CAAE,kBAAkB,EAAE4zG,aAAa,EAAE,KAAM,CAAC;MACtEllG,MAAM,CAAC1O,mBAAmB,CAAE,sBAAsB,EAAE6zG,gBAAgB,EAAE,KAAM,CAAC;MAC7EnlG,MAAM,CAAC1O,mBAAmB,CAAE,2BAA2B,EAAE8zG,sBAAsB,EAAE,KAAM,CAAC;MAExFK,WAAW,CAACr+F,OAAO,CAAC,CAAC;MACrBsuE,YAAY,CAACtuE,OAAO,CAAC,CAAC;MACtBu3C,UAAU,CAACv3C,OAAO,CAAC,CAAC;MACpB+7C,QAAQ,CAAC/7C,OAAO,CAAC,CAAC;MAClBg8C,UAAU,CAACh8C,OAAO,CAAC,CAAC;MACpBk8C,OAAO,CAACl8C,OAAO,CAAC,CAAC;MACjB+9C,aAAa,CAAC/9C,OAAO,CAAC,CAAC;MACvB2+B,cAAc,CAAC3+B,OAAO,CAAC,CAAC;MACxBo+F,YAAY,CAACp+F,OAAO,CAAC,CAAC;MAEtByjC,EAAE,CAACzjC,OAAO,CAAC,CAAC;MAEZyjC,EAAE,CAACv5C,mBAAmB,CAAE,cAAc,EAAEi2G,gBAAiB,CAAC;MAC1D18D,EAAE,CAACv5C,mBAAmB,CAAE,YAAY,EAAEk2G,cAAe,CAAC;MAEtD,IAAK/C,yBAAyB,EAAG;QAEhCA,yBAAyB,CAACr9F,OAAO,CAAC,CAAC;QACnCq9F,yBAAyB,GAAG,IAAI;MAEjC;MAEAx6E,SAAS,CAAC1nC,IAAI,CAAC,CAAC;IAEjB,CAAC;;IAED;;IAEA,SAAS2iH,aAAaA,CAAEvzG,KAAK,EAAG;MAE/BA,KAAK,CAAC81G,cAAc,CAAC,CAAC;MAEtBtxG,OAAO,CAAClB,GAAG,CAAE,oCAAqC,CAAC;MAEnDouG,cAAc,GAAG,IAAI;IAEtB;IAEA,SAAS8B,gBAAgBA,CAAA,CAAE;IAAA,EAAc;MAExChvG,OAAO,CAAClB,GAAG,CAAE,wCAAyC,CAAC;MAEvDouG,cAAc,GAAG,KAAK;MAEtB,IAAMqE,aAAa,GAAGx+C,IAAI,CAAC2M,SAAS;MACpC,IAAMuS,gBAAgB,GAAG2H,SAAS,CAAC1uE,OAAO;MAC1C,IAAMsmG,mBAAmB,GAAG53B,SAAS,CAAC4H,UAAU;MAChD,IAAMiwB,oBAAoB,GAAG73B,SAAS,CAAC/oE,WAAW;MAClD,IAAMq9D,aAAa,GAAG0L,SAAS,CAAC5xF,IAAI;MAEpC0nH,aAAa,CAAC,CAAC;MAEf38C,IAAI,CAAC2M,SAAS,GAAG6xC,aAAa;MAC9B33B,SAAS,CAAC1uE,OAAO,GAAG+mE,gBAAgB;MACpC2H,SAAS,CAAC4H,UAAU,GAAGgwB,mBAAmB;MAC1C53B,SAAS,CAAC/oE,WAAW,GAAG4gG,oBAAoB;MAC5C73B,SAAS,CAAC5xF,IAAI,GAAGkmF,aAAa;IAE/B;IAEA,SAAS+gC,sBAAsBA,CAAEzzG,KAAK,EAAG;MAExCwE,OAAO,CAACywB,KAAK,CAAE,qEAAqE,EAAEj1B,KAAK,CAACk2G,aAAc,CAAC;IAE5G;IAEA,SAASC,iBAAiBA,CAAEn2G,KAAK,EAAG;MAEnC,IAAMo4B,QAAQ,GAAGp4B,KAAK,CAACxO,MAAM;MAE7B4mC,QAAQ,CAACz4B,mBAAmB,CAAE,SAAS,EAAEw2G,iBAAkB,CAAC;MAE5DC,kBAAkB,CAAEh+E,QAAS,CAAC;IAE/B;;IAEA;;IAEA,SAASg+E,kBAAkBA,CAAEh+E,QAAQ,EAAG;MAEvCi+E,gCAAgC,CAAEj+E,QAAS,CAAC;MAE5C40B,UAAU,CAAC93B,MAAM,CAAEkD,QAAS,CAAC;IAE9B;IAGA,SAASi+E,gCAAgCA,CAAEj+E,QAAQ,EAAG;MAErD,IAAM6rC,QAAQ,GAAGjX,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC,CAAC6rC,QAAQ;MAEpD,IAAKA,QAAQ,KAAK3xE,SAAS,EAAG;QAE7B2xE,QAAQ,CAACx2E,OAAO,CAAE,UAAWqmE,OAAO,EAAG;UAEtC+/C,YAAY,CAAC/0B,cAAc,CAAEhrB,OAAQ,CAAC;QAEvC,CAAE,CAAC;QAEH,IAAK17B,QAAQ,CAAC8b,gBAAgB,EAAG;UAEhC2/D,YAAY,CAAC90B,kBAAkB,CAAE3mD,QAAS,CAAC;QAE5C;MAED;IAED;;IAEA;;IAEA,IAAI,CAACkvD,kBAAkB,GAAG,UAAW3mE,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAM,EAAEwpB,KAAK,EAAG;MAEvF,IAAKsL,KAAK,KAAK,IAAI,EAAGA,KAAK,GAAGu6D,WAAW,CAAC,CAAC;;MAE3C,IAAM9iB,WAAW,GAAKvsE,MAAM,CAAC+T,MAAM,IAAI/T,MAAM,CAAC5C,WAAW,CAAChV,WAAW,CAAC,CAAC,GAAG,CAAG;MAE7E,IAAM8nD,OAAO,GAAGwiD,UAAU,CAAE31F,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAO,CAAC;MAEvE8tC,KAAK,CAACw+B,WAAW,CAAE93D,QAAQ,EAAE+3D,WAAY,CAAC;;MAE1C;;MAEA,IAAItwF,KAAK,GAAG+kB,QAAQ,CAAC/kB,KAAK;MAC1B,IAAI02G,WAAW,GAAG,CAAC;MAEnB,IAAKn+E,QAAQ,CAACqK,SAAS,KAAK,IAAI,EAAG;QAElC5iC,KAAK,GAAG+2B,UAAU,CAACusC,qBAAqB,CAAEv+C,QAAS,CAAC;QAEpD,IAAK/kB,KAAK,KAAKvN,SAAS,EAAG;QAE3BikH,WAAW,GAAG,CAAC;MAEhB;;MAEA;;MAEA,IAAMxrE,SAAS,GAAGnmB,QAAQ,CAACmmB,SAAS;MACpC,IAAMjmB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAE7C,IAAI0xF,SAAS,GAAGzrE,SAAS,CAACC,KAAK,GAAGurE,WAAW;MAC7C,IAAIE,OAAO,GAAG,CAAE1rE,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAK,IAAK87F,WAAW;MAEjE,IAAKnpE,KAAK,KAAK,IAAI,EAAG;QAErBopE,SAAS,GAAGn2G,IAAI,CAACa,GAAG,CAAEs1G,SAAS,EAAEppE,KAAK,CAACpC,KAAK,GAAGurE,WAAY,CAAC;QAC5DE,OAAO,GAAGp2G,IAAI,CAACY,GAAG,CAAEw1G,OAAO,EAAE,CAAErpE,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAAC3yB,KAAK,IAAK87F,WAAY,CAAC;MAE3E;MAEA,IAAK12G,KAAK,KAAK,IAAI,EAAG;QAErB22G,SAAS,GAAGn2G,IAAI,CAACa,GAAG,CAAEs1G,SAAS,EAAE,CAAE,CAAC;QACpCC,OAAO,GAAGp2G,IAAI,CAACY,GAAG,CAAEw1G,OAAO,EAAE52G,KAAK,CAAC4a,KAAM,CAAC;MAE3C,CAAC,MAAM,IAAKqK,QAAQ,KAAKxyB,SAAS,IAAIwyB,QAAQ,KAAK,IAAI,EAAG;QAEzD0xF,SAAS,GAAGn2G,IAAI,CAACa,GAAG,CAAEs1G,SAAS,EAAE,CAAE,CAAC;QACpCC,OAAO,GAAGp2G,IAAI,CAACY,GAAG,CAAEw1G,OAAO,EAAE3xF,QAAQ,CAACrK,KAAM,CAAC;MAE9C;MAEA,IAAMi8F,SAAS,GAAGD,OAAO,GAAGD,SAAS;MAErC,IAAKE,SAAS,GAAG,CAAC,IAAIA,SAAS,KAAK3zF,QAAQ,EAAG;;MAE/C;;MAEAywC,aAAa,CAACK,KAAK,CAAEjwC,MAAM,EAAEwU,QAAQ,EAAE07B,OAAO,EAAElvC,QAAQ,EAAE/kB,KAAM,CAAC;MAEjE,IAAIkJ,SAAS;MACb,IAAIwqC,QAAQ,GAAGygE,cAAc;MAE7B,IAAKn0G,KAAK,KAAK,IAAI,EAAG;QAErBkJ,SAAS,GAAG8b,UAAU,CAACrf,GAAG,CAAE3F,KAAM,CAAC;QAEnC0zC,QAAQ,GAAG0gE,qBAAqB;QAChC1gE,QAAQ,CAACrI,QAAQ,CAAEniC,SAAU,CAAC;MAE/B;;MAEA;;MAEA,IAAK6a,MAAM,CAAC+T,MAAM,EAAG;QAEpB,IAAKS,QAAQ,CAACqK,SAAS,KAAK,IAAI,EAAG;UAElCivB,KAAK,CAACk/B,YAAY,CAAEx4D,QAAQ,CAACsK,kBAAkB,GAAGywE,mBAAmB,CAAC,CAAE,CAAC;UACzE5/D,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC5uB,KAAM,CAAC;QAE9B,CAAC,MAAM;UAENtwB,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC7uB,SAAU,CAAC;QAElC;MAED,CAAC,MAAM,IAAKhgD,MAAM,CAACgU,MAAM,EAAG;QAE3B,IAAIi5D,SAAS,GAAGz4D,QAAQ,CAACiK,SAAS;QAElC,IAAKwuD,SAAS,KAAKv+F,SAAS,EAAGu+F,SAAS,GAAG,CAAC,CAAC,CAAC;;QAE9Cn/B,KAAK,CAACk/B,YAAY,CAAEC,SAAS,GAAGsiB,mBAAmB,CAAC,CAAE,CAAC;QAEvD,IAAKvvF,MAAM,CAAC+yF,cAAc,EAAG;UAE5BpjE,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC5uB,KAAM,CAAC;QAE9B,CAAC,MAAM,IAAKjgD,MAAM,CAACgzF,UAAU,EAAG;UAE/BrjE,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC1uB,SAAU,CAAC;QAElC,CAAC,MAAM;UAENxwB,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC3uB,UAAW,CAAC;QAEnC;MAED,CAAC,MAAM,IAAKlgD,MAAM,CAACiU,QAAQ,EAAG;QAE7B0b,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAACzuB,MAAO,CAAC;MAE/B,CAAC,MAAM,IAAKpgD,MAAM,CAACizF,QAAQ,EAAG;QAE7BtjE,QAAQ,CAACkkB,OAAO,CAAEg7B,GAAG,CAAC7uB,SAAU,CAAC;MAElC;MAEA,IAAKhgD,MAAM,CAACqT,eAAe,EAAG;QAE7Bsc,QAAQ,CAACokB,eAAe,CAAE6+C,SAAS,EAAEE,SAAS,EAAE9yF,MAAM,CAACnJ,KAAM,CAAC;MAE/D,CAAC,MAAM,IAAKmK,QAAQ,CAAC0xC,yBAAyB,EAAG;QAEhD,IAAMwgD,gBAAgB,GAAGlyF,QAAQ,CAAC8xC,iBAAiB,KAAKpkE,SAAS,GAAGsyB,QAAQ,CAAC8xC,iBAAiB,GAAG3zC,QAAQ;QACzG,IAAM4gD,aAAa,GAAGtjE,IAAI,CAACY,GAAG,CAAE2jB,QAAQ,CAAC++C,aAAa,EAAEmzC,gBAAiB,CAAC;QAE1EvjE,QAAQ,CAACokB,eAAe,CAAE6+C,SAAS,EAAEE,SAAS,EAAE/yC,aAAc,CAAC;MAEhE,CAAC,MAAM;QAENpwB,QAAQ,CAAC6F,MAAM,CAAEo9D,SAAS,EAAEE,SAAU,CAAC;MAExC;IAED,CAAC;;IAED;;IAEA,IAAI,CAACj3C,OAAO,GAAG,UAAW/mB,KAAK,EAAE/3B,MAAM,EAAG;MAEzC,SAASo2F,OAAOA,CAAE3+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAM,EAAG;QAE3C,IAAKwU,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAK/nC,UAAU,IAAIqkC,QAAQ,CAAC4F,eAAe,KAAK,KAAK,EAAG;UAE1G5F,QAAQ,CAAC0D,IAAI,GAAGhoC,QAAQ;UACxBskC,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;UAC3B2hG,UAAU,CAAE5+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAO,CAAC;UAErCwU,QAAQ,CAAC0D,IAAI,GAAGjoC,SAAS;UACzBukC,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;UAC3B2hG,UAAU,CAAE5+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAO,CAAC;UAErCwU,QAAQ,CAAC0D,IAAI,GAAG/nC,UAAU;QAE3B,CAAC,MAAM;UAENijH,UAAU,CAAE5+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAO,CAAC;QAEtC;MAED;MAEAstF,kBAAkB,GAAGntB,YAAY,CAACv+E,GAAG,CAAEkzC,KAAM,CAAC;MAC9Cw4D,kBAAkB,CAAC32C,IAAI,CAAC,CAAC;MAEzB62C,gBAAgB,CAAC9hH,IAAI,CAAE4hH,kBAAmB,CAAC;MAE3Cx4D,KAAK,CAACpiB,eAAe,CAAE,UAAW1S,MAAM,EAAG;QAE1C,IAAKA,MAAM,CAACmR,OAAO,IAAInR,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2P,MAAM,CAAC4Q,MAAO,CAAC,EAAG;UAE5D2/E,kBAAkB,CAACztB,SAAS,CAAE7/D,MAAO,CAAC;UAEtC,IAAKA,MAAM,CAAC2P,UAAU,EAAG;YAExB29E,kBAAkB,CAACxtB,UAAU,CAAE9/D,MAAO,CAAC;UAExC;QAED;MAED,CAAE,CAAC;MAEHstF,kBAAkB,CAACttB,WAAW,CAAE6tB,KAAK,CAACpzB,gBAAiB,CAAC;MAExD3lC,KAAK,CAACriB,QAAQ,CAAE,UAAWzS,MAAM,EAAG;QAEnC,IAAMwU,QAAQ,GAAGxU,MAAM,CAACwU,QAAQ;QAEhC,IAAKA,QAAQ,EAAG;UAEf,IAAKzlB,KAAK,CAACC,OAAO,CAAEwlB,QAAS,CAAC,EAAG;YAEhC,KAAM,IAAI9sC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8sC,QAAQ,CAACzoC,MAAM,EAAErE,CAAC,EAAG,EAAG;cAE5C,IAAM2rH,SAAS,GAAG7+E,QAAQ,CAAE9sC,CAAC,CAAE;cAE/ByrH,OAAO,CAAEE,SAAS,EAAEv+D,KAAK,EAAE90B,MAAO,CAAC;YAEpC;UAED,CAAC,MAAM;YAENmzF,OAAO,CAAE3+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAO,CAAC;UAEnC;QAED;MAED,CAAE,CAAC;MAEHwtF,gBAAgB,CAAC5gH,GAAG,CAAC,CAAC;MACtB0gH,kBAAkB,GAAG,IAAI;IAE1B,CAAC;;IAED;;IAEA,IAAIzF,wBAAwB,GAAG,IAAI;IAEnC,SAASluD,gBAAgBA,CAAEC,IAAI,EAAG;MAEjC,IAAKiuD,wBAAwB,EAAGA,wBAAwB,CAAEjuD,IAAK,CAAC;IAEjE;IAEA,SAASo4D,gBAAgBA,CAAA,EAAG;MAE3Bt9E,SAAS,CAAC1nC,IAAI,CAAC,CAAC;IAEjB;IAEA,SAASilH,cAAcA,CAAA,EAAG;MAEzBv9E,SAAS,CAAC0S,KAAK,CAAC,CAAC;IAElB;IAEA,IAAM1S,SAAS,GAAG,IAAI6kB,cAAc,CAAC,CAAC;IACtC7kB,SAAS,CAACslB,gBAAgB,CAAEL,gBAAiB,CAAC;IAE9C,IAAK,OAAO25D,IAAI,KAAK,WAAW,EAAG5+E,SAAS,CAACulB,UAAU,CAAEq5D,IAAK,CAAC;IAE/D,IAAI,CAACt5D,gBAAgB,GAAG,UAAWz/B,QAAQ,EAAG;MAE7CstF,wBAAwB,GAAGttF,QAAQ;MACnC+6B,EAAE,CAAC0E,gBAAgB,CAAEz/B,QAAS,CAAC;MAE7BA,QAAQ,KAAK,IAAI,GAAKma,SAAS,CAAC1nC,IAAI,CAAC,CAAC,GAAG0nC,SAAS,CAAC0S,KAAK,CAAC,CAAC;IAE7D,CAAC;IAEDkO,EAAE,CAAC75C,gBAAgB,CAAE,cAAc,EAAEu2G,gBAAiB,CAAC;IACvD18D,EAAE,CAAC75C,gBAAgB,CAAE,YAAY,EAAEw2G,cAAe,CAAC;;IAEnD;;IAEA,IAAI,CAACz8D,MAAM,GAAG,UAAWV,KAAK,EAAE/3B,MAAM,EAAG;MAExC,IAAKA,MAAM,KAAKruB,SAAS,IAAIquB,MAAM,CAACmU,QAAQ,KAAK,IAAI,EAAG;QAEvDtwB,OAAO,CAACywB,KAAK,CAAE,wEAAyE,CAAC;QACzF;MAED;MAEA,IAAKy8E,cAAc,KAAK,IAAI,EAAG;;MAE/B;;MAEA,IAAKh5D,KAAK,CAACtlB,qBAAqB,KAAK,IAAI,EAAGslB,KAAK,CAACliB,iBAAiB,CAAC,CAAC;;MAErE;;MAEA,IAAK7V,MAAM,CAACgS,MAAM,KAAK,IAAI,IAAIhS,MAAM,CAACyS,qBAAqB,KAAK,IAAI,EAAGzS,MAAM,CAAC6V,iBAAiB,CAAC,CAAC;MAEjG,IAAK0iB,EAAE,CAACxpC,OAAO,KAAK,IAAI,IAAIwpC,EAAE,CAAC+tD,YAAY,KAAK,IAAI,EAAG;QAEtD,IAAK/tD,EAAE,CAAC8tD,gBAAgB,KAAK,IAAI,EAAG9tD,EAAE,CAACgyD,YAAY,CAAEvqF,MAAO,CAAC;QAE7DA,MAAM,GAAGu4B,EAAE,CAACoyD,SAAS,CAAC,CAAC,CAAC,CAAC;MAE1B;;MAEA;MACA,IAAK5yD,KAAK,CAACnhB,OAAO,KAAK,IAAI,EAAGmhB,KAAK,CAAC9kB,cAAc,CAAE69E,KAAK,EAAE/4D,KAAK,EAAE/3B,MAAM,EAAEkxF,oBAAqB,CAAC;MAEhGX,kBAAkB,GAAGntB,YAAY,CAACv+E,GAAG,CAAEkzC,KAAK,EAAE04D,gBAAgB,CAACzhH,MAAO,CAAC;MACvEuhH,kBAAkB,CAAC32C,IAAI,CAAC,CAAC;MAEzB62C,gBAAgB,CAAC9hH,IAAI,CAAE4hH,kBAAmB,CAAC;MAE3C6B,iBAAiB,CAACroG,gBAAgB,CAAEiW,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAmB,CAAC;MACxFokE,QAAQ,CAAClpC,uBAAuB,CAAEi3D,iBAAkB,CAAC;MAErDF,qBAAqB,GAAG,IAAI,CAAC34C,oBAAoB;MACjD04C,gBAAgB,GAAGp+D,QAAQ,CAAC+lB,IAAI,CAAE,IAAI,CAACn9B,cAAc,EAAEy1E,qBAAsB,CAAC;MAE9E5B,iBAAiB,GAAG6C,WAAW,CAACtuG,GAAG,CAAEkzC,KAAK,EAAEy4D,eAAe,CAACxhH,MAAO,CAAC;MACpEshH,iBAAiB,CAAC12C,IAAI,CAAC,CAAC;MAExB42C,eAAe,CAAC7hH,IAAI,CAAE2hH,iBAAkB,CAAC;MAEzCkG,aAAa,CAAEz+D,KAAK,EAAE/3B,MAAM,EAAE,CAAC,EAAE8wF,KAAK,CAACH,WAAY,CAAC;MAEpDL,iBAAiB,CAACjgH,MAAM,CAAC,CAAC;MAE1B,IAAKygH,KAAK,CAACH,WAAW,KAAK,IAAI,EAAG;QAEjCL,iBAAiB,CAACnrC,IAAI,CAAE0sC,WAAW,EAAEC,gBAAiB,CAAC;MAExD;;MAEA;;MAEA,IAAI,CAACl7C,IAAI,CAACne,MAAM,CAACqE,KAAK,EAAG;MAEzB,IAAKm1D,gBAAgB,KAAK,IAAI,EAAGp+D,QAAQ,CAACimB,YAAY,CAAC,CAAC;MAExD,IAAM+oB,YAAY,GAAG0tB,kBAAkB,CAACx/C,KAAK,CAAC8xB,YAAY;MAE1DpF,SAAS,CAAChlC,MAAM,CAAEoqC,YAAY,EAAE9qC,KAAK,EAAE/3B,MAAO,CAAC;MAE/C,IAAKiyF,gBAAgB,KAAK,IAAI,EAAGp+D,QAAQ,CAACmmB,UAAU,CAAC,CAAC;;MAEtD;;MAEA,IAAK,IAAI,CAACpD,IAAI,CAAC2M,SAAS,KAAK,IAAI,EAAG,IAAI,CAAC3M,IAAI,CAAC9nE,KAAK,CAAC,CAAC;;MAGrD;;MAEA+nC,UAAU,CAAC4hB,MAAM,CAAE63D,iBAAiB,EAAEv4D,KAAM,CAAC;;MAE7C;;MAEAw4D,kBAAkB,CAACttB,WAAW,CAAE6tB,KAAK,CAACpzB,gBAAiB,CAAC;MAExD,IAAK19D,MAAM,CAACqhF,aAAa,EAAG;QAE3B,IAAM/pD,OAAO,GAAGt3B,MAAM,CAACs3B,OAAO;QAE9B,KAAM,IAAI3sD,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqrD,OAAO,CAACtoD,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAElD,IAAM8rH,OAAO,GAAGn/D,OAAO,CAAE3sD,CAAC,CAAE;UAE5B+rH,WAAW,CAAEpG,iBAAiB,EAAEv4D,KAAK,EAAE0+D,OAAO,EAAEA,OAAO,CAACh/F,QAAS,CAAC;QAEnE;MAED,CAAC,MAAM;QAENi/F,WAAW,CAAEpG,iBAAiB,EAAEv4D,KAAK,EAAE/3B,MAAO,CAAC;MAEhD;;MAEA;;MAEA,IAAKkxF,oBAAoB,KAAK,IAAI,EAAG;QAEpC;;QAEAv8F,QAAQ,CAAC4nF,6BAA6B,CAAE2U,oBAAqB,CAAC;;QAE9D;;QAEAv8F,QAAQ,CAAC2nF,wBAAwB,CAAE4U,oBAAqB,CAAC;MAE1D;;MAEA;;MAEA,IAAKn5D,KAAK,CAACnhB,OAAO,KAAK,IAAI,EAAGmhB,KAAK,CAAC7kB,aAAa,CAAE49E,KAAK,EAAE/4D,KAAK,EAAE/3B,MAAO,CAAC;;MAEzE;;MAEA6yC,aAAa,CAAC6D,iBAAiB,CAAC,CAAC;MACjCy6C,kBAAkB,GAAG,CAAE,CAAC;MACxBC,cAAc,GAAG,IAAI;MAErBX,gBAAgB,CAAC5gH,GAAG,CAAC,CAAC;MAEtB,IAAK4gH,gBAAgB,CAACzhH,MAAM,GAAG,CAAC,EAAG;QAElCuhH,kBAAkB,GAAGE,gBAAgB,CAAEA,gBAAgB,CAACzhH,MAAM,GAAG,CAAC,CAAE;MAErE,CAAC,MAAM;QAENuhH,kBAAkB,GAAG,IAAI;MAE1B;MAEAC,eAAe,CAAC3gH,GAAG,CAAC,CAAC;MAErB,IAAK2gH,eAAe,CAACxhH,MAAM,GAAG,CAAC,EAAG;QAEjCshH,iBAAiB,GAAGE,eAAe,CAAEA,eAAe,CAACxhH,MAAM,GAAG,CAAC,CAAE;MAElE,CAAC,MAAM;QAENshH,iBAAiB,GAAG,IAAI;MAEzB;IAED,CAAC;IAED,SAASkG,aAAaA,CAAEvzF,MAAM,EAAEjD,MAAM,EAAEu+D,UAAU,EAAEoyB,WAAW,EAAG;MAEjE,IAAK1tF,MAAM,CAAC0P,OAAO,KAAK,KAAK,EAAG;MAEhC,IAAMA,OAAO,GAAG1P,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2P,MAAM,CAAC4Q,MAAO,CAAC;MAEnD,IAAK+B,OAAO,EAAG;QAEd,IAAK1P,MAAM,CAACy+E,OAAO,EAAG;UAErBnjB,UAAU,GAAGt7D,MAAM,CAAC8P,WAAW;QAEhC,CAAC,MAAM,IAAK9P,MAAM,CAAC0zF,KAAK,EAAG;UAE1B,IAAK1zF,MAAM,CAACoiE,UAAU,KAAK,IAAI,EAAGpiE,MAAM,CAACpI,MAAM,CAAEmF,MAAO,CAAC;QAE1D,CAAC,MAAM,IAAKiD,MAAM,CAACmR,OAAO,EAAG;UAE5Bm8E,kBAAkB,CAACztB,SAAS,CAAE7/D,MAAO,CAAC;UAEtC,IAAKA,MAAM,CAAC2P,UAAU,EAAG;YAExB29E,kBAAkB,CAACxtB,UAAU,CAAE9/D,MAAO,CAAC;UAExC;QAED,CAAC,MAAM,IAAKA,MAAM,CAACizF,QAAQ,EAAG;UAE7B,IAAK,CAAEjzF,MAAM,CAAC6P,aAAa,IAAIuxD,QAAQ,CAAChoC,gBAAgB,CAAEp5B,MAAO,CAAC,EAAG;YAEpE,IAAK0tF,WAAW,EAAG;cAElB0B,QAAQ,CAACzwF,qBAAqB,CAAEqB,MAAM,CAAC5C,WAAY,CAAC,CAClD5K,YAAY,CAAE28F,iBAAkB,CAAC;YAEpC;YAEA,IAAMnuF,QAAQ,GAAG+sC,OAAO,CAACn2C,MAAM,CAAEoI,MAAO,CAAC;YACzC,IAAMwU,QAAQ,GAAGxU,MAAM,CAACwU,QAAQ;YAEhC,IAAKA,QAAQ,CAAC9E,OAAO,EAAG;cAEvB29E,iBAAiB,CAAC3hH,IAAI,CAAEs0B,MAAM,EAAEgB,QAAQ,EAAEwT,QAAQ,EAAE8mD,UAAU,EAAE8zB,QAAQ,CAACj9F,CAAC,EAAE,IAAK,CAAC;YAEnF;UAED;QAED,CAAC,MAAM,IAAK6N,MAAM,CAAC+T,MAAM,IAAI/T,MAAM,CAACgU,MAAM,IAAIhU,MAAM,CAACiU,QAAQ,EAAG;UAE/D,IAAK,CAAEjU,MAAM,CAAC6P,aAAa,IAAIuxD,QAAQ,CAACjoC,gBAAgB,CAAEn5B,MAAO,CAAC,EAAG;YAEpE,IAAMgB,UAAQ,GAAG+sC,OAAO,CAACn2C,MAAM,CAAEoI,MAAO,CAAC;YACzC,IAAMwU,SAAQ,GAAGxU,MAAM,CAACwU,QAAQ;YAEhC,IAAKk5E,WAAW,EAAG;cAElB,IAAK1tF,MAAM,CAACknB,cAAc,KAAKx4C,SAAS,EAAG;gBAE1C,IAAKsxB,MAAM,CAACknB,cAAc,KAAK,IAAI,EAAGlnB,MAAM,CAACgoB,qBAAqB,CAAC,CAAC;gBACpEonE,QAAQ,CAAChtG,IAAI,CAAE4d,MAAM,CAACknB,cAAc,CAAC3hC,MAAO,CAAC;cAE9C,CAAC,MAAM;gBAEN,IAAKyb,UAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAGlmB,UAAQ,CAACgnB,qBAAqB,CAAC,CAAC;gBACxEonE,QAAQ,CAAChtG,IAAI,CAAE4e,UAAQ,CAACkmB,cAAc,CAAC3hC,MAAO,CAAC;cAEhD;cAEA6pG,QAAQ,CACN58F,YAAY,CAAEwN,MAAM,CAAC5C,WAAY,CAAC,CAClC5K,YAAY,CAAE28F,iBAAkB,CAAC;YAEpC;YAEA,IAAKpgG,KAAK,CAACC,OAAO,CAAEwlB,SAAS,CAAC,EAAG;cAEhC,IAAMyS,MAAM,GAAGjmB,UAAQ,CAACimB,MAAM;cAE9B,KAAM,IAAIv/C,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGi+C,MAAM,CAACl7C,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;gBAEjD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,CAAC,CAAE;gBACzB,IAAM0lD,aAAa,GAAG5Y,SAAQ,CAAEgV,KAAK,CAAC5B,aAAa,CAAE;gBAErD,IAAKwF,aAAa,IAAIA,aAAa,CAAC1d,OAAO,EAAG;kBAE7C29E,iBAAiB,CAAC3hH,IAAI,CAAEs0B,MAAM,EAAEgB,UAAQ,EAAEosB,aAAa,EAAEkuC,UAAU,EAAE8zB,QAAQ,CAACj9F,CAAC,EAAEq3B,KAAM,CAAC;gBAEzF;cAED;YAED,CAAC,MAAM,IAAKhV,SAAQ,CAAC9E,OAAO,EAAG;cAE9B29E,iBAAiB,CAAC3hH,IAAI,CAAEs0B,MAAM,EAAEgB,UAAQ,EAAEwT,SAAQ,EAAE8mD,UAAU,EAAE8zB,QAAQ,CAACj9F,CAAC,EAAE,IAAK,CAAC;YAEnF;UAED;QAED;MAED;MAEA,IAAMgP,QAAQ,GAAGnB,MAAM,CAACmB,QAAQ;MAEhC,KAAM,IAAIz5B,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;QAEnD6rH,aAAa,CAAEpyF,QAAQ,CAAEz5B,IAAC,CAAE,EAAEq1B,MAAM,EAAEu+D,UAAU,EAAEoyB,WAAY,CAAC;MAEhE;IAED;IAEA,SAAS+F,WAAWA,CAAEpG,iBAAiB,EAAEv4D,KAAK,EAAE/3B,MAAM,EAAEvI,QAAQ,EAAG;MAElE,IAAMm/F,aAAa,GAAGtG,iBAAiB,CAACp6B,MAAM;MAC9C,IAAM2gC,mBAAmB,GAAGvG,iBAAiB,CAAC1xB,YAAY;MAC1D,IAAMk4B,kBAAkB,GAAGxG,iBAAiB,CAACh1E,WAAW;MAExDi1E,kBAAkB,CAACrtB,eAAe,CAAEljE,MAAO,CAAC;MAE5C,IAAKiyF,gBAAgB,KAAK,IAAI,EAAGp+D,QAAQ,CAAComB,cAAc,CAAE62C,KAAK,CAACr0E,cAAc,EAAEzc,MAAO,CAAC;MAExF,IAAK62F,mBAAmB,CAAC7nH,MAAM,GAAG,CAAC,EAAG+nH,sBAAsB,CAAEH,aAAa,EAAEC,mBAAmB,EAAE9+D,KAAK,EAAE/3B,MAAO,CAAC;MAEjH,IAAKvI,QAAQ,EAAGs5C,KAAK,CAACt5C,QAAQ,CAAE45F,gBAAgB,CAAChsG,IAAI,CAAEoS,QAAS,CAAE,CAAC;MAEnE,IAAKm/F,aAAa,CAAC5nH,MAAM,GAAG,CAAC,EAAGgoH,aAAa,CAAEJ,aAAa,EAAE7+D,KAAK,EAAE/3B,MAAO,CAAC;MAC7E,IAAK62F,mBAAmB,CAAC7nH,MAAM,GAAG,CAAC,EAAGgoH,aAAa,CAAEH,mBAAmB,EAAE9+D,KAAK,EAAE/3B,MAAO,CAAC;MACzF,IAAK82F,kBAAkB,CAAC9nH,MAAM,GAAG,CAAC,EAAGgoH,aAAa,CAAEF,kBAAkB,EAAE/+D,KAAK,EAAE/3B,MAAO,CAAC;;MAEvF;;MAEA+wC,KAAK,CAACxT,OAAO,CAACjmC,KAAK,CAACouE,OAAO,CAAE,IAAK,CAAC;MACnC30B,KAAK,CAACxT,OAAO,CAACjmC,KAAK,CAACywE,OAAO,CAAE,IAAK,CAAC;MACnCh3B,KAAK,CAACxT,OAAO,CAAC/uC,KAAK,CAACu5E,OAAO,CAAE,IAAK,CAAC;MAEnCh3B,KAAK,CAAC0+B,gBAAgB,CAAE,KAAM,CAAC;IAEhC;IAEA,SAASsnB,sBAAsBA,CAAEH,aAAa,EAAEC,mBAAmB,EAAE9+D,KAAK,EAAE/3B,MAAM,EAAG;MAEpF,IAAMs9B,QAAQ,GAAGD,YAAY,CAACC,QAAQ;MAEtC,IAAK60D,yBAAyB,KAAK,IAAI,EAAG;QAEzCA,yBAAyB,GAAG,IAAIl6F,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE;UACxDnE,eAAe,EAAE,IAAI;UACrBjoB,IAAI,EAAEioD,UAAU,CAAC1kC,GAAG,CAAE,6BAA8B,CAAC,GAAG7X,aAAa,GAAGP,gBAAgB;UACxFic,SAAS,EAAEnc,wBAAwB;UACnCghB,OAAO,EAAIwlC,QAAQ,GAAK,CAAC,GAAG;QAC7B,CAAE,CAAC;;QAEH;;QAEA;AACJ;AACA;AACA;AACA;AACA;MAGG;;MAEAwzD,KAAK,CAACkD,oBAAoB,CAAEr6D,QAAS,CAAC;MAEtC,IAAK2D,QAAQ,EAAG;QAEf60D,yBAAyB,CAACn6F,OAAO,CAAE2hC,QAAQ,CAACh5C,CAAC,EAAEg5C,QAAQ,CAACvtD,CAAE,CAAC;MAE5D,CAAC,MAAM;QAEN+lH,yBAAyB,CAACn6F,OAAO,CAAEnV,eAAe,CAAE82C,QAAQ,CAACh5C,CAAE,CAAC,EAAEkC,eAAe,CAAE82C,QAAQ,CAACvtD,CAAE,CAAE,CAAC;MAElG;;MAEA;;MAEA,IAAM6rD,mBAAmB,GAAG64D,KAAK,CAACj+D,eAAe,CAAC,CAAC;MACnDi+D,KAAK,CAACt4D,eAAe,CAAE25D,yBAA0B,CAAC;MAElDrB,KAAK,CAAC1+C,aAAa,CAAEo/C,kBAAmB,CAAC;MACzCC,kBAAkB,GAAGX,KAAK,CAACx+C,aAAa,CAAC,CAAC;MAC1C,IAAKm/C,kBAAkB,GAAG,CAAC,EAAGX,KAAK,CAACz+C,aAAa,CAAE,QAAQ,EAAE,GAAI,CAAC;MAElEy+C,KAAK,CAACr8E,KAAK,CAAC,CAAC;;MAEb;MACA;MACA,IAAMwiF,kBAAkB,GAAGnG,KAAK,CAAC5+C,WAAW;MAC5C4+C,KAAK,CAAC5+C,WAAW,GAAG38D,aAAa;MAEjCyhH,aAAa,CAAEJ,aAAa,EAAE7+D,KAAK,EAAE/3B,MAAO,CAAC;MAE7CrL,QAAQ,CAAC4nF,6BAA6B,CAAE4V,yBAA0B,CAAC;MACnEx9F,QAAQ,CAAC2nF,wBAAwB,CAAE6V,yBAA0B,CAAC;MAE9D,IAAI+E,uBAAuB,GAAG,KAAK;MAEnC,KAAM,IAAIvsH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG4qH,mBAAmB,CAAC7nH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9D,IAAMm0F,UAAU,GAAG+3B,mBAAmB,CAAElsH,CAAC,CAAE;QAE3C,IAAMs4B,MAAM,GAAG67D,UAAU,CAAC77D,MAAM;QAChC,IAAMgB,QAAQ,GAAG66D,UAAU,CAAC76D,QAAQ;QACpC,IAAMwT,QAAQ,GAAGqnD,UAAU,CAACrnD,QAAQ;QACpC,IAAMgV,KAAK,GAAGqyC,UAAU,CAACryC,KAAK;QAE9B,IAAKhV,QAAQ,CAAC0D,IAAI,KAAK/nC,UAAU,IAAI6vB,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2P,MAAM,CAAC4Q,MAAO,CAAC,EAAG;UAE1E,IAAMumF,WAAW,GAAG1/E,QAAQ,CAAC0D,IAAI;UAEjC1D,QAAQ,CAAC0D,IAAI,GAAGhoC,QAAQ;UACxBskC,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;UAE3B4xE,YAAY,CAAErjE,MAAM,EAAE80B,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEwT,QAAQ,EAAEgV,KAAM,CAAC;UAEhEhV,QAAQ,CAAC0D,IAAI,GAAGg8E,WAAW;UAC3B1/E,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;UAE3BwiG,uBAAuB,GAAG,IAAI;QAE/B;MAED;MAEA,IAAKA,uBAAuB,KAAK,IAAI,EAAG;QAEvCviG,QAAQ,CAAC4nF,6BAA6B,CAAE4V,yBAA0B,CAAC;QACnEx9F,QAAQ,CAAC2nF,wBAAwB,CAAE6V,yBAA0B,CAAC;MAE/D;MAEArB,KAAK,CAACt4D,eAAe,CAAEP,mBAAoB,CAAC;MAE5C64D,KAAK,CAACz+C,aAAa,CAAEm/C,kBAAkB,EAAEC,kBAAmB,CAAC;MAE7DX,KAAK,CAAC5+C,WAAW,GAAG+kD,kBAAkB;IAEvC;IAEA,SAASD,aAAaA,CAAExlD,UAAU,EAAEzZ,KAAK,EAAE/3B,MAAM,EAAG;MAEnD,IAAMuyF,gBAAgB,GAAGx6D,KAAK,CAACnhB,OAAO,KAAK,IAAI,GAAGmhB,KAAK,CAACw6D,gBAAgB,GAAG,IAAI;MAE/E,KAAM,IAAI5nH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGulE,UAAU,CAACxiE,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAErD,IAAMm0F,UAAU,GAAGttB,UAAU,CAAE7mE,CAAC,CAAE;QAElC,IAAMs4B,MAAM,GAAG67D,UAAU,CAAC77D,MAAM;QAChC,IAAMgB,QAAQ,GAAG66D,UAAU,CAAC76D,QAAQ;QACpC,IAAMwT,QAAQ,GAAG86E,gBAAgB,KAAK,IAAI,GAAGzzB,UAAU,CAACrnD,QAAQ,GAAG86E,gBAAgB;QACnF,IAAM9lE,KAAK,GAAGqyC,UAAU,CAACryC,KAAK;QAE9B,IAAKxpB,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2P,MAAM,CAAC4Q,MAAO,CAAC,EAAG;UAE1C01D,YAAY,CAAErjE,MAAM,EAAE80B,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEwT,QAAQ,EAAEgV,KAAM,CAAC;QAEjE;MAED;IAED;IAEA,SAAS65C,YAAYA,CAAErjE,MAAM,EAAE80B,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEwT,QAAQ,EAAEgV,KAAK,EAAG;MAEzExpB,MAAM,CAACgQ,cAAc,CAAE69E,KAAK,EAAE/4D,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEwT,QAAQ,EAAEgV,KAAM,CAAC;MAExExpB,MAAM,CAACoP,eAAe,CAACtoB,gBAAgB,CAAEiW,MAAM,CAACC,kBAAkB,EAAEgD,MAAM,CAAC5C,WAAY,CAAC;MACxF4C,MAAM,CAACqP,YAAY,CAACxmB,eAAe,CAAEmX,MAAM,CAACoP,eAAgB,CAAC;MAE7DoF,QAAQ,CAACxE,cAAc,CAAE69E,KAAK,EAAE/4D,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEhB,MAAM,EAAEwpB,KAAM,CAAC;MAExE,IAAKhV,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAK/nC,UAAU,IAAIqkC,QAAQ,CAAC4F,eAAe,KAAK,KAAK,EAAG;QAE1G5F,QAAQ,CAAC0D,IAAI,GAAGhoC,QAAQ;QACxBskC,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;QAC3Bo8F,KAAK,CAACnqB,kBAAkB,CAAE3mE,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAM,EAAEwpB,KAAM,CAAC;QAE5EhV,QAAQ,CAAC0D,IAAI,GAAGjoC,SAAS;QACzBukC,QAAQ,CAAC/iB,WAAW,GAAG,IAAI;QAC3Bo8F,KAAK,CAACnqB,kBAAkB,CAAE3mE,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAM,EAAEwpB,KAAM,CAAC;QAE5EhV,QAAQ,CAAC0D,IAAI,GAAG/nC,UAAU;MAE3B,CAAC,MAAM;QAEN09G,KAAK,CAACnqB,kBAAkB,CAAE3mE,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAM,EAAEwpB,KAAM,CAAC;MAE7E;MAEAxpB,MAAM,CAACiQ,aAAa,CAAE49E,KAAK,EAAE/4D,KAAK,EAAE/3B,MAAM,EAAEiE,QAAQ,EAAEwT,QAAQ,EAAEgV,KAAM,CAAC;IAExE;IAEA,SAAS4pE,UAAUA,CAAE5+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAM,EAAG;MAE9C,IAAK80B,KAAK,CAACnhB,OAAO,KAAK,IAAI,EAAGmhB,KAAK,GAAGu6D,WAAW,CAAC,CAAC;;MAEnD,IAAMl4C,kBAAkB,GAAG/N,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC;MAErD,IAAMmc,MAAM,GAAG28D,kBAAkB,CAACx/C,KAAK,CAACnd,MAAM;MAC9C,IAAMivC,YAAY,GAAG0tB,kBAAkB,CAACx/C,KAAK,CAAC8xB,YAAY;MAE1D,IAAMu0B,kBAAkB,GAAGxjE,MAAM,CAACmd,KAAK,CAACt/C,OAAO;MAE/C,IAAM0lB,UAAU,GAAG+7E,YAAY,CAAC34B,aAAa,CAAE9iD,QAAQ,EAAEmc,MAAM,CAACmd,KAAK,EAAE8xB,YAAY,EAAE9qC,KAAK,EAAE90B,MAAO,CAAC;MACpG,IAAMo0F,eAAe,GAAGnE,YAAY,CAACt1B,kBAAkB,CAAEzmD,UAAW,CAAC;MAErE,IAAImsC,QAAQ,GAAGlJ,kBAAkB,CAACkJ,QAAQ;;MAE1C;;MAEAlJ,kBAAkB,CAACrjC,WAAW,GAAGU,QAAQ,CAACgjD,sBAAsB,GAAG1iC,KAAK,CAAChhB,WAAW,GAAG,IAAI;MAC3FqjC,kBAAkB,CAACj4B,GAAG,GAAG4V,KAAK,CAAC5V,GAAG;MAClCi4B,kBAAkB,CAACv5B,MAAM,GAAG,CAAEpJ,QAAQ,CAACgjD,sBAAsB,GAAG3pB,UAAU,GAAGD,QAAQ,EAAGhsD,GAAG,CAAE4yB,QAAQ,CAACoJ,MAAM,IAAIu5B,kBAAkB,CAACrjC,WAAY,CAAC;MAEhJ,IAAKusC,QAAQ,KAAK3xE,SAAS,EAAG;QAE7B;;QAEA8lC,QAAQ,CAAC/4B,gBAAgB,CAAE,SAAS,EAAE82G,iBAAkB,CAAC;QAEzDlyC,QAAQ,GAAG,IAAI8N,GAAG,CAAC,CAAC;QACpBhX,kBAAkB,CAACkJ,QAAQ,GAAGA,QAAQ;MAEvC;MAEA,IAAInQ,OAAO,GAAGmQ,QAAQ,CAACz+D,GAAG,CAAEwyG,eAAgB,CAAC;MAE7C,IAAKlkD,OAAO,KAAKxhE,SAAS,EAAG;QAE5B;;QAEA,IAAKyoE,kBAAkB,CAACqwB,cAAc,KAAKt3B,OAAO,IAAIiH,kBAAkB,CAACg9C,kBAAkB,KAAKA,kBAAkB,EAAG;UAEpHE,8BAA8B,CAAE7/E,QAAQ,EAAEN,UAAW,CAAC;UAEtD,OAAOg8B,OAAO;QAEf;MAED,CAAC,MAAM;QAENh8B,UAAU,CAACqb,QAAQ,GAAG0gE,YAAY,CAACluC,WAAW,CAAEvtC,QAAS,CAAC;QAE1DA,QAAQ,CAAC+F,OAAO,CAAEva,MAAM,EAAEkU,UAAU,EAAE25E,KAAM,CAAC;QAE7Cr5E,QAAQ,CAACgG,eAAe,CAAEtG,UAAU,EAAE25E,KAAM,CAAC;QAE7C39C,OAAO,GAAG+/C,YAAY,CAACl1B,cAAc,CAAE7mD,UAAU,EAAEkgF,eAAgB,CAAC;QACpE/zC,QAAQ,CAAC1/D,GAAG,CAAEyzG,eAAe,EAAElkD,OAAQ,CAAC;QAExCiH,kBAAkB,CAAC5nB,QAAQ,GAAGrb,UAAU,CAACqb,QAAQ;MAElD;MAEA,IAAMA,QAAQ,GAAG4nB,kBAAkB,CAAC5nB,QAAQ;MAE5C,IAAO,CAAE/a,QAAQ,CAAC8b,gBAAgB,IAAI,CAAE9b,QAAQ,CAAC47C,mBAAmB,IAAM57C,QAAQ,CAACoc,QAAQ,KAAK,IAAI,EAAG;QAEtGrB,QAAQ,CAAC/V,cAAc,GAAGoX,QAAQ,CAACU,OAAO;MAE3C;MAEA+iE,8BAA8B,CAAE7/E,QAAQ,EAAEN,UAAW,CAAC;;MAEtD;;MAEAijC,kBAAkB,CAACm9C,WAAW,GAAGC,mBAAmB,CAAE//E,QAAS,CAAC;MAChE2iC,kBAAkB,CAACg9C,kBAAkB,GAAGA,kBAAkB;MAE1D,IAAKh9C,kBAAkB,CAACm9C,WAAW,EAAG;QAErC;;QAEA/kE,QAAQ,CAAC0Z,iBAAiB,CAACxhE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC4vB,OAAO;QACvDnuC,QAAQ,CAAC2Z,UAAU,CAACzhE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC6vB,KAAK;QAC9CpuC,QAAQ,CAAC4Z,iBAAiB,CAAC1hE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACssB,WAAW;QAC3D7qC,QAAQ,CAAC8Z,uBAAuB,CAAC5hE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC8vB,iBAAiB;QACvEruC,QAAQ,CAACqa,UAAU,CAACniE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACusB,IAAI;QAC7C9qC,QAAQ,CAACya,gBAAgB,CAACviE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC+vB,UAAU;QACzDtuC,QAAQ,CAACsb,cAAc,CAACpjE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACwsB,QAAQ;QACrD/qC,QAAQ,CAACub,KAAK,CAACrjE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACgwB,YAAY;QAChDvuC,QAAQ,CAACwb,KAAK,CAACtjE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACiwB,YAAY;QAChDxuC,QAAQ,CAAC6a,WAAW,CAAC3iE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACvtC,KAAK;QAC/CgvB,QAAQ,CAAC8a,iBAAiB,CAAC5iE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACkwB,WAAW;QAC3DzuC,QAAQ,CAACmb,gBAAgB,CAACjjE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACysB,IAAI;QAEnDhrC,QAAQ,CAACma,oBAAoB,CAACjiE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACpE,oBAAoB;QACvEna,QAAQ,CAACoa,uBAAuB,CAACliE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACnE,uBAAuB;QAC7Epa,QAAQ,CAAC2a,aAAa,CAACziE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC5D,aAAa;QACzD3a,QAAQ,CAAC4a,eAAe,CAAC1iE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC3D,eAAe;QAC7D5a,QAAQ,CAAC0a,YAAY,CAACxiE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAAC7D,YAAY;QACvD1a,QAAQ,CAACib,cAAc,CAAC/iE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACtD,cAAc;QAC3Djb,QAAQ,CAACkb,iBAAiB,CAAChjE,KAAK,GAAGkpD,MAAM,CAACmd,KAAK,CAACrD,iBAAiB;QACjE;MAED;;MAEA,IAAM+pD,YAAY,GAAGtkD,OAAO,CAAC6R,WAAW,CAAC,CAAC;MAC1C,IAAM0yC,YAAY,GAAGrrC,aAAa,CAACO,YAAY,CAAE6qC,YAAY,CAACjsC,GAAG,EAAEh5B,QAAS,CAAC;MAE7E4nB,kBAAkB,CAACqwB,cAAc,GAAGt3B,OAAO;MAC3CiH,kBAAkB,CAACs9C,YAAY,GAAGA,YAAY;MAE9C,OAAOvkD,OAAO;IAEf;IAEA,SAASmkD,8BAA8BA,CAAE7/E,QAAQ,EAAEN,UAAU,EAAG;MAE/D,IAAMijC,kBAAkB,GAAG/N,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC;MAErD2iC,kBAAkB,CAACtnB,gBAAgB,GAAG3b,UAAU,CAAC2b,gBAAgB;MACjEsnB,kBAAkB,CAACoZ,UAAU,GAAGr8C,UAAU,CAACq8C,UAAU;MACrDpZ,kBAAkB,CAACqZ,eAAe,GAAGt8C,UAAU,CAACs8C,eAAe;MAC/DrZ,kBAAkB,CAACsb,QAAQ,GAAGv+C,UAAU,CAACu+C,QAAQ;MACjDtb,kBAAkB,CAACiK,YAAY,GAAGltC,UAAU,CAACktC,YAAY;MACzDjK,kBAAkB,CAACkK,YAAY,GAAGntC,UAAU,CAACmtC,YAAY;MACzDlK,kBAAkB,CAACmK,WAAW,GAAGptC,UAAU,CAACotC,WAAW;MACvDnK,kBAAkB,CAAC4J,iBAAiB,GAAG7sC,UAAU,CAAC6sC,iBAAiB;MACnE5J,kBAAkB,CAAC0W,iBAAiB,GAAG35C,UAAU,CAAC25C,iBAAiB;MACnE1W,kBAAkB,CAACT,eAAe,GAAGxiC,UAAU,CAAC45C,mBAAmB;MACnE3W,kBAAkB,CAACib,YAAY,GAAGl+C,UAAU,CAACk+C,YAAY;MACzDjb,kBAAkB,CAACgb,cAAc,GAAGj+C,UAAU,CAACi+C,cAAc;MAC7Dhb,kBAAkB,CAAClI,WAAW,GAAG/6B,UAAU,CAAC+6B,WAAW;IAExD;IAEA,SAASyjD,UAAUA,CAAE31F,MAAM,EAAE+3B,KAAK,EAAE9zB,QAAQ,EAAEwT,QAAQ,EAAExU,MAAM,EAAG;MAEhE,IAAK80B,KAAK,CAACnhB,OAAO,KAAK,IAAI,EAAGmhB,KAAK,GAAGu6D,WAAW,CAAC,CAAC;;MAEnD39F,QAAQ,CAAC+hF,iBAAiB,CAAC,CAAC;MAE5B,IAAMv0D,GAAG,GAAG4V,KAAK,CAAC5V,GAAG;MACrB,IAAMpL,WAAW,GAAGU,QAAQ,CAACgjD,sBAAsB,GAAG1iC,KAAK,CAAChhB,WAAW,GAAG,IAAI;MAC9E,IAAM5nB,UAAU,GAAK+hG,oBAAoB,KAAK,IAAI,GAAKJ,KAAK,CAACh+D,gBAAgB,GAAKo+D,oBAAoB,CAACh0B,gBAAgB,KAAK,IAAI,GAAGg0B,oBAAoB,CAACn5F,OAAO,CAAC5I,UAAU,GAAGvT,oBAAsB;MACnM,IAAMilC,MAAM,GAAG,CAAEpJ,QAAQ,CAACgjD,sBAAsB,GAAG3pB,UAAU,GAAGD,QAAQ,EAAGhsD,GAAG,CAAE4yB,QAAQ,CAACoJ,MAAM,IAAI9J,WAAY,CAAC;MAChH,IAAMs+C,YAAY,GAAG59C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAEnX,QAAQ,CAACC,UAAU,CAAC1V,KAAK,IAAIyV,QAAQ,CAACC,UAAU,CAAC1V,KAAK,CAAC23B,QAAQ,KAAK,CAAC;MAC/H,IAAMivC,cAAc,GAAG,CAAC,CAAEnxD,QAAQ,CAACC,UAAU,CAAC8mB,OAAO,KAAM,CAAC,CAAEvT,QAAQ,CAACwI,SAAS,IAAIxI,QAAQ,CAACtkB,UAAU,GAAG,CAAC,CAAE;MAC7G,IAAMkxD,YAAY,GAAG,CAAC,CAAEpgD,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ;MACzD,IAAMmgD,YAAY,GAAG,CAAC,CAAErgD,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM;MACvD,IAAMojD,WAAW,GAAG,CAAC,CAAEtgD,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK;MAErD,IAAI0jD,WAAW,GAAG38D,aAAa;MAE/B,IAAKkiC,QAAQ,CAAC6F,UAAU,EAAG;QAE1B,IAAK4zE,oBAAoB,KAAK,IAAI,IAAIA,oBAAoB,CAACh0B,gBAAgB,KAAK,IAAI,EAAG;UAEtFhrB,WAAW,GAAG4+C,KAAK,CAAC5+C,WAAW;QAEhC;MAED;MAEA,IAAM9mB,cAAc,GAAGnnB,QAAQ,CAAC+lB,eAAe,CAAC7lB,QAAQ,IAAIF,QAAQ,CAAC+lB,eAAe,CAAC7oB,MAAM,IAAI8C,QAAQ,CAAC+lB,eAAe,CAACx7B,KAAK;MAC7H,IAAMw1D,iBAAiB,GAAK54B,cAAc,KAAKz5C,SAAS,GAAKy5C,cAAc,CAACp8C,MAAM,GAAG,CAAC;MAEtF,IAAMorE,kBAAkB,GAAG/N,UAAU,CAACxnD,GAAG,CAAE4yB,QAAS,CAAC;MACrD,IAAMmc,MAAM,GAAG28D,kBAAkB,CAACx/C,KAAK,CAACnd,MAAM;MAE9C,IAAKq+D,gBAAgB,KAAK,IAAI,EAAG;QAEhC,IAAKC,qBAAqB,KAAK,IAAI,IAAIlyF,MAAM,KAAKoxF,cAAc,EAAG;UAElE,IAAMj3C,QAAQ,GACbn6C,MAAM,KAAKoxF,cAAc,IACzB35E,QAAQ,CAAC3C,EAAE,KAAKq8E,kBAAkB;;UAEnC;UACA;UACA;UACAt9D,QAAQ,CAACqmB,QAAQ,CAAEziC,QAAQ,EAAEzX,MAAM,EAAEm6C,QAAS,CAAC;QAEhD;MAED;;MAEA;;MAEA,IAAIw9C,kBAAkB,GAAG,KAAK;MAE9B,IAAKlgF,QAAQ,CAAChmB,OAAO,KAAK2oD,kBAAkB,CAAC28B,SAAS,EAAG;QAExD,IAAK38B,kBAAkB,CAACm9C,WAAW,IAAMn9C,kBAAkB,CAACg9C,kBAAkB,KAAKxjE,MAAM,CAACmd,KAAK,CAACt/C,OAAS,EAAG;UAE3GkmG,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACtnB,gBAAgB,KAAK3jC,UAAU,EAAG;UAEhEwoG,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK10F,MAAM,CAACqT,eAAe,IAAI8jC,kBAAkB,CAACoZ,UAAU,KAAK,KAAK,EAAG;UAE/EmkC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK,CAAE10F,MAAM,CAACqT,eAAe,IAAI8jC,kBAAkB,CAACoZ,UAAU,KAAK,IAAI,EAAG;UAEhFmkC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK10F,MAAM,CAACoU,aAAa,IAAI+iC,kBAAkB,CAACsb,QAAQ,KAAK,KAAK,EAAG;UAE3EiiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK,CAAE10F,MAAM,CAACoU,aAAa,IAAI+iC,kBAAkB,CAACsb,QAAQ,KAAK,IAAI,EAAG;UAE5EiiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK10F,MAAM,CAACqT,eAAe,IAAI8jC,kBAAkB,CAACqZ,eAAe,KAAK,IAAI,IAAIxwD,MAAM,CAACuT,aAAa,KAAK,IAAI,EAAG;UAEpHmhF,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK10F,MAAM,CAACqT,eAAe,IAAI8jC,kBAAkB,CAACqZ,eAAe,KAAK,KAAK,IAAIxwD,MAAM,CAACuT,aAAa,KAAK,IAAI,EAAG;UAErHmhF,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACv5B,MAAM,KAAKA,MAAM,EAAG;UAElD82E,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKlgF,QAAQ,CAAC0K,GAAG,KAAK,IAAI,IAAIi4B,kBAAkB,CAACj4B,GAAG,KAAKA,GAAG,EAAG;UAErEw1E,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAAC0W,iBAAiB,KAAKn/E,SAAS,KAC3DyoE,kBAAkB,CAAC0W,iBAAiB,KAAKj9B,QAAQ,CAAC6lB,SAAS,IAC7DU,kBAAkB,CAACT,eAAe,KAAK9lB,QAAQ,CAAC8lB,eAAe,CAAE,EAAG;UAEpEg+C,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACib,YAAY,KAAKA,YAAY,EAAG;UAE9DsiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACgb,cAAc,KAAKA,cAAc,EAAG;UAElEuiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACiK,YAAY,KAAKA,YAAY,EAAG;UAE9DszC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACkK,YAAY,KAAKA,YAAY,EAAG;UAE9DqzC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAACmK,WAAW,KAAKA,WAAW,EAAG;UAE5DozC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKv9C,kBAAkB,CAAClI,WAAW,KAAKA,WAAW,EAAG;UAE5DylD,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKt6D,YAAY,CAACC,QAAQ,KAAK,IAAI,IAAI8c,kBAAkB,CAAC4J,iBAAiB,KAAKA,iBAAiB,EAAG;UAE1G2zC,kBAAkB,GAAG,IAAI;QAE1B;MAED,CAAC,MAAM;QAENA,kBAAkB,GAAG,IAAI;QACzBv9C,kBAAkB,CAAC28B,SAAS,GAAGt/D,QAAQ,CAAChmB,OAAO;MAEhD;;MAEA;;MAEA,IAAI0hD,OAAO,GAAGiH,kBAAkB,CAACqwB,cAAc;MAE/C,IAAKktB,kBAAkB,KAAK,IAAI,EAAG;QAElCxkD,OAAO,GAAGkjD,UAAU,CAAE5+E,QAAQ,EAAEsgB,KAAK,EAAE90B,MAAO,CAAC;MAEhD;MAEA,IAAI20F,cAAc,GAAG,KAAK;MAC1B,IAAIC,eAAe,GAAG,KAAK;MAC3B,IAAIC,aAAa,GAAG,KAAK;MAEzB,IAAMC,UAAU,GAAG5kD,OAAO,CAAC6R,WAAW,CAAC,CAAC;QACvCgzC,UAAU,GAAG59C,kBAAkB,CAAC5nB,QAAQ;MAEzC,IAAKue,KAAK,CAAC+8B,UAAU,CAAE36B,OAAO,CAACA,OAAQ,CAAC,EAAG;QAE1CykD,cAAc,GAAG,IAAI;QACrBC,eAAe,GAAG,IAAI;QACtBC,aAAa,GAAG,IAAI;MAErB;MAEA,IAAKrgF,QAAQ,CAAC3C,EAAE,KAAKq8E,kBAAkB,EAAG;QAEzCA,kBAAkB,GAAG15E,QAAQ,CAAC3C,EAAE;QAEhC+iF,eAAe,GAAG,IAAI;MAEvB;MAEA,IAAKD,cAAc,IAAIxG,cAAc,KAAKpxF,MAAM,EAAG;QAElD;;QAEA+3F,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,kBAAkB,EAAE9xE,MAAM,CAACE,gBAAiB,CAAC;QACvE63F,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,YAAY,EAAE9xE,MAAM,CAACC,kBAAmB,CAAC;QAEnE,IAAMg4F,OAAO,GAAGF,UAAU,CAACv4E,GAAG,CAAC04E,cAAc;QAE7C,IAAKD,OAAO,KAAKtmH,SAAS,EAAG;UAE5BsmH,OAAO,CAAChzC,QAAQ,CAAE6sB,GAAG,EAAEugB,QAAQ,CAACzwF,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAE,CAAC;QAE9E;QAEA,IAAKg9B,YAAY,CAAC0a,sBAAsB,EAAG;UAE1CggD,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,eAAe,EACxC,GAAG,IAAKpyF,IAAI,CAACiD,GAAG,CAAEqd,MAAM,CAACqP,GAAG,GAAG,GAAI,CAAC,GAAG3vB,IAAI,CAACkD,GAAG,CAAG,CAAC;QAErD;;QAEA;;QAEA,IAAK60B,QAAQ,CAAC20E,mBAAmB,IAChC30E,QAAQ,CAACy0E,kBAAkB,IAC3Bz0E,QAAQ,CAACw0E,qBAAqB,IAC9Bx0E,QAAQ,CAACsN,mBAAmB,IAC5BtN,QAAQ,CAACgjD,sBAAsB,IAC/BhjD,QAAQ,CAAC8b,gBAAgB,EAAG;UAE5BwkE,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,gBAAgB,EAAE9xE,MAAM,CAACu7C,oBAAoB,KAAK,IAAK,CAAC;QAEnF;QAEA,IAAK61C,cAAc,KAAKpxF,MAAM,EAAG;UAEhCoxF,cAAc,GAAGpxF,MAAM;;UAEvB;UACA;UACA;;UAEA63F,eAAe,GAAG,IAAI,CAAC,CAAE;UACzBC,aAAa,GAAG,IAAI,CAAC,CAAE;QAExB;MAED;;MAEA;MACA;MACA;;MAEA,IAAK70F,MAAM,CAACoU,aAAa,EAAG;QAE3B0gF,UAAU,CAACrrC,WAAW,CAAEolB,GAAG,EAAE7uE,MAAM,EAAE,YAAa,CAAC;QACnD80F,UAAU,CAACrrC,WAAW,CAAEolB,GAAG,EAAE7uE,MAAM,EAAE,mBAAoB,CAAC;QAE1D,IAAMuU,QAAQ,GAAGvU,MAAM,CAACuU,QAAQ;QAEhC,IAAKA,QAAQ,EAAG;UAEf,IAAK6lB,YAAY,CAAC4b,mBAAmB,EAAG;YAEvC,IAAKzhC,QAAQ,CAAC2gF,WAAW,KAAK,IAAI,EAAG3gF,QAAQ,CAAC4gF,kBAAkB,CAAC,CAAC;YAElEL,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,aAAa,EAAEt6D,QAAQ,CAAC2gF,WAAW,EAAExjG,QAAS,CAAC;YACzEojG,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,iBAAiB,EAAEt6D,QAAQ,CAAC6gF,eAAgB,CAAC;UAExE,CAAC,MAAM;YAENx0G,OAAO,CAACC,IAAI,CAAE,yIAA0I,CAAC;UAE1J;QAED;MAED;MAEA,IAAMkmC,eAAe,GAAG/lB,QAAQ,CAAC+lB,eAAe;MAEhD,IAAKA,eAAe,CAAC7lB,QAAQ,KAAKxyB,SAAS,IAAIq4C,eAAe,CAAC7oB,MAAM,KAAKxvB,SAAS,IAAMq4C,eAAe,CAACx7B,KAAK,KAAK7c,SAAS,IAAI0rD,YAAY,CAACC,QAAQ,KAAK,IAAM,EAAG;QAElK81D,YAAY,CAACv4F,MAAM,CAAEoI,MAAM,EAAEgB,QAAQ,EAAEkvC,OAAQ,CAAC;MAEjD;MAEA,IAAK0kD,eAAe,IAAIz9C,kBAAkB,CAACvnC,aAAa,KAAK5P,MAAM,CAAC4P,aAAa,EAAG;QAEnFunC,kBAAkB,CAACvnC,aAAa,GAAG5P,MAAM,CAAC4P,aAAa;QACvDklF,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,eAAe,EAAE7uE,MAAM,CAAC4P,aAAc,CAAC;MAElE;;MAEA;;MAEA,IAAK4E,QAAQ,CAAC6gF,qBAAqB,IAAI7gF,QAAQ,CAACoJ,MAAM,KAAK,IAAI,EAAG;QAEjEm3E,UAAU,CAACn3E,MAAM,CAACn2C,KAAK,GAAGm2C,MAAM;QAEhCm3E,UAAU,CAACrtD,UAAU,CAACjgE,KAAK,GAAKm2C,MAAM,CAACiY,aAAa,IAAIjY,MAAM,CAACzsB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAE3G;MAEA,IAAKyjG,eAAe,EAAG;QAEtBE,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,qBAAqB,EAAEgf,KAAK,CAACD,mBAAoB,CAAC;QAE5E,IAAKz2C,kBAAkB,CAACm9C,WAAW,EAAG;UAErC;;UAEA;UACA;UACA;UACA;UACA;UACA;;UAEAgB,6BAA6B,CAAEP,UAAU,EAAEF,aAAc,CAAC;QAE3D;;QAEA;;QAEA,IAAK31E,GAAG,IAAI1K,QAAQ,CAAC0K,GAAG,KAAK,IAAI,EAAG;UAEnCjM,SAAS,CAACw1E,kBAAkB,CAAEsM,UAAU,EAAE71E,GAAI,CAAC;QAEhD;QAEAjM,SAAS,CAAC21E,uBAAuB,CAAEmM,UAAU,EAAEvgF,QAAQ,EAAEm6E,WAAW,EAAED,OAAO,EAAEQ,yBAA0B,CAAC;QAE1G9lC,aAAa,CAACM,MAAM,CAAEmlB,GAAG,EAAE13B,kBAAkB,CAACs9C,YAAY,EAAEM,UAAU,EAAErjG,QAAS,CAAC;MAEnF;MAEA,IAAK8iB,QAAQ,CAAC8b,gBAAgB,IAAI9b,QAAQ,CAAC4c,kBAAkB,KAAK,IAAI,EAAG;QAExEg4B,aAAa,CAACM,MAAM,CAAEmlB,GAAG,EAAE13B,kBAAkB,CAACs9C,YAAY,EAAEM,UAAU,EAAErjG,QAAS,CAAC;QAClF8iB,QAAQ,CAAC4c,kBAAkB,GAAG,KAAK;MAEpC;MAEA,IAAK5c,QAAQ,CAAC01E,gBAAgB,EAAG;QAEhC4K,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,QAAQ,EAAE7uE,MAAM,CAACza,MAAO,CAAC;MAEpD;;MAEA;;MAEAuvG,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,iBAAiB,EAAE7uE,MAAM,CAACoP,eAAgB,CAAC;MACrE0lF,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,cAAc,EAAE7uE,MAAM,CAACqP,YAAa,CAAC;MAC/DylF,UAAU,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAE,aAAa,EAAE7uE,MAAM,CAAC5C,WAAY,CAAC;;MAE7D;;MAEA,IAAKoX,QAAQ,CAAC8b,gBAAgB,IAAI9b,QAAQ,CAAC47C,mBAAmB,EAAG;QAEhE,IAAMnpC,MAAM,GAAGzS,QAAQ,CAACgc,cAAc;QAEtC,KAAM,IAAI9oD,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGi+C,MAAM,CAACl7C,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEjD,IAAK0yD,YAAY,CAACC,QAAQ,EAAG;YAE5B,IAAM7Q,KAAK,GAAGvC,MAAM,CAAEv/C,CAAC,CAAE;YAEzB8oD,cAAc,CAAC54B,MAAM,CAAE4xB,KAAK,EAAE0mB,OAAQ,CAAC;YACvC1f,cAAc,CAACk6D,IAAI,CAAElhE,KAAK,EAAE0mB,OAAQ,CAAC;UAEtC,CAAC,MAAM;YAENtvD,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;UAE7F;QAED;MAED;MAEA,OAAOqvD,OAAO;IAEf;;IAEA;;IAEA,SAASolD,6BAA6BA,CAAE/lE,QAAQ,EAAE9nD,KAAK,EAAG;MAEzD8nD,QAAQ,CAAC0Z,iBAAiB,CAACx3C,WAAW,GAAGhqB,KAAK;MAC9C8nD,QAAQ,CAAC2Z,UAAU,CAACz3C,WAAW,GAAGhqB,KAAK;MAEvC8nD,QAAQ,CAAC4Z,iBAAiB,CAAC13C,WAAW,GAAGhqB,KAAK;MAC9C8nD,QAAQ,CAAC8Z,uBAAuB,CAAC53C,WAAW,GAAGhqB,KAAK;MACpD8nD,QAAQ,CAAC6a,WAAW,CAAC34C,WAAW,GAAGhqB,KAAK;MACxC8nD,QAAQ,CAAC8a,iBAAiB,CAAC54C,WAAW,GAAGhqB,KAAK;MAC9C8nD,QAAQ,CAACqa,UAAU,CAACn4C,WAAW,GAAGhqB,KAAK;MACvC8nD,QAAQ,CAACya,gBAAgB,CAACv4C,WAAW,GAAGhqB,KAAK;MAC7C8nD,QAAQ,CAACsb,cAAc,CAACp5C,WAAW,GAAGhqB,KAAK;MAC3C8nD,QAAQ,CAACmb,gBAAgB,CAACj5C,WAAW,GAAGhqB,KAAK;IAE9C;IAEA,SAAS8sH,mBAAmBA,CAAE//E,QAAQ,EAAG;MAExC,OAAOA,QAAQ,CAACw0E,qBAAqB,IAAIx0E,QAAQ,CAACy0E,kBAAkB,IAAIz0E,QAAQ,CAAC20E,mBAAmB,IACnG30E,QAAQ,CAACgjD,sBAAsB,IAAIhjD,QAAQ,CAAC41E,gBAAgB,IAC1D51E,QAAQ,CAAC8b,gBAAgB,IAAI9b,QAAQ,CAACmc,MAAM,KAAK,IAAM;IAE3D;IAEA,IAAI,CAACuE,iBAAiB,GAAG,YAAY;MAEpC,OAAO64D,sBAAsB;IAE9B,CAAC;IAED,IAAI,CAAC34D,oBAAoB,GAAG,YAAY;MAEvC,OAAO44D,yBAAyB;IAEjC,CAAC;IAED,IAAI,CAACp+D,eAAe,GAAG,YAAY;MAElC,OAAOq+D,oBAAoB;IAE5B,CAAC;IAED,IAAI,CAAC7F,uBAAuB,GAAG,UAAWz0D,YAAY,EAAEqlD,YAAY,EAAEpkF,YAAY,EAAG;MAEpFw0C,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC7+B,OAAQ,CAAC,CAAC+9E,cAAc,GAAGmG,YAAY;MACpE5vC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC/+B,YAAa,CAAC,CAACi+E,cAAc,GAAGj+E,YAAY;MAEzE,IAAMk+E,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;MAC7Dm/C,sBAAsB,CAAC0E,qBAAqB,GAAG,IAAI;MAEnD,IAAK1E,sBAAsB,CAAC0E,qBAAqB,EAAG;QAEnD1E,sBAAsB,CAAC+F,yBAAyB,GAAGjkF,YAAY,KAAKlmB,SAAS;QAE7E,IAAK,CAAEokG,sBAAsB,CAAC+F,yBAAyB,EAAG;UAEzD;UACA;UACA,IAAKhoD,UAAU,CAAC1kC,GAAG,CAAE,sCAAuC,CAAC,KAAK,IAAI,EAAG;YAExEvL,OAAO,CAACC,IAAI,CAAE,wGAAyG,CAAC;YACxHiyF,sBAAsB,CAACkH,oBAAoB,GAAG,KAAK;UAEpD;QAED;MAED;IAED,CAAC;IAED,IAAI,CAACgO,0BAA0B,GAAG,UAAWr0D,YAAY,EAAE4hE,kBAAkB,EAAG;MAE/E,IAAMziB,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;MAC7Dm/C,sBAAsB,CAACC,kBAAkB,GAAGwiB,kBAAkB;MAC9DziB,sBAAsB,CAAC0iB,uBAAuB,GAAGD,kBAAkB,KAAK7mH,SAAS;IAElF,CAAC;IAED,IAAI,CAAC6mD,eAAe,GAAG,UAAW5B,YAAY,EAAE2uC,cAAc,GAAG,CAAC,EAAEzuC,iBAAiB,GAAG,CAAC,EAAG;MAE3Fo6D,oBAAoB,GAAGt6D,YAAY;MACnCo6D,sBAAsB,GAAGzrB,cAAc;MACvC0rB,yBAAyB,GAAGn6D,iBAAiB;MAE7C,IAAI4hE,qBAAqB,GAAG,IAAI;MAChC,IAAIlrB,WAAW,GAAG,IAAI;MACtB,IAAImO,MAAM,GAAG,KAAK;MAClB,IAAIgd,gBAAgB,GAAG,KAAK;MAE5B,IAAK/hE,YAAY,EAAG;QAEnB,IAAMm/C,sBAAsB,GAAG1pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC;QAE7D,IAAKm/C,sBAAsB,CAAC0iB,uBAAuB,KAAK9mH,SAAS,EAAG;UAEnE;UACAo/D,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;UAC9CgrB,qBAAqB,GAAG,KAAK;QAE9B,CAAC,MAAM,IAAK3iB,sBAAsB,CAACC,kBAAkB,KAAKrkG,SAAS,EAAG;UAErEgjB,QAAQ,CAACunF,iBAAiB,CAAEtlD,YAAa,CAAC;QAE3C,CAAC,MAAM,IAAKm/C,sBAAsB,CAAC0E,qBAAqB,EAAG;UAE1D;UACA9lF,QAAQ,CAACqnF,cAAc,CAAEplD,YAAY,EAAEyV,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC7+B,OAAQ,CAAC,CAAC+9E,cAAc,EAAEzpC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC/+B,YAAa,CAAC,CAACi+E,cAAe,CAAC;QAE3J;QAEA,IAAM/9E,OAAO,GAAG6+B,YAAY,CAAC7+B,OAAO;QAEpC,IAAKA,OAAO,CAACsB,eAAe,IAAItB,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAAC4gF,wBAAwB,EAAG;UAEhGggB,gBAAgB,GAAG,IAAI;QAExB;QAEA,IAAM3iB,kBAAkB,GAAG3pC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC,CAACo/C,kBAAkB;QAE5E,IAAKp/C,YAAY,CAACuC,uBAAuB,EAAG;UAE3C,IAAKnnC,KAAK,CAACC,OAAO,CAAE+jF,kBAAkB,CAAEzQ,cAAc,CAAG,CAAC,EAAG;YAE5DiI,WAAW,GAAGwI,kBAAkB,CAAEzQ,cAAc,CAAE,CAAEzuC,iBAAiB,CAAE;UAExE,CAAC,MAAM;YAEN02C,WAAW,GAAGwI,kBAAkB,CAAEzQ,cAAc,CAAE;UAEnD;UAEAoW,MAAM,GAAG,IAAI;QAEd,CAAC,MAAM,IAAOt+C,YAAY,CAACC,QAAQ,IAAI1G,YAAY,CAAC9+B,OAAO,GAAG,CAAC,IAAMnD,QAAQ,CAAC+lF,kBAAkB,CAAE9jD,YAAa,CAAC,KAAK,KAAK,EAAG;UAE5H42C,WAAW,GAAGnhC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC,CAACy/C,8BAA8B;QAE5E,CAAC,MAAM;UAEN,IAAKrkF,KAAK,CAACC,OAAO,CAAE+jF,kBAAmB,CAAC,EAAG;YAE1CxI,WAAW,GAAGwI,kBAAkB,CAAEl/C,iBAAiB,CAAE;UAEtD,CAAC,MAAM;YAEN02C,WAAW,GAAGwI,kBAAkB;UAEjC;QAED;QAEAqb,gBAAgB,CAAChsG,IAAI,CAAEuxC,YAAY,CAACn/B,QAAS,CAAC;QAC9C65F,eAAe,CAACjsG,IAAI,CAAEuxC,YAAY,CAACr/B,OAAQ,CAAC;QAC5Cg6F,mBAAmB,GAAG36D,YAAY,CAACp/B,WAAW;MAE/C,CAAC,MAAM;QAEN65F,gBAAgB,CAAChsG,IAAI,CAAEm/E,SAAU,CAAC,CAAC1+E,cAAc,CAAE8rG,WAAY,CAAC,CAAC/vG,KAAK,CAAC,CAAC;QACxEyvG,eAAe,CAACjsG,IAAI,CAAE0sG,QAAS,CAAC,CAACjsG,cAAc,CAAE8rG,WAAY,CAAC,CAAC/vG,KAAK,CAAC,CAAC;QACtE0vG,mBAAmB,GAAGS,YAAY;MAEnC;MAEA,IAAM4G,gBAAgB,GAAG7nD,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;MAE9E,IAAKorB,gBAAgB,IAAIv7D,YAAY,CAACpJ,WAAW,IAAIykE,qBAAqB,EAAG;QAE5E3nD,KAAK,CAAC9c,WAAW,CAAE2C,YAAY,EAAE42C,WAAY,CAAC;MAE/C;MAEAz8B,KAAK,CAACt5C,QAAQ,CAAE45F,gBAAiB,CAAC;MAClCtgD,KAAK,CAACx5C,OAAO,CAAE+5F,eAAgB,CAAC;MAChCvgD,KAAK,CAAC40B,cAAc,CAAE4rB,mBAAoB,CAAC;MAE3C,IAAK5V,MAAM,EAAG;QAEb,IAAMlG,iBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC7+B,OAAQ,CAAC;QAChE+5E,GAAG,CAACgJ,oBAAoB,CAAEhJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAG5H,cAAc,EAAEkQ,iBAAiB,CAACK,cAAc,EAAEh/C,iBAAkB,CAAC;MAE1K,CAAC,MAAM,IAAK6hE,gBAAgB,EAAG;QAE9B,IAAMljB,kBAAiB,GAAGppC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAY,CAAC7+B,OAAQ,CAAC;QAChE,IAAM8gG,KAAK,GAAGtzB,cAAc,IAAI,CAAC;QACjCuM,GAAG,CAACgnB,uBAAuB,CAAEhnB,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,EAAE8H,kBAAiB,CAACK,cAAc,EAAEh/C,iBAAiB,IAAI,CAAC,EAAE+hE,KAAM,CAAC;MAEvI;MAEA1H,kBAAkB,GAAG,CAAE,CAAC,CAAC,CAAC;IAE3B,CAAC;;IAED,IAAI,CAAC4H,sBAAsB,GAAG,UAAWniE,YAAY,EAAEj2C,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAEnD,MAAM,EAAE0rG,mBAAmB,EAAG;MAEzG,IAAK,EAAIpiE,YAAY,IAAIA,YAAY,CAACv+B,mBAAmB,CAAE,EAAG;QAE7DxU,OAAO,CAACywB,KAAK,CAAE,0FAA2F,CAAC;QAC3G;MAED;MAEA,IAAIk5D,WAAW,GAAGnhC,UAAU,CAACxnD,GAAG,CAAE+xC,YAAa,CAAC,CAACo/C,kBAAkB;MAEnE,IAAKp/C,YAAY,CAACuC,uBAAuB,IAAI6/D,mBAAmB,KAAKrnH,SAAS,EAAG;QAEhF67F,WAAW,GAAGA,WAAW,CAAEwrB,mBAAmB,CAAE;MAEjD;MAEA,IAAKxrB,WAAW,EAAG;QAElBz8B,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;QAErD,IAAI;UAEH,IAAMz1E,OAAO,GAAG6+B,YAAY,CAAC7+B,OAAO;UACpC,IAAMkhG,aAAa,GAAGlhG,OAAO,CAAC7E,MAAM;UACpC,IAAM2kF,WAAW,GAAG9/E,OAAO,CAAClsB,IAAI;UAEhC,IAAKotH,aAAa,KAAKrhH,UAAU,IAAIm6F,KAAK,CAACziF,OAAO,CAAE2pG,aAAc,CAAC,KAAKnnB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAAConB,gCAAiC,CAAC,EAAG;YAElIr1G,OAAO,CAACywB,KAAK,CAAE,2GAA4G,CAAC;YAC5H;UAED;UAEA,IAAM6kF,uBAAuB,GAAKthB,WAAW,KAAKtgG,aAAa,KAAQu8C,UAAU,CAAC1kC,GAAG,CAAE,6BAA8B,CAAC,IAAMiuC,YAAY,CAACC,QAAQ,IAAIxJ,UAAU,CAAC1kC,GAAG,CAAE,wBAAyB,CAAG,CAAE;UAEnM,IAAKyoF,WAAW,KAAK7gG,gBAAgB,IAAI+6F,KAAK,CAACziF,OAAO,CAAEuoF,WAAY,CAAC,KAAK/F,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAACsnB,8BAA+B,CAAC;UAAI;UACnI,EAAIvhB,WAAW,KAAKvgG,SAAS,KAAM+lD,YAAY,CAACC,QAAQ,IAAIxJ,UAAU,CAAC1kC,GAAG,CAAE,mBAAoB,CAAC,IAAI0kC,UAAU,CAAC1kC,GAAG,CAAE,0BAA2B,CAAC,CAAE,CAAE;UAAI;UACzJ,CAAE+pG,uBAAuB,EAAG;YAE5Bt1G,OAAO,CAACywB,KAAK,CAAE,qHAAsH,CAAC;YACtI;UAED;;UAEA;;UAEA,IAAO3zB,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAMi2C,YAAY,CAACpmC,KAAK,GAAGA,KAAO,IAAQpkB,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAMwqD,YAAY,CAACnmC,MAAM,GAAGA,MAAU,EAAG;YAE/GqhF,GAAG,CAACunB,UAAU,CAAE14G,CAAC,EAAEvU,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAEshF,KAAK,CAACziF,OAAO,CAAE2pG,aAAc,CAAC,EAAElnB,KAAK,CAACziF,OAAO,CAAEuoF,WAAY,CAAC,EAAEvqF,MAAO,CAAC;UAE5G;QAED,CAAC,SAAS;UAET;;UAEA,IAAMkgF,YAAW,GAAK0jB,oBAAoB,KAAK,IAAI,GAAK7kD,UAAU,CAACxnD,GAAG,CAAEqsG,oBAAqB,CAAC,CAAClb,kBAAkB,GAAG,IAAI;UACxHjlC,KAAK,CAACw8B,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,YAAY,CAAC;QAEtD;MAED;IAED,CAAC;IAED,IAAI,CAAC8rB,wBAAwB,GAAG,UAAWn1F,QAAQ,EAAEpM,OAAO,EAAEk+E,KAAK,GAAG,CAAC,EAAG;MAEzE,IAAMsjB,UAAU,GAAG75G,IAAI,CAAC+C,GAAG,CAAE,CAAC,EAAE,CAAEwzF,KAAM,CAAC;MACzC,IAAMzlF,KAAK,GAAG9Q,IAAI,CAACmC,KAAK,CAAEkW,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAG+oG,UAAW,CAAC;MAC5D,IAAM9oG,MAAM,GAAG/Q,IAAI,CAACmC,KAAK,CAAEkW,OAAO,CAAC3H,KAAK,CAACK,MAAM,GAAG8oG,UAAW,CAAC;MAE9D5kG,QAAQ,CAACy0D,YAAY,CAAErxD,OAAO,EAAE,CAAE,CAAC;MAEnC+5E,GAAG,CAAC0nB,iBAAiB,CAAE1nB,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAEokB,KAAK,EAAEC,MAAO,CAAC;MAE3FsgD,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC6oB,oBAAoB,GAAG,UAAWt1F,QAAQ,EAAEu1F,UAAU,EAAEC,UAAU,EAAE1jB,KAAK,GAAG,CAAC,EAAG;MAEpF,IAAMzlF,KAAK,GAAGkpG,UAAU,CAACtpG,KAAK,CAACI,KAAK;MACpC,IAAMC,MAAM,GAAGipG,UAAU,CAACtpG,KAAK,CAACK,MAAM;MACtC,IAAM8iF,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEqqG,UAAU,CAACzmG,MAAO,CAAC;MACnD,IAAMsgF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEqqG,UAAU,CAAC9tH,IAAK,CAAC;MAE/C8oB,QAAQ,CAACy0D,YAAY,CAAEuwC,UAAU,EAAE,CAAE,CAAC;;MAEtC;MACA;MACA7nB,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACoH,mBAAmB,EAAEygB,UAAU,CAAC3lG,KAAM,CAAC;MAC5D89E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACqH,8BAA8B,EAAEwgB,UAAU,CAAC5lG,gBAAiB,CAAC;MAClF+9E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsH,gBAAgB,EAAEugB,UAAU,CAAC1lG,eAAgB,CAAC;MAEnE,IAAKylG,UAAU,CAACxnG,aAAa,EAAG;QAE/B4/E,GAAG,CAACf,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAEokB,KAAK,EAAEC,MAAM,EAAE8iF,QAAQ,EAAEC,MAAM,EAAEkmB,UAAU,CAACtpG,KAAK,CAACiB,IAAK,CAAC;MAE3H,CAAC,MAAM;QAEN,IAAKqoG,UAAU,CAACvkB,mBAAmB,EAAG;UAErCrD,GAAG,CAACb,uBAAuB,CAAEa,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAEstH,UAAU,CAACjmG,OAAO,CAAE,CAAC,CAAE,CAACjD,KAAK,EAAEkpG,UAAU,CAACjmG,OAAO,CAAE,CAAC,CAAE,CAAChD,MAAM,EAAE8iF,QAAQ,EAAEmmB,UAAU,CAACjmG,OAAO,CAAE,CAAC,CAAE,CAACpC,IAAK,CAAC;QAEpL,CAAC,MAAM;UAENygF,GAAG,CAACf,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAEmnG,QAAQ,EAAEC,MAAM,EAAEkmB,UAAU,CAACtpG,KAAM,CAAC;QAEvG;MAED;;MAEA;MACA,IAAK6lF,KAAK,KAAK,CAAC,IAAI0jB,UAAU,CAAC7lG,eAAe,EAAGg+E,GAAG,CAACsB,cAAc,CAAEtB,GAAG,CAAC7E,UAAW,CAAC;MAErFl8B,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAACgpB,sBAAsB,GAAG,UAAWC,SAAS,EAAE11F,QAAQ,EAAEu1F,UAAU,EAAEC,UAAU,EAAE1jB,KAAK,GAAG,CAAC,EAAG;MAEjG,IAAK6a,KAAK,CAACiC,gBAAgB,EAAG;QAE7BlvG,OAAO,CAACC,IAAI,CAAE,2EAA4E,CAAC;QAC3F;MAED;MAEA,IAAM0M,KAAK,GAAGqpG,SAAS,CAACt5G,GAAG,CAACI,CAAC,GAAGk5G,SAAS,CAACv5G,GAAG,CAACK,CAAC,GAAG,CAAC;MACnD,IAAM8P,MAAM,GAAGopG,SAAS,CAACt5G,GAAG,CAACnU,CAAC,GAAGytH,SAAS,CAACv5G,GAAG,CAAClU,CAAC,GAAG,CAAC;MACpD,IAAMkrB,KAAK,GAAGuiG,SAAS,CAACt5G,GAAG,CAAC6U,CAAC,GAAGykG,SAAS,CAACv5G,GAAG,CAAC8U,CAAC,GAAG,CAAC;MACnD,IAAMm+E,QAAQ,GAAGxB,KAAK,CAACziF,OAAO,CAAEqqG,UAAU,CAACzmG,MAAO,CAAC;MACnD,IAAMsgF,MAAM,GAAGzB,KAAK,CAACziF,OAAO,CAAEqqG,UAAU,CAAC9tH,IAAK,CAAC;MAC/C,IAAIiuH,QAAQ;MAEZ,IAAKH,UAAU,CAACtgG,eAAe,EAAG;QAEjC1E,QAAQ,CAAC20D,YAAY,CAAEqwC,UAAU,EAAE,CAAE,CAAC;QACtCG,QAAQ,GAAGhoB,GAAG,CAACnF,UAAU;MAE1B,CAAC,MAAM,IAAKgtB,UAAU,CAACjhG,kBAAkB,EAAG;QAE3C/D,QAAQ,CAAC+0D,iBAAiB,CAAEiwC,UAAU,EAAE,CAAE,CAAC;QAC3CG,QAAQ,GAAGhoB,GAAG,CAAClF,gBAAgB;MAEhC,CAAC,MAAM;QAEN/oF,OAAO,CAACC,IAAI,CAAE,6GAA8G,CAAC;QAC7H;MAED;MAEAguF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACoH,mBAAmB,EAAEygB,UAAU,CAAC3lG,KAAM,CAAC;MAC5D89E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACqH,8BAA8B,EAAEwgB,UAAU,CAAC5lG,gBAAiB,CAAC;MAClF+9E,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsH,gBAAgB,EAAEugB,UAAU,CAAC1lG,eAAgB,CAAC;MAEnE,IAAM8lG,YAAY,GAAGjoB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAACkoB,iBAAkB,CAAC;MAC9D,IAAMC,iBAAiB,GAAGnoB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAACooB,mBAAoB,CAAC;MACrE,IAAMC,gBAAgB,GAAGroB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAACsoB,kBAAmB,CAAC;MACnE,IAAMC,cAAc,GAAGvoB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAACwoB,gBAAiB,CAAC;MAC/D,IAAMC,gBAAgB,GAAGzoB,GAAG,CAACvtE,YAAY,CAAEutE,GAAG,CAAC0oB,kBAAmB,CAAC;MAEnE,IAAMpqG,KAAK,GAAGspG,UAAU,CAACvkB,mBAAmB,GAAGukB,UAAU,CAACjmG,OAAO,CAAE,CAAC,CAAE,GAAGimG,UAAU,CAACtpG,KAAK;MAEzF0hF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACkoB,iBAAiB,EAAE5pG,KAAK,CAACI,KAAM,CAAC;MACrDshF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACooB,mBAAmB,EAAE9pG,KAAK,CAACK,MAAO,CAAC;MACxDqhF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsoB,kBAAkB,EAAEP,SAAS,CAACv5G,GAAG,CAACK,CAAE,CAAC;MAC1DmxF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACwoB,gBAAgB,EAAET,SAAS,CAACv5G,GAAG,CAAClU,CAAE,CAAC;MACxD0lG,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAAC0oB,kBAAkB,EAAEX,SAAS,CAACv5G,GAAG,CAAC8U,CAAE,CAAC;MAE1D,IAAKskG,UAAU,CAACxnG,aAAa,IAAIwnG,UAAU,CAACrgG,eAAe,EAAG;QAE7Dy4E,GAAG,CAACd,aAAa,CAAE8oB,QAAQ,EAAE7jB,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAE+3B,QAAQ,CAAC/O,CAAC,EAAE5E,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAK,CAACiB,IAAK,CAAC;MAE7H,CAAC,MAAM;QAEN,IAAKqoG,UAAU,CAAC/gB,wBAAwB,EAAG;UAE1C90F,OAAO,CAACC,IAAI,CAAE,yFAA0F,CAAC;UACzGguF,GAAG,CAACZ,uBAAuB,CAAE4oB,QAAQ,EAAE7jB,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAE+3B,QAAQ,CAAC/O,CAAC,EAAE5E,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEi8E,QAAQ,EAAEnjF,KAAK,CAACiB,IAAK,CAAC;QAE/H,CAAC,MAAM;UAENygF,GAAG,CAACd,aAAa,CAAE8oB,QAAQ,EAAE7jB,KAAK,EAAE9xE,QAAQ,CAACxjB,CAAC,EAAEwjB,QAAQ,CAAC/3B,CAAC,EAAE+3B,QAAQ,CAAC/O,CAAC,EAAE5E,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEi8E,QAAQ,EAAEC,MAAM,EAAEpjF,KAAM,CAAC;QAExH;MAED;MAEA0hF,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACkoB,iBAAiB,EAAED,YAAa,CAAC;MACtDjoB,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACooB,mBAAmB,EAAED,iBAAkB,CAAC;MAC7DnoB,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACsoB,kBAAkB,EAAED,gBAAiB,CAAC;MAC3DroB,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAACwoB,gBAAgB,EAAED,cAAe,CAAC;MACvDvoB,GAAG,CAACmH,WAAW,CAAEnH,GAAG,CAAC0oB,kBAAkB,EAAED,gBAAiB,CAAC;;MAE3D;MACA,IAAKtkB,KAAK,KAAK,CAAC,IAAI0jB,UAAU,CAAC7lG,eAAe,EAAGg+E,GAAG,CAACsB,cAAc,CAAE0mB,QAAS,CAAC;MAE/E/oD,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC4H,WAAW,GAAG,UAAWzgF,OAAO,EAAG;MAEvC,IAAKA,OAAO,CAAC+gC,aAAa,EAAG;QAE5BnkC,QAAQ,CAAC60D,cAAc,CAAEzxD,OAAO,EAAE,CAAE,CAAC;MAEtC,CAAC,MAAM,IAAKA,OAAO,CAACsB,eAAe,EAAG;QAErC1E,QAAQ,CAAC20D,YAAY,CAAEvxD,OAAO,EAAE,CAAE,CAAC;MAEpC,CAAC,MAAM,IAAKA,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAAC4gF,wBAAwB,EAAG;QAE5EhkF,QAAQ,CAAC+0D,iBAAiB,CAAE3xD,OAAO,EAAE,CAAE,CAAC;MAEzC,CAAC,MAAM;QAENpD,QAAQ,CAACy0D,YAAY,CAAErxD,OAAO,EAAE,CAAE,CAAC;MAEpC;MAEAg5C,KAAK,CAAC6/B,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC6pB,UAAU,GAAG,YAAY;MAE7BzJ,sBAAsB,GAAG,CAAC;MAC1BC,yBAAyB,GAAG,CAAC;MAC7BC,oBAAoB,GAAG,IAAI;MAE3BngD,KAAK,CAACjiE,KAAK,CAAC,CAAC;MACb+jE,aAAa,CAAC/jE,KAAK,CAAC,CAAC;IAEtB,CAAC;IAED,IAAK,OAAO4rH,kBAAkB,KAAK,WAAW,EAAG;MAEhDA,kBAAkB,CAACt7G,aAAa,CAAE,IAAIu7G,WAAW,CAAE,SAAS,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE,CAAE,CAAC;IAEnF;EAED;EAAC1pH,YAAA,CAAAk+G,aAAA;IAAAn+G,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAuB;MAEtB,OAAOtG,qBAAqB;IAE7B;EAAC;IAAAtN,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAuB;MAEtB,OAAO,IAAI,CAAC+rG,iBAAiB;IAE9B,CAAC;IAAAhtG,GAAA,EAED,SAAAA,IAAsBuL,UAAU,EAAG;MAElC,IAAI,CAACyhG,iBAAiB,GAAGzhG,UAAU;MAEnC,IAAMiuC,EAAE,GAAG,IAAI,CAACzsC,UAAU,CAAC,CAAC;MAC5BysC,EAAE,CAACy9D,uBAAuB,GAAG1rG,UAAU,KAAKtT,mBAAmB,GAAG,YAAY,GAAG,MAAM;MACvFuhD,EAAE,CAAC09D,gBAAgB,GAAGhsG,eAAe,CAACI,iBAAiB,KAAKpT,yBAAyB,GAAG,YAAY,GAAG,MAAM;IAE9G;EAAC;IAAA7K,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAA8B;MAAE;;MAE/BhB,OAAO,CAACC,IAAI,CAAE,oHAAqH,CAAC;MACpI,OAAO,CAAE,IAAI,CAACkyE,eAAe;IAE9B,CAAC;IAAApyE,GAAA,EAED,SAAAA,IAA6BlZ,KAAK,EAAG;MAAE;;MAEtCmZ,OAAO,CAACC,IAAI,CAAE,oHAAqH,CAAC;MACpI,IAAI,CAACkyE,eAAe,GAAG,CAAEtrF,KAAK;IAE/B;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAqB;MAAE;;MAEtBhB,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;MAChH,OAAO,IAAI,CAACgvC,gBAAgB,KAAKn3C,cAAc,GAAGN,YAAY,GAAGD,cAAc;IAEhF,CAAC;IAAAwI,GAAA,EAED,SAAAA,IAAoBqR,QAAQ,EAAG;MAAE;;MAEhCpR,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;MAChH,IAAI,CAACgvC,gBAAgB,GAAG79B,QAAQ,KAAK5Z,YAAY,GAAGM,cAAc,GAAGC,oBAAoB;IAE1F;EAAC;IAAA3K,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAsB;MAAE;;MAEvBhB,OAAO,CAACC,IAAI,CAAE,6MAA8M,CAAC;MAC7N,OAAO,IAAI,CAAC45E,gBAAgB;IAE7B,CAAC;IAAA95E,GAAA,EAED,SAAAA,IAAqBlZ,KAAK,EAAG;MAAE;;MAE9BmZ,OAAO,CAACC,IAAI,CAAE,6MAA8M,CAAC;MAC7N,IAAI,CAAC45E,gBAAgB,GAAGhzF,KAAK;IAE9B;EAAC;EAAA,OAAA0kH,aAAA;AAAA;AAAA,IAII2L,cAAc,GAAAhpH,OAAA,CAAAgpH,cAAA,0BAAAC,cAAA;EAAAxoG,SAAA,CAAAuoG,cAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAAvoG,YAAA,CAAAqoG,cAAA;EAAA,SAAAA,eAAA;IAAAtqH,eAAA,OAAAsqH,cAAA;IAAA,OAAAE,QAAA,CAAAvmF,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAA6pH,cAAA;AAAA,EAAS3L,aAAa;AAE1C2L,cAAc,CAAC1wH,SAAS,CAAC0oH,gBAAgB,GAAG,IAAI;AAAC,IAE3CmI,OAAO,GAAAnpH,OAAA,CAAAmpH,OAAA;EAEZ,SAAAA,QAAa1sG,KAAK,EAAEo9F,OAAO,GAAG,OAAO,EAAG;IAAAn7G,eAAA,OAAAyqH,OAAA;IAEvC,IAAI,CAAC99B,SAAS,GAAG,IAAI;IAErB,IAAI,CAAChuF,IAAI,GAAG,EAAE;IAEd,IAAI,CAACof,KAAK,GAAG,IAAIk0B,KAAK,CAAEl0B,KAAM,CAAC;IAC/B,IAAI,CAACo9F,OAAO,GAAGA,OAAO;EAEvB;EAAC16G,YAAA,CAAAgqH,OAAA;IAAAjqH,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI81G,OAAO,CAAE,IAAI,CAAC1sG,KAAK,EAAE,IAAI,CAACo9F,OAAQ,CAAC;IAE/C;EAAC;IAAA36G,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACN7lB,IAAI,EAAE,SAAS;QACfuD,IAAI,EAAE,IAAI,CAACA,IAAI;QACfof,KAAK,EAAE,IAAI,CAACA,KAAK,CAACuvB,MAAM,CAAC,CAAC;QAC1B6tE,OAAO,EAAE,IAAI,CAACA;MACf,CAAC;IAEF;EAAC;EAAA,OAAAsP,OAAA;AAAA;AAAA,IAIIC,GAAG,GAAAppH,OAAA,CAAAopH,GAAA;EAER,SAAAA,IAAa3sG,KAAK,EAAE4gB,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA5+B,eAAA,OAAA0qH,GAAA;IAE1C,IAAI,CAACxP,KAAK,GAAG,IAAI;IAEjB,IAAI,CAACv8G,IAAI,GAAG,EAAE;IAEd,IAAI,CAACof,KAAK,GAAG,IAAIk0B,KAAK,CAAEl0B,KAAM,CAAC;IAE/B,IAAI,CAAC4gB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAACn+B,YAAA,CAAAiqH,GAAA;IAAAlqH,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI+1G,GAAG,CAAE,IAAI,CAAC3sG,KAAK,EAAE,IAAI,CAAC4gB,IAAI,EAAE,IAAI,CAACC,GAAI,CAAC;IAElD;EAAC;IAAAp+B,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACN7lB,IAAI,EAAE,KAAK;QACXuD,IAAI,EAAE,IAAI,CAACA,IAAI;QACfof,KAAK,EAAE,IAAI,CAACA,KAAK,CAACuvB,MAAM,CAAC,CAAC;QAC1B3O,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,GAAG,EAAE,IAAI,CAACA;MACX,CAAC;IAEF;EAAC;EAAA,OAAA8rF,GAAA;AAAA;AAAA,IAIIC,KAAK,GAAArpH,OAAA,CAAAqpH,KAAA,0BAAAC,UAAA;EAAA7oG,SAAA,CAAA4oG,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA5oG,YAAA,CAAA0oG,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAA9qH,eAAA,OAAA2qH,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAvvH,IAAA;IAEAwvH,OAAA,CAAK3kF,OAAO,GAAG,IAAI;IAEnB2kF,OAAA,CAAK1vH,IAAI,GAAG,OAAO;IAEnB0vH,OAAA,CAAK1kF,UAAU,GAAG,IAAI;IACtB0kF,OAAA,CAAKxkF,WAAW,GAAG,IAAI;IACvBwkF,OAAA,CAAKp5E,GAAG,GAAG,IAAI;IAEfo5E,OAAA,CAAK1sD,oBAAoB,GAAG,CAAC;IAC7B0sD,OAAA,CAAK5sD,mBAAmB,GAAG,CAAC;IAE5B4sD,OAAA,CAAKhJ,gBAAgB,GAAG,IAAI;IAE5B,IAAK,OAAOmI,kBAAkB,KAAK,WAAW,EAAG;MAEhDA,kBAAkB,CAACt7G,aAAa,CAAE,IAAIu7G,WAAW,CAAE,SAAS,EAAE;QAAEC,MAAM,EAAArnG,sBAAA,CAAAgoG,OAAA;MAAO,CAAE,CAAE,CAAC;IAEnF;IAAC,OAAAA,OAAA;EAEF;EAACrqH,YAAA,CAAAkqH,KAAA;IAAAnqH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAm2E,KAAA,CAAA/wH,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAKtkB,MAAM,CAACqjB,UAAU,KAAK,IAAI,EAAG,IAAI,CAACA,UAAU,GAAGrjB,MAAM,CAACqjB,UAAU,CAACzxB,KAAK,CAAC,CAAC;MAC7E,IAAKoO,MAAM,CAACujB,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGvjB,MAAM,CAACujB,WAAW,CAAC3xB,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAAC2uB,GAAG,KAAK,IAAI,EAAG,IAAI,CAACA,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG,CAAC/8B,KAAK,CAAC,CAAC;MAExD,IAAI,CAACypD,oBAAoB,GAAGr7C,MAAM,CAACq7C,oBAAoB;MACvD,IAAI,CAACF,mBAAmB,GAAGn7C,MAAM,CAACm7C,mBAAmB;MAErD,IAAKn7C,MAAM,CAAC++F,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,GAAG/+F,MAAM,CAAC++F,gBAAgB,CAACntG,KAAK,CAAC,CAAC;MAE/F,IAAI,CAACyO,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA5iB,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAm2E,KAAA,CAAA/wH,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAACwwB,GAAG,KAAK,IAAI,EAAG9wB,IAAI,CAAC4R,MAAM,CAACkf,GAAG,GAAG,IAAI,CAACA,GAAG,CAACzwB,MAAM,CAAC,CAAC;MAC5D,IAAK,IAAI,CAACm9C,oBAAoB,GAAG,CAAC,EAAGx9C,IAAI,CAAC4R,MAAM,CAAC4rC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;MACjG,IAAK,IAAI,CAACF,mBAAmB,KAAK,CAAC,EAAGt9C,IAAI,CAAC4R,MAAM,CAAC0rC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MAEhG,OAAOt9C,IAAI;IAEZ;EAAC;EAAA,OAAA+pG,KAAA;AAAA,EAxDkBzpF,QAAQ;AAAA,IA4DtB6pF,iBAAiB,GAAAzpH,OAAA,CAAAypH,iBAAA;EAEtB,SAAAA,kBAAal8G,KAAK,EAAEuuC,MAAM,EAAG;IAAAp9C,eAAA,OAAA+qH,iBAAA;IAE5B,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAACn8G,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACuuC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC/zB,KAAK,GAAGxa,KAAK,KAAK3N,SAAS,GAAG2N,KAAK,CAACtQ,MAAM,GAAG6+C,MAAM,GAAG,CAAC;IAE5D,IAAI,CAACvH,KAAK,GAAG3oC,eAAe;IAC5B,IAAI,CAAC4oC,WAAW,GAAG;MAAEt+B,MAAM,EAAE,CAAC;MAAE6R,KAAK,EAAE,CAAE;IAAE,CAAC;IAE5C,IAAI,CAACrI,OAAO,GAAG,CAAC;IAEhB,IAAI,CAACtR,IAAI,GAAGN,YAAY,CAAC,CAAC;EAE3B;EAAC3O,YAAA,CAAAsqH,iBAAA;IAAAvqH,GAAA;IAAAvG,KAAA,EAED,SAAA+7C,iBAAA,EAAmB,CAAC;EAAC;IAAAx1C,GAAA;IAAA2S,GAAA,EAErB,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC+mB,OAAO,EAAG;IAEtC;EAAC;IAAAxgB,GAAA;IAAAvG,KAAA,EAED,SAAAg8C,SAAUh8C,KAAK,EAAG;MAEjB,IAAI,CAAC47C,KAAK,GAAG57C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAClU,KAAK,GAAG,IAAIkU,MAAM,CAAClU,KAAK,CAACnQ,WAAW,CAAEqkB,MAAM,CAAClU,KAAM,CAAC;MACzD,IAAI,CAACwa,KAAK,GAAGtG,MAAM,CAACsG,KAAK;MACzB,IAAI,CAAC+zB,MAAM,GAAGr6B,MAAM,CAACq6B,MAAM;MAC3B,IAAI,CAACvH,KAAK,GAAG9yB,MAAM,CAAC8yB,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAr1C,GAAA;IAAAvG,KAAA,EAED,SAAAi8C,OAAQC,MAAM,EAAEx+B,SAAS,EAAEy+B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAACiH,MAAM;MACrBhH,MAAM,IAAIz+B,SAAS,CAACylC,MAAM;MAE1B,KAAM,IAAIljD,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC4hD,MAAM,EAAEljD,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE/C,IAAI,CAAC2U,KAAK,CAAEsnC,MAAM,GAAGj8C,CAAC,CAAE,GAAGyd,SAAS,CAAC9I,KAAK,CAAEunC,MAAM,GAAGl8C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKlZ,KAAK,EAAEud,MAAM,GAAG,CAAC,EAAG;MAExB,IAAI,CAAC3I,KAAK,CAACsE,GAAG,CAAElZ,KAAK,EAAEud,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAOiM,IAAI,EAAG;MAEb,IAAKA,IAAI,CAACqqG,YAAY,KAAK/pH,SAAS,EAAG;QAEtC0f,IAAI,CAACqqG,YAAY,GAAG,CAAC,CAAC;MAEvB;MAEA,IAAK,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,KAAKhqH,SAAS,EAAG;QAE5C,IAAI,CAAC2N,KAAK,CAACgO,MAAM,CAACquG,KAAK,GAAG97G,YAAY,CAAC,CAAC;MAEzC;MAEA,IAAKwR,IAAI,CAACqqG,YAAY,CAAE,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,CAAE,KAAKhqH,SAAS,EAAG;QAEjE0f,IAAI,CAACqqG,YAAY,CAAE,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,CAAE,GAAG,IAAI,CAACr8G,KAAK,CAACtP,KAAK,CAAE,CAAE,CAAC,CAACsd,MAAM;MAE5E;MAEA,IAAMhO,KAAK,GAAG,IAAI,IAAI,CAACA,KAAK,CAACnQ,WAAW,CAAEkiB,IAAI,CAACqqG,YAAY,CAAE,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,CAAG,CAAC;MAExF,IAAMC,EAAE,GAAG,IAAI,IAAI,CAACzsH,WAAW,CAAEmQ,KAAK,EAAE,IAAI,CAACuuC,MAAO,CAAC;MACrD+tE,EAAE,CAACl1E,QAAQ,CAAE,IAAI,CAACJ,KAAM,CAAC;MAEzB,OAAOs1E,EAAE;IAEV;EAAC;IAAA3qH,GAAA;IAAAvG,KAAA,EAED,SAAAy8C,SAAU3pB,QAAQ,EAAG;MAEpB,IAAI,CAACipB,gBAAgB,GAAGjpB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvsB,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQL,IAAI,EAAG;MAEd,IAAKA,IAAI,CAACqqG,YAAY,KAAK/pH,SAAS,EAAG;QAEtC0f,IAAI,CAACqqG,YAAY,GAAG,CAAC,CAAC;MAEvB;;MAEA;;MAEA,IAAK,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,KAAKhqH,SAAS,EAAG;QAE5C,IAAI,CAAC2N,KAAK,CAACgO,MAAM,CAACquG,KAAK,GAAG97G,YAAY,CAAC,CAAC;MAEzC;MAEA,IAAKwR,IAAI,CAACqqG,YAAY,CAAE,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,CAAE,KAAKhqH,SAAS,EAAG;QAEjE0f,IAAI,CAACqqG,YAAY,CAAE,IAAI,CAACp8G,KAAK,CAACgO,MAAM,CAACquG,KAAK,CAAE,GAAG3pG,KAAK,CAACI,IAAI,CAAE,IAAInO,WAAW,CAAE,IAAI,CAAC3E,KAAK,CAACgO,MAAO,CAAE,CAAC;MAElG;;MAEA;;MAEA,OAAO;QACNnN,IAAI,EAAE,IAAI,CAACA,IAAI;QACfmN,MAAM,EAAE,IAAI,CAAChO,KAAK,CAACgO,MAAM,CAACquG,KAAK;QAC/B9vH,IAAI,EAAE,IAAI,CAACyT,KAAK,CAACnQ,WAAW,CAACC,IAAI;QACjCy+C,MAAM,EAAE,IAAI,CAACA;MACd,CAAC;IAEF;EAAC;EAAA,OAAA2tE,iBAAA;AAAA;AAIF,IAAMK,SAAS,GAAG,aAAc,IAAI/8F,OAAO,CAAC,CAAC;AAAC,IAExCg9F,0BAA0B,GAAA/pH,OAAA,CAAA+pH,0BAAA;EAE/B,SAAAA,2BAAaC,iBAAiB,EAAE51E,QAAQ,EAAEl+B,MAAM,EAAEm+B,UAAU,GAAG,KAAK,EAAG;IAAA31C,eAAA,OAAAqrH,0BAAA;IAEtE,IAAI,CAACluE,4BAA4B,GAAG,IAAI;IAExC,IAAI,CAACx+C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACiiB,IAAI,GAAG0qG,iBAAiB;IAC7B,IAAI,CAAC51E,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACl+B,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACm+B,UAAU,GAAGA,UAAU;EAE7B;EAACl1C,YAAA,CAAA4qH,0BAAA;IAAA7qH,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACwM,IAAI,CAACyI,KAAK;IAEvB;EAAC;IAAA7oB,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACwM,IAAI,CAAC/R,KAAK;IAEvB;EAAC;IAAArO,GAAA;IAAA2S,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAI,CAAC2mB,IAAI,CAACqD,WAAW,GAAGhqB,KAAK;IAE9B;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAchV,CAAC,EAAG;MAEjB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAColB,IAAI,CAACyI,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEnDkxH,SAAS,CAAC1zG,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCkxH,SAAS,CAACpmG,YAAY,CAAEhV,CAAE,CAAC;QAE3B,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEkxH,SAAS,CAACl7G,CAAC,EAAEk7G,SAAS,CAACzvH,CAAC,EAAEyvH,SAAS,CAACzmG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA40B,kBAAmB7e,CAAC,EAAG;MAEtB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9CkxH,SAAS,CAAC1zG,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCkxH,SAAS,CAACv8F,iBAAiB,CAAE7e,CAAE,CAAC;QAEhC,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEkxH,SAAS,CAACl7G,CAAC,EAAEk7G,SAAS,CAACzvH,CAAC,EAAEyvH,SAAS,CAACzmG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA41B,mBAAoB7f,CAAC,EAAG;MAEvB,KAAM,IAAI9V,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC6tB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAE9CkxH,SAAS,CAAC1zG,mBAAmB,CAAE,IAAI,EAAExd,CAAE,CAAC;QAExCkxH,SAAS,CAACv7F,kBAAkB,CAAE7f,CAAE,CAAC;QAEjC,IAAI,CAACumC,MAAM,CAAEr8C,CAAC,EAAEkxH,SAAS,CAACl7G,CAAC,EAAEk7G,SAAS,CAACzvH,CAAC,EAAEyvH,SAAS,CAACzmG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAsa,KAAM9F,KAAK,EAAEyB,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACylC,UAAU,EAAGzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAErD,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,CAAE,GAAGtH,CAAC;MAE7D,OAAO,IAAI;IAEZ;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAAua,KAAM/F,KAAK,EAAE9S,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACg6C,UAAU,EAAGh6C,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAErD,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE,GAAG7b,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6qB,KAAMrW,KAAK,EAAEkW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACgxB,UAAU,EAAGhxB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAErD,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE,GAAGmN,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAA8qB,KAAMtW,KAAK,EAAEmW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC+wB,UAAU,EAAG/wB,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAErD,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE,GAAGoN,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA2d,KAAMnJ,KAAK,EAAG;MAEb,IAAIyB,CAAC,GAAG,IAAI,CAAC0Q,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,CAAE;MAEjE,IAAK,IAAI,CAACm+B,UAAU,EAAGzlC,CAAC,GAAGoD,WAAW,CAAEpD,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAEvD,OAAOqB,CAAC;IAET;EAAC;IAAA1P,GAAA;IAAAvG,KAAA,EAED,SAAA4d,KAAMpJ,KAAK,EAAG;MAEb,IAAI9S,CAAC,GAAG,IAAI,CAACilB,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAACm+B,UAAU,EAAGh6C,CAAC,GAAG2X,WAAW,CAAE3X,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAEvD,OAAOlT,CAAC;IAET;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAmsB,KAAM3X,KAAK,EAAG;MAEb,IAAIkW,CAAC,GAAG,IAAI,CAAC/D,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAACm+B,UAAU,EAAGhxB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAEvD,OAAO8V,CAAC;IAET;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAosB,KAAM5X,KAAK,EAAG;MAEb,IAAImW,CAAC,GAAG,IAAI,CAAChE,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAACm+B,UAAU,EAAG/wB,CAAC,GAAGtR,WAAW,CAAEsR,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAEvD,OAAO+V,CAAC;IAET;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAq8C,MAAO7nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAG;MAEpB8S,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM;MAE9C,IAAK,IAAI,CAACm+B,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;MAE/B;MAEA,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAChC,IAAI,CAAC0Q,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAs8C,OAAQ9nC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAExBlW,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM;MAE9C,IAAK,IAAI,CAACm+B,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAChC,IAAI,CAAC0Q,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAChC,IAAI,CAACilB,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGkW,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAw8C,QAAShoC,KAAK,EAAEyB,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAEC,CAAC,EAAG;MAE5BnW,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACmS,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM;MAE9C,IAAK,IAAI,CAACm+B,UAAU,EAAG;QAEtBzlC,CAAC,GAAG4D,SAAS,CAAE5D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9BlT,CAAC,GAAGmY,SAAS,CAAEnY,CAAC,EAAE,IAAI,CAACkT,KAAM,CAAC;QAC9B8V,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAAC9V,KAAM,CAAC;QAC9B+V,CAAC,GAAG9Q,SAAS,CAAE8Q,CAAC,EAAE,IAAI,CAAC/V,KAAM,CAAC;MAE/B;MAEA,IAAI,CAAC+R,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyB,CAAC;MAChC,IAAI,CAAC0Q,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG9S,CAAC;MAChC,IAAI,CAACilB,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGkW,CAAC;MAChC,IAAI,CAAC/D,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGmW,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAOiM,IAAI,EAAG;MAEb,IAAKA,IAAI,KAAK1f,SAAS,EAAG;QAEzBkS,OAAO,CAAClB,GAAG,CAAE,mHAAoH,CAAC;QAElI,IAAMrD,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI3U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;UAEvC,IAAMuU,KAAK,GAAGvU,CAAC,GAAG,IAAI,CAAC0mB,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM;UAEhD,KAAM,IAAIke,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACggB,QAAQ,EAAEhgB,CAAC,EAAG,EAAG;YAE1C7mB,KAAK,CAAC3Q,IAAI,CAAE,IAAI,CAAC0iB,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAGinB,CAAC,CAAG,CAAC;UAE3C;QAED;QAEA,OAAO,IAAI+f,eAAe,CAAE,IAAI,IAAI,CAAC5mC,KAAK,CAACnQ,WAAW,CAAEmQ,KAAM,CAAC,EAAE,IAAI,CAAC6mC,QAAQ,EAAE,IAAI,CAACC,UAAW,CAAC;MAElG,CAAC,MAAM;QAEN,IAAK/0B,IAAI,CAAC2qG,kBAAkB,KAAKrqH,SAAS,EAAG;UAE5C0f,IAAI,CAAC2qG,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAK3qG,IAAI,CAAC2qG,kBAAkB,CAAE,IAAI,CAAC3qG,IAAI,CAAClR,IAAI,CAAE,KAAKxO,SAAS,EAAG;UAE9D0f,IAAI,CAAC2qG,kBAAkB,CAAE,IAAI,CAAC3qG,IAAI,CAAClR,IAAI,CAAE,GAAG,IAAI,CAACkR,IAAI,CAACjM,KAAK,CAAEiM,IAAK,CAAC;QAEpE;QAEA,OAAO,IAAIyqG,0BAA0B,CAAEzqG,IAAI,CAAC2qG,kBAAkB,CAAE,IAAI,CAAC3qG,IAAI,CAAClR,IAAI,CAAE,EAAE,IAAI,CAACgmC,QAAQ,EAAE,IAAI,CAACl+B,MAAM,EAAE,IAAI,CAACm+B,UAAW,CAAC;MAEhI;IAED;EAAC;IAAAn1C,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQL,IAAI,EAAG;MAEd,IAAKA,IAAI,KAAK1f,SAAS,EAAG;QAEzBkS,OAAO,CAAClB,GAAG,CAAE,wHAAyH,CAAC;QAEvI,IAAMrD,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI3U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;UAEvC,IAAMuU,KAAK,GAAGvU,CAAC,GAAG,IAAI,CAAC0mB,IAAI,CAACw8B,MAAM,GAAG,IAAI,CAAC5lC,MAAM;UAEhD,KAAM,IAAIke,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACggB,QAAQ,EAAEhgB,CAAC,EAAG,EAAG;YAE1C7mB,KAAK,CAAC3Q,IAAI,CAAE,IAAI,CAAC0iB,IAAI,CAAC/R,KAAK,CAAEJ,KAAK,GAAGinB,CAAC,CAAG,CAAC;UAE3C;QAED;;QAEA;;QAEA,OAAO;UACNggB,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBt6C,IAAI,EAAE,IAAI,CAACyT,KAAK,CAACnQ,WAAW,CAACC,IAAI;UACjCkQ,KAAK,EAAEA,KAAK;UACZ8mC,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF,CAAC,MAAM;QAEN;;QAEA,IAAK/0B,IAAI,CAAC2qG,kBAAkB,KAAKrqH,SAAS,EAAG;UAE5C0f,IAAI,CAAC2qG,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAK3qG,IAAI,CAAC2qG,kBAAkB,CAAE,IAAI,CAAC3qG,IAAI,CAAClR,IAAI,CAAE,KAAKxO,SAAS,EAAG;UAE9D0f,IAAI,CAAC2qG,kBAAkB,CAAE,IAAI,CAAC3qG,IAAI,CAAClR,IAAI,CAAE,GAAG,IAAI,CAACkR,IAAI,CAACK,MAAM,CAAEL,IAAK,CAAC;QAErE;QAEA,OAAO;UACNu8B,4BAA4B,EAAE,IAAI;UAClCzH,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvB90B,IAAI,EAAE,IAAI,CAACA,IAAI,CAAClR,IAAI;UACpB8H,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBm+B,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF;IAED;EAAC;EAAA,OAAA01E,0BAAA;AAAA;AAAA,IAIIzhC,cAAc,GAAAtoF,OAAA,CAAAsoF,cAAA,0BAAA4hC,UAAA;EAAAzpG,SAAA,CAAA6nE,cAAA,EAAA4hC,UAAA;EAAA,IAAAC,QAAA,GAAAxpG,YAAA,CAAA2nE,cAAA;EAEnB,SAAAA,eAAaljD,UAAU,EAAG;IAAA,IAAAglF,OAAA;IAAA1rH,eAAA,OAAA4pF,cAAA;IAEzB8hC,OAAA,GAAAD,QAAA,CAAAnwH,IAAA;IAEAowH,OAAA,CAAKhP,gBAAgB,GAAG,IAAI;IAE5BgP,OAAA,CAAKtwH,IAAI,GAAG,gBAAgB;IAE5BswH,OAAA,CAAK3tG,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC;IAElCy5E,OAAA,CAAK38E,GAAG,GAAG,IAAI;IAEf28E,OAAA,CAAKz8E,QAAQ,GAAG,IAAI;IAEpBy8E,OAAA,CAAK7vG,QAAQ,GAAG,CAAC;IAEjB6vG,OAAA,CAAK16E,eAAe,GAAG,IAAI;IAE3B06E,OAAA,CAAK7gF,WAAW,GAAG,IAAI;IAEvB6gF,OAAA,CAAKh6E,GAAG,GAAG,IAAI;IAEfg6E,OAAA,CAAKv+E,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAglF,OAAA;EAE9B;EAACjrH,YAAA,CAAAmpF,cAAA;IAAAppF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAo1C,cAAA,CAAAhwF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACpzB,QAAQ,GAAGkH,MAAM,CAAClH,QAAQ;MAE/B,IAAI,CAACm1B,eAAe,GAAGjuB,MAAM,CAACiuB,eAAe;MAE7C,IAAI,CAACU,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAk4C,cAAA;AAAA,EA9C2Bx/C,QAAQ;AAkDrC,IAAIuhF,SAAS;AAEb,IAAMC,eAAe,GAAG,aAAc,IAAIv9F,OAAO,CAAC,CAAC;AACnD,IAAMw9F,WAAW,GAAG,aAAc,IAAIx9F,OAAO,CAAC,CAAC;AAC/C,IAAMy9F,WAAW,GAAG,aAAc,IAAIz9F,OAAO,CAAC,CAAC;AAE/C,IAAM09F,gBAAgB,GAAG,aAAc,IAAI93G,OAAO,CAAC,CAAC;AACpD,IAAM+3G,gBAAgB,GAAG,aAAc,IAAI/3G,OAAO,CAAC,CAAC;AACpD,IAAMg4G,gBAAgB,GAAG,aAAc,IAAInyF,OAAO,CAAC,CAAC;AAEpD,IAAMoyF,GAAG,GAAG,aAAc,IAAI79F,OAAO,CAAC,CAAC;AACvC,IAAM89F,GAAG,GAAG,aAAc,IAAI99F,OAAO,CAAC,CAAC;AACvC,IAAM+9F,GAAG,GAAG,aAAc,IAAI/9F,OAAO,CAAC,CAAC;AAEvC,IAAMg+F,IAAI,GAAG,aAAc,IAAIp4G,OAAO,CAAC,CAAC;AACxC,IAAMq4G,IAAI,GAAG,aAAc,IAAIr4G,OAAO,CAAC,CAAC;AACxC,IAAMs4G,IAAI,GAAG,aAAc,IAAIt4G,OAAO,CAAC,CAAC;AAAC,IAEnCu4G,MAAM,GAAAlrH,OAAA,CAAAkrH,MAAA,0BAAAC,UAAA;EAAA1qG,SAAA,CAAAyqG,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAzqG,YAAA,CAAAuqG,MAAA;EAEX,SAAAA,OAAaxlF,QAAQ,GAAG,IAAI4iD,cAAc,CAAC,CAAC,EAAG;IAAA,IAAA+iC,OAAA;IAAA3sH,eAAA,OAAAwsH,MAAA;IAE9CG,OAAA,GAAAD,QAAA,CAAApxH,IAAA;IAEAqxH,OAAA,CAAKlH,QAAQ,GAAG,IAAI;IAEpBkH,OAAA,CAAKvxH,IAAI,GAAG,QAAQ;IAEpB,IAAKuwH,SAAS,KAAKzqH,SAAS,EAAG;MAE9ByqH,SAAS,GAAG,IAAIzyE,cAAc,CAAC,CAAC;MAEhC,IAAM0zE,YAAY,GAAG,IAAIr5G,YAAY,CAAE,CACtC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACrB,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAClB,CAAC;MAEH,IAAM+3G,iBAAiB,GAAG,IAAIP,iBAAiB,CAAE6B,YAAY,EAAE,CAAE,CAAC;MAElEjB,SAAS,CAAC7xE,QAAQ,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;MAC1C6xE,SAAS,CAAC3xE,YAAY,CAAE,UAAU,EAAE,IAAIqxE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAM,CAAE,CAAC;MACtGK,SAAS,CAAC3xE,YAAY,CAAE,IAAI,EAAE,IAAIqxE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAM,CAAE,CAAC;IAEjG;IAEAqB,OAAA,CAAKn5F,QAAQ,GAAGm4F,SAAS;IACzBgB,OAAA,CAAK3lF,QAAQ,GAAGA,QAAQ;IAExB2lF,OAAA,CAAK50G,MAAM,GAAG,IAAI9D,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IAAC,OAAA04G,OAAA;EAEvC;EAAClsH,YAAA,CAAA+rH,MAAA;IAAAhsH,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAKD,SAAS,CAAChwB,MAAM,KAAK,IAAI,EAAG;QAEhCnc,OAAO,CAACywB,KAAK,CAAE,uFAAwF,CAAC;MAEzG;MAEAgoF,WAAW,CAACz6F,kBAAkB,CAAE,IAAI,CAACxB,WAAY,CAAC;MAElDq8F,gBAAgB,CAACr3G,IAAI,CAAE2qC,SAAS,CAAChwB,MAAM,CAACK,WAAY,CAAC;MACrD,IAAI,CAACgS,eAAe,CAACtoB,gBAAgB,CAAEimC,SAAS,CAAChwB,MAAM,CAACC,kBAAkB,EAAE,IAAI,CAACI,WAAY,CAAC;MAE9Fk8F,WAAW,CAAC36F,qBAAqB,CAAE,IAAI,CAACyQ,eAAgB,CAAC;MAEzD,IAAK2d,SAAS,CAAChwB,MAAM,CAACk1B,mBAAmB,IAAI,IAAI,CAACzd,QAAQ,CAACgK,eAAe,KAAK,KAAK,EAAG;QAEtF66E,WAAW,CAACx2G,cAAc,CAAE,CAAEy2G,WAAW,CAACnnG,CAAE,CAAC;MAE9C;MAEA,IAAM9I,QAAQ,GAAG,IAAI,CAACmrB,QAAQ,CAACnrB,QAAQ;MACvC,IAAInJ,GAAG,EAAED,GAAG;MAEZ,IAAKoJ,QAAQ,KAAK,CAAC,EAAG;QAErBpJ,GAAG,GAAGxD,IAAI,CAACwD,GAAG,CAAEoJ,QAAS,CAAC;QAC1BnJ,GAAG,GAAGzD,IAAI,CAACyD,GAAG,CAAEmJ,QAAS,CAAC;MAE3B;MAEA,IAAM9D,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B80G,eAAe,CAAEX,GAAG,CAAC/4G,GAAG,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE24G,WAAW,EAAE/zG,MAAM,EAAE8zG,WAAW,EAAEn5G,GAAG,EAAED,GAAI,CAAC;MACzFo6G,eAAe,CAAEV,GAAG,CAACh5G,GAAG,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE24G,WAAW,EAAE/zG,MAAM,EAAE8zG,WAAW,EAAEn5G,GAAG,EAAED,GAAI,CAAC;MACvFo6G,eAAe,CAAET,GAAG,CAACj5G,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE24G,WAAW,EAAE/zG,MAAM,EAAE8zG,WAAW,EAAEn5G,GAAG,EAAED,GAAI,CAAC;MAErF45G,IAAI,CAACl5G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBm5G,IAAI,CAACn5G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBo5G,IAAI,CAACp5G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;;MAEhB;MACA,IAAIkiB,SAAS,GAAGkqB,SAAS,CAACpoB,GAAG,CAACoC,iBAAiB,CAAE2yF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE,KAAK,EAAER,eAAgB,CAAC;MAExF,IAAKv2F,SAAS,KAAK,IAAI,EAAG;QAEzB;QACAw3F,eAAe,CAAEV,GAAG,CAACh5G,GAAG,CAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE24G,WAAW,EAAE/zG,MAAM,EAAE8zG,WAAW,EAAEn5G,GAAG,EAAED,GAAI,CAAC;QACvF65G,IAAI,CAACn5G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;QAEhBkiB,SAAS,GAAGkqB,SAAS,CAACpoB,GAAG,CAACoC,iBAAiB,CAAE2yF,GAAG,EAAEE,GAAG,EAAED,GAAG,EAAE,KAAK,EAAEP,eAAgB,CAAC;QACpF,IAAKv2F,SAAS,KAAK,IAAI,EAAG;UAEzB;QAED;MAED;MAEA,IAAM+N,QAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAEg1G,eAAgB,CAAC;MAEnE,IAAKxoF,QAAQ,GAAGmc,SAAS,CAAC5gB,IAAI,IAAIyE,QAAQ,GAAGmc,SAAS,CAAC3gB,GAAG,EAAG;MAE7D4gB,UAAU,CAACthD,IAAI,CAAE;QAEhBklC,QAAQ,EAAEA,QAAQ;QAClBrQ,KAAK,EAAE64F,eAAe,CAACj3G,KAAK,CAAC,CAAC;QAC9B4P,EAAE,EAAE0jB,QAAQ,CAACgB,gBAAgB,CAAE2iF,eAAe,EAAEM,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE,IAAIt4G,OAAO,CAAC,CAAE,CAAC;QAChG+rC,IAAI,EAAE,IAAI;QACVxtB,MAAM,EAAE;MAET,CAAE,CAAC;IAEJ;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAg4E,MAAA,CAAA5yH,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAKtkB,MAAM,CAAChL,MAAM,KAAK7W,SAAS,EAAG,IAAI,CAAC6W,MAAM,CAACnD,IAAI,CAAEmO,MAAM,CAAChL,MAAO,CAAC;MAEpE,IAAI,CAACivB,QAAQ,GAAGjkB,MAAM,CAACikB,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAwlF,MAAA;AAAA,EAzHmBtrF,QAAQ;AA6H7B,SAAS2rF,eAAeA,CAAEC,cAAc,EAAEC,UAAU,EAAEh1G,MAAM,EAAEiE,KAAK,EAAEtJ,GAAG,EAAED,GAAG,EAAG;EAE/E;EACAs5G,gBAAgB,CAAC52G,UAAU,CAAE23G,cAAc,EAAE/0G,MAAO,CAAC,CAACjD,SAAS,CAAE,GAAI,CAAC,CAACM,QAAQ,CAAE4G,KAAM,CAAC;;EAExF;EACA,IAAKtJ,GAAG,KAAKxR,SAAS,EAAG;IAExB8qH,gBAAgB,CAAC97G,CAAC,GAAKuC,GAAG,GAAGs5G,gBAAgB,CAAC77G,CAAC,GAAOwC,GAAG,GAAGq5G,gBAAgB,CAACpwH,CAAG;IAChFqwH,gBAAgB,CAACrwH,CAAC,GAAK+W,GAAG,GAAGq5G,gBAAgB,CAAC77G,CAAC,GAAOuC,GAAG,GAAGs5G,gBAAgB,CAACpwH,CAAG;EAEjF,CAAC,MAAM;IAENqwH,gBAAgB,CAACp3G,IAAI,CAAEm3G,gBAAiB,CAAC;EAE1C;EAGAe,cAAc,CAACl4G,IAAI,CAAEm4G,UAAW,CAAC;EACjCD,cAAc,CAAC58G,CAAC,IAAI87G,gBAAgB,CAAC97G,CAAC;EACtC48G,cAAc,CAACnxH,CAAC,IAAIqwH,gBAAgB,CAACrwH,CAAC;;EAEtC;EACAmxH,cAAc,CAAC9nG,YAAY,CAAEinG,gBAAiB,CAAC;AAEhD;AAEA,IAAMe,KAAK,GAAG,aAAc,IAAI3+F,OAAO,CAAC,CAAC;AACzC,IAAM4+F,KAAK,GAAG,aAAc,IAAI5+F,OAAO,CAAC,CAAC;AAAC,IAEpC6+F,GAAG,GAAA5rH,OAAA,CAAA4rH,GAAA,0BAAAC,UAAA;EAAAprG,SAAA,CAAAmrG,GAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAnrG,YAAA,CAAAirG,GAAA;EAER,SAAAA,IAAA,EAAc;IAAA,IAAAG,OAAA;IAAArtH,eAAA,OAAAktH,GAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA9xH,IAAA;IAEA+xH,OAAA,CAAKC,aAAa,GAAG,CAAC;IAEtBD,OAAA,CAAKjyH,IAAI,GAAG,KAAK;IAEjBzB,MAAM,CAACgoC,gBAAgB,CAAA7e,sBAAA,CAAAuqG,OAAA,GAAQ;MAC9BnkB,MAAM,EAAE;QACPvuG,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE;MACR,CAAC;MACDisH,KAAK,EAAE;QACNjsH,KAAK,EAAE;MACR;IACD,CAAE,CAAC;IAEHozH,OAAA,CAAKz4B,UAAU,GAAG,IAAI;IAAC,OAAAy4B,OAAA;EAExB;EAAC5sH,YAAA,CAAAysH,GAAA;IAAA1sH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA04E,GAAA,CAAAtzH,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAE,KAAK;MAEzB,IAAMmmF,MAAM,GAAGnmF,MAAM,CAACmmF,MAAM;MAE5B,KAAM,IAAIhvG,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,IAAMsrG,KAAK,GAAG0D,MAAM,CAAEhvG,CAAC,CAAE;QAEzB,IAAI,CAACqzH,QAAQ,CAAE/nB,KAAK,CAAChzE,MAAM,CAAC7d,KAAK,CAAC,CAAC,EAAE6wF,KAAK,CAACpiE,QAAQ,EAAEoiE,KAAK,CAACgoB,UAAW,CAAC;MAExE;MAEA,IAAI,CAAC54B,UAAU,GAAG7xE,MAAM,CAAC6xE,UAAU;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAp0F,GAAA;IAAAvG,KAAA,EAED,SAAAszH,SAAU/6F,MAAM,EAAE4Q,QAAQ,GAAG,CAAC,EAAEoqF,UAAU,GAAG,CAAC,EAAG;MAEhDpqF,QAAQ,GAAGn0B,IAAI,CAAC6B,GAAG,CAAEsyB,QAAS,CAAC;MAE/B,IAAM8lE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI1tG,CAAC;MAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAE/C,CAAC,EAAG,EAAG;QAEtC,IAAK4nC,QAAQ,GAAG8lE,MAAM,CAAE1tG,CAAC,CAAE,CAAC4nC,QAAQ,EAAG;UAEtC;QAED;MAED;MAEA8lE,MAAM,CAACx6F,MAAM,CAAElT,CAAC,EAAE,CAAC,EAAE;QAAE4nC,QAAQ,EAAEA,QAAQ;QAAEoqF,UAAU,EAAEA,UAAU;QAAEh7F,MAAM,EAAEA;MAAO,CAAE,CAAC;MAErF,IAAI,CAAC3d,GAAG,CAAE2d,MAAO,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAAwzH,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACH,aAAa;IAE1B;EAAC;IAAA9sH,GAAA;IAAAvG,KAAA,EAID,SAAAyzH,qBAAsBtqF,QAAQ,EAAG;MAEhC,IAAM8lE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExB,IAAIrE,CAAC,EAAEsB,CAAC;QAER,KAAMtB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE7C,IAAIyzH,aAAa,GAAGzkB,MAAM,CAAEhvG,CAAC,CAAE,CAACkpC,QAAQ;UAExC,IAAK8lE,MAAM,CAAEhvG,CAAC,CAAE,CAACs4B,MAAM,CAAC0P,OAAO,EAAG;YAEjCyrF,aAAa,IAAIA,aAAa,GAAGzkB,MAAM,CAAEhvG,CAAC,CAAE,CAACszH,UAAU;UAExD;UAEA,IAAKpqF,QAAQ,GAAGuqF,aAAa,EAAG;YAE/B;UAED;QAED;QAEA,OAAOzkB,MAAM,CAAEhvG,CAAC,GAAG,CAAC,CAAE,CAACs4B,MAAM;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM0pD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExByuH,KAAK,CAAC77F,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;QAE/C,IAAMwT,QAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAEo2G,KAAM,CAAC;QAEzD,IAAI,CAACU,oBAAoB,CAAEtqF,QAAS,CAAC,CAAC4B,OAAO,CAAEua,SAAS,EAAEC,UAAW,CAAC;MAEvE;IAED;EAAC;IAAAh/C,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQmF,MAAM,EAAG;MAEhB,IAAM25E,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExByuH,KAAK,CAAC77F,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAC;QACjDq9F,KAAK,CAAC97F,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;QAE/C,IAAMwT,QAAQ,GAAG4pF,KAAK,CAACp2G,UAAU,CAAEq2G,KAAM,CAAC,GAAG19F,MAAM,CAACm1B,IAAI;QAExDwkD,MAAM,CAAE,CAAC,CAAE,CAAC12E,MAAM,CAAC0P,OAAO,GAAG,IAAI;QAEjC,IAAIhoC,CAAC,EAAEsB,CAAC;QAER,KAAMtB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE7C,IAAIyzH,aAAa,GAAGzkB,MAAM,CAAEhvG,CAAC,CAAE,CAACkpC,QAAQ;UAExC,IAAK8lE,MAAM,CAAEhvG,CAAC,CAAE,CAACs4B,MAAM,CAAC0P,OAAO,EAAG;YAEjCyrF,aAAa,IAAIA,aAAa,GAAGzkB,MAAM,CAAEhvG,CAAC,CAAE,CAACszH,UAAU;UAExD;UAEA,IAAKpqF,QAAQ,IAAIuqF,aAAa,EAAG;YAEhCzkB,MAAM,CAAEhvG,CAAC,GAAG,CAAC,CAAE,CAACs4B,MAAM,CAAC0P,OAAO,GAAG,KAAK;YACtCgnE,MAAM,CAAEhvG,CAAC,CAAE,CAACs4B,MAAM,CAAC0P,OAAO,GAAG,IAAI;UAElC,CAAC,MAAM;YAEN;UAED;QAED;QAEA,IAAI,CAACorF,aAAa,GAAGpzH,CAAC,GAAG,CAAC;QAE1B,OAAQA,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAErBgvG,MAAM,CAAEhvG,CAAC,CAAE,CAACs4B,MAAM,CAAC0P,OAAO,GAAG,KAAK;QAEnC;MAED;IAED;EAAC;IAAA1hC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA04E,GAAA,CAAAtzH,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAAC0zE,UAAU,KAAK,KAAK,EAAGh0E,IAAI,CAAC4R,MAAM,CAACoiE,UAAU,GAAG,KAAK;MAE/Dh0E,IAAI,CAAC4R,MAAM,CAAC02E,MAAM,GAAG,EAAE;MAEvB,IAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIhvG,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,IAAMsrG,KAAK,GAAG0D,MAAM,CAAEhvG,CAAC,CAAE;QAEzB0mB,IAAI,CAAC4R,MAAM,CAAC02E,MAAM,CAAChrG,IAAI,CAAE;UACxBs0B,MAAM,EAAEgzE,KAAK,CAAChzE,MAAM,CAAC9iB,IAAI;UACzB0zB,QAAQ,EAAEoiE,KAAK,CAACpiE,QAAQ;UACxBoqF,UAAU,EAAEhoB,KAAK,CAACgoB;QACnB,CAAE,CAAC;MAEJ;MAEA,OAAO5sG,IAAI;IAEZ;EAAC;EAAA,OAAAssG,GAAA;AAAA,EA1MgBhsF,QAAQ;AA8M1B,IAAM0sF,aAAa,GAAG,aAAc,IAAIv/F,OAAO,CAAC,CAAC;AAEjD,IAAMw/F,UAAU,GAAG,aAAc,IAAIppG,OAAO,CAAC,CAAC;AAC9C,IAAMqpG,WAAW,GAAG,aAAc,IAAIrpG,OAAO,CAAC,CAAC;AAE/C,IAAMm9F,QAAQ,GAAG,aAAc,IAAIvzF,OAAO,CAAC,CAAC;AAC5C,IAAM0/F,QAAQ,GAAG,aAAc,IAAIj0F,OAAO,CAAC,CAAC;AAC5C,IAAMk0F,OAAO,GAAG,aAAc,IAAI3/F,OAAO,CAAC,CAAC;AAE3C,IAAM4/F,SAAS,GAAG,aAAc,IAAIh4F,MAAM,CAAC,CAAC;AAC5C,IAAMi4F,gBAAgB,GAAG,aAAc,IAAIp0F,OAAO,CAAC,CAAC;AACpD,IAAMq0F,MAAM,GAAG,aAAc,IAAIn3F,GAAG,CAAC,CAAC;AAAC,IAEjCo3F,WAAW,GAAA9sH,OAAA,CAAA8sH,WAAA,0BAAAC,KAAA;EAAAtsG,SAAA,CAAAqsG,WAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAArsG,YAAA,CAAAmsG,WAAA;EAEhB,SAAAA,YAAa56F,QAAQ,EAAEwT,QAAQ,EAAG;IAAA,IAAAunF,OAAA;IAAAvuH,eAAA,OAAAouH,WAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAhzH,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBunF,OAAA,CAAK3nF,aAAa,GAAG,IAAI;IAEzB2nF,OAAA,CAAKnzH,IAAI,GAAG,aAAa;IAEzBmzH,OAAA,CAAK1nF,QAAQ,GAAG,UAAU;IAC1B0nF,OAAA,CAAKznF,UAAU,GAAG,IAAIhN,OAAO,CAAC,CAAC;IAC/By0F,OAAA,CAAKC,iBAAiB,GAAG,IAAI10F,OAAO,CAAC,CAAC;IAEtCy0F,OAAA,CAAKn7F,WAAW,GAAG,IAAI;IACvBm7F,OAAA,CAAK70E,cAAc,GAAG,IAAI;IAAC,OAAA60E,OAAA;EAE5B;EAAC9tH,YAAA,CAAA2tH,WAAA;IAAA5tH,GAAA;IAAAvG,KAAA,EAED,SAAAo5B,mBAAA,EAAqB;MAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK,IAAI,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAI1B,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAI,CAAC0B,WAAW,CAACtB,SAAS,CAAC,CAAC;MAE5B,IAAMuqB,iBAAiB,GAAG7oB,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;MAE7D,KAAM,IAAI7/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmiD,iBAAiB,CAAChzB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;QAEpD8zH,OAAO,CAACt2G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAE,CAAC;QACnD,IAAI,CAACu0H,kBAAkB,CAAEv0H,CAAC,EAAE8zH,OAAQ,CAAC;QACrC,IAAI,CAAC56F,WAAW,CAACrB,aAAa,CAAEi8F,OAAQ,CAAC;MAE1C;IAED;EAAC;IAAAxtH,GAAA;IAAAvG,KAAA,EAED,SAAAugD,sBAAA,EAAwB;MAEvB,IAAMhnB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK,IAAI,CAACkmB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIzjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAI,CAACyjB,cAAc,CAAC5nB,SAAS,CAAC,CAAC;MAE/B,IAAMuqB,iBAAiB,GAAG7oB,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;MAE7D,KAAM,IAAI7/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmiD,iBAAiB,CAAChzB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;QAEpD8zH,OAAO,CAACt2G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAE,CAAC;QACnD,IAAI,CAACu0H,kBAAkB,CAAEv0H,CAAC,EAAE8zH,OAAQ,CAAC;QACrC,IAAI,CAACt0E,cAAc,CAAC3nB,aAAa,CAAEi8F,OAAQ,CAAC;MAE7C;IAED;EAAC;IAAAxtH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA45E,WAAA,CAAAx0H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACR,QAAQ,GAAG9jB,MAAM,CAAC8jB,QAAQ;MAC/B,IAAI,CAACC,UAAU,CAAClyB,IAAI,CAAEmO,MAAM,CAAC+jB,UAAW,CAAC;MACzC,IAAI,CAAC0nF,iBAAiB,CAAC55G,IAAI,CAAEmO,MAAM,CAACyrG,iBAAkB,CAAC;MAEvD,IAAI,CAACznF,QAAQ,GAAGhkB,MAAM,CAACgkB,QAAQ;MAE/B,IAAKhkB,MAAM,CAACqQ,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGrQ,MAAM,CAACqQ,WAAW,CAACze,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAAC22B,cAAc,KAAK,IAAI,EAAG,IAAI,CAACA,cAAc,GAAG32B,MAAM,CAAC22B,cAAc,CAAC/kC,KAAK,CAAC,CAAC;MAEzF,OAAO,IAAI;IAEZ;EAAC;IAAAnU,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMxY,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMpX,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpC,IAAKoX,QAAQ,KAAK9lC,SAAS,EAAG;;MAE9B;;MAEA,IAAK,IAAI,CAACw4C,cAAc,KAAK,IAAI,EAAG,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAEhEyzE,SAAS,CAACr5G,IAAI,CAAE,IAAI,CAAC8kC,cAAe,CAAC;MACrCu0E,SAAS,CAACjpG,YAAY,CAAE4K,WAAY,CAAC;MAErC,IAAK2vB,SAAS,CAACpoB,GAAG,CAACnD,gBAAgB,CAAEi6F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEAC,gBAAgB,CAACt5G,IAAI,CAAEgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAC7CszG,MAAM,CAACv5G,IAAI,CAAE2qC,SAAS,CAACpoB,GAAI,CAAC,CAACnS,YAAY,CAAEkpG,gBAAiB,CAAC;;MAE7D;;MAEA,IAAK,IAAI,CAAC96F,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAK+6F,MAAM,CAACp6F,aAAa,CAAE,IAAI,CAACX,WAAY,CAAC,KAAK,KAAK,EAAG;MAE3D;;MAEA;;MAEA,IAAI,CAACqsB,qBAAqB,CAAEF,SAAS,EAAEC,UAAU,EAAE2uE,MAAO,CAAC;IAE5D;EAAC;IAAA3tH,GAAA;IAAAvG,KAAA,EAED,SAAAklD,kBAAmB1wC,KAAK,EAAErO,MAAM,EAAG;MAElCm0C,IAAA,CAAAC,eAAA,CAAA45E,WAAA,CAAAx0H,SAAA,8BAAA0B,IAAA,OAAyBmT,KAAK,EAAErO,MAAM;MAEtC,IAAI,CAACquH,kBAAkB,CAAEhgH,KAAK,EAAErO,MAAO,CAAC;MAExC,OAAOA,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAAijH,KAAMn2E,QAAQ,EAAED,UAAU,EAAG;MAE5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MAExB,IAAKD,UAAU,KAAK5lC,SAAS,EAAG;QAE/B,IAAI,CAACkkC,iBAAiB,CAAE,IAAK,CAAC;QAE9B,IAAI,CAAC2B,QAAQ,CAAC2nF,iBAAiB,CAAC,CAAC;QAEjC5nF,UAAU,GAAG,IAAI,CAAClX,WAAW;MAE9B;MAEA,IAAI,CAACkX,UAAU,CAAClyB,IAAI,CAAEkyB,UAAW,CAAC;MAClC,IAAI,CAAC0nF,iBAAiB,CAAC55G,IAAI,CAAEkyB,UAAW,CAAC,CAACjsB,MAAM,CAAC,CAAC;IAEnD;EAAC;IAAAra,GAAA;IAAAvG,KAAA,EAED,SAAA46G,KAAA,EAAO;MAEN,IAAI,CAAC9tE,QAAQ,CAAC8tE,IAAI,CAAC,CAAC;IAErB;EAAC;IAAAr0G,GAAA;IAAAvG,KAAA,EAED,SAAA00H,qBAAA,EAAuB;MAEtB,IAAM17F,MAAM,GAAG,IAAIxO,OAAO,CAAC,CAAC;MAE5B,IAAMmqG,UAAU,GAAG,IAAI,CAACp7F,QAAQ,CAACC,UAAU,CAACm7F,UAAU;MAEtD,KAAM,IAAI10H,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGozH,UAAU,CAACvlG,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEpD+4B,MAAM,CAACvb,mBAAmB,CAAEk3G,UAAU,EAAE10H,CAAE,CAAC;QAE3C,IAAM8hB,KAAK,GAAG,GAAG,GAAGiX,MAAM,CAAC5c,eAAe,CAAC,CAAC;QAE5C,IAAK2F,KAAK,KAAK2V,QAAQ,EAAG;UAEzBsB,MAAM,CAAC5d,cAAc,CAAE2G,KAAM,CAAC;QAE/B,CAAC,MAAM;UAENiX,MAAM,CAAC9f,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;QAE3B;;QAEAy7G,UAAU,CAACn4E,OAAO,CAAEv8C,CAAC,EAAE+4B,MAAM,CAAC/iB,CAAC,EAAE+iB,MAAM,CAACt3B,CAAC,EAAEs3B,MAAM,CAACtO,CAAC,EAAEsO,MAAM,CAACrO,CAAE,CAAC;MAEhE;IAED;EAAC;IAAApkB,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAA45E,WAAA,CAAAx0H,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;MAE9B,IAAK,IAAI,CAACwB,QAAQ,KAAK,UAAU,EAAG;QAEnC,IAAI,CAAC2nF,iBAAiB,CAAC55G,IAAI,CAAE,IAAI,CAACgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAEzD,CAAC,MAAM,IAAK,IAAI,CAACgsB,QAAQ,KAAK,UAAU,EAAG;QAE1C,IAAI,CAAC2nF,iBAAiB,CAAC55G,IAAI,CAAE,IAAI,CAACkyB,UAAW,CAAC,CAACjsB,MAAM,CAAC,CAAC;MAExD,CAAC,MAAM;QAENzH,OAAO,CAACC,IAAI,CAAE,4CAA4C,GAAG,IAAI,CAACwzB,QAAS,CAAC;MAE7E;IAED;EAAC;IAAArmC,GAAA;IAAAvG,KAAA,EAED,SAAAw0H,mBAAoBhgH,KAAK,EAAEwkB,MAAM,EAAG;MAEnC,IAAM8T,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMvT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9Bq6F,UAAU,CAACn2G,mBAAmB,CAAE8b,QAAQ,CAACC,UAAU,CAACo7F,SAAS,EAAEpgH,KAAM,CAAC;MACtEq/G,WAAW,CAACp2G,mBAAmB,CAAE8b,QAAQ,CAACC,UAAU,CAACm7F,UAAU,EAAEngH,KAAM,CAAC;MAExEm/G,aAAa,CAACh5G,IAAI,CAAEqe,MAAO,CAAC,CAACjO,YAAY,CAAE,IAAI,CAAC8hB,UAAW,CAAC;MAE5D7T,MAAM,CAAC9f,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAErB,KAAM,IAAIjZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM61E,MAAM,GAAG+9C,WAAW,CAACp5G,YAAY,CAAExa,CAAE,CAAC;QAE5C,IAAK61E,MAAM,KAAK,CAAC,EAAG;UAEnB,IAAM++C,SAAS,GAAGjB,UAAU,CAACn5G,YAAY,CAAExa,CAAE,CAAC;UAE9C6zH,QAAQ,CAACz0G,gBAAgB,CAAEytB,QAAQ,CAACgoF,KAAK,CAAED,SAAS,CAAE,CAACl/F,WAAW,EAAEmX,QAAQ,CAACioF,YAAY,CAAEF,SAAS,CAAG,CAAC;UAExG77F,MAAM,CAACje,eAAe,CAAE4sG,QAAQ,CAAChtG,IAAI,CAAEg5G,aAAc,CAAC,CAAC5oG,YAAY,CAAE+oG,QAAS,CAAC,EAAEh+C,MAAO,CAAC;QAE1F;MAED;MAEA,OAAO98C,MAAM,CAACjO,YAAY,CAAE,IAAI,CAACwpG,iBAAkB,CAAC;IAErD;EAAC;IAAAhuH,GAAA;IAAAvG,KAAA,EAED,SAAAg1H,cAAexgH,KAAK,EAAEwkB,MAAM,EAAG;MAAE;;MAEhC7f,OAAO,CAACC,IAAI,CAAE,mFAAoF,CAAC;MACnG,OAAO,IAAI,CAACo7G,kBAAkB,CAAEhgH,KAAK,EAAEwkB,MAAO,CAAC;IAEhD;EAAC;EAAA,OAAAm7F,WAAA;AAAA,EA/OwBzvE,IAAI;AAAA,IAoPxBuwE,IAAI,GAAA5tH,OAAA,CAAA4tH,IAAA,0BAAAC,UAAA;EAAAptG,SAAA,CAAAmtG,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAntG,YAAA,CAAAitG,IAAA;EAET,SAAAA,KAAA,EAAc;IAAA,IAAAG,OAAA;IAAArvH,eAAA,OAAAkvH,IAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA9zH,IAAA;IAEA+zH,OAAA,CAAKC,MAAM,GAAG,IAAI;IAElBD,OAAA,CAAKj0H,IAAI,GAAG,MAAM;IAAC,OAAAi0H,OAAA;EAEpB;EAAC,OAAA5uH,YAAA,CAAAyuH,IAAA;AAAA,EAViBhuF,QAAQ;AAAA,IAcrBquF,WAAW,GAAAjuH,OAAA,CAAAiuH,WAAA,0BAAAC,SAAA;EAAAztG,SAAA,CAAAwtG,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAxtG,YAAA,CAAAstG,WAAA;EAEhB,SAAAA,YAAa3uG,IAAI,GAAG,IAAI,EAAEb,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEyC,MAAM,EAAErnB,IAAI,EAAE+mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,GAAG1c,aAAa,EAAE2c,SAAS,GAAG3c,aAAa,EAAE6c,UAAU,EAAEhE,UAAU,EAAG;IAAA,IAAAgxG,OAAA;IAAA1vH,eAAA,OAAAuvH,WAAA;IAEpKG,OAAA,GAAAD,QAAA,CAAAn0H,IAAA,OAAO,IAAI,EAAE6mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAEhE,UAAU;IAE9FgxG,OAAA,CAAKjuG,aAAa,GAAG,IAAI;IAEzBiuG,OAAA,CAAK/vG,KAAK,GAAG;MAAEiB,IAAI,EAAEA,IAAI;MAAEb,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAEzD0vG,OAAA,CAAKrsG,eAAe,GAAG,KAAK;IAC5BqsG,OAAA,CAAKnsG,KAAK,GAAG,KAAK;IAClBmsG,OAAA,CAAKlsG,eAAe,GAAG,CAAC;IAAC,OAAAksG,OAAA;EAE1B;EAAC,OAAAjvH,YAAA,CAAA8uH,WAAA;AAAA,EAdwB1tG,OAAO;AAkBjC,IAAM8tG,aAAa,GAAG,aAAc,IAAI71F,OAAO,CAAC,CAAC;AACjD,IAAM81F,eAAe,GAAG,aAAc,IAAI91F,OAAO,CAAC,CAAC;AAAC,IAE9C+1F,QAAQ,GAAAvuH,OAAA,CAAAuuH,QAAA;EAEb,SAAAA,SAAad,KAAK,GAAG,EAAE,EAAEC,YAAY,GAAG,EAAE,EAAG;IAAAhvH,eAAA,OAAA6vH,QAAA;IAE5C,IAAI,CAACngH,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B,IAAI,CAAC2/G,KAAK,GAAGA,KAAK,CAACxvH,KAAK,CAAE,CAAE,CAAC;IAC7B,IAAI,CAACyvH,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACc,YAAY,GAAG,IAAI;IAExB,IAAI,CAACpI,WAAW,GAAG,IAAI;IACvB,IAAI,CAACE,eAAe,GAAG,CAAC;IAExB,IAAI,CAACz+C,IAAI,CAAC,CAAC;EAEZ;EAAC1oE,YAAA,CAAAovH,QAAA;IAAArvH,GAAA;IAAAvG,KAAA,EAED,SAAAkvE,KAAA,EAAO;MAEN,IAAM4lD,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,IAAI,CAACc,YAAY,GAAG,IAAIv8G,YAAY,CAAEw7G,KAAK,CAACxwH,MAAM,GAAG,EAAG,CAAC;;MAEzD;;MAEA,IAAKywH,YAAY,CAACzwH,MAAM,KAAK,CAAC,EAAG;QAEhC,IAAI,CAACmwH,iBAAiB,CAAC,CAAC;MAEzB,CAAC,MAAM;QAEN;;QAEA,IAAKK,KAAK,CAACxwH,MAAM,KAAKywH,YAAY,CAACzwH,MAAM,EAAG;UAE3C6U,OAAO,CAACC,IAAI,CAAE,iFAAkF,CAAC;UAEjG,IAAI,CAAC27G,YAAY,GAAG,EAAE;UAEtB,KAAM,IAAI90H,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG,IAAI,CAACulG,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAEvD,IAAI,CAAC80H,YAAY,CAAC9wH,IAAI,CAAE,IAAI47B,OAAO,CAAC,CAAE,CAAC;UAExC;QAED;MAED;IAED;EAAC;IAAAt5B,GAAA;IAAAvG,KAAA,EAED,SAAAy0H,kBAAA,EAAoB;MAEnB,IAAI,CAACM,YAAY,CAACzwH,MAAM,GAAG,CAAC;MAE5B,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG,IAAI,CAACulG,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEvD,IAAM61H,OAAO,GAAG,IAAIj2F,OAAO,CAAC,CAAC;QAE7B,IAAK,IAAI,CAACi1F,KAAK,CAAE70H,CAAC,CAAE,EAAG;UAEtB61H,OAAO,CAACn7G,IAAI,CAAE,IAAI,CAACm6G,KAAK,CAAE70H,CAAC,CAAE,CAAC01B,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;QAErD;QAEA,IAAI,CAACm0G,YAAY,CAAC9wH,IAAI,CAAE6xH,OAAQ,CAAC;MAElC;IAED;EAAC;IAAAvvH,GAAA;IAAAvG,KAAA,EAED,SAAA46G,KAAA,EAAO;MAEN;;MAEA,KAAM,IAAI36G,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG,IAAI,CAACulG,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEvD,IAAM81H,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAE70H,CAAC,CAAE;QAE5B,IAAK81H,IAAI,EAAG;UAEXA,IAAI,CAACpgG,WAAW,CAAChb,IAAI,CAAE,IAAI,CAACo6G,YAAY,CAAE90H,CAAC,CAAG,CAAC,CAAC2gB,MAAM,CAAC,CAAC;QAEzD;MAED;;MAEA;;MAEA,KAAM,IAAI3gB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG,IAAI,CAACulG,KAAK,CAACxwH,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;QAEvD,IAAM81H,KAAI,GAAG,IAAI,CAACjB,KAAK,CAAE70H,IAAC,CAAE;QAE5B,IAAK81H,KAAI,EAAG;UAEX,IAAKA,KAAI,CAACzuF,MAAM,IAAIyuF,KAAI,CAACzuF,MAAM,CAAC+tF,MAAM,EAAG;YAExCU,KAAI,CAACzzG,MAAM,CAAC3H,IAAI,CAAEo7G,KAAI,CAACzuF,MAAM,CAAC3R,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;YACpDm1G,KAAI,CAACzzG,MAAM,CAACnH,QAAQ,CAAE46G,KAAI,CAACpgG,WAAY,CAAC;UAEzC,CAAC,MAAM;YAENogG,KAAI,CAACzzG,MAAM,CAAC3H,IAAI,CAAEo7G,KAAI,CAACpgG,WAAY,CAAC;UAErC;UAEAogG,KAAI,CAACzzG,MAAM,CAAC0hB,SAAS,CAAE+xF,KAAI,CAACt8F,QAAQ,EAAEs8F,KAAI,CAAC/lG,UAAU,EAAE+lG,KAAI,CAACh0G,KAAM,CAAC;QAEpE;MAED;IAED;EAAC;IAAAxb,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAM2kG,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMc,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMpI,WAAW,GAAG,IAAI,CAACA,WAAW;;MAEpC;;MAEA,KAAM,IAAIxtH,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGulG,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAElD;;QAEA,IAAMqiB,MAAM,GAAGwyG,KAAK,CAAE70H,CAAC,CAAE,GAAG60H,KAAK,CAAE70H,CAAC,CAAE,CAAC01B,WAAW,GAAGggG,eAAe;QAEpED,aAAa,CAACr2G,gBAAgB,CAAEiD,MAAM,EAAEyyG,YAAY,CAAE90H,CAAC,CAAG,CAAC;QAC3Dy1H,aAAa,CAACl4G,OAAO,CAAEq4G,YAAY,EAAE51H,CAAC,GAAG,EAAG,CAAC;MAE9C;MAEA,IAAKwtH,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAACzjG,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAIk7G,QAAQ,CAAE,IAAI,CAACd,KAAK,EAAE,IAAI,CAACC,YAAa,CAAC;IAErD;EAAC;IAAAxuH,GAAA;IAAAvG,KAAA,EAED,SAAA0tH,mBAAA,EAAqB;MAEpB;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAIt1F,IAAI,GAAGpjB,IAAI,CAACmH,IAAI,CAAE,IAAI,CAAC24G,KAAK,CAACxwH,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;MAC/C8zB,IAAI,GAAGtgB,cAAc,CAAEsgB,IAAK,CAAC;MAC7BA,IAAI,GAAGpjB,IAAI,CAACa,GAAG,CAAEuiB,IAAI,EAAE,CAAE,CAAC;MAE1B,IAAMy9F,YAAY,GAAG,IAAIv8G,YAAY,CAAE8e,IAAI,GAAGA,IAAI,GAAG,CAAE,CAAC,CAAC,CAAC;MAC1Dy9F,YAAY,CAAC38G,GAAG,CAAE,IAAI,CAAC28G,YAAa,CAAC,CAAC,CAAC;;MAEvC,IAAMpI,WAAW,GAAG,IAAI6H,WAAW,CAAEO,YAAY,EAAEz9F,IAAI,EAAEA,IAAI,EAAElrB,UAAU,EAAEN,SAAU,CAAC;MACtF6gH,WAAW,CAACzjG,WAAW,GAAG,IAAI;MAE9B,IAAI,CAAC6rG,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACpI,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACE,eAAe,GAAGv1F,IAAI;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA7xB,GAAA;IAAAvG,KAAA,EAED,SAAAg2H,cAAetxH,IAAI,EAAG;MAErB,KAAM,IAAIzE,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG,IAAI,CAACulG,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEvD,IAAM81H,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAE70H,CAAC,CAAE;QAE5B,IAAK81H,IAAI,CAACrxH,IAAI,KAAKA,IAAI,EAAG;UAEzB,OAAOqxH,IAAI;QAEZ;MAED;MAEA,OAAO9uH,SAAS;IAEjB;EAAC;IAAAV,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAW;MAEV,IAAK,IAAI,CAACqjG,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,CAACrjG,OAAO,CAAC,CAAC;QAE1B,IAAI,CAACqjG,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;IAAAlnH,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAEnB,KAAK,EAAG;MAEvB,IAAI,CAACr/G,IAAI,GAAGwgH,IAAI,CAACxgH,IAAI;MAErB,KAAM,IAAIxV,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAACnB,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAErD,IAAMwV,IAAI,GAAGwgH,IAAI,CAACnB,KAAK,CAAE70H,CAAC,CAAE;QAC5B,IAAI81H,IAAI,GAAGjB,KAAK,CAAEr/G,IAAI,CAAE;QAExB,IAAKsgH,IAAI,KAAK9uH,SAAS,EAAG;UAEzBkS,OAAO,CAACC,IAAI,CAAE,0CAA0C,EAAE3D,IAAK,CAAC;UAChEsgH,IAAI,GAAG,IAAId,IAAI,CAAC,CAAC;QAElB;QAEA,IAAI,CAACH,KAAK,CAAC7wH,IAAI,CAAE8xH,IAAK,CAAC;QACvB,IAAI,CAAChB,YAAY,CAAC9wH,IAAI,CAAE,IAAI47B,OAAO,CAAC,CAAC,CAACviB,SAAS,CAAE24G,IAAI,CAAClB,YAAY,CAAE90H,CAAC,CAAG,CAAE,CAAC;MAE5E;MAEA,IAAI,CAACivE,IAAI,CAAC,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3oE,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,UAAU;UAChBgpB,SAAS,EAAE;QACZ,CAAC;QACD2qG,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE;MACf,CAAC;MAEDpuG,IAAI,CAAClR,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAMq/G,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAI90H,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGuzH,KAAK,CAACxwH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEhD,IAAM81H,IAAI,GAAGjB,KAAK,CAAE70H,CAAC,CAAE;QACvB0mB,IAAI,CAACmuG,KAAK,CAAC7wH,IAAI,CAAE8xH,IAAI,CAACtgH,IAAK,CAAC;QAE5B,IAAMygH,WAAW,GAAGnB,YAAY,CAAE90H,CAAC,CAAE;QACrC0mB,IAAI,CAACouG,YAAY,CAAC9wH,IAAI,CAAEiyH,WAAW,CAAC14G,OAAO,CAAC,CAAE,CAAC;MAEhD;MAEA,OAAOmJ,IAAI;IAEZ;EAAC;EAAA,OAAAivG,QAAA;AAAA;AAAA,IAIIO,wBAAwB,GAAA9uH,OAAA,CAAA8uH,wBAAA,0BAAAC,kBAAA;EAAAtuG,SAAA,CAAAquG,wBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAruG,YAAA,CAAAmuG,wBAAA;EAE7B,SAAAA,yBAAavhH,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU,EAAEgvB,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAA4rD,OAAA;IAAAvwH,eAAA,OAAAowH,wBAAA;IAEhEG,OAAA,GAAAD,QAAA,CAAAh1H,IAAA,OAAOuT,KAAK,EAAE6mC,QAAQ,EAAEC,UAAU;IAElC46E,OAAA,CAAK/qD,0BAA0B,GAAG,IAAI;IAEtC+qD,OAAA,CAAK5rD,gBAAgB,GAAGA,gBAAgB;IAAC,OAAA4rD,OAAA;EAE1C;EAAC9vH,YAAA,CAAA2vH,wBAAA;IAAA5vH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA47E,wBAAA,CAAAx2H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC4hD,gBAAgB,GAAG5hD,MAAM,CAAC4hD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAnkE,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA47E,wBAAA,CAAAx2H,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC+jD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7C/jD,IAAI,CAAC4kD,0BAA0B,GAAG,IAAI;MAEtC,OAAO5kD,IAAI;IAEZ;EAAC;EAAA,OAAAwvG,wBAAA;AAAA,EAhCqC36E,eAAe;AAoCtD,IAAM+6E,oBAAoB,GAAG,aAAc,IAAI12F,OAAO,CAAC,CAAC;AACxD,IAAM22F,oBAAoB,GAAG,aAAc,IAAI32F,OAAO,CAAC,CAAC;AAExD,IAAM42F,mBAAmB,GAAG,EAAE;AAE9B,IAAMC,KAAK,GAAG,aAAc,IAAIj/F,IAAI,CAAC,CAAC;AACtC,IAAMk/F,SAAS,GAAG,aAAc,IAAI92F,OAAO,CAAC,CAAC;AAC7C,IAAM+2F,KAAK,GAAG,aAAc,IAAIlyE,IAAI,CAAC,CAAC;AACtC,IAAMmyE,SAAS,GAAG,aAAc,IAAI76F,MAAM,CAAC,CAAC;AAAC,IAEvC86F,aAAa,GAAAzvH,OAAA,CAAAyvH,aAAA,0BAAAC,MAAA;EAAAjvG,SAAA,CAAAgvG,aAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAhvG,YAAA,CAAA8uG,aAAA;EAElB,SAAAA,cAAav9F,QAAQ,EAAEwT,QAAQ,EAAE3d,KAAK,EAAG;IAAA,IAAA6nG,OAAA;IAAAlxH,eAAA,OAAA+wH,aAAA;IAExCG,OAAA,GAAAD,QAAA,CAAA31H,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBkqF,OAAA,CAAKrrF,eAAe,GAAG,IAAI;IAE3BqrF,OAAA,CAAKprF,cAAc,GAAG,IAAIsqF,wBAAwB,CAAE,IAAI78G,YAAY,CAAE8V,KAAK,GAAG,EAAG,CAAC,EAAE,EAAG,CAAC;IACxF6nG,OAAA,CAAKnrF,aAAa,GAAG,IAAI;IAEzBmrF,OAAA,CAAK7nG,KAAK,GAAGA,KAAK;IAElB6nG,OAAA,CAAK99F,WAAW,GAAG,IAAI;IACvB89F,OAAA,CAAKx3E,cAAc,GAAG,IAAI;IAE1B,KAAM,IAAIx/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;MAElCg3H,OAAA,CAAKC,WAAW,CAAEj3H,CAAC,EAAE02H,SAAU,CAAC;IAEjC;IAAC,OAAAM,OAAA;EAEF;EAACzwH,YAAA,CAAAswH,aAAA;IAAAvwH,GAAA;IAAAvG,KAAA,EAED,SAAAo5B,mBAAA,EAAqB;MAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAK,IAAI,CAAC+J,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAI1B,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAK8B,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEpCI,QAAQ,CAACH,kBAAkB,CAAC,CAAC;MAE9B;MAEA,IAAI,CAACD,WAAW,CAACtB,SAAS,CAAC,CAAC;MAE5B,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;QAElC,IAAI,CAACk3H,WAAW,CAAEl3H,CAAC,EAAEs2H,oBAAqB,CAAC;QAE3CG,KAAK,CAAC/7G,IAAI,CAAE4e,QAAQ,CAACJ,WAAY,CAAC,CAACpO,YAAY,CAAEwrG,oBAAqB,CAAC;QAEvE,IAAI,CAACp9F,WAAW,CAACG,KAAK,CAAEo9F,KAAM,CAAC;MAEhC;IAED;EAAC;IAAAnwH,GAAA;IAAAvG,KAAA,EAED,SAAAugD,sBAAA,EAAwB;MAEvB,IAAMhnB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAK,IAAI,CAACqwB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIzjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAKzC,QAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAG;QAEvClmB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;MAEjC;MAEA,IAAI,CAACd,cAAc,CAAC5nB,SAAS,CAAC,CAAC;MAE/B,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,KAAK,EAAEnvB,CAAC,EAAG,EAAG;QAElC,IAAI,CAACk3H,WAAW,CAAEl3H,CAAC,EAAEs2H,oBAAqB,CAAC;QAE3CM,SAAS,CAACl8G,IAAI,CAAE4e,QAAQ,CAACkmB,cAAe,CAAC,CAAC10B,YAAY,CAAEwrG,oBAAqB,CAAC;QAE9E,IAAI,CAAC92E,cAAc,CAACnmB,KAAK,CAAEu9F,SAAU,CAAC;MAEvC;IAED;EAAC;IAAAtwH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAu8E,aAAA,CAAAn3H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACvB,cAAc,CAAClxB,IAAI,CAAEmO,MAAM,CAAC+iB,cAAe,CAAC;MAEjD,IAAK/iB,MAAM,CAACgjB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,GAAGhjB,MAAM,CAACgjB,aAAa,CAACpxB,KAAK,CAAC,CAAC;MAEtF,IAAI,CAAC0U,KAAK,GAAGtG,MAAM,CAACsG,KAAK;MAEzB,IAAKtG,MAAM,CAACqQ,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGrQ,MAAM,CAACqQ,WAAW,CAACze,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAAC22B,cAAc,KAAK,IAAI,EAAG,IAAI,CAACA,cAAc,GAAG32B,MAAM,CAAC22B,cAAc,CAAC/kC,KAAK,CAAC,CAAC;MAEzF,OAAO,IAAI;IAEZ;EAAC;IAAAnU,GAAA;IAAAvG,KAAA,EAED,SAAAo3H,WAAY5iH,KAAK,EAAEsP,KAAK,EAAG;MAE1BA,KAAK,CAACxG,SAAS,CAAE,IAAI,CAACwuB,aAAa,CAACl3B,KAAK,EAAEJ,KAAK,GAAG,CAAE,CAAC;IAEvD;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAm3H,YAAa3iH,KAAK,EAAE8N,MAAM,EAAG;MAE5BA,MAAM,CAAChF,SAAS,CAAE,IAAI,CAACuuB,cAAc,CAACj3B,KAAK,EAAEJ,KAAK,GAAG,EAAG,CAAC;IAE1D;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM5vB,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM0hG,YAAY,GAAG,IAAI,CAACjoG,KAAK;MAE/BwnG,KAAK,CAACr9F,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9Bq9F,KAAK,CAAC7pF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK6pF,KAAK,CAAC7pF,QAAQ,KAAK9lC,SAAS,EAAG;;MAEpC;;MAEA,IAAK,IAAI,CAACw4C,cAAc,KAAK,IAAI,EAAG,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAEhEs2E,SAAS,CAACl8G,IAAI,CAAE,IAAI,CAAC8kC,cAAe,CAAC;MACrCo3E,SAAS,CAAC9rG,YAAY,CAAE4K,WAAY,CAAC;MAErC,IAAK2vB,SAAS,CAACpoB,GAAG,CAACnD,gBAAgB,CAAE88F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEA,KAAM,IAAIS,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGD,YAAY,EAAEC,UAAU,EAAG,EAAG;QAEpE;;QAEA,IAAI,CAACH,WAAW,CAAEG,UAAU,EAAEf,oBAAqB,CAAC;QAEpDC,oBAAoB,CAACn3G,gBAAgB,CAAEsW,WAAW,EAAE4gG,oBAAqB,CAAC;;QAE1E;;QAEAK,KAAK,CAACjhG,WAAW,GAAG6gG,oBAAoB;QAExCI,KAAK,CAAC7rF,OAAO,CAAEua,SAAS,EAAEmxE,mBAAoB,CAAC;;QAE/C;;QAEA,KAAM,IAAIx2H,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGk1H,mBAAmB,CAACnyH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE9D,IAAMm7B,SAAS,GAAGq7F,mBAAmB,CAAEx2H,CAAC,CAAE;UAC1Cm7B,SAAS,CAACk8F,UAAU,GAAGA,UAAU;UACjCl8F,SAAS,CAAC7C,MAAM,GAAG,IAAI;UACvBgtB,UAAU,CAACthD,IAAI,CAAEm3B,SAAU,CAAC;QAE7B;QAEAq7F,mBAAmB,CAACnyH,MAAM,GAAG,CAAC;MAE/B;IAED;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAu3H,WAAY/iH,KAAK,EAAEsP,KAAK,EAAG;MAE1B,IAAK,IAAI,CAACgoB,aAAa,KAAK,IAAI,EAAG;QAElC,IAAI,CAACA,aAAa,GAAG,IAAIqqF,wBAAwB,CAAE,IAAI78G,YAAY,CAAE,IAAI,CAACuyB,cAAc,CAACzc,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAE1G;MAEAtL,KAAK,CAACtG,OAAO,CAAE,IAAI,CAACsuB,aAAa,CAACl3B,KAAK,EAAEJ,KAAK,GAAG,CAAE,CAAC;IAErD;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAk3H,YAAa1iH,KAAK,EAAE8N,MAAM,EAAG;MAE5BA,MAAM,CAAC9E,OAAO,CAAE,IAAI,CAACquB,cAAc,CAACj3B,KAAK,EAAEJ,KAAK,GAAG,EAAG,CAAC;IAExD;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAA8kD,mBAAA,EAAqB,CAErB;EAAC;IAAAv+C,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAA21H,aAAA;AAAA,EAjM0BpyE,IAAI;AAAA,IAqM1B6qC,iBAAiB,GAAAloF,OAAA,CAAAkoF,iBAAA,0BAAAioC,UAAA;EAAA1vG,SAAA,CAAAynE,iBAAA,EAAAioC,UAAA;EAAA,IAAAC,QAAA,GAAAzvG,YAAA,CAAAunE,iBAAA;EAEtB,SAAAA,kBAAa9iD,UAAU,EAAG;IAAA,IAAAirF,OAAA;IAAA3xH,eAAA,OAAAwpF,iBAAA;IAEzBmoC,OAAA,GAAAD,QAAA,CAAAp2H,IAAA;IAEAq2H,OAAA,CAAKvV,mBAAmB,GAAG,IAAI;IAE/BuV,OAAA,CAAKv2H,IAAI,GAAG,mBAAmB;IAE/Bu2H,OAAA,CAAK5zG,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC;IAElC0/E,OAAA,CAAK5iF,GAAG,GAAG,IAAI;IAEf4iF,OAAA,CAAK1gF,SAAS,GAAG,CAAC;IAClB0gF,OAAA,CAAKC,OAAO,GAAG,OAAO;IACtBD,OAAA,CAAKE,QAAQ,GAAG,OAAO;IAEvBF,OAAA,CAAKjgF,GAAG,GAAG,IAAI;IAEfigF,OAAA,CAAKxkF,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAirF,OAAA;EAE9B;EAAClxH,YAAA,CAAA+oF,iBAAA;IAAAhpF,GAAA;IAAAvG,KAAA,EAGD,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAg1C,iBAAA,CAAA5vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACkC,SAAS,GAAGluB,MAAM,CAACkuB,SAAS;MACjC,IAAI,CAAC2gF,OAAO,GAAG7uG,MAAM,CAAC6uG,OAAO;MAC7B,IAAI,CAACC,QAAQ,GAAG9uG,MAAM,CAAC8uG,QAAQ;MAE/B,IAAI,CAACngF,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA83C,iBAAA;AAAA,EAzC8Bp/C,QAAQ;AA6CxC,IAAM0nF,QAAQ,GAAG,aAAc,IAAIzjG,OAAO,CAAC,CAAC;AAC5C,IAAM0jG,MAAM,GAAG,aAAc,IAAI1jG,OAAO,CAAC,CAAC;AAC1C,IAAM2jG,gBAAgB,GAAG,aAAc,IAAIl4F,OAAO,CAAC,CAAC;AACpD,IAAMm4F,MAAM,GAAG,aAAc,IAAIj7F,GAAG,CAAC,CAAC;AACtC,IAAMk7F,SAAS,GAAG,aAAc,IAAIj8F,MAAM,CAAC,CAAC;AAAC,IAEvCk8F,IAAI,GAAA7wH,OAAA,CAAA6wH,IAAA,0BAAAC,UAAA;EAAArwG,SAAA,CAAAowG,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAApwG,YAAA,CAAAkwG,IAAA;EAET,SAAAA,KAAa3+F,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC,EAAElS,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAC,CAAC,EAAG;IAAA,IAAA8oC,OAAA;IAAAtyH,eAAA,OAAAmyH,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAA/2H,IAAA;IAEAg3H,OAAA,CAAK9rF,MAAM,GAAG,IAAI;IAElB8rF,OAAA,CAAKl3H,IAAI,GAAG,MAAM;IAElBk3H,OAAA,CAAK9+F,QAAQ,GAAGA,QAAQ;IACxB8+F,OAAA,CAAKtrF,QAAQ,GAAGA,QAAQ;IAExBsrF,OAAA,CAAKvzE,kBAAkB,CAAC,CAAC;IAAC,OAAAuzE,OAAA;EAE3B;EAAC7xH,YAAA,CAAA0xH,IAAA;IAAA3xH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA29E,IAAA,CAAAv4H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAGzlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAACikB,QAAS,CAAC,GAAGjkB,MAAM,CAACikB,QAAQ,CAACznC,KAAK,CAAC,CAAC,GAAGwjB,MAAM,CAACikB,QAAQ;MAC5F,IAAI,CAACxT,QAAQ,GAAGzQ,MAAM,CAACyQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAhzB,GAAA;IAAAvG,KAAA,EAED,SAAAs4H,qBAAA,EAAuB;MAEtB,IAAM/+F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAAC/kB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAM4tC,iBAAiB,GAAG7oB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAM8+F,aAAa,GAAG,CAAE,CAAC,CAAE;QAE3B,KAAM,IAAIt4H,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG6gD,iBAAiB,CAAChzB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE3D43H,QAAQ,CAACp6G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAC,GAAG,CAAE,CAAC;UACxD63H,MAAM,CAACr6G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAE,CAAC;UAElDs4H,aAAa,CAAEt4H,CAAC,CAAE,GAAGs4H,aAAa,CAAEt4H,CAAC,GAAG,CAAC,CAAE;UAC3Cs4H,aAAa,CAAEt4H,CAAC,CAAE,IAAI43H,QAAQ,CAACl7G,UAAU,CAAEm7G,MAAO,CAAC;QAEpD;QAEAv+F,QAAQ,CAACwmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEm6E,aAAa,EAAE,CAAE,CAAE,CAAC;MAExF,CAAC,MAAM;QAENp/G,OAAO,CAACC,IAAI,CAAE,+FAAgG,CAAC;MAEhH;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA7S,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMhsB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM+jF,SAAS,GAAGp0D,SAAS,CAACquB,MAAM,CAACukD,IAAI,CAACxe,SAAS;MACjD,IAAMh6D,SAAS,GAAGnmB,QAAQ,CAACmmB,SAAS;;MAEpC;;MAEA,IAAKnmB,QAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAGlmB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;MAExE03E,SAAS,CAACt9G,IAAI,CAAE4e,QAAQ,CAACkmB,cAAe,CAAC;MACzCw4E,SAAS,CAACltG,YAAY,CAAE4K,WAAY,CAAC;MACrCsiG,SAAS,CAACphG,MAAM,IAAI6iF,SAAS;MAE7B,IAAKp0D,SAAS,CAACpoB,GAAG,CAACnD,gBAAgB,CAAEk+F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEAF,gBAAgB,CAACp9G,IAAI,CAAEgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAC7Co3G,MAAM,CAACr9G,IAAI,CAAE2qC,SAAS,CAACpoB,GAAI,CAAC,CAACnS,YAAY,CAAEgtG,gBAAiB,CAAC;MAE7D,IAAMS,cAAc,GAAG9e,SAAS,IAAK,CAAE,IAAI,CAAC33F,KAAK,CAAC9L,CAAC,GAAG,IAAI,CAAC8L,KAAK,CAACrgB,CAAC,GAAG,IAAI,CAACqgB,KAAK,CAAC2I,CAAC,IAAK,CAAC,CAAE;MACzF,IAAM+tG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAME,MAAM,GAAG,IAAItkG,OAAO,CAAC,CAAC;MAC5B,IAAMukG,IAAI,GAAG,IAAIvkG,OAAO,CAAC,CAAC;MAC1B,IAAMwkG,YAAY,GAAG,IAAIxkG,OAAO,CAAC,CAAC;MAClC,IAAMykG,QAAQ,GAAG,IAAIzkG,OAAO,CAAC,CAAC;MAC9B,IAAMjD,IAAI,GAAG,IAAI,CAACm6F,cAAc,GAAG,CAAC,GAAG,CAAC;MAExC,IAAM92G,KAAK,GAAG+kB,QAAQ,CAAC/kB,KAAK;MAC5B,IAAMglB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAM4oB,iBAAiB,GAAG5oB,UAAU,CAACC,QAAQ;MAE7C,IAAKjlB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMmrC,KAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,GAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEpB,KAAK,CAAC4a,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;QAE1E,KAAM,IAAInvB,CAAC,GAAG0/C,KAAK,EAAEp+C,CAAC,GAAGqkD,GAAG,GAAG,CAAC,EAAE3lD,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAIkxB,IAAI,EAAG;UAEpD,IAAMhxB,CAAC,GAAGqU,KAAK,CAACmJ,IAAI,CAAE1d,CAAE,CAAC;UACzB,IAAMqY,CAAC,GAAG9D,KAAK,CAACmJ,IAAI,CAAE1d,CAAC,GAAG,CAAE,CAAC;UAE7By4H,MAAM,CAACj7G,mBAAmB,CAAE2kC,iBAAiB,EAAEjiD,CAAE,CAAC;UAClDw4H,IAAI,CAACl7G,mBAAmB,CAAE2kC,iBAAiB,EAAE9pC,CAAE,CAAC;UAEhD,IAAMwgH,MAAM,GAAGd,MAAM,CAACv6F,mBAAmB,CAAEi7F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAa,CAAC;UAEjF,IAAKE,MAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC9tG,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC,CAAC,CAAC;;UAE3C,IAAMwT,QAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAEk8G,QAAS,CAAC;UAE5D,IAAK1vF,QAAQ,GAAGmc,SAAS,CAAC5gB,IAAI,IAAIyE,QAAQ,GAAGmc,SAAS,CAAC3gB,GAAG,EAAG;UAE7D4gB,UAAU,CAACthD,IAAI,CAAE;YAEhBklC,QAAQ,EAAEA,QAAQ;YAClB;YACA;YACArQ,KAAK,EAAE8/F,YAAY,CAACl+G,KAAK,CAAC,CAAC,CAACqQ,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;YAC5DnhB,KAAK,EAAEvU,CAAC;YACR8lD,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfvtB,MAAM,EAAE;UAET,CAAE,CAAC;QAEJ;MAED,CAAC,MAAM;QAEN,IAAMonB,OAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,KAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEwsC,iBAAiB,CAAChzB,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;QAEtF,KAAM,IAAInvB,IAAC,GAAG0/C,OAAK,EAAEp+C,GAAC,GAAGqkD,KAAG,GAAG,CAAC,EAAE3lD,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,IAAIkxB,IAAI,EAAG;UAEpDunG,MAAM,CAACj7G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAE,CAAC;UAClD04H,IAAI,CAACl7G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAC,GAAG,CAAE,CAAC;UAEpD,IAAM64H,OAAM,GAAGd,MAAM,CAACv6F,mBAAmB,CAAEi7F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAa,CAAC;UAEjF,IAAKE,OAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC9tG,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC,CAAC,CAAC;;UAE3C,IAAMwT,SAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAEk8G,QAAS,CAAC;UAE5D,IAAK1vF,SAAQ,GAAGmc,SAAS,CAAC5gB,IAAI,IAAIyE,SAAQ,GAAGmc,SAAS,CAAC3gB,GAAG,EAAG;UAE7D4gB,UAAU,CAACthD,IAAI,CAAE;YAEhBklC,QAAQ,EAAEA,SAAQ;YAClB;YACA;YACArQ,KAAK,EAAE8/F,YAAY,CAACl+G,KAAK,CAAC,CAAC,CAACqQ,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;YAC5DnhB,KAAK,EAAEvU,IAAC;YACR8lD,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfvtB,MAAM,EAAE;UAET,CAAE,CAAC;QAEJ;MAED;IAED;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAA8kD,mBAAA,EAAqB;MAEpB,IAAMvrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM+lB,eAAe,GAAG/lB,QAAQ,CAAC+lB,eAAe;MAChD,IAAMr6C,IAAI,GAAGvF,MAAM,CAACuF,IAAI,CAAEq6C,eAAgB,CAAC;MAE3C,IAAKr6C,IAAI,CAACX,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMo8C,cAAc,GAAGpB,eAAe,CAAEr6C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKy7C,cAAc,KAAKz5C,SAAS,EAAG;UAEnC,IAAI,CAAC89C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIjvC,CAAC,GAAG,CAAC,EAAEkvC,EAAE,GAAGvE,cAAc,CAACp8C,MAAM,EAAEyR,CAAC,GAAGkvC,EAAE,EAAElvC,CAAC,EAAG,EAAG;YAE3D,IAAMrR,IAAI,GAAGg8C,cAAc,CAAE3qC,CAAC,CAAE,CAACrR,IAAI,IAAIkC,MAAM,CAAEmP,CAAE,CAAC;YAEpD,IAAI,CAACgvC,qBAAqB,CAAC9gD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC+gD,qBAAqB,CAAEtgD,IAAI,CAAE,GAAGqR,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAAmiH,IAAA;AAAA,EA1MiBjxF,QAAQ;AA8M3B,IAAM8xF,MAAM,GAAG,aAAc,IAAI3kG,OAAO,CAAC,CAAC;AAC1C,IAAM4kG,IAAI,GAAG,aAAc,IAAI5kG,OAAO,CAAC,CAAC;AAAC,IAEnC6kG,YAAY,GAAA5xH,OAAA,CAAA4xH,YAAA,0BAAAC,KAAA;EAAApxG,SAAA,CAAAmxG,YAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAnxG,YAAA,CAAAixG,YAAA;EAEjB,SAAAA,aAAa1/F,QAAQ,EAAEwT,QAAQ,EAAG;IAAA,IAAAqsF,OAAA;IAAArzH,eAAA,OAAAkzH,YAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAA93H,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBqsF,OAAA,CAAK9N,cAAc,GAAG,IAAI;IAE1B8N,OAAA,CAAKj4H,IAAI,GAAG,cAAc;IAAC,OAAAi4H,OAAA;EAE5B;EAAC5yH,YAAA,CAAAyyH,YAAA;IAAA1yH,GAAA;IAAAvG,KAAA,EAED,SAAAs4H,qBAAA,EAAuB;MAEtB,IAAM/+F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAAC/kB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAM4tC,iBAAiB,GAAG7oB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAM8+F,aAAa,GAAG,EAAE;QAExB,KAAM,IAAIt4H,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG6gD,iBAAiB,CAAChzB,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAI,CAAC,EAAG;UAE7D84H,MAAM,CAACt7G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAE,CAAC;UAClD+4H,IAAI,CAACv7G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,CAAC,GAAG,CAAE,CAAC;UAEpDs4H,aAAa,CAAEt4H,CAAC,CAAE,GAAKA,CAAC,KAAK,CAAC,GAAK,CAAC,GAAGs4H,aAAa,CAAEt4H,CAAC,GAAG,CAAC,CAAE;UAC7Ds4H,aAAa,CAAEt4H,CAAC,GAAG,CAAC,CAAE,GAAGs4H,aAAa,CAAEt4H,CAAC,CAAE,GAAG84H,MAAM,CAACp8G,UAAU,CAAEq8G,IAAK,CAAC;QAExE;QAEAz/F,QAAQ,CAACwmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEm6E,aAAa,EAAE,CAAE,CAAE,CAAC;MAExF,CAAC,MAAM;QAENp/G,OAAO,CAACC,IAAI,CAAE,uGAAwG,CAAC;MAExH;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA6/G,YAAA;AAAA,EA3CyBf,IAAI;AAAA,IA+CzBmB,QAAQ,GAAAhyH,OAAA,CAAAgyH,QAAA,0BAAAC,MAAA;EAAAxxG,SAAA,CAAAuxG,QAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAvxG,YAAA,CAAAqxG,QAAA;EAEb,SAAAA,SAAa9/F,QAAQ,EAAEwT,QAAQ,EAAG;IAAA,IAAAysF,OAAA;IAAAzzH,eAAA,OAAAszH,QAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAl4H,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBysF,OAAA,CAAKjO,UAAU,GAAG,IAAI;IAEtBiO,OAAA,CAAKr4H,IAAI,GAAG,UAAU;IAAC,OAAAq4H,OAAA;EAExB;EAAC,OAAAhzH,YAAA,CAAA6yH,QAAA;AAAA,EAVqBnB,IAAI;AAAA,IAcrBzoC,cAAc,GAAApoF,OAAA,CAAAooF,cAAA,0BAAAgqC,UAAA;EAAA3xG,SAAA,CAAA2nE,cAAA,EAAAgqC,UAAA;EAAA,IAAAC,QAAA,GAAA1xG,YAAA,CAAAynE,cAAA;EAEnB,SAAAA,eAAahjD,UAAU,EAAG;IAAA,IAAAktF,OAAA;IAAA5zH,eAAA,OAAA0pF,cAAA;IAEzBkqC,OAAA,GAAAD,QAAA,CAAAr4H,IAAA;IAEAs4H,OAAA,CAAKpX,gBAAgB,GAAG,IAAI;IAE5BoX,OAAA,CAAKx4H,IAAI,GAAG,gBAAgB;IAE5Bw4H,OAAA,CAAK71G,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC;IAElC2hF,OAAA,CAAK7kF,GAAG,GAAG,IAAI;IAEf6kF,OAAA,CAAK3kF,QAAQ,GAAG,IAAI;IAEpB2kF,OAAA,CAAKvhG,IAAI,GAAG,CAAC;IACbuhG,OAAA,CAAK5iF,eAAe,GAAG,IAAI;IAE3B4iF,OAAA,CAAKliF,GAAG,GAAG,IAAI;IAEfkiF,OAAA,CAAKzmF,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAktF,OAAA;EAE9B;EAACnzH,YAAA,CAAAipF,cAAA;IAAAlpF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAk1C,cAAA,CAAA9vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAAC5c,IAAI,GAAGtP,MAAM,CAACsP,IAAI;MACvB,IAAI,CAAC2e,eAAe,GAAGjuB,MAAM,CAACiuB,eAAe;MAE7C,IAAI,CAACU,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAg4C,cAAA;AAAA,EA1C2Bt/C,QAAQ;AA8CrC,IAAMypF,cAAc,GAAG,aAAc,IAAI/5F,OAAO,CAAC,CAAC;AAClD,IAAMg6F,IAAI,GAAG,aAAc,IAAI98F,GAAG,CAAC,CAAC;AACpC,IAAM+8F,OAAO,GAAG,aAAc,IAAI99F,MAAM,CAAC,CAAC;AAC1C,IAAM+9F,WAAW,GAAG,aAAc,IAAI3lG,OAAO,CAAC,CAAC;AAAC,IAE1C4lG,MAAM,GAAA3yH,OAAA,CAAA2yH,MAAA,0BAAAC,WAAA;EAAAnyG,SAAA,CAAAkyG,MAAA,EAAAC,WAAA;EAAA,IAAAC,QAAA,GAAAlyG,YAAA,CAAAgyG,MAAA;EAEX,SAAAA,OAAazgG,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC,EAAElS,QAAQ,GAAG,IAAI0iD,cAAc,CAAC,CAAC,EAAG;IAAA,IAAA0qC,OAAA;IAAAp0H,eAAA,OAAAi0H,MAAA;IAE/EG,OAAA,GAAAD,QAAA,CAAA74H,IAAA;IAEA84H,OAAA,CAAK3tF,QAAQ,GAAG,IAAI;IAEpB2tF,OAAA,CAAKh5H,IAAI,GAAG,QAAQ;IAEpBg5H,OAAA,CAAK5gG,QAAQ,GAAGA,QAAQ;IACxB4gG,OAAA,CAAKptF,QAAQ,GAAGA,QAAQ;IAExBotF,OAAA,CAAKr1E,kBAAkB,CAAC,CAAC;IAAC,OAAAq1E,OAAA;EAE3B;EAAC3zH,YAAA,CAAAwzH,MAAA;IAAAzzH,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAy/E,MAAA,CAAAr6H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAGzlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAACikB,QAAS,CAAC,GAAGjkB,MAAM,CAACikB,QAAQ,CAACznC,KAAK,CAAC,CAAC,GAAGwjB,MAAM,CAACikB,QAAQ;MAC5F,IAAI,CAACxT,QAAQ,GAAGzQ,MAAM,CAACyQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAhzB,GAAA;IAAAvG,KAAA,EAED,SAAA+qC,QAASua,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMhsB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM+jF,SAAS,GAAGp0D,SAAS,CAACquB,MAAM,CAACqmD,MAAM,CAACtgB,SAAS;MACnD,IAAMh6D,SAAS,GAAGnmB,QAAQ,CAACmmB,SAAS;;MAEpC;;MAEA,IAAKnmB,QAAQ,CAACkmB,cAAc,KAAK,IAAI,EAAGlmB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;MAExEu5E,OAAO,CAACn/G,IAAI,CAAE4e,QAAQ,CAACkmB,cAAe,CAAC;MACvCq6E,OAAO,CAAC/uG,YAAY,CAAE4K,WAAY,CAAC;MACnCmkG,OAAO,CAACjjG,MAAM,IAAI6iF,SAAS;MAE3B,IAAKp0D,SAAS,CAACpoB,GAAG,CAACnD,gBAAgB,CAAE+/F,OAAQ,CAAC,KAAK,KAAK,EAAG;;MAE3D;;MAEAF,cAAc,CAACj/G,IAAI,CAAEgb,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAC3Ci5G,IAAI,CAACl/G,IAAI,CAAE2qC,SAAS,CAACpoB,GAAI,CAAC,CAACnS,YAAY,CAAE6uG,cAAe,CAAC;MAEzD,IAAMpB,cAAc,GAAG9e,SAAS,IAAK,CAAE,IAAI,CAAC33F,KAAK,CAAC9L,CAAC,GAAG,IAAI,CAAC8L,KAAK,CAACrgB,CAAC,GAAG,IAAI,CAACqgB,KAAK,CAAC2I,CAAC,IAAK,CAAC,CAAE;MACzF,IAAM+tG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAMhkH,KAAK,GAAG+kB,QAAQ,CAAC/kB,KAAK;MAC5B,IAAMglB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAM4oB,iBAAiB,GAAG5oB,UAAU,CAACC,QAAQ;MAE7C,IAAKjlB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMmrC,KAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,GAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEpB,KAAK,CAAC4a,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;QAE1E,KAAM,IAAInvB,CAAC,GAAG0/C,KAAK,EAAEpwB,EAAE,GAAGq2B,GAAG,EAAE3lD,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAE7C,IAAME,CAAC,GAAGqU,KAAK,CAACmJ,IAAI,CAAE1d,CAAE,CAAC;UAEzB85H,WAAW,CAACt8G,mBAAmB,CAAE2kC,iBAAiB,EAAEjiD,CAAE,CAAC;UAEvDi6H,SAAS,CAAEL,WAAW,EAAE55H,CAAC,EAAEs4H,gBAAgB,EAAE9iG,WAAW,EAAE2vB,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;QAExF;MAED,CAAC,MAAM;QAEN,IAAM5F,OAAK,GAAG3qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6pC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,KAAG,GAAG5wC,IAAI,CAACY,GAAG,CAAEwsC,iBAAiB,CAAChzB,KAAK,EAAIswB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACtwB,KAAQ,CAAC;QAEtF,KAAM,IAAInvB,IAAC,GAAG0/C,OAAK,EAAEp+C,CAAC,GAAGqkD,KAAG,EAAE3lD,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;UAE3C85H,WAAW,CAACt8G,mBAAmB,CAAE2kC,iBAAiB,EAAEniD,IAAE,CAAC;UAEvDm6H,SAAS,CAAEL,WAAW,EAAE95H,IAAC,EAAEw4H,gBAAgB,EAAE9iG,WAAW,EAAE2vB,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;QAExF;MAED;IAED;EAAC;IAAAh/C,GAAA;IAAAvG,KAAA,EAED,SAAA8kD,mBAAA,EAAqB;MAEpB,IAAMvrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM+lB,eAAe,GAAG/lB,QAAQ,CAAC+lB,eAAe;MAChD,IAAMr6C,IAAI,GAAGvF,MAAM,CAACuF,IAAI,CAAEq6C,eAAgB,CAAC;MAE3C,IAAKr6C,IAAI,CAACX,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMo8C,cAAc,GAAGpB,eAAe,CAAEr6C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKy7C,cAAc,KAAKz5C,SAAS,EAAG;UAEnC,IAAI,CAAC89C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIjvC,CAAC,GAAG,CAAC,EAAEkvC,EAAE,GAAGvE,cAAc,CAACp8C,MAAM,EAAEyR,CAAC,GAAGkvC,EAAE,EAAElvC,CAAC,EAAG,EAAG;YAE3D,IAAMrR,IAAI,GAAGg8C,cAAc,CAAE3qC,CAAC,CAAE,CAACrR,IAAI,IAAIkC,MAAM,CAAEmP,CAAE,CAAC;YAEpD,IAAI,CAACgvC,qBAAqB,CAAC9gD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC+gD,qBAAqB,CAAEtgD,IAAI,CAAE,GAAGqR,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAAikH,MAAA;AAAA,EAtHmB/yF,QAAQ;AA0H7B,SAASmzF,SAASA,CAAEthG,KAAK,EAAEtkB,KAAK,EAAEikH,gBAAgB,EAAE9iG,WAAW,EAAE2vB,SAAS,EAAEC,UAAU,EAAEhtB,MAAM,EAAG;EAEhG,IAAM8hG,kBAAkB,GAAGR,IAAI,CAACr8F,iBAAiB,CAAE1E,KAAM,CAAC;EAE1D,IAAKuhG,kBAAkB,GAAG5B,gBAAgB,EAAG;IAE5C,IAAM6B,cAAc,GAAG,IAAIlmG,OAAO,CAAC,CAAC;IAEpCylG,IAAI,CAACv8F,mBAAmB,CAAExE,KAAK,EAAEwhG,cAAe,CAAC;IACjDA,cAAc,CAACvvG,YAAY,CAAE4K,WAAY,CAAC;IAE1C,IAAMwT,QAAQ,GAAGmc,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACrgB,UAAU,CAAE29G,cAAe,CAAC;IAElE,IAAKnxF,QAAQ,GAAGmc,SAAS,CAAC5gB,IAAI,IAAIyE,QAAQ,GAAGmc,SAAS,CAAC3gB,GAAG,EAAG;IAE7D4gB,UAAU,CAACthD,IAAI,CAAE;MAEhBklC,QAAQ,EAAEA,QAAQ;MAClBoxF,aAAa,EAAEvlH,IAAI,CAACmH,IAAI,CAAEk+G,kBAAmB,CAAC;MAC9CvhG,KAAK,EAAEwhG,cAAc;MACrB9lH,KAAK,EAAEA,KAAK;MACZuxC,IAAI,EAAE,IAAI;MACVxtB,MAAM,EAAEA;IAET,CAAE,CAAC;EAEJ;AAED;AAAC,IAEKiiG,YAAY,GAAAnzH,OAAA,CAAAmzH,YAAA,0BAAAC,SAAA;EAAA3yG,SAAA,CAAA0yG,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA1yG,YAAA,CAAAwyG,YAAA;EAEjB,SAAAA,aAAaG,KAAK,EAAEzyG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAG;IAAA,IAAAmyG,OAAA;IAAA70H,eAAA,OAAAy0H,YAAA;IAE3FI,OAAA,GAAAF,QAAA,CAAAr5H,IAAA,OAAOs5H,KAAK,EAAEzyG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU;IAEnFmyG,OAAA,CAAK3nC,cAAc,GAAG,IAAI;IAE1B2nC,OAAA,CAAKryG,SAAS,GAAGA,SAAS,KAAKthB,SAAS,GAAGshB,SAAS,GAAGtc,YAAY;IACnE2uH,OAAA,CAAKtyG,SAAS,GAAGA,SAAS,KAAKrhB,SAAS,GAAGqhB,SAAS,GAAGrc,YAAY;IAEnE2uH,OAAA,CAAKxxG,eAAe,GAAG,KAAK;IAE5B,IAAMo9B,KAAK,GAAA39B,sBAAA,CAAA+xG,OAAA,CAAO;IAElB,SAASC,WAAWA,CAAA,EAAG;MAEtBr0E,KAAK,CAACx8B,WAAW,GAAG,IAAI;MACxB2wG,KAAK,CAACG,yBAAyB,CAAED,WAAY,CAAC;IAE/C;IAEA,IAAK,2BAA2B,IAAIF,KAAK,EAAG;MAE3CA,KAAK,CAACG,yBAAyB,CAAED,WAAY,CAAC;IAE/C;IAAC,OAAAD,OAAA;EAEF;EAACp0H,YAAA,CAAAg0H,YAAA;IAAAj0H,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACihB,KAAM,CAAC,CAAC/K,IAAI,CAAE,IAAK,CAAC;IAEvD;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAMwqG,KAAK,GAAG,IAAI,CAACj1G,KAAK;MACxB,IAAMq1G,qBAAqB,IAAG,2BAA2B,IAAIJ,KAAK;MAElE,IAAKI,qBAAqB,KAAK,KAAK,IAAIJ,KAAK,CAACK,UAAU,IAAIL,KAAK,CAACM,iBAAiB,EAAG;QAErF,IAAI,CAACjxG,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;EAAA,OAAAwwG,YAAA;AAAA,EA/CyB5yG,OAAO;AAAA,IAmD5BszG,kBAAkB,GAAA7zH,OAAA,CAAA6zH,kBAAA,0BAAAC,SAAA;EAAArzG,SAAA,CAAAozG,kBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAApzG,YAAA,CAAAkzG,kBAAA;EAEvB,SAAAA,mBAAap1G,KAAK,EAAEC,MAAM,EAAG;IAAA,IAAAs1G,OAAA;IAAAt1H,eAAA,OAAAm1H,kBAAA;IAE5BG,OAAA,GAAAD,QAAA,CAAA/5H,IAAA,OAAO;MAAEykB,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA;IAAO,CAAC;IAExBs1G,OAAA,CAAK7wB,oBAAoB,GAAG,IAAI;IAEhC6wB,OAAA,CAAK/yG,SAAS,GAAG1c,aAAa;IAC9ByvH,OAAA,CAAK9yG,SAAS,GAAG3c,aAAa;IAE9ByvH,OAAA,CAAKjyG,eAAe,GAAG,KAAK;IAE5BiyG,OAAA,CAAKrxG,WAAW,GAAG,IAAI;IAAC,OAAAqxG,OAAA;EAEzB;EAAC,OAAA70H,YAAA,CAAA00H,kBAAA;AAAA,EAf+BtzG,OAAO;AAAA,IAmBlC0zG,iBAAiB,GAAAj0H,OAAA,CAAAi0H,iBAAA,0BAAAC,SAAA;EAAAzzG,SAAA,CAAAwzG,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAxzG,YAAA,CAAAszG,iBAAA;EAEtB,SAAAA,kBAAavyG,OAAO,EAAEjD,KAAK,EAAEC,MAAM,EAAEyC,MAAM,EAAErnB,IAAI,EAAE+mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAEhE,UAAU,EAAG;IAAA,IAAAg3G,OAAA;IAAA11H,eAAA,OAAAu1H,iBAAA;IAExHG,OAAA,GAAAD,QAAA,CAAAn6H,IAAA,OAAO,IAAI,EAAE6mB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAEhE,UAAU;IAE9Fg3G,OAAA,CAAKhxB,mBAAmB,GAAG,IAAI;IAE/BgxB,OAAA,CAAK/1G,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAC7C01G,OAAA,CAAK1yG,OAAO,GAAGA,OAAO;;IAEtB;IACA;;IAEA0yG,OAAA,CAAKnyG,KAAK,GAAG,KAAK;;IAElB;IACA;;IAEAmyG,OAAA,CAAKryG,eAAe,GAAG,KAAK;IAAC,OAAAqyG,OAAA;EAE9B;EAAC,OAAAj1H,YAAA,CAAA80H,iBAAA;AAAA,EArB8B1zG,OAAO;AAAA,IAyBjC8zG,sBAAsB,GAAAr0H,OAAA,CAAAq0H,sBAAA,0BAAAC,kBAAA;EAAA7zG,SAAA,CAAA4zG,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAA5zG,YAAA,CAAA0zG,sBAAA;EAE3B,SAAAA,uBAAa3yG,OAAO,EAAEjD,KAAK,EAAEC,MAAM,EAAE6G,KAAK,EAAEpE,MAAM,EAAErnB,IAAI,EAAG;IAAA,IAAA06H,OAAA;IAAA91H,eAAA,OAAA21H,sBAAA;IAE1DG,OAAA,GAAAD,QAAA,CAAAv6H,IAAA,OAAO0nB,OAAO,EAAEjD,KAAK,EAAEC,MAAM,EAAEyC,MAAM,EAAErnB,IAAI;IAE3C06H,OAAA,CAAK5tB,wBAAwB,GAAG,IAAI;IACpC4tB,OAAA,CAAKn2G,KAAK,CAACkH,KAAK,GAAGA,KAAK;IACxBivG,OAAA,CAAK5tG,KAAK,GAAGviB,mBAAmB;IAAC,OAAAmwH,OAAA;EAElC;EAAC,OAAAr1H,YAAA,CAAAk1H,sBAAA;AAAA,EAVmCJ,iBAAiB;AAAA,IAchDQ,qBAAqB,GAAAz0H,OAAA,CAAAy0H,qBAAA,0BAAAC,mBAAA;EAAAj0G,SAAA,CAAAg0G,qBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAAh0G,YAAA,CAAA8zG,qBAAA;EAE1B,SAAAA,sBAAa30G,MAAM,EAAEqB,MAAM,EAAErnB,IAAI,EAAG;IAAA,IAAA86H,OAAA;IAAAl2H,eAAA,OAAA+1H,qBAAA;IAEnCG,OAAA,GAAAD,QAAA,CAAA36H,IAAA,OAAO4F,SAAS,EAAEkgB,MAAM,CAAE,CAAC,CAAE,CAACrB,KAAK,EAAEqB,MAAM,CAAE,CAAC,CAAE,CAACpB,MAAM,EAAEyC,MAAM,EAAErnB,IAAI,EAAEiK,qBAAqB;IAE5F6wH,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IACnCD,OAAA,CAAK7tE,aAAa,GAAG,IAAI;IAEzB6tE,OAAA,CAAKv2G,KAAK,GAAGyB,MAAM;IAAC,OAAA80G,OAAA;EAErB;EAAC,OAAAz1H,YAAA,CAAAs1H,qBAAA;AAAA,EAXkCR,iBAAiB;AAAA,IAe/Ca,aAAa,GAAA90H,OAAA,CAAA80H,aAAA,0BAAAC,SAAA;EAAAt0G,SAAA,CAAAq0G,aAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAr0G,YAAA,CAAAm0G,aAAA;EAElB,SAAAA,cAAan5G,MAAM,EAAEkF,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU,EAAG;IAAA,IAAA6zG,OAAA;IAAAv2H,eAAA,OAAAo2H,aAAA;IAE5FG,OAAA,GAAAD,QAAA,CAAAh7H,IAAA,OAAO2hB,MAAM,EAAEkF,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAErnB,IAAI,EAAEsnB,UAAU;IAEpF6zG,OAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,OAAA,CAAKtyG,WAAW,GAAG,IAAI;IAAC,OAAAsyG,OAAA;EAEzB;EAAC,OAAA91H,YAAA,CAAA21H,aAAA;AAAA,EAV0Bv0G,OAAO;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA,IA8BM40G,KAAK,GAAAn1H,OAAA,CAAAm1H,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAAz2H,eAAA,OAAAy2H,KAAA;IAEb,IAAI,CAACr7H,IAAI,GAAG,OAAO;IAEnB,IAAI,CAACs7H,kBAAkB,GAAG,GAAG;EAE9B;;EAEA;EACA;EAAAj2H,YAAA,CAAAg2H,KAAA;IAAAj2H,GAAA;IAAAvG,KAAA,EAEA,SAAA08H,SAAA,CAAU;IAAA,EAA0B;MAEnCvjH,OAAO,CAACC,IAAI,CAAE,2CAA4C,CAAC;MAC3D,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAA7S,GAAA;IAAAvG,KAAA,EAEA,SAAA28H,WAAYp8H,CAAC,EAAEq8H,cAAc,EAAG;MAE/B,IAAMp9H,CAAC,GAAG,IAAI,CAACq9H,cAAc,CAAEt8H,CAAE,CAAC;MAClC,OAAO,IAAI,CAACm8H,QAAQ,CAAEl9H,CAAC,EAAEo9H,cAAe,CAAC;IAE1C;;IAEA;EAAA;IAAAr2H,GAAA;IAAAvG,KAAA,EAEA,SAAA88H,UAAWC,SAAS,GAAG,CAAC,EAAG;MAE1B,IAAM7kG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIp2B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi7H,SAAS,EAAEj7H,CAAC,EAAG,EAAG;QAEvCo2B,MAAM,CAACj0B,IAAI,CAAE,IAAI,CAACy4H,QAAQ,CAAE56H,CAAC,GAAGi7H,SAAU,CAAE,CAAC;MAE9C;MAEA,OAAO7kG,MAAM;IAEd;;IAEA;EAAA;IAAA3xB,GAAA;IAAAvG,KAAA,EAEA,SAAAg9H,gBAAiBD,SAAS,GAAG,CAAC,EAAG;MAEhC,IAAM7kG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIp2B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi7H,SAAS,EAAEj7H,CAAC,EAAG,EAAG;QAEvCo2B,MAAM,CAACj0B,IAAI,CAAE,IAAI,CAAC04H,UAAU,CAAE76H,CAAC,GAAGi7H,SAAU,CAAE,CAAC;MAEhD;MAEA,OAAO7kG,MAAM;IAEd;;IAEA;EAAA;IAAA3xB,GAAA;IAAAvG,KAAA,EAEA,SAAAi9H,UAAA,EAAY;MAEX,IAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;MACjC,OAAOD,OAAO,CAAEA,OAAO,CAAC54H,MAAM,GAAG,CAAC,CAAE;IAErC;;IAEA;EAAA;IAAAiC,GAAA;IAAAvG,KAAA,EAEA,SAAAm9H,WAAYJ,SAAS,GAAG,IAAI,CAACN,kBAAkB,EAAG;MAEjD,IAAK,IAAI,CAACW,eAAe,IACtB,IAAI,CAACA,eAAe,CAAC94H,MAAM,KAAKy4H,SAAS,GAAG,CAAG,IACjD,CAAE,IAAI,CAAC/yG,WAAW,EAAG;QAErB,OAAO,IAAI,CAACozG,eAAe;MAE5B;MAEA,IAAI,CAACpzG,WAAW,GAAG,KAAK;MAExB,IAAMmjB,KAAK,GAAG,EAAE;MAChB,IAAIkwF,OAAO;QAAEC,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAE,CAAE,CAAC;MACtC,IAAI7mD,GAAG,GAAG,CAAC;MAEX1oC,KAAK,CAAClpC,IAAI,CAAE,CAAE,CAAC;MAEf,KAAM,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIk7H,SAAS,EAAEl7H,CAAC,EAAG,EAAG;QAEvCw7H,OAAO,GAAG,IAAI,CAACX,QAAQ,CAAE76H,CAAC,GAAGk7H,SAAU,CAAC;QACxClnD,GAAG,IAAIwnD,OAAO,CAAC1gH,UAAU,CAAE2gH,IAAK,CAAC;QACjCnwF,KAAK,CAAClpC,IAAI,CAAE4xE,GAAI,CAAC;QACjBynD,IAAI,GAAGD,OAAO;MAEf;MAEA,IAAI,CAACD,eAAe,GAAGjwF,KAAK;MAE5B,OAAOA,KAAK,CAAC,CAAC;IAEf;EAAC;IAAA5mC,GAAA;IAAAvG,KAAA,EAED,SAAAu9H,iBAAA,EAAmB;MAElB,IAAI,CAACvzG,WAAW,GAAG,IAAI;MACvB,IAAI,CAACmzG,UAAU,CAAC,CAAC;IAElB;;IAEA;EAAA;IAAA52H,GAAA;IAAAvG,KAAA,EAEA,SAAA68H,eAAgBt8H,CAAC,EAAE4oC,QAAQ,EAAG;MAE7B,IAAMq0F,UAAU,GAAG,IAAI,CAACL,UAAU,CAAC,CAAC;MAEpC,IAAIl9H,CAAC,GAAG,CAAC;MACT,IAAMsvB,EAAE,GAAGiuG,UAAU,CAACl5H,MAAM;MAE5B,IAAIm5H,eAAe,CAAC,CAAC;;MAErB,IAAKt0F,QAAQ,EAAG;QAEfs0F,eAAe,GAAGt0F,QAAQ;MAE3B,CAAC,MAAM;QAENs0F,eAAe,GAAGl9H,CAAC,GAAGi9H,UAAU,CAAEjuG,EAAE,GAAG,CAAC,CAAE;MAE3C;;MAEA;;MAEA,IAAItY,GAAG,GAAG,CAAC;QAAEC,IAAI,GAAGqY,EAAE,GAAG,CAAC;QAAEmuG,UAAU;MAEtC,OAAQzmH,GAAG,IAAIC,IAAI,EAAG;QAErBjX,CAAC,GAAG+U,IAAI,CAACmC,KAAK,CAAEF,GAAG,GAAG,CAAEC,IAAI,GAAGD,GAAG,IAAK,CAAE,CAAC,CAAC,CAAC;;QAE5CymH,UAAU,GAAGF,UAAU,CAAEv9H,CAAC,CAAE,GAAGw9H,eAAe;QAE9C,IAAKC,UAAU,GAAG,CAAC,EAAG;UAErBzmH,GAAG,GAAGhX,CAAC,GAAG,CAAC;QAEZ,CAAC,MAAM,IAAKy9H,UAAU,GAAG,CAAC,EAAG;UAE5BxmH,IAAI,GAAGjX,CAAC,GAAG,CAAC;QAEb,CAAC,MAAM;UAENiX,IAAI,GAAGjX,CAAC;UACR;;UAEA;QAED;MAED;;MAEAA,CAAC,GAAGiX,IAAI;MAER,IAAKsmH,UAAU,CAAEv9H,CAAC,CAAE,KAAKw9H,eAAe,EAAG;QAE1C,OAAOx9H,CAAC,IAAKsvB,EAAE,GAAG,CAAC,CAAE;MAEtB;;MAEA;;MAEA,IAAMouG,YAAY,GAAGH,UAAU,CAAEv9H,CAAC,CAAE;MACpC,IAAM29H,WAAW,GAAGJ,UAAU,CAAEv9H,CAAC,GAAG,CAAC,CAAE;MAEvC,IAAM49H,aAAa,GAAGD,WAAW,GAAGD,YAAY;;MAEhD;;MAEA,IAAMG,eAAe,GAAG,CAAEL,eAAe,GAAGE,YAAY,IAAKE,aAAa;;MAE1E;;MAEA,IAAMr+H,CAAC,GAAG,CAAES,CAAC,GAAG69H,eAAe,KAAOvuG,EAAE,GAAG,CAAC,CAAE;MAE9C,OAAO/vB,CAAC;IAET;;IAEA;IACA;IACA;IACA;EAAA;IAAA+G,GAAA;IAAAvG,KAAA,EAEA,SAAA+9H,WAAYv+H,CAAC,EAAEo9H,cAAc,EAAG;MAE/B,IAAMrgG,KAAK,GAAG,MAAM;MACpB,IAAIiC,EAAE,GAAGh/B,CAAC,GAAG+8B,KAAK;MAClB,IAAIyhG,EAAE,GAAGx+H,CAAC,GAAG+8B,KAAK;;MAElB;;MAEA,IAAKiC,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MACpB,IAAKw/F,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MAEpB,IAAMC,GAAG,GAAG,IAAI,CAACvB,QAAQ,CAAEl+F,EAAG,CAAC;MAC/B,IAAM0/F,GAAG,GAAG,IAAI,CAACxB,QAAQ,CAAEsB,EAAG,CAAC;MAE/B,IAAM19E,OAAO,GAAGs8E,cAAc,KAAQqB,GAAG,CAAC/jH,SAAS,GAAK,IAAIF,OAAO,CAAC,CAAC,GAAG,IAAIoa,OAAO,CAAC,CAAC,CAAE;MAEvFksB,OAAO,CAAC3lC,IAAI,CAAEujH,GAAI,CAAC,CAACljH,GAAG,CAAEijH,GAAI,CAAC,CAACpkH,SAAS,CAAC,CAAC;MAE1C,OAAOymC,OAAO;IAEf;EAAC;IAAA/5C,GAAA;IAAAvG,KAAA,EAED,SAAAm+H,aAAc59H,CAAC,EAAEq8H,cAAc,EAAG;MAEjC,IAAMp9H,CAAC,GAAG,IAAI,CAACq9H,cAAc,CAAEt8H,CAAE,CAAC;MAClC,OAAO,IAAI,CAACw9H,UAAU,CAAEv+H,CAAC,EAAEo9H,cAAe,CAAC;IAE5C;EAAC;IAAAr2H,GAAA;IAAAvG,KAAA,EAED,SAAAo+H,oBAAqBC,QAAQ,EAAEC,MAAM,EAAG;MAEvC;;MAEA,IAAM7nG,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;MAE5B,IAAM8sB,QAAQ,GAAG,EAAE;MACnB,IAAMH,OAAO,GAAG,EAAE;MAClB,IAAMw9E,SAAS,GAAG,EAAE;MAEpB,IAAMC,GAAG,GAAG,IAAIpqG,OAAO,CAAC,CAAC;MACzB,IAAMqqG,GAAG,GAAG,IAAI5+F,OAAO,CAAC,CAAC;;MAEzB;;MAEA,KAAM,IAAI5/B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIo+H,QAAQ,EAAEp+H,CAAC,EAAG,EAAG;QAEtC,IAAMM,CAAC,GAAGN,CAAC,GAAGo+H,QAAQ;QAEtBn9E,QAAQ,CAAEjhD,CAAC,CAAE,GAAG,IAAI,CAACk+H,YAAY,CAAE59H,CAAC,EAAE,IAAI6zB,OAAO,CAAC,CAAE,CAAC;MAEtD;;MAEA;MACA;;MAEA2sB,OAAO,CAAE,CAAC,CAAE,GAAG,IAAI3sB,OAAO,CAAC,CAAC;MAC5BmqG,SAAS,CAAE,CAAC,CAAE,GAAG,IAAInqG,OAAO,CAAC,CAAC;MAC9B,IAAIxe,GAAG,GAAGzO,MAAM,CAACu3H,SAAS;MAC1B,IAAMl9G,EAAE,GAAGxM,IAAI,CAAC6B,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAACjrC,CAAE,CAAC;MACtC,IAAMwL,EAAE,GAAGzM,IAAI,CAAC6B,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAACx/C,CAAE,CAAC;MACtC,IAAMi9H,EAAE,GAAG3pH,IAAI,CAAC6B,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAACx2B,CAAE,CAAC;MAEtC,IAAKlJ,EAAE,IAAI5L,GAAG,EAAG;QAEhBA,GAAG,GAAG4L,EAAE;QACRiV,MAAM,CAACvd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEA,IAAKuI,EAAE,IAAI7L,GAAG,EAAG;QAEhBA,GAAG,GAAG6L,EAAE;QACRgV,MAAM,CAACvd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEA,IAAKylH,EAAE,IAAI/oH,GAAG,EAAG;QAEhB6gB,MAAM,CAACvd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEAslH,GAAG,CAAC3oG,YAAY,CAAEqrB,QAAQ,CAAE,CAAC,CAAE,EAAEzqB,MAAO,CAAC,CAAC5c,SAAS,CAAC,CAAC;MAErDknC,OAAO,CAAE,CAAC,CAAE,CAAClrB,YAAY,CAAEqrB,QAAQ,CAAE,CAAC,CAAE,EAAEs9E,GAAI,CAAC;MAC/CD,SAAS,CAAE,CAAC,CAAE,CAAC1oG,YAAY,CAAEqrB,QAAQ,CAAE,CAAC,CAAE,EAAEH,OAAO,CAAE,CAAC,CAAG,CAAC;;MAG1D;;MAEA,KAAM,IAAI9gD,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIo+H,QAAQ,EAAEp+H,IAAC,EAAG,EAAG;QAEtC8gD,OAAO,CAAE9gD,IAAC,CAAE,GAAG8gD,OAAO,CAAE9gD,IAAC,GAAG,CAAC,CAAE,CAACya,KAAK,CAAC,CAAC;QAEvC6jH,SAAS,CAAEt+H,IAAC,CAAE,GAAGs+H,SAAS,CAAEt+H,IAAC,GAAG,CAAC,CAAE,CAACya,KAAK,CAAC,CAAC;QAE3C8jH,GAAG,CAAC3oG,YAAY,CAAEqrB,QAAQ,CAAEjhD,IAAC,GAAG,CAAC,CAAE,EAAEihD,QAAQ,CAAEjhD,IAAC,CAAG,CAAC;QAEpD,IAAKu+H,GAAG,CAACl6H,MAAM,CAAC,CAAC,GAAG6C,MAAM,CAAC8pB,OAAO,EAAG;UAEpCutG,GAAG,CAAC3kH,SAAS,CAAC,CAAC;UAEf,IAAM4C,KAAK,GAAGzH,IAAI,CAAC0H,IAAI,CAAE/G,KAAK,CAAEurC,QAAQ,CAAEjhD,IAAC,GAAG,CAAC,CAAE,CAAC+b,GAAG,CAAEklC,QAAQ,CAAEjhD,IAAC,CAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAAC,CAAC;;UAEpF8gD,OAAO,CAAE9gD,IAAC,CAAE,CAAC8qB,YAAY,CAAE0zG,GAAG,CAACp7F,gBAAgB,CAAEm7F,GAAG,EAAE/hH,KAAM,CAAE,CAAC;QAEhE;QAEA8hH,SAAS,CAAEt+H,IAAC,CAAE,CAAC41B,YAAY,CAAEqrB,QAAQ,CAAEjhD,IAAC,CAAE,EAAE8gD,OAAO,CAAE9gD,IAAC,CAAG,CAAC;MAE3D;;MAEA;;MAEA,IAAKq+H,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAI7hH,MAAK,GAAGzH,IAAI,CAAC0H,IAAI,CAAE/G,KAAK,CAAEorC,OAAO,CAAE,CAAC,CAAE,CAAC/kC,GAAG,CAAE+kC,OAAO,CAAEs9E,QAAQ,CAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QACjF5hH,MAAK,IAAI4hH,QAAQ;QAEjB,IAAKn9E,QAAQ,CAAE,CAAC,CAAE,CAACllC,GAAG,CAAEwiH,GAAG,CAAC3oG,YAAY,CAAEkrB,OAAO,CAAE,CAAC,CAAE,EAAEA,OAAO,CAAEs9E,QAAQ,CAAG,CAAE,CAAC,GAAG,CAAC,EAAG;UAErF5hH,MAAK,GAAG,CAAEA,MAAK;QAEhB;QAEA,KAAM,IAAIxc,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIo+H,QAAQ,EAAEp+H,IAAC,EAAG,EAAG;UAEtC;UACA8gD,OAAO,CAAE9gD,IAAC,CAAE,CAAC8qB,YAAY,CAAE0zG,GAAG,CAACp7F,gBAAgB,CAAE6d,QAAQ,CAAEjhD,IAAC,CAAE,EAAEwc,MAAK,GAAGxc,IAAE,CAAE,CAAC;UAC7Es+H,SAAS,CAAEt+H,IAAC,CAAE,CAAC41B,YAAY,CAAEqrB,QAAQ,CAAEjhD,IAAC,CAAE,EAAE8gD,OAAO,CAAE9gD,IAAC,CAAG,CAAC;QAE3D;MAED;MAEA,OAAO;QACNihD,QAAQ,EAAEA,QAAQ;QAClBH,OAAO,EAAEA,OAAO;QAChBw9E,SAAS,EAAEA;MACZ,CAAC;IAEF;EAAC;IAAAh4H,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAC2zG,kBAAkB,GAAG3zG,MAAM,CAAC2zG,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAAl2H,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZ5lB,IAAI,EAAE,OAAO;UACbgpB,SAAS,EAAE;QACZ;MACD,CAAC;MAEDxD,IAAI,CAAC81G,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACjD91G,IAAI,CAACxlB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,OAAOwlB,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB,IAAI,CAACwG,kBAAkB,GAAGxG,IAAI,CAACwG,kBAAkB;MAEjD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAD,KAAA;AAAA;AAAA,IAIIoC,YAAY,GAAAv3H,OAAA,CAAAu3H,YAAA,0BAAAC,MAAA;EAAA/2G,SAAA,CAAA82G,YAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAA92G,YAAA,CAAA42G,YAAA;EAEjB,SAAAA,aAAaG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAGpqH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEoqH,UAAU,GAAG,KAAK,EAAEC,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAx5H,eAAA,OAAA64H,YAAA;IAEpIW,OAAA,GAAAT,QAAA,CAAAz9H,IAAA;IAEAk+H,OAAA,CAAKC,cAAc,GAAG,IAAI;IAE1BD,OAAA,CAAKp+H,IAAI,GAAG,cAAc;IAE1Bo+H,OAAA,CAAKR,EAAE,GAAGA,EAAE;IACZQ,OAAA,CAAKP,EAAE,GAAGA,EAAE;IAEZO,OAAA,CAAKN,OAAO,GAAGA,OAAO;IACtBM,OAAA,CAAKL,OAAO,GAAGA,OAAO;IAEtBK,OAAA,CAAKJ,WAAW,GAAGA,WAAW;IAC9BI,OAAA,CAAKH,SAAS,GAAGA,SAAS;IAE1BG,OAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAAC,OAAAC,OAAA;EAE5B;EAAC/4H,YAAA,CAAAo4H,YAAA;IAAAr4H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,EAAG;MAE7B,IAAM9jG,KAAK,GAAG8jG,cAAc,IAAI,IAAI5iH,OAAO,CAAC,CAAC;MAE7C,IAAMylH,KAAK,GAAGzqH,IAAI,CAACC,EAAE,GAAG,CAAC;MACzB,IAAIyqH,UAAU,GAAG,IAAI,CAACN,SAAS,GAAG,IAAI,CAACD,WAAW;MAClD,IAAMQ,UAAU,GAAG3qH,IAAI,CAAC6B,GAAG,CAAE6oH,UAAW,CAAC,GAAGv4H,MAAM,CAAC8pB,OAAO;;MAE1D;MACA,OAAQyuG,UAAU,GAAG,CAAC,EAAGA,UAAU,IAAID,KAAK;MAC5C,OAAQC,UAAU,GAAGD,KAAK,EAAGC,UAAU,IAAID,KAAK;MAEhD,IAAKC,UAAU,GAAGv4H,MAAM,CAAC8pB,OAAO,EAAG;QAElC,IAAK0uG,UAAU,EAAG;UAEjBD,UAAU,GAAG,CAAC;QAEf,CAAC,MAAM;UAENA,UAAU,GAAGD,KAAK;QAEnB;MAED;MAEA,IAAK,IAAI,CAACJ,UAAU,KAAK,IAAI,IAAI,CAAEM,UAAU,EAAG;QAE/C,IAAKD,UAAU,KAAKD,KAAK,EAAG;UAE3BC,UAAU,GAAG,CAAED,KAAK;QAErB,CAAC,MAAM;UAENC,UAAU,GAAGA,UAAU,GAAGD,KAAK;QAEhC;MAED;MAEA,IAAMpjH,KAAK,GAAG,IAAI,CAAC8iH,WAAW,GAAG3/H,CAAC,GAAGkgI,UAAU;MAC/C,IAAIzpH,CAAC,GAAG,IAAI,CAAC8oH,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGjqH,IAAI,CAACwD,GAAG,CAAE6D,KAAM,CAAC;MAClD,IAAI3a,CAAC,GAAG,IAAI,CAACs9H,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGlqH,IAAI,CAACyD,GAAG,CAAE4D,KAAM,CAAC;MAElD,IAAK,IAAI,CAACijH,SAAS,KAAK,CAAC,EAAG;QAE3B,IAAM9mH,GAAG,GAAGxD,IAAI,CAACwD,GAAG,CAAE,IAAI,CAAC8mH,SAAU,CAAC;QACtC,IAAM7mH,GAAG,GAAGzD,IAAI,CAACyD,GAAG,CAAE,IAAI,CAAC6mH,SAAU,CAAC;QAEtC,IAAM99G,EAAE,GAAGvL,CAAC,GAAG,IAAI,CAAC8oH,EAAE;QACtB,IAAMt9G,EAAE,GAAG/f,CAAC,GAAG,IAAI,CAACs9H,EAAE;;QAEtB;QACA/oH,CAAC,GAAGuL,EAAE,GAAGhJ,GAAG,GAAGiJ,EAAE,GAAGhJ,GAAG,GAAG,IAAI,CAACsmH,EAAE;QACjCr9H,CAAC,GAAG8f,EAAE,GAAG/I,GAAG,GAAGgJ,EAAE,GAAGjJ,GAAG,GAAG,IAAI,CAACwmH,EAAE;MAElC;MAEA,OAAOlmG,KAAK,CAAC5f,GAAG,CAAEjD,CAAC,EAAEvU,CAAE,CAAC;IAEzB;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAqkF,YAAA,CAAAj/H,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACi2G,EAAE,GAAGj2G,MAAM,CAACi2G,EAAE;MACnB,IAAI,CAACC,EAAE,GAAGl2G,MAAM,CAACk2G,EAAE;MAEnB,IAAI,CAACC,OAAO,GAAGn2G,MAAM,CAACm2G,OAAO;MAC7B,IAAI,CAACC,OAAO,GAAGp2G,MAAM,CAACo2G,OAAO;MAE7B,IAAI,CAACC,WAAW,GAAGr2G,MAAM,CAACq2G,WAAW;MACrC,IAAI,CAACC,SAAS,GAAGt2G,MAAM,CAACs2G,SAAS;MAEjC,IAAI,CAACC,UAAU,GAAGv2G,MAAM,CAACu2G,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAGx2G,MAAM,CAACw2G,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA/4H,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAqkF,YAAA,CAAAj/H,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACo4G,EAAE,GAAG,IAAI,CAACA,EAAE;MACjBp4G,IAAI,CAACq4G,EAAE,GAAG,IAAI,CAACA,EAAE;MAEjBr4G,IAAI,CAACs4G,OAAO,GAAG,IAAI,CAACA,OAAO;MAC3Bt4G,IAAI,CAACu4G,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3Bv4G,IAAI,CAACw4G,WAAW,GAAG,IAAI,CAACA,WAAW;MACnCx4G,IAAI,CAACy4G,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/Bz4G,IAAI,CAAC04G,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjC14G,IAAI,CAAC24G,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/B,OAAO34G,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAqkF,YAAA,CAAAj/H,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC8I,EAAE,GAAG9I,IAAI,CAAC8I,EAAE;MACjB,IAAI,CAACC,EAAE,GAAG/I,IAAI,CAAC+I,EAAE;MAEjB,IAAI,CAACC,OAAO,GAAGhJ,IAAI,CAACgJ,OAAO;MAC3B,IAAI,CAACC,OAAO,GAAGjJ,IAAI,CAACiJ,OAAO;MAE3B,IAAI,CAACC,WAAW,GAAGlJ,IAAI,CAACkJ,WAAW;MACnC,IAAI,CAACC,SAAS,GAAGnJ,IAAI,CAACmJ,SAAS;MAE/B,IAAI,CAACC,UAAU,GAAGpJ,IAAI,CAACoJ,UAAU;MAEjC,IAAI,CAACC,SAAS,GAAGrJ,IAAI,CAACqJ,SAAS;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAV,YAAA;AAAA,EApJyBpC,KAAK;AAAA,IAwJ1BoD,QAAQ,GAAAv4H,OAAA,CAAAu4H,QAAA,0BAAAC,aAAA;EAAA/3G,SAAA,CAAA83G,QAAA,EAAAC,aAAA;EAAA,IAAAC,QAAA,GAAA93G,YAAA,CAAA43G,QAAA;EAEb,SAAAA,SAAab,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;IAAA,IAAAW,OAAA;IAAAj6H,eAAA,OAAA65H,QAAA;IAElEI,OAAA,GAAAF,QAAA,CAAAz+H,IAAA,OAAO09H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU;IAEnEW,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBD,OAAA,CAAK7+H,IAAI,GAAG,UAAU;IAAC,OAAA6+H,OAAA;EAExB;EAAC,OAAAx5H,YAAA,CAAAo5H,QAAA;AAAA,EAVqBhB,YAAY;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASsB,SAASA,CAAA,EAAG;EAEpB,IAAIC,EAAE,GAAG,CAAC;IAAE9vG,EAAE,GAAG,CAAC;IAAE3X,EAAE,GAAG,CAAC;IAAE4X,EAAE,GAAG,CAAC;;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS4+C,IAAIA,CAAE37C,EAAE,EAAEI,EAAE,EAAE4K,EAAE,EAAEC,EAAE,EAAG;IAE/B2hG,EAAE,GAAG5sG,EAAE;IACPlD,EAAE,GAAGkO,EAAE;IACP7lB,EAAE,GAAG,CAAE,CAAC,GAAG6a,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG,CAAC,GAAG4K,EAAE,GAAGC,EAAE;IACpClO,EAAE,GAAG,CAAC,GAAGiD,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG4K,EAAE,GAAGC,EAAE;EAE/B;EAEA,OAAO;IAEN4hG,cAAc,EAAE,SAAAA,eAAW7sG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAE28F,EAAE,EAAEC,OAAO,EAAG;MAEpDpxD,IAAI,CAAEv7C,EAAE,EAAE+P,EAAE,EAAE48F,OAAO,IAAK58F,EAAE,GAAGnQ,EAAE,CAAE,EAAE+sG,OAAO,IAAKD,EAAE,GAAG1sG,EAAE,CAAG,CAAC;IAE7D,CAAC;IAED4sG,wBAAwB,EAAE,SAAAA,yBAAWhtG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAE28F,EAAE,EAAEG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAEpE;MACA,IAAIliG,EAAE,GAAG,CAAE7K,EAAE,GAAGJ,EAAE,IAAKitG,GAAG,GAAG,CAAE98F,EAAE,GAAGnQ,EAAE,KAAOitG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAE/8F,EAAE,GAAG/P,EAAE,IAAK8sG,GAAG;MAC5E,IAAIzC,EAAE,GAAG,CAAEt6F,EAAE,GAAG/P,EAAE,IAAK8sG,GAAG,GAAG,CAAEJ,EAAE,GAAG1sG,EAAE,KAAO8sG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEL,EAAE,GAAG38F,EAAE,IAAKg9F,GAAG;;MAE5E;MACAliG,EAAE,IAAIiiG,GAAG;MACTzC,EAAE,IAAIyC,GAAG;MAETvxD,IAAI,CAAEv7C,EAAE,EAAE+P,EAAE,EAAElF,EAAE,EAAEw/F,EAAG,CAAC;IAEvB,CAAC;IAED2C,IAAI,EAAE,SAAAA,KAAWnhI,CAAC,EAAG;MAEpB,IAAMw+H,EAAE,GAAGx+H,CAAC,GAAGA,CAAC;MAChB,IAAMohI,EAAE,GAAG5C,EAAE,GAAGx+H,CAAC;MACjB,OAAO2gI,EAAE,GAAG9vG,EAAE,GAAG7wB,CAAC,GAAGkZ,EAAE,GAAGslH,EAAE,GAAG1tG,EAAE,GAAGswG,EAAE;IAEvC;EAED,CAAC;AAEF;;AAEA;;AAEA,IAAMz/G,GAAG,GAAG,aAAc,IAAIiT,OAAO,CAAC,CAAC;AACvC,IAAMysG,EAAE,GAAG,aAAc,IAAIX,SAAS,CAAC,CAAC;AACxC,IAAMY,EAAE,GAAG,aAAc,IAAIZ,SAAS,CAAC,CAAC;AACxC,IAAMa,EAAE,GAAG,aAAc,IAAIb,SAAS,CAAC,CAAC;AAAC,IAEnCc,gBAAgB,GAAA35H,OAAA,CAAA25H,gBAAA,0BAAAC,OAAA;EAAAn5G,SAAA,CAAAk5G,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAl5G,YAAA,CAAAg5G,gBAAA;EAErB,SAAAA,iBAAa9oG,MAAM,GAAG,EAAE,EAAEomG,MAAM,GAAG,KAAK,EAAE6C,SAAS,GAAG,aAAa,EAAEb,OAAO,GAAG,GAAG,EAAG;IAAA,IAAAc,OAAA;IAAAr7H,eAAA,OAAAi7H,gBAAA;IAEpFI,OAAA,GAAAF,QAAA,CAAA7/H,IAAA;IAEA+/H,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAKjgI,IAAI,GAAG,kBAAkB;IAE9BigI,OAAA,CAAKlpG,MAAM,GAAGA,MAAM;IACpBkpG,OAAA,CAAK9C,MAAM,GAAGA,MAAM;IACpB8C,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAC1BC,OAAA,CAAKd,OAAO,GAAGA,OAAO;IAAC,OAAAc,OAAA;EAExB;EAAC56H,YAAA,CAAAw6H,gBAAA;IAAAz6H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAIxoG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG8jG,cAAc;MAE5B,IAAM1kG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM32B,CAAC,GAAG22B,MAAM,CAAC5zB,MAAM;MAEvB,IAAMzC,CAAC,GAAG,CAAEN,CAAC,IAAK,IAAI,CAAC+8H,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,IAAK9+H,CAAC;MAC7C,IAAI8hI,QAAQ,GAAGtsH,IAAI,CAACmC,KAAK,CAAEtV,CAAE,CAAC;MAC9B,IAAIi0E,MAAM,GAAGj0E,CAAC,GAAGy/H,QAAQ;MAEzB,IAAK,IAAI,CAAChD,MAAM,EAAG;QAElBgD,QAAQ,IAAIA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAEtsH,IAAI,CAACmC,KAAK,CAAEnC,IAAI,CAAC6B,GAAG,CAAEyqH,QAAS,CAAC,GAAG//H,CAAE,CAAC,GAAG,CAAC,IAAKA,CAAC;MAElF,CAAC,MAAM,IAAKu0E,MAAM,KAAK,CAAC,IAAIwrD,QAAQ,KAAK//H,CAAC,GAAG,CAAC,EAAG;QAEhD+/H,QAAQ,GAAG//H,CAAC,GAAG,CAAC;QAChBu0E,MAAM,GAAG,CAAC;MAEX;MAEA,IAAIp6C,EAAE,EAAEuU,EAAE,CAAC,CAAC;;MAEZ,IAAK,IAAI,CAACquF,MAAM,IAAIgD,QAAQ,GAAG,CAAC,EAAG;QAElC5lG,EAAE,GAAGxD,MAAM,CAAE,CAAEopG,QAAQ,GAAG,CAAC,IAAK//H,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACA4f,GAAG,CAACjG,UAAU,CAAEgd,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAG,CAAC,CAACtd,GAAG,CAAEsd,MAAM,CAAE,CAAC,CAAG,CAAC;QAC7DwD,EAAE,GAAGva,GAAG;MAET;MAEA,IAAMwa,EAAE,GAAGzD,MAAM,CAAEopG,QAAQ,GAAG//H,CAAC,CAAE;MACjC,IAAMq6B,EAAE,GAAG1D,MAAM,CAAE,CAAEopG,QAAQ,GAAG,CAAC,IAAK//H,CAAC,CAAE;MAEzC,IAAK,IAAI,CAAC+8H,MAAM,IAAIgD,QAAQ,GAAG,CAAC,GAAG//H,CAAC,EAAG;QAEtC0uC,EAAE,GAAG/X,MAAM,CAAE,CAAEopG,QAAQ,GAAG,CAAC,IAAK//H,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACA4f,GAAG,CAACjG,UAAU,CAAEgd,MAAM,CAAE32B,CAAC,GAAG,CAAC,CAAE,EAAE22B,MAAM,CAAE32B,CAAC,GAAG,CAAC,CAAG,CAAC,CAACqZ,GAAG,CAAEsd,MAAM,CAAE32B,CAAC,GAAG,CAAC,CAAG,CAAC;QACzE0uC,EAAE,GAAG9uB,GAAG;MAET;MAEA,IAAK,IAAI,CAACggH,SAAS,KAAK,aAAa,IAAI,IAAI,CAACA,SAAS,KAAK,SAAS,EAAG;QAEvE;QACA,IAAMppH,GAAG,GAAG,IAAI,CAACopH,SAAS,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI;QACrD,IAAIX,GAAG,GAAGxrH,IAAI,CAAC+C,GAAG,CAAE2jB,EAAE,CAAC9e,iBAAiB,CAAE+e,EAAG,CAAC,EAAE5jB,GAAI,CAAC;QACrD,IAAI0oH,GAAG,GAAGzrH,IAAI,CAAC+C,GAAG,CAAE4jB,EAAE,CAAC/e,iBAAiB,CAAEgf,EAAG,CAAC,EAAE7jB,GAAI,CAAC;QACrD,IAAI2oH,GAAG,GAAG1rH,IAAI,CAAC+C,GAAG,CAAE6jB,EAAE,CAAChf,iBAAiB,CAAEqzB,EAAG,CAAC,EAAEl4B,GAAI,CAAC;;QAErD;QACA,IAAK0oH,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAG,GAAG;QAC3B,IAAKD,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGC,GAAG;QAC3B,IAAKC,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGD,GAAG;QAE3BI,EAAE,CAACN,wBAAwB,CAAE7kG,EAAE,CAACzlB,CAAC,EAAE0lB,EAAE,CAAC1lB,CAAC,EAAE2lB,EAAE,CAAC3lB,CAAC,EAAEg6B,EAAE,CAACh6B,CAAC,EAAEuqH,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;QACpEI,EAAE,CAACP,wBAAwB,CAAE7kG,EAAE,CAACh6B,CAAC,EAAEi6B,EAAE,CAACj6B,CAAC,EAAEk6B,EAAE,CAACl6B,CAAC,EAAEuuC,EAAE,CAACvuC,CAAC,EAAE8+H,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;QACpEK,EAAE,CAACR,wBAAwB,CAAE7kG,EAAE,CAAChR,CAAC,EAAEiR,EAAE,CAACjR,CAAC,EAAEkR,EAAE,CAAClR,CAAC,EAAEulB,EAAE,CAACvlB,CAAC,EAAE81G,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;MAErE,CAAC,MAAM,IAAK,IAAI,CAACS,SAAS,KAAK,YAAY,EAAG;QAE7CN,EAAE,CAACT,cAAc,CAAE1kG,EAAE,CAACzlB,CAAC,EAAE0lB,EAAE,CAAC1lB,CAAC,EAAE2lB,EAAE,CAAC3lB,CAAC,EAAEg6B,EAAE,CAACh6B,CAAC,EAAE,IAAI,CAACqqH,OAAQ,CAAC;QACzDQ,EAAE,CAACV,cAAc,CAAE1kG,EAAE,CAACh6B,CAAC,EAAEi6B,EAAE,CAACj6B,CAAC,EAAEk6B,EAAE,CAACl6B,CAAC,EAAEuuC,EAAE,CAACvuC,CAAC,EAAE,IAAI,CAAC4+H,OAAQ,CAAC;QACzDS,EAAE,CAACX,cAAc,CAAE1kG,EAAE,CAAChR,CAAC,EAAEiR,EAAE,CAACjR,CAAC,EAAEkR,EAAE,CAAClR,CAAC,EAAEulB,EAAE,CAACvlB,CAAC,EAAE,IAAI,CAAC41G,OAAQ,CAAC;MAE1D;MAEAxnG,KAAK,CAAC5f,GAAG,CACR2nH,EAAE,CAACF,IAAI,CAAE7qD,MAAO,CAAC,EACjBgrD,EAAE,CAACH,IAAI,CAAE7qD,MAAO,CAAC,EACjBirD,EAAE,CAACJ,IAAI,CAAE7qD,MAAO,CACjB,CAAC;MAED,OAAOh9C,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAymF,gBAAA,CAAArhI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACoP,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGunB,MAAM,CAACoP,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAExD,IAAM64B,KAAK,GAAGhQ,MAAM,CAACoP,MAAM,CAAEj4B,CAAC,CAAE;QAEhC,IAAI,CAACi4B,MAAM,CAACj0B,IAAI,CAAE60B,KAAK,CAACpe,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,IAAI,CAAC4jH,MAAM,GAAGx1G,MAAM,CAACw1G,MAAM;MAC3B,IAAI,CAAC6C,SAAS,GAAGr4G,MAAM,CAACq4G,SAAS;MACjC,IAAI,CAACb,OAAO,GAAGx3G,MAAM,CAACw3G,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA/5H,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAymF,gBAAA,CAAArhI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACuR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC22B,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM64B,KAAK,GAAG,IAAI,CAACZ,MAAM,CAAEj4B,CAAC,CAAE;QAC9B0mB,IAAI,CAACuR,MAAM,CAACj0B,IAAI,CAAE60B,KAAK,CAACtb,OAAO,CAAC,CAAE,CAAC;MAEpC;MAEAmJ,IAAI,CAAC23G,MAAM,GAAG,IAAI,CAACA,MAAM;MACzB33G,IAAI,CAACw6G,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/Bx6G,IAAI,CAAC25G,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3B,OAAO35G,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAymF,gBAAA,CAAArhI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC/9F,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC/9F,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM64B,KAAK,GAAGm9F,IAAI,CAAC/9F,MAAM,CAAEj4B,CAAC,CAAE;QAC9B,IAAI,CAACi4B,MAAM,CAACj0B,IAAI,CAAE,IAAImwB,OAAO,CAAC,CAAC,CAAC9W,SAAS,CAAEwb,KAAM,CAAE,CAAC;MAErD;MAEA,IAAI,CAACwlG,MAAM,GAAGrI,IAAI,CAACqI,MAAM;MACzB,IAAI,CAAC6C,SAAS,GAAGlL,IAAI,CAACkL,SAAS;MAC/B,IAAI,CAACb,OAAO,GAAGrK,IAAI,CAACqK,OAAO;MAE3B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAU,gBAAA;AAAA,EArK6BxE,KAAK;AAyKpC;AACA;AACA;AACA;AAEA,SAAS+E,UAAUA,CAAE/hI,CAAC,EAAEk8B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAG;EAExC,IAAM1U,EAAE,GAAG,CAAEK,EAAE,GAAGF,EAAE,IAAK,GAAG;EAC5B,IAAMve,EAAE,GAAG,CAAE8yB,EAAE,GAAGtU,EAAE,IAAK,GAAG;EAC5B,IAAMqiG,EAAE,GAAGx+H,CAAC,GAAGA,CAAC;EAChB,IAAMohI,EAAE,GAAGphI,CAAC,GAAGw+H,EAAE;EACjB,OAAO,CAAE,CAAC,GAAGriG,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGL,EAAE,GAAGpe,EAAE,IAAKyjH,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGjlG,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAG,CAAC,GAAGL,EAAE,GAAGpe,EAAE,IAAK6gH,EAAE,GAAGziG,EAAE,GAAG/7B,CAAC,GAAGm8B,EAAE;AAEnG;;AAEA;;AAEA,SAAS6lG,iBAAiBA,CAAEhiI,CAAC,EAAEqC,CAAC,EAAG;EAElC,IAAM86F,CAAC,GAAG,CAAC,GAAGn9F,CAAC;EACf,OAAOm9F,CAAC,GAAGA,CAAC,GAAG96F,CAAC;AAEjB;AAEA,SAAS4/H,iBAAiBA,CAAEjiI,CAAC,EAAEqC,CAAC,EAAG;EAElC,OAAO,CAAC,IAAK,CAAC,GAAGrC,CAAC,CAAE,GAAGA,CAAC,GAAGqC,CAAC;AAE7B;AAEA,SAAS6/H,iBAAiBA,CAAEliI,CAAC,EAAEqC,CAAC,EAAG;EAElC,OAAOrC,CAAC,GAAGA,CAAC,GAAGqC,CAAC;AAEjB;AAEA,SAAS8/H,eAAeA,CAAEniI,CAAC,EAAEk8B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEzC,OAAO4lG,iBAAiB,CAAEhiI,CAAC,EAAEk8B,EAAG,CAAC,GAAG+lG,iBAAiB,CAAEjiI,CAAC,EAAEm8B,EAAG,CAAC,GAC7D+lG,iBAAiB,CAAEliI,CAAC,EAAEo8B,EAAG,CAAC;AAE5B;;AAEA;;AAEA,SAASgmG,aAAaA,CAAEpiI,CAAC,EAAEqC,CAAC,EAAG;EAE9B,IAAM86F,CAAC,GAAG,CAAC,GAAGn9F,CAAC;EACf,OAAOm9F,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG96F,CAAC;AAErB;AAEA,SAASggI,aAAaA,CAAEriI,CAAC,EAAEqC,CAAC,EAAG;EAE9B,IAAM86F,CAAC,GAAG,CAAC,GAAGn9F,CAAC;EACf,OAAO,CAAC,GAAGm9F,CAAC,GAAGA,CAAC,GAAGn9F,CAAC,GAAGqC,CAAC;AAEzB;AAEA,SAASigI,aAAaA,CAAEtiI,CAAC,EAAEqC,CAAC,EAAG;EAE9B,OAAO,CAAC,IAAK,CAAC,GAAGrC,CAAC,CAAE,GAAGA,CAAC,GAAGA,CAAC,GAAGqC,CAAC;AAEjC;AAEA,SAASkgI,aAAaA,CAAEviI,CAAC,EAAEqC,CAAC,EAAG;EAE9B,OAAOrC,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGqC,CAAC;AAErB;AAEA,SAASmgI,WAAWA,CAAExiI,CAAC,EAAEk8B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEqU,EAAE,EAAG;EAEzC,OAAO2xF,aAAa,CAAEpiI,CAAC,EAAEk8B,EAAG,CAAC,GAAGmmG,aAAa,CAAEriI,CAAC,EAAEm8B,EAAG,CAAC,GAAGmmG,aAAa,CAAEtiI,CAAC,EAAEo8B,EAAG,CAAC,GAC9EmmG,aAAa,CAAEviI,CAAC,EAAEywC,EAAG,CAAC;AAExB;AAAC,IAEKgyF,gBAAgB,GAAA56H,OAAA,CAAA46H,gBAAA,0BAAAC,OAAA;EAAAp6G,SAAA,CAAAm6G,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAn6G,YAAA,CAAAi6G,gBAAA;EAErB,SAAAA,iBAAa1mG,EAAE,GAAG,IAAIvhB,OAAO,CAAC,CAAC,EAAEmD,EAAE,GAAG,IAAInD,OAAO,CAAC,CAAC,EAAEoD,EAAE,GAAG,IAAIpD,OAAO,CAAC,CAAC,EAAEi1B,EAAE,GAAG,IAAIj1B,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAooH,OAAA;IAAAr8H,eAAA,OAAAk8H,gBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAA9gI,IAAA;IAEA+gI,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAKjhI,IAAI,GAAG,kBAAkB;IAE9BihI,OAAA,CAAK7mG,EAAE,GAAGA,EAAE;IACZ6mG,OAAA,CAAKjlH,EAAE,GAAGA,EAAE;IACZilH,OAAA,CAAKhlH,EAAE,GAAGA,EAAE;IACZglH,OAAA,CAAKnzF,EAAE,GAAGA,EAAE;IAAC,OAAAmzF,OAAA;EAEd;EAAC57H,YAAA,CAAAy7H,gBAAA;IAAA17H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAI5iH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM8e,KAAK,GAAG8jG,cAAc;MAE5B,IAAMrhG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEpe,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE6xB,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5DnW,KAAK,CAAC5f,GAAG,CACR8oH,WAAW,CAAExiI,CAAC,EAAE+7B,EAAE,CAACtlB,CAAC,EAAEkH,EAAE,CAAClH,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEg5B,EAAE,CAACh5B,CAAE,CAAC,EACxC+rH,WAAW,CAAExiI,CAAC,EAAE+7B,EAAE,CAAC75B,CAAC,EAAEyb,EAAE,CAACzb,CAAC,EAAE0b,EAAE,CAAC1b,CAAC,EAAEutC,EAAE,CAACvtC,CAAE,CACxC,CAAC;MAED,OAAOo3B,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA0nF,gBAAA,CAAAtiI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACyS,EAAE,CAAC5gB,IAAI,CAAEmO,MAAM,CAACyS,EAAG,CAAC;MACzB,IAAI,CAACpe,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MACzB,IAAI,CAAC6xB,EAAE,CAACt0B,IAAI,CAAEmO,MAAM,CAACmmB,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA1oC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA0nF,gBAAA,CAAAtiI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC4U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC/d,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACsoB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACzxB,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAA0nF,gBAAA,CAAAtiI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC16F,EAAE,CAACje,SAAS,CAAE24G,IAAI,CAAC16F,EAAG,CAAC;MAC5B,IAAI,CAACpe,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAC5B,IAAI,CAAC6xB,EAAE,CAAC3xB,SAAS,CAAE24G,IAAI,CAAChnF,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAgzF,gBAAA;AAAA,EArE6BzF,KAAK;AAAA,IAyE9B8F,iBAAiB,GAAAj7H,OAAA,CAAAi7H,iBAAA,0BAAAC,OAAA;EAAAz6G,SAAA,CAAAw6G,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAx6G,YAAA,CAAAs6G,iBAAA;EAEtB,SAAAA,kBAAa/mG,EAAE,GAAG,IAAInH,OAAO,CAAC,CAAC,EAAEjX,EAAE,GAAG,IAAIiX,OAAO,CAAC,CAAC,EAAEhX,EAAE,GAAG,IAAIgX,OAAO,CAAC,CAAC,EAAE6a,EAAE,GAAG,IAAI7a,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAquG,OAAA;IAAA18H,eAAA,OAAAu8H,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAAnhI,IAAA;IAEAohI,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKthI,IAAI,GAAG,mBAAmB;IAE/BshI,OAAA,CAAKlnG,EAAE,GAAGA,EAAE;IACZknG,OAAA,CAAKtlH,EAAE,GAAGA,EAAE;IACZslH,OAAA,CAAKrlH,EAAE,GAAGA,EAAE;IACZqlH,OAAA,CAAKxzF,EAAE,GAAGA,EAAE;IAAC,OAAAwzF,OAAA;EAEd;EAACj8H,YAAA,CAAA87H,iBAAA;IAAA/7H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAIxoG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG8jG,cAAc;MAE5B,IAAMrhG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEpe,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE6xB,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5DnW,KAAK,CAAC5f,GAAG,CACR8oH,WAAW,CAAExiI,CAAC,EAAE+7B,EAAE,CAACtlB,CAAC,EAAEkH,EAAE,CAAClH,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEg5B,EAAE,CAACh5B,CAAE,CAAC,EACxC+rH,WAAW,CAAExiI,CAAC,EAAE+7B,EAAE,CAAC75B,CAAC,EAAEyb,EAAE,CAACzb,CAAC,EAAE0b,EAAE,CAAC1b,CAAC,EAAEutC,EAAE,CAACvtC,CAAE,CAAC,EACxCsgI,WAAW,CAAExiI,CAAC,EAAE+7B,EAAE,CAAC7Q,CAAC,EAAEvN,EAAE,CAACuN,CAAC,EAAEtN,EAAE,CAACsN,CAAC,EAAEukB,EAAE,CAACvkB,CAAE,CACxC,CAAC;MAED,OAAOoO,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA+nF,iBAAA,CAAA3iI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACyS,EAAE,CAAC5gB,IAAI,CAAEmO,MAAM,CAACyS,EAAG,CAAC;MACzB,IAAI,CAACpe,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MACzB,IAAI,CAAC6xB,EAAE,CAACt0B,IAAI,CAAEmO,MAAM,CAACmmB,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA1oC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA+nF,iBAAA,CAAA3iI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC4U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC/d,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACsoB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACzxB,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAA+nF,iBAAA,CAAA3iI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC16F,EAAE,CAACje,SAAS,CAAE24G,IAAI,CAAC16F,EAAG,CAAC;MAC5B,IAAI,CAACpe,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAC5B,IAAI,CAAC6xB,EAAE,CAAC3xB,SAAS,CAAE24G,IAAI,CAAChnF,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAqzF,iBAAA;AAAA,EAtE8B9F,KAAK;AAAA,IA0E/BmG,SAAS,GAAAt7H,OAAA,CAAAs7H,SAAA,0BAAAC,OAAA;EAAA96G,SAAA,CAAA66G,SAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA76G,YAAA,CAAA26G,SAAA;EAEd,SAAAA,UAAaxlH,EAAE,GAAG,IAAInD,OAAO,CAAC,CAAC,EAAEoD,EAAE,GAAG,IAAIpD,OAAO,CAAC,CAAC,EAAG;IAAA,IAAA8oH,OAAA;IAAA/8H,eAAA,OAAA48H,SAAA;IAErDG,OAAA,GAAAD,QAAA,CAAAxhI,IAAA;IAEAyhI,OAAA,CAAKC,WAAW,GAAG,IAAI;IAEvBD,OAAA,CAAK3hI,IAAI,GAAG,WAAW;IAEvB2hI,OAAA,CAAK3lH,EAAE,GAAGA,EAAE;IACZ2lH,OAAA,CAAK1lH,EAAE,GAAGA,EAAE;IAAC,OAAA0lH,OAAA;EAEd;EAACt8H,YAAA,CAAAm8H,SAAA;IAAAp8H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAI5iH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM8e,KAAK,GAAG8jG,cAAc;MAE5B,IAAKp9H,CAAC,KAAK,CAAC,EAAG;QAEds5B,KAAK,CAACne,IAAI,CAAE,IAAI,CAACyC,EAAG,CAAC;MAEtB,CAAC,MAAM;QAEN0b,KAAK,CAACne,IAAI,CAAE,IAAI,CAACyC,EAAG,CAAC,CAACpC,GAAG,CAAE,IAAI,CAACmC,EAAG,CAAC;QACpC2b,KAAK,CAAC1d,cAAc,CAAE5b,CAAE,CAAC,CAACob,GAAG,CAAE,IAAI,CAACuC,EAAG,CAAC;MAEzC;MAEA,OAAO2b,KAAK;IAEb;;IAEA;EAAA;IAAAvyB,GAAA;IAAAvG,KAAA,EACA,SAAA28H,WAAYp8H,CAAC,EAAEq8H,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAEn8H,CAAC,EAAEq8H,cAAe,CAAC;IAE1C;EAAC;IAAAr2H,GAAA;IAAAvG,KAAA,EAED,SAAA+9H,WAAYv+H,CAAC,EAAEo9H,cAAc,GAAG,IAAI5iH,OAAO,CAAC,CAAC,EAAG;MAE/C,OAAO4iH,cAAc,CAAC1hH,UAAU,CAAE,IAAI,CAACkC,EAAE,EAAE,IAAI,CAACD,EAAG,CAAC,CAACtD,SAAS,CAAC,CAAC;IAEjE;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAAm+H,aAAc59H,CAAC,EAAEq8H,cAAc,EAAG;MAEjC,OAAO,IAAI,CAACmB,UAAU,CAAEx9H,CAAC,EAAEq8H,cAAe,CAAC;IAE5C;EAAC;IAAAr2H,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAooF,SAAA,CAAAhjI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC3L,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7W,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAooF,SAAA,CAAAhjI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAooF,SAAA,CAAAhjI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC94G,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAulH,SAAA;AAAA,EApFsBnG,KAAK;AAAA,IAwFvBwG,UAAU,GAAA37H,OAAA,CAAA27H,UAAA,0BAAAC,OAAA;EAAAn7G,SAAA,CAAAk7G,UAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAl7G,YAAA,CAAAg7G,UAAA;EAEf,SAAAA,WAAa7lH,EAAE,GAAG,IAAIiX,OAAO,CAAC,CAAC,EAAEhX,EAAE,GAAG,IAAIgX,OAAO,CAAC,CAAC,EAAG;IAAA,IAAA+uG,OAAA;IAAAp9H,eAAA,OAAAi9H,UAAA;IAErDG,OAAA,GAAAD,QAAA,CAAA7hI,IAAA;IAEA8hI,OAAA,CAAKC,YAAY,GAAG,IAAI;IAExBD,OAAA,CAAKhiI,IAAI,GAAG,YAAY;IAExBgiI,OAAA,CAAKhmH,EAAE,GAAGA,EAAE;IACZgmH,OAAA,CAAK/lH,EAAE,GAAGA,EAAE;IAAC,OAAA+lH,OAAA;EAEd;EAAC38H,YAAA,CAAAw8H,UAAA;IAAAz8H,GAAA;IAAAvG,KAAA,EACD,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAIxoG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG8jG,cAAc;MAE5B,IAAKp9H,CAAC,KAAK,CAAC,EAAG;QAEds5B,KAAK,CAACne,IAAI,CAAE,IAAI,CAACyC,EAAG,CAAC;MAEtB,CAAC,MAAM;QAEN0b,KAAK,CAACne,IAAI,CAAE,IAAI,CAACyC,EAAG,CAAC,CAACpC,GAAG,CAAE,IAAI,CAACmC,EAAG,CAAC;QACpC2b,KAAK,CAAC1d,cAAc,CAAE5b,CAAE,CAAC,CAACob,GAAG,CAAE,IAAI,CAACuC,EAAG,CAAC;MAEzC;MAEA,OAAO2b,KAAK;IAEb;IACA;EAAA;IAAAvyB,GAAA;IAAAvG,KAAA,EACA,SAAA28H,WAAYp8H,CAAC,EAAEq8H,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAEn8H,CAAC,EAAEq8H,cAAe,CAAC;IAE1C;EAAC;IAAAr2H,GAAA;IAAAvG,KAAA,EAED,SAAA+9H,WAAYv+H,CAAC,EAAEo9H,cAAc,GAAG,IAAIxoG,OAAO,CAAC,CAAC,EAAG;MAE/C,OAAOwoG,cAAc,CAAC1hH,UAAU,CAAE,IAAI,CAACkC,EAAE,EAAE,IAAI,CAACD,EAAG,CAAC,CAACtD,SAAS,CAAC,CAAC;IAEjE;EAAC;IAAAtT,GAAA;IAAAvG,KAAA,EAED,SAAAm+H,aAAc59H,CAAC,EAAEq8H,cAAc,EAAG;MAEjC,OAAO,IAAI,CAACmB,UAAU,CAAEx9H,CAAC,EAAEq8H,cAAe,CAAC;IAE5C;EAAC;IAAAr2H,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAyoF,UAAA,CAAArjI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC3L,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7W,GAAA;IAAAvG,KAAA,EACD,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAyoF,UAAA,CAAArjI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EACD,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAyoF,UAAA,CAAArjI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC94G,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA4lH,UAAA;AAAA,EAhFuBxG,KAAK;AAAA,IAoFxB6G,oBAAoB,GAAAh8H,OAAA,CAAAg8H,oBAAA,0BAAAC,OAAA;EAAAx7G,SAAA,CAAAu7G,oBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAv7G,YAAA,CAAAq7G,oBAAA;EAEzB,SAAAA,qBAAa9nG,EAAE,GAAG,IAAIvhB,OAAO,CAAC,CAAC,EAAEmD,EAAE,GAAG,IAAInD,OAAO,CAAC,CAAC,EAAEoD,EAAE,GAAG,IAAIpD,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAwpH,OAAA;IAAAz9H,eAAA,OAAAs9H,oBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAAliI,IAAA;IAEAmiI,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAKriI,IAAI,GAAG,sBAAsB;IAElCqiI,OAAA,CAAKjoG,EAAE,GAAGA,EAAE;IACZioG,OAAA,CAAKrmH,EAAE,GAAGA,EAAE;IACZqmH,OAAA,CAAKpmH,EAAE,GAAGA,EAAE;IAAC,OAAAomH,OAAA;EAEd;EAACh9H,YAAA,CAAA68H,oBAAA;IAAA98H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAI5iH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM8e,KAAK,GAAG8jG,cAAc;MAE5B,IAAMrhG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEpe,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9C0b,KAAK,CAAC5f,GAAG,CACRyoH,eAAe,CAAEniI,CAAC,EAAE+7B,EAAE,CAACtlB,CAAC,EAAEkH,EAAE,CAAClH,CAAC,EAAEmH,EAAE,CAACnH,CAAE,CAAC,EACtC0rH,eAAe,CAAEniI,CAAC,EAAE+7B,EAAE,CAAC75B,CAAC,EAAEyb,EAAE,CAACzb,CAAC,EAAE0b,EAAE,CAAC1b,CAAE,CACtC,CAAC;MAED,OAAOo3B,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA8oF,oBAAA,CAAA1jI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACyS,EAAE,CAAC5gB,IAAI,CAAEmO,MAAM,CAACyS,EAAG,CAAC;MACzB,IAAI,CAACpe,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7W,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA8oF,oBAAA,CAAA1jI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC4U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC/d,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAA8oF,oBAAA,CAAA1jI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC16F,EAAE,CAACje,SAAS,CAAE24G,IAAI,CAAC16F,EAAG,CAAC;MAC5B,IAAI,CAACpe,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAimH,oBAAA;AAAA,EAjEiC7G,KAAK;AAAA,IAqElCkH,qBAAqB,GAAAr8H,OAAA,CAAAq8H,qBAAA,0BAAAC,OAAA;EAAA77G,SAAA,CAAA47G,qBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA57G,YAAA,CAAA07G,qBAAA;EAE1B,SAAAA,sBAAanoG,EAAE,GAAG,IAAInH,OAAO,CAAC,CAAC,EAAEjX,EAAE,GAAG,IAAIiX,OAAO,CAAC,CAAC,EAAEhX,EAAE,GAAG,IAAIgX,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAyvG,OAAA;IAAA99H,eAAA,OAAA29H,qBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAAviI,IAAA;IAEAwiI,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IAEnCD,OAAA,CAAK1iI,IAAI,GAAG,uBAAuB;IAEnC0iI,OAAA,CAAKtoG,EAAE,GAAGA,EAAE;IACZsoG,OAAA,CAAK1mH,EAAE,GAAGA,EAAE;IACZ0mH,OAAA,CAAKzmH,EAAE,GAAGA,EAAE;IAAC,OAAAymH,OAAA;EAEd;EAACr9H,YAAA,CAAAk9H,qBAAA;IAAAn9H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAIxoG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG8jG,cAAc;MAE5B,IAAMrhG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEpe,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9C0b,KAAK,CAAC5f,GAAG,CACRyoH,eAAe,CAAEniI,CAAC,EAAE+7B,EAAE,CAACtlB,CAAC,EAAEkH,EAAE,CAAClH,CAAC,EAAEmH,EAAE,CAACnH,CAAE,CAAC,EACtC0rH,eAAe,CAAEniI,CAAC,EAAE+7B,EAAE,CAAC75B,CAAC,EAAEyb,EAAE,CAACzb,CAAC,EAAE0b,EAAE,CAAC1b,CAAE,CAAC,EACtCigI,eAAe,CAAEniI,CAAC,EAAE+7B,EAAE,CAAC7Q,CAAC,EAAEvN,EAAE,CAACuN,CAAC,EAAEtN,EAAE,CAACsN,CAAE,CACtC,CAAC;MAED,OAAOoO,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAmpF,qBAAA,CAAA/jI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACyS,EAAE,CAAC5gB,IAAI,CAAEmO,MAAM,CAACyS,EAAG,CAAC;MACzB,IAAI,CAACpe,EAAE,CAACxC,IAAI,CAAEmO,MAAM,CAAC3L,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAACzC,IAAI,CAAEmO,MAAM,CAAC1L,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7W,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAmpF,qBAAA,CAAA/jI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC4U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC/d,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACxJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BmJ,IAAI,CAACvJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAmpF,qBAAA,CAAA/jI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC16F,EAAE,CAACje,SAAS,CAAE24G,IAAI,CAAC16F,EAAG,CAAC;MAC5B,IAAI,CAACpe,EAAE,CAACG,SAAS,CAAE24G,IAAI,CAAC94G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE24G,IAAI,CAAC74G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAsmH,qBAAA;AAAA,EAlEkClH,KAAK;AAAA,IAsEnCuH,WAAW,GAAA18H,OAAA,CAAA08H,WAAA,0BAAAC,OAAA;EAAAl8G,SAAA,CAAAi8G,WAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAj8G,YAAA,CAAA+7G,WAAA;EAEhB,SAAAA,YAAa7rG,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAgsG,OAAA;IAAAn+H,eAAA,OAAAg+H,WAAA;IAE1BG,OAAA,GAAAD,QAAA,CAAA5iI,IAAA;IAEA6iI,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAK/iI,IAAI,GAAG,aAAa;IAEzB+iI,OAAA,CAAKhsG,MAAM,GAAGA,MAAM;IAAC,OAAAgsG,OAAA;EAEtB;EAAC19H,YAAA,CAAAu9H,WAAA;IAAAx9H,GAAA;IAAAvG,KAAA,EAED,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,GAAG,IAAI5iH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM8e,KAAK,GAAG8jG,cAAc;MAE5B,IAAM1kG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMr2B,CAAC,GAAG,CAAEq2B,MAAM,CAAC5zB,MAAM,GAAG,CAAC,IAAK9E,CAAC;MAEnC,IAAM8hI,QAAQ,GAAGtsH,IAAI,CAACmC,KAAK,CAAEtV,CAAE,CAAC;MAChC,IAAMi0E,MAAM,GAAGj0E,CAAC,GAAGy/H,QAAQ;MAE3B,IAAM5lG,EAAE,GAAGxD,MAAM,CAAEopG,QAAQ,KAAK,CAAC,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAE;MAC7D,IAAM3lG,EAAE,GAAGzD,MAAM,CAAEopG,QAAQ,CAAE;MAC7B,IAAM1lG,EAAE,GAAG1D,MAAM,CAAEopG,QAAQ,GAAGppG,MAAM,CAAC5zB,MAAM,GAAG,CAAC,GAAG4zB,MAAM,CAAC5zB,MAAM,GAAG,CAAC,GAAGg9H,QAAQ,GAAG,CAAC,CAAE;MACpF,IAAMrxF,EAAE,GAAG/X,MAAM,CAAEopG,QAAQ,GAAGppG,MAAM,CAAC5zB,MAAM,GAAG,CAAC,GAAG4zB,MAAM,CAAC5zB,MAAM,GAAG,CAAC,GAAGg9H,QAAQ,GAAG,CAAC,CAAE;MAEpFxoG,KAAK,CAAC5f,GAAG,CACRqoH,UAAU,CAAEzrD,MAAM,EAAEp6C,EAAE,CAACzlB,CAAC,EAAE0lB,EAAE,CAAC1lB,CAAC,EAAE2lB,EAAE,CAAC3lB,CAAC,EAAEg6B,EAAE,CAACh6B,CAAE,CAAC,EAC5CsrH,UAAU,CAAEzrD,MAAM,EAAEp6C,EAAE,CAACh6B,CAAC,EAAEi6B,EAAE,CAACj6B,CAAC,EAAEk6B,EAAE,CAACl6B,CAAC,EAAEuuC,EAAE,CAACvuC,CAAE,CAC5C,CAAC;MAED,OAAOo3B,KAAK;IAEb;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAwpF,WAAA,CAAApkI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACoP,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGunB,MAAM,CAACoP,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAExD,IAAM64B,KAAK,GAAGhQ,MAAM,CAACoP,MAAM,CAAEj4B,CAAC,CAAE;QAEhC,IAAI,CAACi4B,MAAM,CAACj0B,IAAI,CAAE60B,KAAK,CAACpe,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnU,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAwpF,WAAA,CAAApkI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACuR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC22B,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM64B,KAAK,GAAG,IAAI,CAACZ,MAAM,CAAEj4B,CAAC,CAAE;QAC9B0mB,IAAI,CAACuR,MAAM,CAACj0B,IAAI,CAAE60B,KAAK,CAACtb,OAAO,CAAC,CAAE,CAAC;MAEpC;MAEA,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAwpF,WAAA,CAAApkI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC/9F,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC/9F,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM64B,KAAK,GAAGm9F,IAAI,CAAC/9F,MAAM,CAAEj4B,CAAC,CAAE;QAC9B,IAAI,CAACi4B,MAAM,CAACj0B,IAAI,CAAE,IAAI+V,OAAO,CAAC,CAAC,CAACsD,SAAS,CAAEwb,KAAM,CAAE,CAAC;MAErD;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAirG,WAAA;AAAA,EAxFwBvH,KAAK;AA4F/B,IAAI4H,MAAM,GAAG,aAAa1kI,MAAM,CAAC2kI,MAAM,CAAC;EACvCx/H,SAAS,EAAE,IAAI;EACf+6H,QAAQ,EAAEA,QAAQ;EAClBoB,gBAAgB,EAAEA,gBAAgB;EAClCiB,gBAAgB,EAAEA,gBAAgB;EAClCK,iBAAiB,EAAEA,iBAAiB;EACpC1D,YAAY,EAAEA,YAAY;EAC1B+D,SAAS,EAAEA,SAAS;EACpBK,UAAU,EAAEA,UAAU;EACtBK,oBAAoB,EAAEA,oBAAoB;EAC1CK,qBAAqB,EAAEA,qBAAqB;EAC5CK,WAAW,EAAEA;AACd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AAHA,IAKMO,SAAS,GAAAj9H,OAAA,CAAAi9H,SAAA,0BAAAC,QAAA;EAAAz8G,SAAA,CAAAw8G,SAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAx8G,YAAA,CAAAs8G,SAAA;EAEd,SAAAA,UAAA,EAAc;IAAA,IAAAG,OAAA;IAAA1+H,eAAA,OAAAu+H,SAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAnjI,IAAA;IAEAojI,OAAA,CAAKtjI,IAAI,GAAG,WAAW;IAEvBsjI,OAAA,CAAKC,MAAM,GAAG,EAAE;IAChBD,OAAA,CAAKE,SAAS,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAF,OAAA;EAEzB;EAACj+H,YAAA,CAAA89H,SAAA;IAAA/9H,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAKgqH,KAAK,EAAG;MAEZ,IAAI,CAACF,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;IAE1B;EAAC;IAAAr+H,GAAA;IAAAvG,KAAA,EAED,SAAA6kI,UAAA,EAAY;MAEX;MACA,IAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAAE,CAAC,CAAE,CAAChI,QAAQ,CAAE,CAAE,CAAC;MACjD,IAAMqI,QAAQ,GAAG,IAAI,CAACL,MAAM,CAAE,IAAI,CAACA,MAAM,CAACpgI,MAAM,GAAG,CAAC,CAAE,CAACo4H,QAAQ,CAAE,CAAE,CAAC;MAEpE,IAAK,CAAEoI,UAAU,CAACznH,MAAM,CAAE0nH,QAAS,CAAC,EAAG;QAEtC,IAAMC,QAAQ,GAAKF,UAAU,CAAC5qH,SAAS,KAAK,IAAI,GAAK,WAAW,GAAG,YAAY;QAC/E,IAAI,CAACwqH,MAAM,CAACzgI,IAAI,CAAE,IAAImgI,MAAM,CAAEY,QAAQ,CAAE,CAAED,QAAQ,EAAED,UAAW,CAAE,CAAC;MAEnE;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA;IAAAv+H,GAAA;IAAAvG,KAAA,EAEA,SAAA08H,SAAUl9H,CAAC,EAAEo9H,cAAc,EAAG;MAE7B,IAAM96H,CAAC,GAAGtC,CAAC,GAAG,IAAI,CAACy9H,SAAS,CAAC,CAAC;MAC9B,IAAMgI,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;MAC3C,IAAIjlI,CAAC,GAAG,CAAC;;MAET;;MAEA,OAAQA,CAAC,GAAGglI,YAAY,CAAC3gI,MAAM,EAAG;QAEjC,IAAK2gI,YAAY,CAAEhlI,CAAC,CAAE,IAAI6B,CAAC,EAAG;UAE7B,IAAMqjI,IAAI,GAAGF,YAAY,CAAEhlI,CAAC,CAAE,GAAG6B,CAAC;UAClC,IAAM8iI,KAAK,GAAG,IAAI,CAACF,MAAM,CAAEzkI,CAAC,CAAE;UAE9B,IAAM49H,aAAa,GAAG+G,KAAK,CAAC3H,SAAS,CAAC,CAAC;UACvC,IAAM18H,CAAC,GAAGs9H,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGsH,IAAI,GAAGtH,aAAa;UAE5D,OAAO+G,KAAK,CAACjI,UAAU,CAAEp8H,CAAC,EAAEq8H,cAAe,CAAC;QAE7C;QAEA38H,CAAC,EAAG;MAEL;MAEA,OAAO,IAAI;;MAEX;IAED;;IAEA;IACA;IACA;EAAA;IAAAsG,GAAA;IAAAvG,KAAA,EAEA,SAAAi9H,UAAA,EAAY;MAEX,IAAMmI,IAAI,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;MACnC,OAAOE,IAAI,CAAEA,IAAI,CAAC9gI,MAAM,GAAG,CAAC,CAAE;IAE/B;;IAEA;EAAA;IAAAiC,GAAA;IAAAvG,KAAA,EACA,SAAAu9H,iBAAA,EAAmB;MAElB,IAAI,CAACvzG,WAAW,GAAG,IAAI;MACvB,IAAI,CAACq7G,YAAY,GAAG,IAAI;MACxB,IAAI,CAACH,eAAe,CAAC,CAAC;IAEvB;;IAEA;IACA;EAAA;IAAA3+H,GAAA;IAAAvG,KAAA,EAEA,SAAAklI,gBAAA,EAAkB;MAEjB;;MAEA,IAAK,IAAI,CAACG,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC/gI,MAAM,KAAK,IAAI,CAACogI,MAAM,CAACpgI,MAAM,EAAG;QAE3E,OAAO,IAAI,CAAC+gI,YAAY;MAEzB;;MAEA;MACA;;MAEA,IAAMnI,OAAO,GAAG,EAAE;MAClB,IAAIoI,IAAI,GAAG,CAAC;MAEZ,KAAM,IAAIrlI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACmjI,MAAM,CAACpgI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtDqlI,IAAI,IAAI,IAAI,CAACZ,MAAM,CAAEzkI,CAAC,CAAE,CAACg9H,SAAS,CAAC,CAAC;QACpCC,OAAO,CAACj5H,IAAI,CAAEqhI,IAAK,CAAC;MAErB;MAEA,IAAI,CAACD,YAAY,GAAGnI,OAAO;MAE3B,OAAOA,OAAO;IAEf;EAAC;IAAA32H,GAAA;IAAAvG,KAAA,EAED,SAAAg9H,gBAAiBD,SAAS,GAAG,EAAE,EAAG;MAEjC,IAAM7kG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIj4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI88H,SAAS,EAAE98H,CAAC,EAAG,EAAG;QAEvCi4B,MAAM,CAACj0B,IAAI,CAAE,IAAI,CAACy4H,QAAQ,CAAEz8H,CAAC,GAAG88H,SAAU,CAAE,CAAC;MAE9C;MAEA,IAAK,IAAI,CAAC4H,SAAS,EAAG;QAErBzsG,MAAM,CAACj0B,IAAI,CAAEi0B,MAAM,CAAE,CAAC,CAAG,CAAC;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA3xB,GAAA;IAAAvG,KAAA,EAED,SAAA88H,UAAWC,SAAS,GAAG,EAAE,EAAG;MAE3B,IAAM7kG,MAAM,GAAG,EAAE;MACjB,IAAIolG,IAAI;MAER,KAAM,IAAIr9H,CAAC,GAAG,CAAC,EAAEykI,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEzkI,CAAC,GAAGykI,MAAM,CAACpgI,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEhE,IAAM2kI,KAAK,GAAGF,MAAM,CAAEzkI,CAAC,CAAE;QACzB,IAAMq6F,UAAU,GAAGsqC,KAAK,CAACpF,cAAc,GAAGzC,SAAS,GAAG,CAAC,GAClD6H,KAAK,CAAC7B,WAAW,IAAI6B,KAAK,CAACxB,YAAY,GAAK,CAAC,GAC9CwB,KAAK,CAACT,aAAa,GAAGpH,SAAS,GAAG6H,KAAK,CAAC1sG,MAAM,CAAC5zB,MAAM,GACpDy4H,SAAS;QAEd,IAAMwI,GAAG,GAAGX,KAAK,CAAC9H,SAAS,CAAExiC,UAAW,CAAC;QAEzC,KAAM,IAAI7+D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8pG,GAAG,CAACjhI,MAAM,EAAEm3B,CAAC,EAAG,EAAG;UAEvC,IAAM3C,KAAK,GAAGysG,GAAG,CAAE9pG,CAAC,CAAE;UAEtB,IAAK6hG,IAAI,IAAIA,IAAI,CAACjgH,MAAM,CAAEyb,KAAM,CAAC,EAAG,SAAS,CAAC;;UAE9CZ,MAAM,CAACj0B,IAAI,CAAE60B,KAAM,CAAC;UACpBwkG,IAAI,GAAGxkG,KAAK;QAEb;MAED;MAEA,IAAK,IAAI,CAAC6rG,SAAS,IAAIzsG,MAAM,CAAC5zB,MAAM,GAAG,CAAC,IAAI,CAAE4zB,MAAM,CAAEA,MAAM,CAAC5zB,MAAM,GAAG,CAAC,CAAE,CAAC+Y,MAAM,CAAE6a,MAAM,CAAE,CAAC,CAAG,CAAC,EAAG;QAEjGA,MAAM,CAACj0B,IAAI,CAAEi0B,MAAM,CAAE,CAAC,CAAG,CAAC;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA3xB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA+pF,SAAA,CAAA3kI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC47G,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIzkI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGunB,MAAM,CAAC47G,MAAM,CAACpgI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAExD,IAAM2kI,KAAK,GAAG97G,MAAM,CAAC47G,MAAM,CAAEzkI,CAAC,CAAE;QAEhC,IAAI,CAACykI,MAAM,CAACzgI,IAAI,CAAE2gI,KAAK,CAAClqH,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,IAAI,CAACiqH,SAAS,GAAG77G,MAAM,CAAC67G,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAp+H,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA+pF,SAAA,CAAA3kI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACg+G,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/Bh+G,IAAI,CAAC+9G,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIzkI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACmjI,MAAM,CAACpgI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM2kI,KAAK,GAAG,IAAI,CAACF,MAAM,CAAEzkI,CAAC,CAAE;QAC9B0mB,IAAI,CAAC+9G,MAAM,CAACzgI,IAAI,CAAE2gI,KAAK,CAAC59G,MAAM,CAAC,CAAE,CAAC;MAEnC;MAEA,OAAOL,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAA+pF,SAAA,CAAA3kI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC0O,SAAS,GAAG1O,IAAI,CAAC0O,SAAS;MAC/B,IAAI,CAACD,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIzkI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAACyO,MAAM,CAACpgI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEtD,IAAM2kI,KAAK,GAAG3O,IAAI,CAACyO,MAAM,CAAEzkI,CAAC,CAAE;QAC9B,IAAI,CAACykI,MAAM,CAACzgI,IAAI,CAAE,IAAImgI,MAAM,CAAEQ,KAAK,CAACzjI,IAAI,CAAE,CAAC,CAAC,CAACumD,QAAQ,CAAEk9E,KAAM,CAAE,CAAC;MAEjE;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAN,SAAA;AAAA,EAjPsB9H,KAAK;AAAA,IAqPvBgJ,IAAI,GAAAn+H,OAAA,CAAAm+H,IAAA,0BAAAC,UAAA;EAAA39G,SAAA,CAAA09G,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA19G,YAAA,CAAAw9G,IAAA;EAET,SAAAA,KAAattG,MAAM,EAAG;IAAA,IAAAytG,OAAA;IAAA5/H,eAAA,OAAAy/H,IAAA;IAErBG,OAAA,GAAAD,QAAA,CAAArkI,IAAA;IAEAskI,OAAA,CAAKxkI,IAAI,GAAG,MAAM;IAElBwkI,OAAA,CAAKC,YAAY,GAAG,IAAI5rH,OAAO,CAAC,CAAC;IAEjC,IAAKke,MAAM,EAAG;MAEbytG,OAAA,CAAK1tG,aAAa,CAAEC,MAAO,CAAC;IAE7B;IAAC,OAAAytG,OAAA;EAEF;EAACn/H,YAAA,CAAAg/H,IAAA;IAAAj/H,GAAA;IAAAvG,KAAA,EAED,SAAAi4B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAAC2tG,MAAM,CAAE3tG,MAAM,CAAE,CAAC,CAAE,CAACjiB,CAAC,EAAEiiB,MAAM,CAAE,CAAC,CAAE,CAACx2B,CAAE,CAAC;MAE3C,KAAM,IAAIzB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG22B,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,IAAI,CAAC6lI,MAAM,CAAE5tG,MAAM,CAAEj4B,CAAC,CAAE,CAACgW,CAAC,EAAEiiB,MAAM,CAAEj4B,CAAC,CAAE,CAACyB,CAAE,CAAC;MAE5C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA6lI,OAAQ5vH,CAAC,EAAEvU,CAAC,EAAG;MAEd,IAAI,CAACkkI,YAAY,CAAC1sH,GAAG,CAAEjD,CAAC,EAAEvU,CAAE,CAAC,CAAC,CAAC;;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA8lI,OAAQ7vH,CAAC,EAAEvU,CAAC,EAAG;MAEd,IAAMkjI,KAAK,GAAG,IAAIjC,SAAS,CAAE,IAAI,CAACiD,YAAY,CAAClrH,KAAK,CAAC,CAAC,EAAE,IAAIV,OAAO,CAAE/D,CAAC,EAAEvU,CAAE,CAAE,CAAC;MAC7E,IAAI,CAACgjI,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;MAEzB,IAAI,CAACgB,YAAY,CAAC1sH,GAAG,CAAEjD,CAAC,EAAEvU,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA+lI,iBAAkBC,IAAI,EAAEC,IAAI,EAAElH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAM4F,KAAK,GAAG,IAAIvB,oBAAoB,CACrC,IAAI,CAACuC,YAAY,CAAClrH,KAAK,CAAC,CAAC,EACzB,IAAIV,OAAO,CAAEgsH,IAAI,EAAEC,IAAK,CAAC,EACzB,IAAIjsH,OAAO,CAAE+kH,EAAE,EAAEC,EAAG,CACrB,CAAC;MAED,IAAI,CAAC0F,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;MAEzB,IAAI,CAACgB,YAAY,CAAC1sH,GAAG,CAAE6lH,EAAE,EAAEC,EAAG,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAz4H,GAAA;IAAAvG,KAAA,EAED,SAAAkmI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEvH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAM4F,KAAK,GAAG,IAAI3C,gBAAgB,CACjC,IAAI,CAAC2D,YAAY,CAAClrH,KAAK,CAAC,CAAC,EACzB,IAAIV,OAAO,CAAEmsH,KAAK,EAAEC,KAAM,CAAC,EAC3B,IAAIpsH,OAAO,CAAEqsH,KAAK,EAAEC,KAAM,CAAC,EAC3B,IAAItsH,OAAO,CAAE+kH,EAAE,EAAEC,EAAG,CACrB,CAAC;MAED,IAAI,CAAC0F,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;MAEzB,IAAI,CAACgB,YAAY,CAAC1sH,GAAG,CAAE6lH,EAAE,EAAEC,EAAG,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAz4H,GAAA;IAAAvG,KAAA,EAED,SAAAumI,WAAYhB,GAAG,CAAC,qBAAsB;MAErC,IAAMiB,IAAI,GAAG,CAAE,IAAI,CAACZ,YAAY,CAAClrH,KAAK,CAAC,CAAC,CAAE,CAACiK,MAAM,CAAE4gH,GAAI,CAAC;MAExD,IAAMX,KAAK,GAAG,IAAIb,WAAW,CAAEyC,IAAK,CAAC;MACrC,IAAI,CAAC9B,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;MAEzB,IAAI,CAACgB,YAAY,CAACjrH,IAAI,CAAE4qH,GAAG,CAAEA,GAAG,CAACjhI,MAAM,GAAG,CAAC,CAAG,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAiC,GAAA;IAAAvG,KAAA,EAED,SAAAymI,IAAK1H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE1D,IAAM9rG,EAAE,GAAG,IAAI,CAACqyG,YAAY,CAAC3vH,CAAC;MAC9B,IAAMud,EAAE,GAAG,IAAI,CAACoyG,YAAY,CAAClkI,CAAC;MAE9B,IAAI,CAACglI,MAAM,CAAE3H,EAAE,GAAGxrG,EAAE,EAAEyrG,EAAE,GAAGxrG,EAAE,EAAEusG,OAAO,EACrCZ,WAAW,EAAEC,SAAS,EAAEC,UAAW,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA94H,GAAA;IAAAvG,KAAA,EAED,SAAA0mI,OAAQ3H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE7D,IAAI,CAACsH,UAAU,CAAE5H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAW,CAAC;MAE/E,OAAO,IAAI;IAEZ;EAAC;IAAA94H,GAAA;IAAAvG,KAAA,EAED,SAAA4mI,QAAS7H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAElF,IAAM/rG,EAAE,GAAG,IAAI,CAACqyG,YAAY,CAAC3vH,CAAC;MAC9B,IAAMud,EAAE,GAAG,IAAI,CAACoyG,YAAY,CAAClkI,CAAC;MAE9B,IAAI,CAACilI,UAAU,CAAE5H,EAAE,GAAGxrG,EAAE,EAAEyrG,EAAE,GAAGxrG,EAAE,EAAEyrG,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAU,CAAC;MAEpG,OAAO,IAAI;IAEZ;EAAC;IAAA/4H,GAAA;IAAAvG,KAAA,EAED,SAAA2mI,WAAY5H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAErF,IAAMsF,KAAK,GAAG,IAAIhG,YAAY,CAAEG,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAU,CAAC;MAEzG,IAAK,IAAI,CAACoF,MAAM,CAACpgI,MAAM,GAAG,CAAC,EAAG;QAE7B;QACA,IAAMuiI,UAAU,GAAGjC,KAAK,CAAClI,QAAQ,CAAE,CAAE,CAAC;QAEtC,IAAK,CAAEmK,UAAU,CAACxpH,MAAM,CAAE,IAAI,CAACuoH,YAAa,CAAC,EAAG;UAE/C,IAAI,CAACE,MAAM,CAAEe,UAAU,CAAC5wH,CAAC,EAAE4wH,UAAU,CAACnlI,CAAE,CAAC;QAE1C;MAED;MAEA,IAAI,CAACgjI,MAAM,CAACzgI,IAAI,CAAE2gI,KAAM,CAAC;MAEzB,IAAMkC,SAAS,GAAGlC,KAAK,CAAClI,QAAQ,CAAE,CAAE,CAAC;MACrC,IAAI,CAACkJ,YAAY,CAACjrH,IAAI,CAAEmsH,SAAU,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAvgI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAirF,IAAA,CAAA7lI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC88G,YAAY,CAACjrH,IAAI,CAAEmO,MAAM,CAAC88G,YAAa,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAr/H,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAirF,IAAA,CAAA7lI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACi/G,YAAY,GAAG,IAAI,CAACA,YAAY,CAACpoH,OAAO,CAAC,CAAC;MAE/C,OAAOmJ,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAirF,IAAA,CAAA7lI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAAC2P,YAAY,CAACtoH,SAAS,CAAE24G,IAAI,CAAC2P,YAAa,CAAC;MAEhD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAJ,IAAA;AAAA,EAtLiBlB,SAAS;AAAA,IA0LtByC,aAAa,GAAA1/H,OAAA,CAAA0/H,aAAA,0BAAAC,gBAAA;EAAAl/G,SAAA,CAAAi/G,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAj/G,YAAA,CAAA++G,aAAA;EAElB,SAAAA,cAAa7uG,MAAM,GAAG,CAAE,IAAIle,OAAO,CAAE,CAAC,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,GAAI,CAAC,CAAE,EAAEqkH,QAAQ,GAAG,EAAE,EAAE6I,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGnyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAmyH,OAAA;IAAArhI,eAAA,OAAAghI,aAAA;IAEvJK,OAAA,GAAAH,QAAA,CAAA5lI,IAAA;IAEA+lI,OAAA,CAAKjmI,IAAI,GAAG,eAAe;IAE3BimI,OAAA,CAAK36F,UAAU,GAAG;MACjBvU,MAAM,EAAEA,MAAM;MACdmmG,QAAQ,EAAEA,QAAQ;MAClB6I,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA;IACZ,CAAC;IAED9I,QAAQ,GAAGrpH,IAAI,CAACmC,KAAK,CAAEknH,QAAS,CAAC;;IAEjC;;IAEA8I,SAAS,GAAGxxH,KAAK,CAAEwxH,SAAS,EAAE,CAAC,EAAEnyH,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;;IAE9C;;IAEA,IAAM4rC,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAMzF,GAAG,GAAG,EAAE;IACd,IAAMqmF,WAAW,GAAG,EAAE;IACtB,IAAMtmF,OAAO,GAAG,EAAE;;IAElB;;IAEA,IAAMumF,eAAe,GAAG,GAAG,GAAGjJ,QAAQ;IACtC,IAAMhlC,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAItQ,OAAO,CAAC,CAAC;IACxB,IAAMyc,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAC5B,IAAMmzG,SAAS,GAAG,IAAInzG,OAAO,CAAC,CAAC;IAC/B,IAAMozG,UAAU,GAAG,IAAIpzG,OAAO,CAAC,CAAC;IAChC,IAAIvX,EAAE,GAAG,CAAC;IACV,IAAIC,EAAE,GAAG,CAAC;;IAEV;;IAEA,KAAM,IAAI2e,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAMvD,MAAM,CAAC5zB,MAAM,GAAG,CAAG,EAAEm3B,CAAC,EAAG,EAAG;MAEnD,QAASA,CAAC;QAET,KAAK,CAAC;UAAK;;UAEV5e,EAAE,GAAGqb,MAAM,CAAEuD,CAAC,GAAG,CAAC,CAAE,CAACxlB,CAAC,GAAGiiB,MAAM,CAAEuD,CAAC,CAAE,CAACxlB,CAAC;UACtC6G,EAAE,GAAGob,MAAM,CAAEuD,CAAC,GAAG,CAAC,CAAE,CAAC/5B,CAAC,GAAGw2B,MAAM,CAAEuD,CAAC,CAAE,CAAC/5B,CAAC;UAEtC+0B,MAAM,CAACxgB,CAAC,GAAG6G,EAAE,GAAG,GAAG;UACnB2Z,MAAM,CAAC/0B,CAAC,GAAG,CAAEmb,EAAE;UACf4Z,MAAM,CAAC/L,CAAC,GAAG5N,EAAE,GAAG,GAAG;UAEnB0qH,UAAU,CAAC7sH,IAAI,CAAE8b,MAAO,CAAC;UAEzBA,MAAM,CAAC5c,SAAS,CAAC,CAAC;UAElBwtH,WAAW,CAACpjI,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;UAEhD;QAED,KAAOwN,MAAM,CAAC5zB,MAAM,GAAG,CAAC;UAAI;;UAE3B+iI,WAAW,CAACpjI,IAAI,CAAEujI,UAAU,CAACvxH,CAAC,EAAEuxH,UAAU,CAAC9lI,CAAC,EAAE8lI,UAAU,CAAC98G,CAAE,CAAC;UAE5D;QAED;UAAW;;UAEV7N,EAAE,GAAGqb,MAAM,CAAEuD,CAAC,GAAG,CAAC,CAAE,CAACxlB,CAAC,GAAGiiB,MAAM,CAAEuD,CAAC,CAAE,CAACxlB,CAAC;UACtC6G,EAAE,GAAGob,MAAM,CAAEuD,CAAC,GAAG,CAAC,CAAE,CAAC/5B,CAAC,GAAGw2B,MAAM,CAAEuD,CAAC,CAAE,CAAC/5B,CAAC;UAEtC+0B,MAAM,CAACxgB,CAAC,GAAG6G,EAAE,GAAG,GAAG;UACnB2Z,MAAM,CAAC/0B,CAAC,GAAG,CAAEmb,EAAE;UACf4Z,MAAM,CAAC/L,CAAC,GAAG5N,EAAE,GAAG,GAAG;UAEnByqH,SAAS,CAAC5sH,IAAI,CAAE8b,MAAO,CAAC;UAExBA,MAAM,CAACxgB,CAAC,IAAIuxH,UAAU,CAACvxH,CAAC;UACxBwgB,MAAM,CAAC/0B,CAAC,IAAI8lI,UAAU,CAAC9lI,CAAC;UACxB+0B,MAAM,CAAC/L,CAAC,IAAI88G,UAAU,CAAC98G,CAAC;UAExB+L,MAAM,CAAC5c,SAAS,CAAC,CAAC;UAElBwtH,WAAW,CAACpjI,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;UAEhD88G,UAAU,CAAC7sH,IAAI,CAAE4sH,SAAU,CAAC;MAE9B;IAED;;IAEA;;IAEA,KAAM,IAAItnI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIo+H,QAAQ,EAAEp+H,CAAC,EAAG,EAAG;MAEtC,IAAM62B,GAAG,GAAGowG,QAAQ,GAAGjnI,CAAC,GAAGqnI,eAAe,GAAGH,SAAS;MAEtD,IAAM1uH,GAAG,GAAGzD,IAAI,CAACyD,GAAG,CAAEqe,GAAI,CAAC;MAC3B,IAAMte,GAAG,GAAGxD,IAAI,CAACwD,GAAG,CAAEse,GAAI,CAAC;MAE3B,KAAM,IAAI2E,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAMvD,MAAM,CAAC5zB,MAAM,GAAG,CAAG,EAAEm3B,GAAC,EAAG,EAAG;QAEnD;;QAEA49D,MAAM,CAACpjF,CAAC,GAAGiiB,MAAM,CAAEuD,GAAC,CAAE,CAACxlB,CAAC,GAAGwC,GAAG;QAC9B4gF,MAAM,CAAC33F,CAAC,GAAGw2B,MAAM,CAAEuD,GAAC,CAAE,CAAC/5B,CAAC;QACxB23F,MAAM,CAAC3uE,CAAC,GAAGwN,MAAM,CAAEuD,GAAC,CAAE,CAACxlB,CAAC,GAAGuC,GAAG;QAE9BiuC,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEAJ,EAAE,CAACrU,CAAC,GAAGhW,CAAC,GAAGo+H,QAAQ;QACnB/zG,EAAE,CAAC5oB,CAAC,GAAG+5B,GAAC,IAAKvD,MAAM,CAAC5zB,MAAM,GAAG,CAAC,CAAE;QAEhC08C,GAAG,CAAC/8C,IAAI,CAAEqmB,EAAE,CAACrU,CAAC,EAAEqU,EAAE,CAAC5oB,CAAE,CAAC;;QAEtB;;QAEA,IAAMuU,CAAC,GAAGoxH,WAAW,CAAE,CAAC,GAAG5rG,GAAC,GAAG,CAAC,CAAE,GAAGhjB,GAAG;QACxC,IAAM/W,CAAC,GAAG2lI,WAAW,CAAE,CAAC,GAAG5rG,GAAC,GAAG,CAAC,CAAE;QAClC,IAAM/Q,CAAC,GAAG28G,WAAW,CAAE,CAAC,GAAG5rG,GAAC,GAAG,CAAC,CAAE,GAAGjjB,GAAG;QAExCuoC,OAAO,CAAC98C,IAAI,CAAEgS,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEA,KAAM,IAAIzqB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGo+H,QAAQ,EAAEp+H,IAAC,EAAG,EAAG;MAErC,KAAM,IAAIw7B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAKvD,MAAM,CAAC5zB,MAAM,GAAG,CAAG,EAAEm3B,GAAC,EAAG,EAAG;QAElD,IAAMgsG,IAAI,GAAGhsG,GAAC,GAAGx7B,IAAC,GAAGi4B,MAAM,CAAC5zB,MAAM;QAElC,IAAMnE,CAAC,GAAGsnI,IAAI;QACd,IAAMnvH,CAAC,GAAGmvH,IAAI,GAAGvvG,MAAM,CAAC5zB,MAAM;QAC9B,IAAMjE,CAAC,GAAGonI,IAAI,GAAGvvG,MAAM,CAAC5zB,MAAM,GAAG,CAAC;QAClC,IAAMxC,CAAC,GAAG2lI,IAAI,GAAG,CAAC;;QAElB;;QAEA5mF,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACvB++C,OAAO,CAAC58C,IAAI,CAAE5D,CAAC,EAAEyB,CAAC,EAAEwW,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEA8uH,OAAA,CAAKvnF,QAAQ,CAAEgB,OAAQ,CAAC;IACxBumF,OAAA,CAAKrnF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E2gF,OAAA,CAAKrnF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAC/DomF,OAAA,CAAKrnF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAqmF,OAAA;EAEzE;EAAC5gI,YAAA,CAAAugI,aAAA;IAAAxgI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAwsF,aAAA,CAAApnI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIogH,aAAa,CAAEpgH,IAAI,CAACuR,MAAM,EAAEvR,IAAI,CAAC03G,QAAQ,EAAE13G,IAAI,CAACugH,QAAQ,EAAEvgH,IAAI,CAACwgH,SAAU,CAAC;IAEtF;EAAC;EAAA,OAAAJ,aAAA;AAAA,EAjL0B9nF,cAAc;AAAA,IAqLpCyoF,eAAe,GAAArgI,OAAA,CAAAqgI,eAAA,0BAAAC,cAAA;EAAA7/G,SAAA,CAAA4/G,eAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAA5/G,YAAA,CAAA0/G,eAAA;EAEpB,SAAAA,gBAAa7wG,MAAM,GAAG,CAAC,EAAEvyB,MAAM,GAAG,CAAC,EAAEujI,WAAW,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAhiI,eAAA,OAAA2hI,eAAA;IAE1E,IAAMtmD,IAAI,GAAG,IAAIokD,IAAI,CAAC,CAAC;IACvBpkD,IAAI,CAACslD,MAAM,CAAE,CAAC,EAAE,CAAEpiI,MAAM,GAAG,CAAC,EAAEuyB,MAAM,EAAE7hB,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC;IACxDmsE,IAAI,CAACslD,MAAM,CAAE,CAAC,EAAEpiI,MAAM,GAAG,CAAC,EAAEuyB,MAAM,EAAE,CAAC,EAAE7hB,IAAI,CAACC,EAAE,GAAG,GAAI,CAAC;IAEtD8yH,OAAA,GAAAH,QAAA,CAAAvmI,IAAA,OAAO+/E,IAAI,CAAC07C,SAAS,CAAE+K,WAAY,CAAC,EAAEC,cAAc;IAEpDC,OAAA,CAAK5mI,IAAI,GAAG,iBAAiB;IAE7B4mI,OAAA,CAAKt7F,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdvyB,MAAM,EAAEA,MAAM;MACdujI,WAAW,EAAEA,WAAW;MACxBC,cAAc,EAAEA;IACjB,CAAC;IAAC,OAAAC,OAAA;EAEH;EAACvhI,YAAA,CAAAkhI,eAAA;IAAAnhI,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI+gH,eAAe,CAAE/gH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACriB,MAAM,EAAEqiB,IAAI,CAACkhH,WAAW,EAAElhH,IAAI,CAACmhH,cAAe,CAAC;IAE9F;EAAC;EAAA,OAAAJ,eAAA;AAAA,EAzB4BX,aAAa;AAAA,IA6BrCiB,cAAc,GAAA3gI,OAAA,CAAA2gI,cAAA,0BAAAC,gBAAA;EAAAngH,SAAA,CAAAkgH,cAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAlgH,YAAA,CAAAggH,cAAA;EAEnB,SAAAA,eAAanxG,MAAM,GAAG,CAAC,EAAEwnG,QAAQ,GAAG,EAAE,EAAE8J,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGpzH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAozH,OAAA;IAAAtiI,eAAA,OAAAiiI,cAAA;IAEnFK,OAAA,GAAAH,QAAA,CAAA7mI,IAAA;IAEAgnI,OAAA,CAAKlnI,IAAI,GAAG,gBAAgB;IAE5BknI,OAAA,CAAK57F,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdwnG,QAAQ,EAAEA,QAAQ;MAClB8J,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED/J,QAAQ,GAAGrpH,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEwoH,QAAS,CAAC;;IAElC;;IAEA,IAAMx9E,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMq4C,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAItQ,OAAO,CAAC,CAAC;;IAExB;;IAEAysC,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACxB88C,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACvB+8C,GAAG,CAAC/8C,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;IAEpB,KAAM,IAAIxC,CAAC,GAAG,CAAC,EAAExB,CAAC,GAAG,CAAC,EAAEwB,CAAC,IAAI48H,QAAQ,EAAE58H,CAAC,EAAG,EAAExB,CAAC,IAAI,CAAC,EAAG;MAErD,IAAMqoI,OAAO,GAAGH,UAAU,GAAG1mI,CAAC,GAAG48H,QAAQ,GAAG+J,WAAW;;MAEvD;;MAEA/uC,MAAM,CAACpjF,CAAC,GAAG4gB,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAE8vH,OAAQ,CAAC;MACvCjvC,MAAM,CAAC33F,CAAC,GAAGm1B,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAE6vH,OAAQ,CAAC;MAEvC7hF,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;MAE7C;;MAEAq2B,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;MAEvB;;MAEAqmB,EAAE,CAACrU,CAAC,GAAG,CAAEwwC,QAAQ,CAAExmD,CAAC,CAAE,GAAG42B,MAAM,GAAG,CAAC,IAAK,CAAC;MACzCvM,EAAE,CAAC5oB,CAAC,GAAG,CAAE+kD,QAAQ,CAAExmD,CAAC,GAAG,CAAC,CAAE,GAAG42B,MAAM,GAAG,CAAC,IAAK,CAAC;MAE7CmqB,GAAG,CAAC/8C,IAAI,CAAEqmB,EAAE,CAACrU,CAAC,EAAEqU,EAAE,CAAC5oB,CAAE,CAAC;IAEvB;;IAEA;;IAEA,KAAM,IAAIzB,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIo+H,QAAQ,EAAEp+H,IAAC,EAAG,EAAG;MAEtC4gD,OAAO,CAAC58C,IAAI,CAAEhE,IAAC,EAAEA,IAAC,GAAG,CAAC,EAAE,CAAE,CAAC;IAE5B;;IAEA;;IAEAooI,OAAA,CAAKxoF,QAAQ,CAAEgB,OAAQ,CAAC;IACxBwnF,OAAA,CAAKtoF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E4hF,OAAA,CAAKtoF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEsnF,OAAA,CAAKtoF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAqnF,OAAA;EAEjE;EAAC7hI,YAAA,CAAAwhI,cAAA;IAAAzhI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAytF,cAAA,CAAAroI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIqhH,cAAc,CAAErhH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAAC03G,QAAQ,EAAE13G,IAAI,CAACwhH,UAAU,EAAExhH,IAAI,CAACyhH,WAAY,CAAC;IAE3F;EAAC;EAAA,OAAAJ,cAAA;AAAA,EA1F2B/oF,cAAc;AAAA,IA8FrCspF,gBAAgB,GAAAlhI,OAAA,CAAAkhI,gBAAA,0BAAAC,gBAAA;EAAA1gH,SAAA,CAAAygH,gBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAzgH,YAAA,CAAAugH,gBAAA;EAErB,SAAAA,iBAAaG,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAE5iH,MAAM,GAAG,CAAC,EAAE+hH,cAAc,GAAG,EAAE,EAAEzhF,cAAc,GAAG,CAAC,EAAEuiF,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGpzH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA4zH,OAAA;IAAA9iI,eAAA,OAAAwiI,gBAAA;IAEjKM,OAAA,GAAAJ,QAAA,CAAApnI,IAAA;IAEAwnI,OAAA,CAAK1nI,IAAI,GAAG,kBAAkB;IAE9B0nI,OAAA,CAAKp8F,UAAU,GAAG;MACjBi8F,SAAS,EAAEA,SAAS;MACpBC,YAAY,EAAEA,YAAY;MAC1B5iH,MAAM,EAAEA,MAAM;MACd+hH,cAAc,EAAEA,cAAc;MAC9BzhF,cAAc,EAAEA,cAAc;MAC9BuiF,SAAS,EAAEA,SAAS;MACpBT,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED,IAAM5hF,KAAK,GAAA39B,sBAAA,CAAAggH,OAAA,CAAO;IAElBf,cAAc,GAAG9yH,IAAI,CAACmC,KAAK,CAAE2wH,cAAe,CAAC;IAC7CzhF,cAAc,GAAGrxC,IAAI,CAACmC,KAAK,CAAEkvC,cAAe,CAAC;;IAE7C;;IAEA,IAAMxF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAIxsC,KAAK,GAAG,CAAC;IACb,IAAMs0H,UAAU,GAAG,EAAE;IACrB,IAAM/zC,UAAU,GAAGhvE,MAAM,GAAG,CAAC;IAC7B,IAAI4gC,UAAU,GAAG,CAAC;;IAElB;;IAEAoiF,aAAa,CAAC,CAAC;IAEf,IAAKH,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAKF,SAAS,GAAG,CAAC,EAAGM,WAAW,CAAE,IAAK,CAAC;MACxC,IAAKL,YAAY,GAAG,CAAC,EAAGK,WAAW,CAAE,KAAM,CAAC;IAE7C;;IAEA;;IAEAH,OAAA,CAAKhpF,QAAQ,CAAEgB,OAAQ,CAAC;IACxBgoF,OAAA,CAAK9oF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EoiF,OAAA,CAAK9oF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvE8nF,OAAA,CAAK9oF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAE/D,SAAS+nF,aAAaA,CAAA,EAAG;MAExB,IAAMtyG,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;MAC5B,IAAMilE,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;MAE5B,IAAIqzB,UAAU,GAAG,CAAC;;MAElB;MACA,IAAMwhF,KAAK,GAAG,CAAEN,YAAY,GAAGD,SAAS,IAAK3iH,MAAM;;MAEnD;;MAEA,KAAM,IAAIrkB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI2kD,cAAc,EAAE3kD,CAAC,EAAG,EAAG;QAE5C,IAAMwnI,QAAQ,GAAG,EAAE;QAEnB,IAAMlnI,CAAC,GAAGN,CAAC,GAAG2kD,cAAc;;QAE5B;;QAEA,IAAMxvB,MAAM,GAAG70B,CAAC,IAAK2mI,YAAY,GAAGD,SAAS,CAAE,GAAGA,SAAS;QAE3D,KAAM,IAAIzyH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6xH,cAAc,EAAE7xH,CAAC,EAAG,EAAG;UAE5C,IAAM1V,CAAC,GAAG0V,CAAC,GAAG6xH,cAAc;UAE5B,IAAMrrH,KAAK,GAAGlc,CAAC,GAAG6nI,WAAW,GAAGD,UAAU;UAE1C,IAAMgB,QAAQ,GAAGn0H,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;UAClC,IAAM2sH,QAAQ,GAAGp0H,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;;UAElC;;UAEA48E,MAAM,CAACpjF,CAAC,GAAG4gB,MAAM,GAAGsyG,QAAQ;UAC5B9vC,MAAM,CAAC33F,CAAC,GAAG,CAAEM,CAAC,GAAG+jB,MAAM,GAAGgvE,UAAU;UACpCsE,MAAM,CAAC3uE,CAAC,GAAGmM,MAAM,GAAGuyG,QAAQ;UAC5B3iF,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;UAE7C;;UAEA+L,MAAM,CAACvd,GAAG,CAAEiwH,QAAQ,EAAEF,KAAK,EAAEG,QAAS,CAAC,CAACvvH,SAAS,CAAC,CAAC;UACnDknC,OAAO,CAAC98C,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;;UAE5C;;UAEAs2B,GAAG,CAAC/8C,IAAI,CAAE1D,CAAC,EAAE,CAAC,GAAGyB,CAAE,CAAC;;UAEpB;;UAEAknI,QAAQ,CAACjlI,IAAI,CAAEuQ,KAAK,EAAI,CAAC;QAE1B;;QAEA;;QAEAs0H,UAAU,CAAC7kI,IAAI,CAAEilI,QAAS,CAAC;MAE5B;;MAEA;;MAEA,KAAM,IAAIjzH,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG6xH,cAAc,EAAE7xH,GAAC,EAAG,EAAG;QAE3C,KAAM,IAAIvU,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG2kD,cAAc,EAAE3kD,GAAC,EAAG,EAAG;UAE3C;;UAEA,IAAMvB,CAAC,GAAG2oI,UAAU,CAAEpnI,GAAC,CAAE,CAAEuU,GAAC,CAAE;UAC9B,IAAMqC,CAAC,GAAGwwH,UAAU,CAAEpnI,GAAC,GAAG,CAAC,CAAE,CAAEuU,GAAC,CAAE;UAClC,IAAM5V,CAAC,GAAGyoI,UAAU,CAAEpnI,GAAC,GAAG,CAAC,CAAE,CAAEuU,GAAC,GAAG,CAAC,CAAE;UACtC,IAAMnU,CAAC,GAAGgnI,UAAU,CAAEpnI,GAAC,CAAE,CAAEuU,GAAC,GAAG,CAAC,CAAE;;UAElC;;UAEA4qC,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;UACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;;UAEvB;;UAEA2lD,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE,CAAE,CAAC;;MAE3C;;MAEAd,UAAU,IAAIc,UAAU;IAEzB;IAEA,SAASuhF,WAAWA,CAAExkG,GAAG,EAAG;MAE3B;MACA,IAAM6kG,gBAAgB,GAAG70H,KAAK;MAE9B,IAAM8V,EAAE,GAAG,IAAItQ,OAAO,CAAC,CAAC;MACxB,IAAMq/E,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;MAE5B,IAAIqzB,UAAU,GAAG,CAAC;MAElB,IAAM5wB,MAAM,GAAK2N,GAAG,KAAK,IAAI,GAAKkkG,SAAS,GAAGC,YAAY;MAC1D,IAAMlpG,IAAI,GAAK+E,GAAG,KAAK,IAAI,GAAK,CAAC,GAAG,CAAE,CAAC;;MAEvC;MACA;MACA;;MAEA,KAAM,IAAIvuB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6xH,cAAc,EAAE7xH,CAAC,EAAG,EAAG;QAE5C;;QAEAwwC,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE8wF,UAAU,GAAGt1D,IAAI,EAAE,CAAE,CAAC;;QAExC;;QAEAshB,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAEw7B,IAAI,EAAE,CAAE,CAAC;;QAE1B;;QAEAuhB,GAAG,CAAC/8C,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;;QAEpB;;QAEAuQ,KAAK,EAAG;MAET;;MAEA;MACA,IAAM80H,cAAc,GAAG90H,KAAK;;MAE5B;;MAEA,KAAM,IAAIyB,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI6xH,cAAc,EAAE7xH,GAAC,EAAG,EAAG;QAE5C,IAAM1V,CAAC,GAAG0V,GAAC,GAAG6xH,cAAc;QAC5B,IAAMrrH,KAAK,GAAGlc,CAAC,GAAG6nI,WAAW,GAAGD,UAAU;QAE1C,IAAMiB,QAAQ,GAAGp0H,IAAI,CAACwD,GAAG,CAAEiE,KAAM,CAAC;QAClC,IAAM0sH,QAAQ,GAAGn0H,IAAI,CAACyD,GAAG,CAAEgE,KAAM,CAAC;;QAElC;;QAEA48E,MAAM,CAACpjF,CAAC,GAAG4gB,MAAM,GAAGsyG,QAAQ;QAC5B9vC,MAAM,CAAC33F,CAAC,GAAGqzF,UAAU,GAAGt1D,IAAI;QAC5B45D,MAAM,CAAC3uE,CAAC,GAAGmM,MAAM,GAAGuyG,QAAQ;QAC5B3iF,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEAq2B,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAEw7B,IAAI,EAAE,CAAE,CAAC;;QAE1B;;QAEAnV,EAAE,CAACrU,CAAC,GAAKmzH,QAAQ,GAAG,GAAG,GAAK,GAAG;QAC/B9+G,EAAE,CAAC5oB,CAAC,GAAKynI,QAAQ,GAAG,GAAG,GAAG1pG,IAAI,GAAK,GAAG;QACtCuhB,GAAG,CAAC/8C,IAAI,CAAEqmB,EAAE,CAACrU,CAAC,EAAEqU,EAAE,CAAC5oB,CAAE,CAAC;;QAEtB;;QAEA8S,KAAK,EAAG;MAET;;MAEA;;MAEA,KAAM,IAAIyB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG6xH,cAAc,EAAE7xH,GAAC,EAAG,EAAG;QAE3C,IAAM5V,CAAC,GAAGgpI,gBAAgB,GAAGpzH,GAAC;QAC9B,IAAMhW,CAAC,GAAGqpI,cAAc,GAAGrzH,GAAC;QAE5B,IAAKuuB,GAAG,KAAK,IAAI,EAAG;UAEnB;;UAEAqc,OAAO,CAAC58C,IAAI,CAAEhE,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEI,CAAE,CAAC;QAE5B,CAAC,MAAM;UAEN;;UAEAwgD,OAAO,CAAC58C,IAAI,CAAEhE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAEI,CAAE,CAAC;QAE5B;QAEAonD,UAAU,IAAI,CAAC;MAEhB;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAEjjB,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAE,CAAC;;MAE9D;;MAEAmiB,UAAU,IAAIc,UAAU;IAEzB;IAAC,OAAAohF,OAAA;EAEF;EAACriI,YAAA,CAAA+hI,gBAAA;IAAAhiI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAguF,gBAAA,CAAA5oI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI4hH,gBAAgB,CAAE5hH,IAAI,CAAC+hH,SAAS,EAAE/hH,IAAI,CAACgiH,YAAY,EAAEhiH,IAAI,CAACZ,MAAM,EAAEY,IAAI,CAACmhH,cAAc,EAAEnhH,IAAI,CAAC0/B,cAAc,EAAE1/B,IAAI,CAACiiH,SAAS,EAAEjiH,IAAI,CAACwhH,UAAU,EAAExhH,IAAI,CAACyhH,WAAY,CAAC;IAE3K;EAAC;EAAA,OAAAG,gBAAA;AAAA,EAnR6BtpF,cAAc;AAAA,IAuRvCsqF,YAAY,GAAAliI,OAAA,CAAAkiI,YAAA,0BAAAC,iBAAA;EAAA1hH,SAAA,CAAAyhH,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAzhH,YAAA,CAAAuhH,YAAA;EAEjB,SAAAA,aAAa1yG,MAAM,GAAG,CAAC,EAAE9Q,MAAM,GAAG,CAAC,EAAE+hH,cAAc,GAAG,EAAE,EAAEzhF,cAAc,GAAG,CAAC,EAAEuiF,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGpzH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAy0H,OAAA;IAAA3jI,eAAA,OAAAwjI,YAAA;IAE5IG,OAAA,GAAAD,QAAA,CAAApoI,IAAA,OAAO,CAAC,EAAEw1B,MAAM,EAAE9Q,MAAM,EAAE+hH,cAAc,EAAEzhF,cAAc,EAAEuiF,SAAS,EAAET,UAAU,EAAEC,WAAW;IAE5FsB,OAAA,CAAKvoI,IAAI,GAAG,cAAc;IAE1BuoI,OAAA,CAAKj9F,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACd9Q,MAAM,EAAEA,MAAM;MACd+hH,cAAc,EAAEA,cAAc;MAC9BzhF,cAAc,EAAEA,cAAc;MAC9BuiF,SAAS,EAAEA,SAAS;MACpBT,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAAC,OAAAsB,OAAA;EAEH;EAACljI,YAAA,CAAA+iI,YAAA;IAAAhjI,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI4iH,YAAY,CAAE5iH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACZ,MAAM,EAAEY,IAAI,CAACmhH,cAAc,EAAEnhH,IAAI,CAAC0/B,cAAc,EAAE1/B,IAAI,CAACiiH,SAAS,EAAEjiH,IAAI,CAACwhH,UAAU,EAAExhH,IAAI,CAACyhH,WAAY,CAAC;IAEjJ;EAAC;EAAA,OAAAmB,YAAA;AAAA,EAxByBhB,gBAAgB;AAAA,IA4BrCoB,kBAAkB,GAAAtiI,OAAA,CAAAsiI,kBAAA,0BAAAC,gBAAA;EAAA9hH,SAAA,CAAA6hH,kBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA7hH,YAAA,CAAA2hH,kBAAA;EAEvB,SAAAA,mBAAaljF,QAAQ,GAAG,EAAE,EAAE5F,OAAO,GAAG,EAAE,EAAEhqB,MAAM,GAAG,CAAC,EAAEq5F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAA4Z,OAAA;IAAA/jI,eAAA,OAAA4jI,kBAAA;IAElEG,OAAA,GAAAD,QAAA,CAAAxoI,IAAA;IAEAyoI,OAAA,CAAK3oI,IAAI,GAAG,oBAAoB;IAEhC2oI,OAAA,CAAKr9F,UAAU,GAAG;MACjBga,QAAQ,EAAEA,QAAQ;MAClB5F,OAAO,EAAEA,OAAO;MAChBhqB,MAAM,EAAEA,MAAM;MACdq5F,MAAM,EAAEA;IACT,CAAC;;IAED;;IAEA,IAAM6Z,YAAY,GAAG,EAAE;IACvB,IAAMC,QAAQ,GAAG,EAAE;;IAEnB;;IAEAC,SAAS,CAAE/Z,MAAO,CAAC;;IAEnB;;IAEAga,WAAW,CAAErzG,MAAO,CAAC;;IAErB;;IAEAszG,WAAW,CAAC,CAAC;;IAEb;;IAEAL,OAAA,CAAK/pF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE2rF,YAAY,EAAE,CAAE,CAAE,CAAC;IAC9ED,OAAA,CAAK/pF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2rF,YAAY,CAACzkI,KAAK,CAAC,CAAC,EAAE,CAAE,CAAE,CAAC;IACpFwkI,OAAA,CAAK/pF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4rF,QAAQ,EAAE,CAAE,CAAE,CAAC;IAEpE,IAAK9Z,MAAM,KAAK,CAAC,EAAG;MAEnB4Z,OAAA,CAAK3nF,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAE9B,CAAC,MAAM;MAEN2nF,OAAA,CAAKhnF,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAE1B;;IAEA;;IAEA,SAASmnF,SAASA,CAAE/Z,MAAM,EAAG;MAE5B,IAAM/vH,CAAC,GAAG,IAAIi0B,OAAO,CAAC,CAAC;MACvB,IAAM9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC;MACvB,IAAM/zB,CAAC,GAAG,IAAI+zB,OAAO,CAAC,CAAC;;MAEvB;;MAEA,KAAM,IAAIn0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4gD,OAAO,CAACv8C,MAAM,EAAErE,CAAC,IAAI,CAAC,EAAG;QAE7C;;QAEAmqI,gBAAgB,CAAEvpF,OAAO,CAAE5gD,CAAC,GAAG,CAAC,CAAE,EAAEE,CAAE,CAAC;QACvCiqI,gBAAgB,CAAEvpF,OAAO,CAAE5gD,CAAC,GAAG,CAAC,CAAE,EAAEqY,CAAE,CAAC;QACvC8xH,gBAAgB,CAAEvpF,OAAO,CAAE5gD,CAAC,GAAG,CAAC,CAAE,EAAEI,CAAE,CAAC;;QAEvC;;QAEAgqI,aAAa,CAAElqI,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE6vH,MAAO,CAAC;MAEjC;IAED;IAEA,SAASma,aAAaA,CAAElqI,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE6vH,MAAM,EAAG;MAEzC,IAAMoa,IAAI,GAAGpa,MAAM,GAAG,CAAC;;MAEvB;;MAEA,IAAMluH,CAAC,GAAG,EAAE;;MAEZ;;MAEA,KAAM,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqqI,IAAI,EAAErqI,CAAC,EAAG,EAAG;QAElC+B,CAAC,CAAE/B,CAAC,CAAE,GAAG,EAAE;QAEX,IAAMsqI,EAAE,GAAGpqI,CAAC,CAACua,KAAK,CAAC,CAAC,CAACnE,IAAI,CAAElW,CAAC,EAAEJ,CAAC,GAAGqqI,IAAK,CAAC;QACxC,IAAME,EAAE,GAAGlyH,CAAC,CAACoC,KAAK,CAAC,CAAC,CAACnE,IAAI,CAAElW,CAAC,EAAEJ,CAAC,GAAGqqI,IAAK,CAAC;QAExC,IAAMG,IAAI,GAAGH,IAAI,GAAGrqI,CAAC;QAErB,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIgvG,IAAI,EAAEhvG,CAAC,EAAG,EAAG;UAElC,IAAKA,CAAC,KAAK,CAAC,IAAIx7B,CAAC,KAAKqqI,IAAI,EAAG;YAE5BtoI,CAAC,CAAE/B,CAAC,CAAE,CAAEw7B,CAAC,CAAE,GAAG8uG,EAAE;UAEjB,CAAC,MAAM;YAENvoI,CAAC,CAAE/B,CAAC,CAAE,CAAEw7B,CAAC,CAAE,GAAG8uG,EAAE,CAAC7vH,KAAK,CAAC,CAAC,CAACnE,IAAI,CAAEi0H,EAAE,EAAE/uG,CAAC,GAAGgvG,IAAK,CAAC;UAE9C;QAED;MAED;;MAEA;;MAEA,KAAM,IAAIxqI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqqI,IAAI,EAAErqI,IAAC,EAAG,EAAG;QAEjC,KAAM,IAAIw7B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,IAAK6uG,IAAI,GAAGrqI,IAAC,CAAE,GAAG,CAAC,EAAEw7B,GAAC,EAAG,EAAG;UAEjD,IAAMkhE,CAAC,GAAG3nF,IAAI,CAACmC,KAAK,CAAEskB,GAAC,GAAG,CAAE,CAAC;UAE7B,IAAKA,GAAC,GAAG,CAAC,KAAK,CAAC,EAAG;YAElBivG,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,CAAE,CAAE08F,CAAC,GAAG,CAAC,CAAG,CAAC;YAC7B+tC,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,GAAG,CAAC,CAAE,CAAE08F,CAAC,CAAG,CAAC;YAC7B+tC,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,CAAE,CAAE08F,CAAC,CAAG,CAAC;UAE1B,CAAC,MAAM;YAEN+tC,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,CAAE,CAAE08F,CAAC,GAAG,CAAC,CAAG,CAAC;YAC7B+tC,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,GAAG,CAAC,CAAE,CAAE08F,CAAC,GAAG,CAAC,CAAG,CAAC;YACjC+tC,UAAU,CAAE1oI,CAAC,CAAE/B,IAAC,GAAG,CAAC,CAAE,CAAE08F,CAAC,CAAG,CAAC;UAE9B;QAED;MAED;IAED;IAEA,SAASutC,WAAWA,CAAErzG,MAAM,EAAG;MAE9B,IAAMwiE,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;;MAE5B;;MAEA,KAAM,IAAIn0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8pI,YAAY,CAACzlI,MAAM,EAAErE,CAAC,IAAI,CAAC,EAAG;QAElDo5F,MAAM,CAACpjF,CAAC,GAAG8zH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAChCo5F,MAAM,CAAC33F,CAAC,GAAGqoI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAChCo5F,MAAM,CAAC3uE,CAAC,GAAGq/G,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAEhCo5F,MAAM,CAACx/E,SAAS,CAAC,CAAC,CAACuB,cAAc,CAAEyb,MAAO,CAAC;QAE3CkzG,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,GAAGo5F,MAAM,CAACpjF,CAAC;QAChC8zH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,GAAGo5F,MAAM,CAAC33F,CAAC;QAChCqoI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,GAAGo5F,MAAM,CAAC3uE,CAAC;MAEjC;IAED;IAEA,SAASy/G,WAAWA,CAAA,EAAG;MAEtB,IAAM9wC,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;MAE5B,KAAM,IAAIn0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8pI,YAAY,CAACzlI,MAAM,EAAErE,CAAC,IAAI,CAAC,EAAG;QAElDo5F,MAAM,CAACpjF,CAAC,GAAG8zH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAChCo5F,MAAM,CAAC33F,CAAC,GAAGqoI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAChCo5F,MAAM,CAAC3uE,CAAC,GAAGq/G,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE;QAEhC,IAAMM,CAAC,GAAGoqI,OAAO,CAAEtxC,MAAO,CAAC,GAAG,CAAC,GAAGrkF,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/C,IAAMjT,CAAC,GAAG4oI,WAAW,CAAEvxC,MAAO,CAAC,GAAGrkF,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/C+0H,QAAQ,CAAC/lI,IAAI,CAAE1D,CAAC,EAAE,CAAC,GAAGyB,CAAE,CAAC;MAE1B;MAEA6oI,UAAU,CAAC,CAAC;MAEZC,WAAW,CAAC,CAAC;IAEd;IAEA,SAASA,WAAWA,CAAA,EAAG;MAEtB;;MAEA,KAAM,IAAI7qI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+pI,QAAQ,CAAC1lI,MAAM,EAAErE,CAAC,IAAI,CAAC,EAAG;QAE9C;;QAEA,IAAMszB,EAAE,GAAGy2G,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAM0zB,EAAE,GAAGq2G,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAMyjC,EAAE,GAAGsmG,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE;QAE5B,IAAM4V,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAE0d,EAAE,EAAEI,EAAE,EAAE+P,EAAG,CAAC;QAClC,IAAM9tB,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAE2d,EAAE,EAAEI,EAAE,EAAE+P,EAAG,CAAC;;QAElC;;QAEA,IAAK7tB,GAAG,GAAG,GAAG,IAAID,GAAG,GAAG,GAAG,EAAG;UAE7B,IAAK2d,EAAE,GAAG,GAAG,EAAGy2G,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAK0zB,EAAE,GAAG,GAAG,EAAGq2G,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAKyjC,EAAE,GAAG,GAAG,EAAGsmG,QAAQ,CAAE/pI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;QAEvC;MAED;IAED;IAEA,SAASyqI,UAAUA,CAAErxC,MAAM,EAAG;MAE7B0wC,YAAY,CAAC9lI,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;IAElD;IAEA,SAAS0/G,gBAAgBA,CAAE51H,KAAK,EAAE6kF,MAAM,EAAG;MAE1C,IAAMl2C,MAAM,GAAG3uC,KAAK,GAAG,CAAC;MAExB6kF,MAAM,CAACpjF,CAAC,GAAGwwC,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;MACjCk2C,MAAM,CAAC33F,CAAC,GAAG+kD,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;MACjCk2C,MAAM,CAAC3uE,CAAC,GAAG+7B,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;IAElC;IAEA,SAAS0nF,UAAUA,CAAA,EAAG;MAErB,IAAM1qI,CAAC,GAAG,IAAIi0B,OAAO,CAAC,CAAC;MACvB,IAAM9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC;MACvB,IAAM/zB,CAAC,GAAG,IAAI+zB,OAAO,CAAC,CAAC;MAEvB,IAAM22G,QAAQ,GAAG,IAAI32G,OAAO,CAAC,CAAC;MAE9B,IAAMotB,GAAG,GAAG,IAAIxnC,OAAO,CAAC,CAAC;MACzB,IAAMynC,GAAG,GAAG,IAAIznC,OAAO,CAAC,CAAC;MACzB,IAAM0nC,GAAG,GAAG,IAAI1nC,OAAO,CAAC,CAAC;MAEzB,KAAM,IAAI/Z,CAAC,GAAG,CAAC,EAAEw7B,CAAC,GAAG,CAAC,EAAEx7B,CAAC,GAAG8pI,YAAY,CAACzlI,MAAM,EAAErE,CAAC,IAAI,CAAC,EAAEw7B,CAAC,IAAI,CAAC,EAAG;QAEjEt7B,CAAC,CAAC+Y,GAAG,CAAE6wH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAG,CAAC;QAC5EqY,CAAC,CAACY,GAAG,CAAE6wH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAG,CAAC;QAC5EI,CAAC,CAAC6Y,GAAG,CAAE6wH,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAE,EAAE8pI,YAAY,CAAE9pI,CAAC,GAAG,CAAC,CAAG,CAAC;QAE5EuhD,GAAG,CAACtoC,GAAG,CAAE8wH,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAE,EAAEuuG,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAG,CAAC;QAC/CgmB,GAAG,CAACvoC,GAAG,CAAE8wH,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAE,EAAEuuG,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAG,CAAC;QAC/CimB,GAAG,CAACxoC,GAAG,CAAE8wH,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAE,EAAEuuG,QAAQ,CAAEvuG,CAAC,GAAG,CAAC,CAAG,CAAC;QAE/CsvG,QAAQ,CAACpwH,IAAI,CAAExa,CAAE,CAAC,CAACya,GAAG,CAAEtC,CAAE,CAAC,CAACsC,GAAG,CAAEva,CAAE,CAAC,CAACib,YAAY,CAAE,CAAE,CAAC;QAEtD,IAAM0vH,GAAG,GAAGL,OAAO,CAAEI,QAAS,CAAC;QAE/BE,SAAS,CAAEzpF,GAAG,EAAE/lB,CAAC,GAAG,CAAC,EAAEt7B,CAAC,EAAE6qI,GAAI,CAAC;QAC/BC,SAAS,CAAExpF,GAAG,EAAEhmB,CAAC,GAAG,CAAC,EAAEnjB,CAAC,EAAE0yH,GAAI,CAAC;QAC/BC,SAAS,CAAEvpF,GAAG,EAAEjmB,CAAC,GAAG,CAAC,EAAEp7B,CAAC,EAAE2qI,GAAI,CAAC;MAEhC;IAED;IAEA,SAASC,SAASA,CAAE3gH,EAAE,EAAE64B,MAAM,EAAEnqB,MAAM,EAAE2xG,OAAO,EAAG;MAEjD,IAAOA,OAAO,GAAG,CAAC,IAAQrgH,EAAE,CAACrU,CAAC,KAAK,CAAG,EAAG;QAExC+zH,QAAQ,CAAE7mF,MAAM,CAAE,GAAG74B,EAAE,CAACrU,CAAC,GAAG,CAAC;MAE9B;MAEA,IAAO+iB,MAAM,CAAC/iB,CAAC,KAAK,CAAC,IAAQ+iB,MAAM,CAACtO,CAAC,KAAK,CAAG,EAAG;QAE/Cs/G,QAAQ,CAAE7mF,MAAM,CAAE,GAAGwnF,OAAO,GAAG,CAAC,GAAG31H,IAAI,CAACC,EAAE,GAAG,GAAG;MAEjD;IAED;;IAEA;;IAEA,SAAS01H,OAAOA,CAAE3xG,MAAM,EAAG;MAE1B,OAAOhkB,IAAI,CAACsH,KAAK,CAAE0c,MAAM,CAACtO,CAAC,EAAE,CAAEsO,MAAM,CAAC/iB,CAAE,CAAC;IAE1C;;IAGA;;IAEA,SAAS20H,WAAWA,CAAE5xG,MAAM,EAAG;MAE9B,OAAOhkB,IAAI,CAACsH,KAAK,CAAE,CAAE0c,MAAM,CAACt3B,CAAC,EAAEsT,IAAI,CAACmH,IAAI,CAAI6c,MAAM,CAAC/iB,CAAC,GAAG+iB,MAAM,CAAC/iB,CAAC,GAAO+iB,MAAM,CAACtO,CAAC,GAAGsO,MAAM,CAACtO,CAAI,CAAE,CAAC;IAEhG;IAAC,OAAAo/G,OAAA;EAEF;EAACtjI,YAAA,CAAAmjI,kBAAA;IAAApjI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAovF,kBAAA,CAAAhqI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIgjH,kBAAkB,CAAEhjH,IAAI,CAAC8/B,QAAQ,EAAE9/B,IAAI,CAACk6B,OAAO,EAAEl6B,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACukH,OAAQ,CAAC;IAExF;EAAC;EAAA,OAAAvB,kBAAA;AAAA,EArT+B1qF,cAAc;AAAA,IAyTzCksF,oBAAoB,GAAA9jI,OAAA,CAAA8jI,oBAAA,0BAAAC,mBAAA;EAAAtjH,SAAA,CAAAqjH,oBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAArjH,YAAA,CAAAmjH,oBAAA;EAEzB,SAAAA,qBAAat0G,MAAM,GAAG,CAAC,EAAEq5F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAob,OAAA;IAAAvlI,eAAA,OAAAolI,oBAAA;IAErC,IAAM3rI,CAAC,GAAG,CAAE,CAAC,GAAGwV,IAAI,CAACmH,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;IACpC,IAAM1c,CAAC,GAAG,CAAC,GAAGD,CAAC;IAEf,IAAMinD,QAAQ,GAAG;IAEhB;IACA,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAC1B,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAElB;IACA,CAAC,EAAE,CAAEhnD,CAAC,EAAE,CAAED,CAAC,EAAE,CAAC,EAAE,CAAEC,CAAC,EAAED,CAAC,EACtB,CAAC,EAAEC,CAAC,EAAE,CAAED,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAED,CAAC;IAElB;IACA,CAAEC,CAAC,EAAE,CAAED,CAAC,EAAE,CAAC,EAAE,CAAEC,CAAC,EAAED,CAAC,EAAE,CAAC,EACtBC,CAAC,EAAE,CAAED,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAED,CAAC,EAAE,CAAC;IAElB;IACA,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAEC,CAAC,EAAED,CAAC,EAAE,CAAC,EAAE,CAAEC,CAAC,EACtB,CAAED,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAED,CAAC,EAAE,CAAC,EAAEC,CAAC,CAClB;IAED,IAAMohD,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC9B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC9B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9B;IAEDyqF,OAAA,GAAAD,QAAA,CAAAhqI,IAAA,OAAOolD,QAAQ,EAAE5F,OAAO,EAAEhqB,MAAM,EAAEq5F,MAAM;IAExCob,OAAA,CAAKnqI,IAAI,GAAG,sBAAsB;IAElCmqI,OAAA,CAAK7+F,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdq5F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAob,OAAA;EAEH;EAAC9kI,YAAA,CAAA2kI,oBAAA;IAAA5kI,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIwkH,oBAAoB,CAAExkH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACupG,MAAO,CAAC;IAE5D;EAAC;EAAA,OAAAib,oBAAA;AAAA,EA1DiCxB,kBAAkB;AA8DrD,IAAM4B,GAAG,GAAG,aAAc,IAAIn3G,OAAO,CAAC,CAAC;AACvC,IAAMo3G,KAAK,GAAG,aAAc,IAAIp3G,OAAO,CAAC,CAAC;AACzC,IAAMq3G,OAAO,GAAG,aAAc,IAAIr3G,OAAO,CAAC,CAAC;AAC3C,IAAMs3G,SAAS,GAAG,aAAc,IAAI19F,QAAQ,CAAC,CAAC;AAAC,IAEzC29F,aAAa,GAAAtkI,OAAA,CAAAskI,aAAA,0BAAAC,gBAAA;EAAA9jH,SAAA,CAAA6jH,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA7jH,YAAA,CAAA2jH,aAAA;EAElB,SAAAA,cAAapyG,QAAQ,GAAG,IAAI,EAAEuyG,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAhmI,eAAA,OAAA4lI,aAAA;IAElDI,OAAA,GAAAF,QAAA,CAAAxqI,IAAA;IAEA0qI,OAAA,CAAK5qI,IAAI,GAAG,eAAe;IAE3B4qI,OAAA,CAAKt/F,UAAU,GAAG;MACjBlT,QAAQ,EAAEA,QAAQ;MAClBuyG,cAAc,EAAEA;IACjB,CAAC;IAED,IAAKvyG,QAAQ,KAAK,IAAI,EAAG;MAExB,IAAMyyG,eAAe,GAAG,CAAC;MACzB,IAAM55F,SAAS,GAAGp9B,IAAI,CAAC+C,GAAG,CAAE,EAAE,EAAEi0H,eAAgB,CAAC;MACjD,IAAMC,YAAY,GAAGj3H,IAAI,CAACwD,GAAG,CAAEzD,OAAO,GAAG+2H,cAAe,CAAC;MAEzD,IAAMI,SAAS,GAAG3yG,QAAQ,CAACqmB,QAAQ,CAAC,CAAC;MACrC,IAAMusF,YAAY,GAAG5yG,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;MACxD,IAAMssF,UAAU,GAAGF,SAAS,GAAGA,SAAS,CAAC98G,KAAK,GAAG+8G,YAAY,CAAC/8G,KAAK;MAEnE,IAAMi9G,QAAQ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC5B,IAAMC,QAAQ,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;MAClC,IAAMC,MAAM,GAAG,IAAIjlH,KAAK,CAAE,CAAE,CAAC;MAE7B,IAAMklH,QAAQ,GAAG,CAAC,CAAC;MACnB,IAAM/lF,QAAQ,GAAG,EAAE;MACnB,KAAM,IAAIxmD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmsI,UAAU,EAAEnsI,CAAC,IAAI,CAAC,EAAG;QAEzC,IAAKisI,SAAS,EAAG;UAEhBG,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACvuH,IAAI,CAAE1d,CAAE,CAAC;UACnCosI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACvuH,IAAI,CAAE1d,CAAC,GAAG,CAAE,CAAC;UACvCosI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACvuH,IAAI,CAAE1d,CAAC,GAAG,CAAE,CAAC;QAExC,CAAC,MAAM;UAENosI,QAAQ,CAAE,CAAC,CAAE,GAAGpsI,CAAC;UACjBosI,QAAQ,CAAE,CAAC,CAAE,GAAGpsI,CAAC,GAAG,CAAC;UACrBosI,QAAQ,CAAE,CAAC,CAAE,GAAGpsI,CAAC,GAAG,CAAC;QAEtB;QAEA,IAAQE,CAAC,GAAWurI,SAAS,CAArBvrI,CAAC;UAAEmY,CAAC,GAAQozH,SAAS,CAAlBpzH,CAAC;UAAEjY,CAAC,GAAKqrI,SAAS,CAAfrrI,CAAC;QACfF,CAAC,CAACsd,mBAAmB,CAAE0uH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpD/zH,CAAC,CAACmF,mBAAmB,CAAE0uH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpDhsI,CAAC,CAACod,mBAAmB,CAAE0uH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpDX,SAAS,CAACl9F,SAAS,CAAEi9F,OAAQ,CAAC;;QAE9B;QACAc,MAAM,CAAE,CAAC,CAAE,MAAA5nH,MAAA,CAAO3P,IAAI,CAAC8E,KAAK,CAAE3Z,CAAC,CAAC8V,CAAC,GAAGm8B,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAE3Z,CAAC,CAACuB,CAAC,GAAG0wC,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAE3Z,CAAC,CAACuqB,CAAC,GAAG0nB,SAAU,CAAC,CAAG;QACxHm6F,MAAM,CAAE,CAAC,CAAE,MAAA5nH,MAAA,CAAO3P,IAAI,CAAC8E,KAAK,CAAExB,CAAC,CAACrC,CAAC,GAAGm8B,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAExB,CAAC,CAAC5W,CAAC,GAAG0wC,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAExB,CAAC,CAACoS,CAAC,GAAG0nB,SAAU,CAAC,CAAG;QACxHm6F,MAAM,CAAE,CAAC,CAAE,MAAA5nH,MAAA,CAAO3P,IAAI,CAAC8E,KAAK,CAAEzZ,CAAC,CAAC4V,CAAC,GAAGm8B,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAEzZ,CAAC,CAACqB,CAAC,GAAG0wC,SAAU,CAAC,OAAAztB,MAAA,CAAM3P,IAAI,CAAC8E,KAAK,CAAEzZ,CAAC,CAACqqB,CAAC,GAAG0nB,SAAU,CAAC,CAAG;;QAExH;QACA,IAAKm6F,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,EAAG;UAEhG;QAED;;QAEA;QACA,KAAM,IAAI9wG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B;UACA,IAAMgxG,KAAK,GAAG,CAAEhxG,CAAC,GAAG,CAAC,IAAK,CAAC;UAC3B,IAAMixG,QAAQ,GAAGH,MAAM,CAAE9wG,CAAC,CAAE;UAC5B,IAAMkxG,QAAQ,GAAGJ,MAAM,CAAEE,KAAK,CAAE;UAChC,IAAMlxG,EAAE,GAAGmwG,SAAS,CAAEY,QAAQ,CAAE7wG,CAAC,CAAE,CAAE;UACrC,IAAMte,EAAE,GAAGuuH,SAAS,CAAEY,QAAQ,CAAEG,KAAK,CAAE,CAAE;UAEzC,IAAMl3C,IAAI,MAAA5wE,MAAA,CAAO+nH,QAAQ,OAAA/nH,MAAA,CAAMgoH,QAAQ,CAAG;UAC1C,IAAMC,WAAW,MAAAjoH,MAAA,CAAOgoH,QAAQ,OAAAhoH,MAAA,CAAM+nH,QAAQ,CAAG;UAEjD,IAAKE,WAAW,IAAIJ,QAAQ,IAAIA,QAAQ,CAAEI,WAAW,CAAE,EAAG;YAEzD;YACA;YACA,IAAKnB,OAAO,CAACzvH,GAAG,CAAEwwH,QAAQ,CAAEI,WAAW,CAAE,CAACn2G,MAAO,CAAC,IAAIw1G,YAAY,EAAG;cAEpExlF,QAAQ,CAACxiD,IAAI,CAAEs3B,EAAE,CAACtlB,CAAC,EAAEslB,EAAE,CAAC75B,CAAC,EAAE65B,EAAE,CAAC7Q,CAAE,CAAC;cACjC+7B,QAAQ,CAACxiD,IAAI,CAAEkZ,EAAE,CAAClH,CAAC,EAAEkH,EAAE,CAACzb,CAAC,EAAEyb,EAAE,CAACuN,CAAE,CAAC;YAElC;YAEA8hH,QAAQ,CAAEI,WAAW,CAAE,GAAG,IAAI;UAE/B,CAAC,MAAM,IAAK,EAAIr3C,IAAI,IAAIi3C,QAAQ,CAAE,EAAG;YAEpC;YACAA,QAAQ,CAAEj3C,IAAI,CAAE,GAAG;cAElBs3C,MAAM,EAAER,QAAQ,CAAE5wG,CAAC,CAAE;cACrBygB,MAAM,EAAEmwF,QAAQ,CAAEI,KAAK,CAAE;cACzBh2G,MAAM,EAAEg1G,OAAO,CAAC/wH,KAAK,CAAC;YAEvB,CAAC;UAEF;QAED;MAED;;MAEA;MACA,KAAM,IAAMnU,GAAG,IAAIimI,QAAQ,EAAG;QAE7B,IAAKA,QAAQ,CAAEjmI,GAAG,CAAE,EAAG;UAEtB,IAAAumI,aAAA,GAA2BN,QAAQ,CAAEjmI,GAAG,CAAE;YAAlCsmI,MAAM,GAAAC,aAAA,CAAND,MAAM;YAAE3wF,MAAM,GAAA4wF,aAAA,CAAN5wF,MAAM;UACtBqvF,GAAG,CAAC9tH,mBAAmB,CAAE0uH,YAAY,EAAEU,MAAO,CAAC;UAC/CrB,KAAK,CAAC/tH,mBAAmB,CAAE0uH,YAAY,EAAEjwF,MAAO,CAAC;UAEjDuK,QAAQ,CAACxiD,IAAI,CAAEsnI,GAAG,CAACt1H,CAAC,EAAEs1H,GAAG,CAAC7pI,CAAC,EAAE6pI,GAAG,CAAC7gH,CAAE,CAAC;UACpC+7B,QAAQ,CAACxiD,IAAI,CAAEunI,KAAK,CAACv1H,CAAC,EAAEu1H,KAAK,CAAC9pI,CAAC,EAAE8pI,KAAK,CAAC9gH,CAAE,CAAC;QAE3C;MAED;MAEAqhH,OAAA,CAAKhsF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAE3E;IAAC,OAAAslF,OAAA;EAEF;EAACvlI,YAAA,CAAAmlI,aAAA;IAAAplI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAoxF,aAAA,CAAAhsI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAk/F,aAAA;AAAA,EAxI0B1sF,cAAc;AAAA,IA4IpC8tF,KAAK,GAAA1lI,OAAA,CAAA0lI,KAAA,0BAAAC,KAAA;EAAAllH,SAAA,CAAAilH,KAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAjlH,YAAA,CAAA+kH,KAAA;EAEV,SAAAA,MAAa70G,MAAM,EAAG;IAAA,IAAAg1G,OAAA;IAAAnnI,eAAA,OAAAgnI,KAAA;IAErBG,OAAA,GAAAD,QAAA,CAAA5rI,IAAA,OAAO62B,MAAM;IAEbg1G,OAAA,CAAKz3H,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B+3H,OAAA,CAAK/rI,IAAI,GAAG,OAAO;IAEnB+rI,OAAA,CAAKC,KAAK,GAAG,EAAE;IAAC,OAAAD,OAAA;EAEjB;EAAC1mI,YAAA,CAAAumI,KAAA;IAAAxmI,GAAA;IAAAvG,KAAA,EAED,SAAAotI,eAAgBrQ,SAAS,EAAG;MAE3B,IAAMsQ,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAIptI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC4rI,KAAK,CAAC7oI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAErDotI,QAAQ,CAAEptI,CAAC,CAAE,GAAG,IAAI,CAACktI,KAAK,CAAEltI,CAAC,CAAE,CAAC68H,SAAS,CAAEC,SAAU,CAAC;MAEvD;MAEA,OAAOsQ,QAAQ;IAEhB;;IAEA;EAAA;IAAA9mI,GAAA;IAAAvG,KAAA,EAEA,SAAAstI,cAAevQ,SAAS,EAAG;MAE1B,OAAO;QAENrwF,KAAK,EAAE,IAAI,CAACowF,SAAS,CAAEC,SAAU,CAAC;QAClCoQ,KAAK,EAAE,IAAI,CAACC,cAAc,CAAErQ,SAAU;MAEvC,CAAC;IAEF;EAAC;IAAAx2H,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAwyF,KAAA,CAAAptI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACqkH,KAAK,GAAG,EAAE;MAEf,KAAM,IAAIltI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGunB,MAAM,CAACqkH,KAAK,CAAC7oI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEvD,IAAMstI,IAAI,GAAGzkH,MAAM,CAACqkH,KAAK,CAAEltI,CAAC,CAAE;QAE9B,IAAI,CAACktI,KAAK,CAAClpI,IAAI,CAAEspI,IAAI,CAAC7yH,KAAK,CAAC,CAAE,CAAC;MAEhC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnU,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAwyF,KAAA,CAAAptI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAClR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBkR,IAAI,CAACwmH,KAAK,GAAG,EAAE;MAEf,KAAM,IAAIltI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC4rI,KAAK,CAAC7oI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAErD,IAAMstI,IAAI,GAAG,IAAI,CAACJ,KAAK,CAAEltI,CAAC,CAAE;QAC5B0mB,IAAI,CAACwmH,KAAK,CAAClpI,IAAI,CAAEspI,IAAI,CAACvmH,MAAM,CAAC,CAAE,CAAC;MAEjC;MAEA,OAAOL,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB37E,IAAA,CAAAC,eAAA,CAAAwyF,KAAA,CAAAptI,SAAA,qBAAA0B,IAAA,OAAgB40H,IAAI;MAEpB,IAAI,CAACxgH,IAAI,GAAGwgH,IAAI,CAACxgH,IAAI;MACrB,IAAI,CAAC03H,KAAK,GAAG,EAAE;MAEf,KAAM,IAAIltI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAACkX,KAAK,CAAC7oI,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAErD,IAAMstI,IAAI,GAAGtX,IAAI,CAACkX,KAAK,CAAEltI,CAAC,CAAE;QAC5B,IAAI,CAACktI,KAAK,CAAClpI,IAAI,CAAE,IAAIuhI,IAAI,CAAC,CAAC,CAAC99E,QAAQ,CAAE6lF,IAAK,CAAE,CAAC;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAR,KAAA;AAAA,EA7FkBvH,IAAI;AAiGxB;AACA;AACA;AAEA,IAAMgI,MAAM,GAAG;EAEdC,WAAW,EAAE,SAAAA,YAAW9mH,IAAI,EAAE+mH,WAAW,EAAEC,GAAG,GAAG,CAAC,EAAG;IAEpD,IAAMC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACppI,MAAM;IAClD,IAAMupI,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAE,CAAC,CAAE,GAAGC,GAAG,GAAGhnH,IAAI,CAACriB,MAAM;IAChE,IAAIwpI,SAAS,GAAGC,UAAU,CAAEpnH,IAAI,EAAE,CAAC,EAAEknH,QAAQ,EAAEF,GAAG,EAAE,IAAK,CAAC;IAC1D,IAAMv1D,SAAS,GAAG,EAAE;IAEpB,IAAK,CAAE01D,SAAS,IAAIA,SAAS,CAACrqI,IAAI,KAAKqqI,SAAS,CAAC1oI,IAAI,EAAG,OAAOgzE,SAAS;IAExE,IAAI41D,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEl4H,CAAC,EAAEvU,CAAC,EAAE0sI,OAAO;IAEzC,IAAKR,QAAQ,EAAGE,SAAS,GAAGO,cAAc,CAAE1nH,IAAI,EAAE+mH,WAAW,EAAEI,SAAS,EAAEH,GAAI,CAAC;;IAE/E;IACA,IAAKhnH,IAAI,CAACriB,MAAM,GAAG,EAAE,GAAGqpI,GAAG,EAAG;MAE7BK,IAAI,GAAGE,IAAI,GAAGvnH,IAAI,CAAE,CAAC,CAAE;MACvBsnH,IAAI,GAAGE,IAAI,GAAGxnH,IAAI,CAAE,CAAC,CAAE;MAEvB,KAAM,IAAI1mB,CAAC,GAAG0tI,GAAG,EAAE1tI,CAAC,GAAG4tI,QAAQ,EAAE5tI,CAAC,IAAI0tI,GAAG,EAAG;QAE3C13H,CAAC,GAAG0Q,IAAI,CAAE1mB,CAAC,CAAE;QACbyB,CAAC,GAAGilB,IAAI,CAAE1mB,CAAC,GAAG,CAAC,CAAE;QACjB,IAAKgW,CAAC,GAAG+3H,IAAI,EAAGA,IAAI,GAAG/3H,CAAC;QACxB,IAAKvU,CAAC,GAAGusI,IAAI,EAAGA,IAAI,GAAGvsI,CAAC;QACxB,IAAKuU,CAAC,GAAGi4H,IAAI,EAAGA,IAAI,GAAGj4H,CAAC;QACxB,IAAKvU,CAAC,GAAGysI,IAAI,EAAGA,IAAI,GAAGzsI,CAAC;MAEzB;;MAEA;MACA0sI,OAAO,GAAGp5H,IAAI,CAACa,GAAG,CAAEq4H,IAAI,GAAGF,IAAI,EAAEG,IAAI,GAAGF,IAAK,CAAC;MAC9CG,OAAO,GAAGA,OAAO,KAAK,CAAC,GAAG,KAAK,GAAGA,OAAO,GAAG,CAAC;IAE9C;IAEAE,YAAY,CAAER,SAAS,EAAE11D,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;IAEjE,OAAOh2D,SAAS;EAEjB;AAED,CAAC;;AAED;AACA,SAAS21D,UAAUA,CAAEpnH,IAAI,EAAEg5B,KAAK,EAAEiG,GAAG,EAAE+nF,GAAG,EAAEY,SAAS,EAAG;EAEvD,IAAItuI,CAAC,EAAEq9H,IAAI;EAEX,IAAKiR,SAAS,KAAOC,UAAU,CAAE7nH,IAAI,EAAEg5B,KAAK,EAAEiG,GAAG,EAAE+nF,GAAI,CAAC,GAAG,CAAG,EAAG;IAEhE,KAAM1tI,CAAC,GAAG0/C,KAAK,EAAE1/C,CAAC,GAAG2lD,GAAG,EAAE3lD,CAAC,IAAI0tI,GAAG,EAAGrQ,IAAI,GAAGmR,UAAU,CAAExuI,CAAC,EAAE0mB,IAAI,CAAE1mB,CAAC,CAAE,EAAE0mB,IAAI,CAAE1mB,CAAC,GAAG,CAAC,CAAE,EAAEq9H,IAAK,CAAC;EAE5F,CAAC,MAAM;IAEN,KAAMr9H,CAAC,GAAG2lD,GAAG,GAAG+nF,GAAG,EAAE1tI,CAAC,IAAI0/C,KAAK,EAAE1/C,CAAC,IAAI0tI,GAAG,EAAGrQ,IAAI,GAAGmR,UAAU,CAAExuI,CAAC,EAAE0mB,IAAI,CAAE1mB,CAAC,CAAE,EAAE0mB,IAAI,CAAE1mB,CAAC,GAAG,CAAC,CAAE,EAAEq9H,IAAK,CAAC;EAEnG;EAEA,IAAKA,IAAI,IAAIjgH,MAAM,CAAEigH,IAAI,EAAEA,IAAI,CAAC75H,IAAK,CAAC,EAAG;IAExCirI,UAAU,CAAEpR,IAAK,CAAC;IAClBA,IAAI,GAAGA,IAAI,CAAC75H,IAAI;EAEjB;EAEA,OAAO65H,IAAI;AAEZ;;AAEA;AACA,SAASqR,YAAYA,CAAEhvF,KAAK,EAAEiG,GAAG,EAAG;EAEnC,IAAK,CAAEjG,KAAK,EAAG,OAAOA,KAAK;EAC3B,IAAK,CAAEiG,GAAG,EAAGA,GAAG,GAAGjG,KAAK;EAExB,IAAI99C,CAAC,GAAG89C,KAAK;IACZivF,KAAK;EACN,GAAG;IAEFA,KAAK,GAAG,KAAK;IAEb,IAAK,CAAE/sI,CAAC,CAACgtI,OAAO,KAAMxxH,MAAM,CAAExb,CAAC,EAAEA,CAAC,CAAC4B,IAAK,CAAC,IAAIqrI,IAAI,CAAEjtI,CAAC,CAACuD,IAAI,EAAEvD,CAAC,EAAEA,CAAC,CAAC4B,IAAK,CAAC,KAAK,CAAC,CAAE,EAAG;MAEhFirI,UAAU,CAAE7sI,CAAE,CAAC;MACfA,CAAC,GAAG+jD,GAAG,GAAG/jD,CAAC,CAACuD,IAAI;MAChB,IAAKvD,CAAC,KAAKA,CAAC,CAAC4B,IAAI,EAAG;MACpBmrI,KAAK,GAAG,IAAI;IAEb,CAAC,MAAM;MAEN/sI,CAAC,GAAGA,CAAC,CAAC4B,IAAI;IAEX;EAED,CAAC,QAASmrI,KAAK,IAAI/sI,CAAC,KAAK+jD,GAAG;EAE5B,OAAOA,GAAG;AAEX;;AAEA;AACA,SAAS0oF,YAAYA,CAAES,GAAG,EAAE32D,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAEY,IAAI,EAAG;EAEvE,IAAK,CAAED,GAAG,EAAG;;EAEb;EACA,IAAK,CAAEC,IAAI,IAAIZ,OAAO,EAAGa,UAAU,CAAEF,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;EAE/D,IAAI7oI,IAAI,GAAGwpI,GAAG;IACb3pI,IAAI;IAAE3B,IAAI;;EAEX;EACA,OAAQsrI,GAAG,CAAC3pI,IAAI,KAAK2pI,GAAG,CAACtrI,IAAI,EAAG;IAE/B2B,IAAI,GAAG2pI,GAAG,CAAC3pI,IAAI;IACf3B,IAAI,GAAGsrI,GAAG,CAACtrI,IAAI;IAEf,IAAK2qI,OAAO,GAAGc,WAAW,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC,GAAGe,KAAK,CAAEJ,GAAI,CAAC,EAAG;MAEvE;MACA32D,SAAS,CAACn0E,IAAI,CAAEmB,IAAI,CAACnF,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;MAClCv1D,SAAS,CAACn0E,IAAI,CAAE8qI,GAAG,CAAC9uI,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;MACjCv1D,SAAS,CAACn0E,IAAI,CAAER,IAAI,CAACxD,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;MAElCe,UAAU,CAAEK,GAAI,CAAC;;MAEjB;MACAA,GAAG,GAAGtrI,IAAI,CAACA,IAAI;MACf8B,IAAI,GAAG9B,IAAI,CAACA,IAAI;MAEhB;IAED;IAEAsrI,GAAG,GAAGtrI,IAAI;;IAEV;IACA,IAAKsrI,GAAG,KAAKxpI,IAAI,EAAG;MAEnB;MACA,IAAK,CAAEypI,IAAI,EAAG;QAEbV,YAAY,CAAEK,YAAY,CAAEI,GAAI,CAAC,EAAE32D,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;;QAE3E;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBD,GAAG,GAAGK,sBAAsB,CAAET,YAAY,CAAEI,GAAI,CAAC,EAAE32D,SAAS,EAAEu1D,GAAI,CAAC;QACnEW,YAAY,CAAES,GAAG,EAAE32D,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;;QAE3D;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBK,WAAW,CAAEN,GAAG,EAAE32D,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;MAExD;MAEA;IAED;EAED;AAED;;AAEA;AACA,SAASe,KAAKA,CAAEJ,GAAG,EAAG;EAErB,IAAM5uI,CAAC,GAAG4uI,GAAG,CAAC3pI,IAAI;IACjBkT,CAAC,GAAGy2H,GAAG;IACP1uI,CAAC,GAAG0uI,GAAG,CAACtrI,IAAI;EAEb,IAAKqrI,IAAI,CAAE3uI,CAAC,EAAEmY,CAAC,EAAEjY,CAAE,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C;EACA,IAAMy1B,EAAE,GAAG31B,CAAC,CAAC8V,CAAC;IAAEggB,EAAE,GAAG3d,CAAC,CAACrC,CAAC;IAAE4L,EAAE,GAAGxhB,CAAC,CAAC4V,CAAC;IAAE8f,EAAE,GAAG51B,CAAC,CAACuB,CAAC;IAAEw0B,EAAE,GAAG5d,CAAC,CAAC5W,CAAC;IAAEogB,EAAE,GAAGzhB,CAAC,CAACqB,CAAC;;EAEhE;EACA,IAAM6xB,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IACjE2R,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IAC5D6R,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IAC5D+R,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;EAE7D,IAAIjgB,CAAC,GAAGxB,CAAC,CAACoD,IAAI;EACd,OAAQ5B,CAAC,KAAK1B,CAAC,EAAG;IAEjB,IAAK0B,CAAC,CAACoU,CAAC,IAAIsd,EAAE,IAAI1xB,CAAC,CAACoU,CAAC,IAAI0d,EAAE,IAAI9xB,CAAC,CAACH,CAAC,IAAI8xB,EAAE,IAAI3xB,CAAC,CAACH,CAAC,IAAIkyB,EAAE,IACpD07G,eAAe,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAEjgB,CAAC,CAACoU,CAAC,EAAEpU,CAAC,CAACH,CAAE,CAAC,IACnDotI,IAAI,CAAEjtI,CAAC,CAACuD,IAAI,EAAEvD,CAAC,EAAEA,CAAC,CAAC4B,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9C5B,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX;EAEA,OAAO,IAAI;AAEZ;AAEA,SAASyrI,WAAWA,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAEhD,IAAMjuI,CAAC,GAAG4uI,GAAG,CAAC3pI,IAAI;IACjBkT,CAAC,GAAGy2H,GAAG;IACP1uI,CAAC,GAAG0uI,GAAG,CAACtrI,IAAI;EAEb,IAAKqrI,IAAI,CAAE3uI,CAAC,EAAEmY,CAAC,EAAEjY,CAAE,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C,IAAMy1B,EAAE,GAAG31B,CAAC,CAAC8V,CAAC;IAAEggB,EAAE,GAAG3d,CAAC,CAACrC,CAAC;IAAE4L,EAAE,GAAGxhB,CAAC,CAAC4V,CAAC;IAAE8f,EAAE,GAAG51B,CAAC,CAACuB,CAAC;IAAEw0B,EAAE,GAAG5d,CAAC,CAAC5W,CAAC;IAAEogB,EAAE,GAAGzhB,CAAC,CAACqB,CAAC;;EAEhE;EACA,IAAM6xB,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IACjE2R,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IAC5D6R,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;IAC5D+R,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGjU,EAAE,GAAGiU,EAAE,GAAGjU,EAAE,GAAOoU,EAAE,GAAGpU,EAAE,GAAGoU,EAAE,GAAGpU,EAAI;;EAE7D;EACA,IAAMytH,IAAI,GAAGC,MAAM,CAAEj8G,EAAE,EAAEC,EAAE,EAAEw6G,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;IACjDqB,IAAI,GAAGD,MAAM,CAAE77G,EAAE,EAAEC,EAAE,EAAEo6G,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;EAE7C,IAAIvsI,CAAC,GAAGktI,GAAG,CAACW,KAAK;IAChB9vI,CAAC,GAAGmvI,GAAG,CAACY,KAAK;;EAEd;EACA,OAAQ9tI,CAAC,IAAIA,CAAC,CAAC6oB,CAAC,IAAI6kH,IAAI,IAAI3vI,CAAC,IAAIA,CAAC,CAAC8qB,CAAC,IAAI+kH,IAAI,EAAG;IAE9C,IAAK5tI,CAAC,CAACoU,CAAC,IAAIsd,EAAE,IAAI1xB,CAAC,CAACoU,CAAC,IAAI0d,EAAE,IAAI9xB,CAAC,CAACH,CAAC,IAAI8xB,EAAE,IAAI3xB,CAAC,CAACH,CAAC,IAAIkyB,EAAE,IAAI/xB,CAAC,KAAK1B,CAAC,IAAI0B,CAAC,KAAKxB,CAAC,IAC1EivI,eAAe,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAEjgB,CAAC,CAACoU,CAAC,EAAEpU,CAAC,CAACH,CAAE,CAAC,IAAIotI,IAAI,CAAEjtI,CAAC,CAACuD,IAAI,EAAEvD,CAAC,EAAEA,CAAC,CAAC4B,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrG5B,CAAC,GAAGA,CAAC,CAAC6tI,KAAK;IAEX,IAAK9vI,CAAC,CAACqW,CAAC,IAAIsd,EAAE,IAAI3zB,CAAC,CAACqW,CAAC,IAAI0d,EAAE,IAAI/zB,CAAC,CAAC8B,CAAC,IAAI8xB,EAAE,IAAI5zB,CAAC,CAAC8B,CAAC,IAAIkyB,EAAE,IAAIh0B,CAAC,KAAKO,CAAC,IAAIP,CAAC,KAAKS,CAAC,IAC1EivI,eAAe,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAEliB,CAAC,CAACqW,CAAC,EAAErW,CAAC,CAAC8B,CAAE,CAAC,IAAIotI,IAAI,CAAElvI,CAAC,CAACwF,IAAI,EAAExF,CAAC,EAAEA,CAAC,CAAC6D,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrG7D,CAAC,GAAGA,CAAC,CAAC+vI,KAAK;EAEZ;;EAEA;EACA,OAAQ9tI,CAAC,IAAIA,CAAC,CAAC6oB,CAAC,IAAI6kH,IAAI,EAAG;IAE1B,IAAK1tI,CAAC,CAACoU,CAAC,IAAIsd,EAAE,IAAI1xB,CAAC,CAACoU,CAAC,IAAI0d,EAAE,IAAI9xB,CAAC,CAACH,CAAC,IAAI8xB,EAAE,IAAI3xB,CAAC,CAACH,CAAC,IAAIkyB,EAAE,IAAI/xB,CAAC,KAAK1B,CAAC,IAAI0B,CAAC,KAAKxB,CAAC,IAC1EivI,eAAe,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAEjgB,CAAC,CAACoU,CAAC,EAAEpU,CAAC,CAACH,CAAE,CAAC,IAAIotI,IAAI,CAAEjtI,CAAC,CAACuD,IAAI,EAAEvD,CAAC,EAAEA,CAAC,CAAC4B,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrG5B,CAAC,GAAGA,CAAC,CAAC6tI,KAAK;EAEZ;;EAEA;EACA,OAAQ9vI,CAAC,IAAIA,CAAC,CAAC8qB,CAAC,IAAI+kH,IAAI,EAAG;IAE1B,IAAK7vI,CAAC,CAACqW,CAAC,IAAIsd,EAAE,IAAI3zB,CAAC,CAACqW,CAAC,IAAI0d,EAAE,IAAI/zB,CAAC,CAAC8B,CAAC,IAAI8xB,EAAE,IAAI5zB,CAAC,CAAC8B,CAAC,IAAIkyB,EAAE,IAAIh0B,CAAC,KAAKO,CAAC,IAAIP,CAAC,KAAKS,CAAC,IAC1EivI,eAAe,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAEliB,CAAC,CAACqW,CAAC,EAAErW,CAAC,CAAC8B,CAAE,CAAC,IAAIotI,IAAI,CAAElvI,CAAC,CAACwF,IAAI,EAAExF,CAAC,EAAEA,CAAC,CAAC6D,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrG7D,CAAC,GAAGA,CAAC,CAAC+vI,KAAK;EAEZ;EAEA,OAAO,IAAI;AAEZ;;AAEA;AACA,SAASP,sBAAsBA,CAAEzvF,KAAK,EAAEy4B,SAAS,EAAEu1D,GAAG,EAAG;EAExD,IAAI9rI,CAAC,GAAG89C,KAAK;EACb,GAAG;IAEF,IAAMx/C,CAAC,GAAG0B,CAAC,CAACuD,IAAI;MACfkT,CAAC,GAAGzW,CAAC,CAAC4B,IAAI,CAACA,IAAI;IAEhB,IAAK,CAAE4Z,MAAM,CAAEld,CAAC,EAAEmY,CAAE,CAAC,IAAIitC,UAAU,CAAEplD,CAAC,EAAE0B,CAAC,EAAEA,CAAC,CAAC4B,IAAI,EAAE6U,CAAE,CAAC,IAAIs3H,aAAa,CAAEzvI,CAAC,EAAEmY,CAAE,CAAC,IAAIs3H,aAAa,CAAEt3H,CAAC,EAAEnY,CAAE,CAAC,EAAG;MAE1Gi4E,SAAS,CAACn0E,IAAI,CAAE9D,CAAC,CAACF,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;MAC/Bv1D,SAAS,CAACn0E,IAAI,CAAEpC,CAAC,CAAC5B,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;MAC/Bv1D,SAAS,CAACn0E,IAAI,CAAEqU,CAAC,CAACrY,CAAC,GAAG0tI,GAAG,GAAG,CAAE,CAAC;;MAE/B;MACAe,UAAU,CAAE7sI,CAAE,CAAC;MACf6sI,UAAU,CAAE7sI,CAAC,CAAC4B,IAAK,CAAC;MAEpB5B,CAAC,GAAG89C,KAAK,GAAGrnC,CAAC;IAEd;IAEAzW,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK89C,KAAK;EAErB,OAAOgvF,YAAY,CAAE9sI,CAAE,CAAC;AAEzB;;AAEA;AACA,SAASwtI,WAAWA,CAAE1vF,KAAK,EAAEy4B,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAElE;EACA,IAAIjuI,CAAC,GAAGw/C,KAAK;EACb,GAAG;IAEF,IAAIrnC,CAAC,GAAGnY,CAAC,CAACsD,IAAI,CAACA,IAAI;IACnB,OAAQ6U,CAAC,KAAKnY,CAAC,CAACiF,IAAI,EAAG;MAEtB,IAAKjF,CAAC,CAACF,CAAC,KAAKqY,CAAC,CAACrY,CAAC,IAAI4vI,eAAe,CAAE1vI,CAAC,EAAEmY,CAAE,CAAC,EAAG;QAE7C;QACA,IAAIjY,CAAC,GAAGyvI,YAAY,CAAE3vI,CAAC,EAAEmY,CAAE,CAAC;;QAE5B;QACAnY,CAAC,GAAGwuI,YAAY,CAAExuI,CAAC,EAAEA,CAAC,CAACsD,IAAK,CAAC;QAC7BpD,CAAC,GAAGsuI,YAAY,CAAEtuI,CAAC,EAAEA,CAAC,CAACoD,IAAK,CAAC;;QAE7B;QACA6qI,YAAY,CAAEnuI,CAAC,EAAEi4E,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;QACzDE,YAAY,CAAEjuI,CAAC,EAAE+3E,SAAS,EAAEu1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;QACzD;MAED;MAEA91H,CAAC,GAAGA,CAAC,CAAC7U,IAAI;IAEX;IAEAtD,CAAC,GAAGA,CAAC,CAACsD,IAAI;EAEX,CAAC,QAAStD,CAAC,KAAKw/C,KAAK;AAEtB;;AAEA;AACA,SAAS0uF,cAAcA,CAAE1nH,IAAI,EAAE+mH,WAAW,EAAEI,SAAS,EAAEH,GAAG,EAAG;EAE5D,IAAMoC,KAAK,GAAG,EAAE;EAChB,IAAI9vI,CAAC,EAAEg0B,GAAG,EAAE0rB,KAAK,EAAEiG,GAAG,EAAE+uC,IAAI;EAE5B,KAAM10F,CAAC,GAAG,CAAC,EAAEg0B,GAAG,GAAGy5G,WAAW,CAACppI,MAAM,EAAErE,CAAC,GAAGg0B,GAAG,EAAEh0B,CAAC,EAAG,EAAG;IAEtD0/C,KAAK,GAAG+tF,WAAW,CAAEztI,CAAC,CAAE,GAAG0tI,GAAG;IAC9B/nF,GAAG,GAAG3lD,CAAC,GAAGg0B,GAAG,GAAG,CAAC,GAAGy5G,WAAW,CAAEztI,CAAC,GAAG,CAAC,CAAE,GAAG0tI,GAAG,GAAGhnH,IAAI,CAACriB,MAAM;IAC5DqwF,IAAI,GAAGo5C,UAAU,CAAEpnH,IAAI,EAAEg5B,KAAK,EAAEiG,GAAG,EAAE+nF,GAAG,EAAE,KAAM,CAAC;IACjD,IAAKh5C,IAAI,KAAKA,IAAI,CAAClxF,IAAI,EAAGkxF,IAAI,CAACk6C,OAAO,GAAG,IAAI;IAC7CkB,KAAK,CAAC9rI,IAAI,CAAE+rI,WAAW,CAAEr7C,IAAK,CAAE,CAAC;EAElC;EAEAo7C,KAAK,CAACt1D,IAAI,CAAEw1D,QAAS,CAAC;;EAEtB;EACA,KAAMhwI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8vI,KAAK,CAACzrI,MAAM,EAAErE,CAAC,EAAG,EAAG;IAErC6tI,SAAS,GAAGoC,aAAa,CAAEH,KAAK,CAAE9vI,CAAC,CAAE,EAAE6tI,SAAU,CAAC;EAEnD;EAEA,OAAOA,SAAS;AAEjB;AAEA,SAASmC,QAAQA,CAAE9vI,CAAC,EAAEmY,CAAC,EAAG;EAEzB,OAAOnY,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC;AAEjB;;AAEA;AACA,SAASi6H,aAAaA,CAAE3C,IAAI,EAAEO,SAAS,EAAG;EAEzC,IAAMqC,MAAM,GAAGC,cAAc,CAAE7C,IAAI,EAAEO,SAAU,CAAC;EAChD,IAAK,CAAEqC,MAAM,EAAG;IAEf,OAAOrC,SAAS;EAEjB;EAEA,IAAMuC,aAAa,GAAGP,YAAY,CAAEK,MAAM,EAAE5C,IAAK,CAAC;;EAElD;EACAoB,YAAY,CAAE0B,aAAa,EAAEA,aAAa,CAAC5sI,IAAK,CAAC;EACjD,OAAOkrI,YAAY,CAAEwB,MAAM,EAAEA,MAAM,CAAC1sI,IAAK,CAAC;AAE3C;;AAEA;AACA,SAAS2sI,cAAcA,CAAE7C,IAAI,EAAEO,SAAS,EAAG;EAE1C,IAAIjsI,CAAC,GAAGisI,SAAS;IAChBj5G,EAAE,GAAG,CAAE6C,QAAQ;IACf3hB,CAAC;EAEF,IAAMu6H,EAAE,GAAG/C,IAAI,CAACt3H,CAAC;IAAEs6H,EAAE,GAAGhD,IAAI,CAAC7rI,CAAC;;EAE9B;EACA;EACA,GAAG;IAEF,IAAK6uI,EAAE,IAAI1uI,CAAC,CAACH,CAAC,IAAI6uI,EAAE,IAAI1uI,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,IAAIG,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,KAAKG,CAAC,CAACH,CAAC,EAAG;MAEtD,IAAMuU,CAAC,GAAGpU,CAAC,CAACoU,CAAC,GAAG,CAAEs6H,EAAE,GAAG1uI,CAAC,CAACH,CAAC,KAAOG,CAAC,CAAC4B,IAAI,CAACwS,CAAC,GAAGpU,CAAC,CAACoU,CAAC,CAAE,IAAKpU,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,GAAGG,CAAC,CAACH,CAAC,CAAE;MACtE,IAAKuU,CAAC,IAAIq6H,EAAE,IAAIr6H,CAAC,GAAG4e,EAAE,EAAG;QAExBA,EAAE,GAAG5e,CAAC;QACNF,CAAC,GAAGlU,CAAC,CAACoU,CAAC,GAAGpU,CAAC,CAAC4B,IAAI,CAACwS,CAAC,GAAGpU,CAAC,GAAGA,CAAC,CAAC4B,IAAI;QAC/B,IAAKwS,CAAC,KAAKq6H,EAAE,EAAG,OAAOv6H,CAAC,CAAC,CAAC;MAE3B;IAED;;IAEAlU,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAKisI,SAAS;EAEzB,IAAK,CAAE/3H,CAAC,EAAG,OAAO,IAAI;;EAEtB;EACA;EACA;;EAEA,IAAMxQ,IAAI,GAAGwQ,CAAC;IACby6H,EAAE,GAAGz6H,CAAC,CAACE,CAAC;IACRw6H,EAAE,GAAG16H,CAAC,CAACrU,CAAC;EACT,IAAIgvI,MAAM,GAAGh5G,QAAQ;IAAE2zB,GAAG;EAE1BxpD,CAAC,GAAGkU,CAAC;EAEL,GAAG;IAEF,IAAKu6H,EAAE,IAAIzuI,CAAC,CAACoU,CAAC,IAAIpU,CAAC,CAACoU,CAAC,IAAIu6H,EAAE,IAAIF,EAAE,KAAKzuI,CAAC,CAACoU,CAAC,IACvCq5H,eAAe,CAAEiB,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGz7G,EAAE,EAAE07G,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEF,EAAE,GAAGE,EAAE,GAAG57G,EAAE,GAAGy7G,EAAE,EAAEC,EAAE,EAAE1uI,CAAC,CAACoU,CAAC,EAAEpU,CAAC,CAACH,CAAE,CAAC,EAAG;MAErF2pD,GAAG,GAAGr2C,IAAI,CAAC6B,GAAG,CAAE05H,EAAE,GAAG1uI,CAAC,CAACH,CAAE,CAAC,IAAK4uI,EAAE,GAAGzuI,CAAC,CAACoU,CAAC,CAAE,CAAC,CAAC;;MAE3C,IAAK25H,aAAa,CAAE/tI,CAAC,EAAE0rI,IAAK,CAAC,KAAMliF,GAAG,GAAGqlF,MAAM,IAAMrlF,GAAG,KAAKqlF,MAAM,KAAM7uI,CAAC,CAACoU,CAAC,GAAGF,CAAC,CAACE,CAAC,IAAMpU,CAAC,CAACoU,CAAC,KAAKF,CAAC,CAACE,CAAC,IAAI06H,oBAAoB,CAAE56H,CAAC,EAAElU,CAAE,CAAG,CAAI,CAAE,EAAG;QAE7IkU,CAAC,GAAGlU,CAAC;QACL6uI,MAAM,GAAGrlF,GAAG;MAEb;IAED;IAEAxpD,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK0D,IAAI;EAEpB,OAAOwQ,CAAC;AAET;;AAEA;AACA,SAAS46H,oBAAoBA,CAAE56H,CAAC,EAAElU,CAAC,EAAG;EAErC,OAAOitI,IAAI,CAAE/4H,CAAC,CAAC3Q,IAAI,EAAE2Q,CAAC,EAAElU,CAAC,CAACuD,IAAK,CAAC,GAAG,CAAC,IAAI0pI,IAAI,CAAEjtI,CAAC,CAAC4B,IAAI,EAAEsS,CAAC,EAAEA,CAAC,CAACtS,IAAK,CAAC,GAAG,CAAC;AAEtE;;AAEA;AACA,SAASwrI,UAAUA,CAAEtvF,KAAK,EAAEquF,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAEjD,IAAIvsI,CAAC,GAAG89C,KAAK;EACb,GAAG;IAEF,IAAK99C,CAAC,CAAC6oB,CAAC,KAAK,CAAC,EAAG7oB,CAAC,CAAC6oB,CAAC,GAAG8kH,MAAM,CAAE3tI,CAAC,CAACoU,CAAC,EAAEpU,CAAC,CAACH,CAAC,EAAEssI,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;IAC9DvsI,CAAC,CAAC6tI,KAAK,GAAG7tI,CAAC,CAACuD,IAAI;IAChBvD,CAAC,CAAC8tI,KAAK,GAAG9tI,CAAC,CAAC4B,IAAI;IAChB5B,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK89C,KAAK;EAErB99C,CAAC,CAAC6tI,KAAK,CAACC,KAAK,GAAG,IAAI;EACpB9tI,CAAC,CAAC6tI,KAAK,GAAG,IAAI;EAEdkB,UAAU,CAAE/uI,CAAE,CAAC;AAEhB;;AAEA;AACA;AACA,SAAS+uI,UAAUA,CAAEj8C,IAAI,EAAG;EAE3B,IAAI10F,CAAC;IAAE4B,CAAC;IAAEwW,CAAC;IAAE9Y,CAAC;IAAEsxI,IAAI;IAAEC,SAAS;IAAEC,KAAK;IAAEC,KAAK;IAC5CC,MAAM,GAAG,CAAC;EAEX,GAAG;IAEFpvI,CAAC,GAAG8yF,IAAI;IACRA,IAAI,GAAG,IAAI;IACXk8C,IAAI,GAAG,IAAI;IACXC,SAAS,GAAG,CAAC;IAEb,OAAQjvI,CAAC,EAAG;MAEXivI,SAAS,EAAG;MACZz4H,CAAC,GAAGxW,CAAC;MACLkvI,KAAK,GAAG,CAAC;MACT,KAAM9wI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgxI,MAAM,EAAEhxI,CAAC,EAAG,EAAG;QAE/B8wI,KAAK,EAAG;QACR14H,CAAC,GAAGA,CAAC,CAACs3H,KAAK;QACX,IAAK,CAAEt3H,CAAC,EAAG;MAEZ;MAEA24H,KAAK,GAAGC,MAAM;MAEd,OAAQF,KAAK,GAAG,CAAC,IAAMC,KAAK,GAAG,CAAC,IAAI34H,CAAG,EAAG;QAEzC,IAAK04H,KAAK,KAAK,CAAC,KAAMC,KAAK,KAAK,CAAC,IAAI,CAAE34H,CAAC,IAAIxW,CAAC,CAAC6oB,CAAC,IAAIrS,CAAC,CAACqS,CAAC,CAAE,EAAG;UAE1DnrB,CAAC,GAAGsC,CAAC;UACLA,CAAC,GAAGA,CAAC,CAAC8tI,KAAK;UACXoB,KAAK,EAAG;QAET,CAAC,MAAM;UAENxxI,CAAC,GAAG8Y,CAAC;UACLA,CAAC,GAAGA,CAAC,CAACs3H,KAAK;UACXqB,KAAK,EAAG;QAET;QAEA,IAAKH,IAAI,EAAGA,IAAI,CAAClB,KAAK,GAAGpwI,CAAC,CAAC,KACtBo1F,IAAI,GAAGp1F,CAAC;QAEbA,CAAC,CAACmwI,KAAK,GAAGmB,IAAI;QACdA,IAAI,GAAGtxI,CAAC;MAET;MAEAsC,CAAC,GAAGwW,CAAC;IAEN;IAEAw4H,IAAI,CAAClB,KAAK,GAAG,IAAI;IACjBsB,MAAM,IAAI,CAAC;EAEZ,CAAC,QAASH,SAAS,GAAG,CAAC;EAEvB,OAAOn8C,IAAI;AAEZ;;AAEA;AACA,SAAS66C,MAAMA,CAAEv5H,CAAC,EAAEvU,CAAC,EAAEssI,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAE5C;EACAn4H,CAAC,GAAG,CAAEA,CAAC,GAAG+3H,IAAI,IAAKI,OAAO,GAAG,CAAC;EAC9B1sI,CAAC,GAAG,CAAEA,CAAC,GAAGusI,IAAI,IAAKG,OAAO,GAAG,CAAC;EAE9Bn4H,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnCvU,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnC,OAAOuU,CAAC,GAAKvU,CAAC,IAAI,CAAG;AAEtB;;AAEA;AACA,SAASsuI,WAAWA,CAAErwF,KAAK,EAAG;EAE7B,IAAI99C,CAAC,GAAG89C,KAAK;IACZuxF,QAAQ,GAAGvxF,KAAK;EACjB,GAAG;IAEF,IAAK99C,CAAC,CAACoU,CAAC,GAAGi7H,QAAQ,CAACj7H,CAAC,IAAMpU,CAAC,CAACoU,CAAC,KAAKi7H,QAAQ,CAACj7H,CAAC,IAAIpU,CAAC,CAACH,CAAC,GAAGwvI,QAAQ,CAACxvI,CAAG,EAAGwvI,QAAQ,GAAGrvI,CAAC;IAClFA,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK89C,KAAK;EAErB,OAAOuxF,QAAQ;AAEhB;;AAEA;AACA,SAAS5B,eAAeA,CAAEx5G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErU,EAAE,EAAEC,EAAE,EAAE++G,EAAE,EAAEC,EAAE,EAAG;EAE1D,OAAO,CAAEj/G,EAAE,GAAGg/G,EAAE,KAAO9qG,EAAE,GAAG+qG,EAAE,CAAE,IAAI,CAAEhrG,EAAE,GAAG+qG,EAAE,KAAO/+G,EAAE,GAAGg/G,EAAE,CAAE,IACnD,CAAEhrG,EAAE,GAAG+qG,EAAE,KAAO3qG,EAAE,GAAG4qG,EAAE,CAAE,IAAI,CAAE7qG,EAAE,GAAG4qG,EAAE,KAAO9qG,EAAE,GAAG+qG,EAAE,CAAE,IACtD,CAAE7qG,EAAE,GAAG4qG,EAAE,KAAO/+G,EAAE,GAAGg/G,EAAE,CAAE,IAAI,CAAEj/G,EAAE,GAAGg/G,EAAE,KAAO3qG,EAAE,GAAG4qG,EAAE,CAAE;AAEjE;;AAEA;AACA,SAAS+O,eAAeA,CAAE1vI,CAAC,EAAEmY,CAAC,EAAG;EAEhC,OAAOnY,CAAC,CAACsD,IAAI,CAACxD,CAAC,KAAKqY,CAAC,CAACrY,CAAC,IAAIE,CAAC,CAACiF,IAAI,CAACnF,CAAC,KAAKqY,CAAC,CAACrY,CAAC,IAAI,CAAEkxI,iBAAiB,CAAEhxI,CAAC,EAAEmY,CAAE,CAAC;EAAI;EAClEs3H,aAAa,CAAEzvI,CAAC,EAAEmY,CAAE,CAAC,IAAIs3H,aAAa,CAAEt3H,CAAC,EAAEnY,CAAE,CAAC,IAAIixI,YAAY,CAAEjxI,CAAC,EAAEmY,CAAE,CAAC;EAAI;EACzEw2H,IAAI,CAAE3uI,CAAC,CAACiF,IAAI,EAAEjF,CAAC,EAAEmY,CAAC,CAAClT,IAAK,CAAC,IAAI0pI,IAAI,CAAE3uI,CAAC,EAAEmY,CAAC,CAAClT,IAAI,EAAEkT,CAAE,CAAC,CAAE;EAAI;EACzD+E,MAAM,CAAEld,CAAC,EAAEmY,CAAE,CAAC,IAAIw2H,IAAI,CAAE3uI,CAAC,CAACiF,IAAI,EAAEjF,CAAC,EAAEA,CAAC,CAACsD,IAAK,CAAC,GAAG,CAAC,IAAIqrI,IAAI,CAAEx2H,CAAC,CAAClT,IAAI,EAAEkT,CAAC,EAAEA,CAAC,CAAC7U,IAAK,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;AAEhG;;AAEA;AACA,SAASqrI,IAAIA,CAAEjtI,CAAC,EAAEwW,CAAC,EAAE5Y,CAAC,EAAG;EAExB,OAAO,CAAE4Y,CAAC,CAAC3W,CAAC,GAAGG,CAAC,CAACH,CAAC,KAAOjC,CAAC,CAACwW,CAAC,GAAGoC,CAAC,CAACpC,CAAC,CAAE,GAAG,CAAEoC,CAAC,CAACpC,CAAC,GAAGpU,CAAC,CAACoU,CAAC,KAAOxW,CAAC,CAACiC,CAAC,GAAG2W,CAAC,CAAC3W,CAAC,CAAE;AAErE;;AAEA;AACA,SAAS2b,MAAMA,CAAEse,EAAE,EAAEC,EAAE,EAAG;EAEzB,OAAOD,EAAE,CAAC1lB,CAAC,KAAK2lB,EAAE,CAAC3lB,CAAC,IAAI0lB,EAAE,CAACj6B,CAAC,KAAKk6B,EAAE,CAACl6B,CAAC;AAEtC;;AAEA;AACA,SAAS6jD,UAAUA,CAAE5pB,EAAE,EAAE01G,EAAE,EAAEz1G,EAAE,EAAE01G,EAAE,EAAG;EAErC,IAAMC,EAAE,GAAG9xG,IAAI,CAAEqvG,IAAI,CAAEnzG,EAAE,EAAE01G,EAAE,EAAEz1G,EAAG,CAAE,CAAC;EACrC,IAAM41G,EAAE,GAAG/xG,IAAI,CAAEqvG,IAAI,CAAEnzG,EAAE,EAAE01G,EAAE,EAAEC,EAAG,CAAE,CAAC;EACrC,IAAMG,EAAE,GAAGhyG,IAAI,CAAEqvG,IAAI,CAAElzG,EAAE,EAAE01G,EAAE,EAAE31G,EAAG,CAAE,CAAC;EACrC,IAAM+1G,EAAE,GAAGjyG,IAAI,CAAEqvG,IAAI,CAAElzG,EAAE,EAAE01G,EAAE,EAAED,EAAG,CAAE,CAAC;EAErC,IAAKE,EAAE,KAAKC,EAAE,IAAIC,EAAE,KAAKC,EAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;EAE3C,IAAKH,EAAE,KAAK,CAAC,IAAII,SAAS,CAAEh2G,EAAE,EAAEC,EAAE,EAAEy1G,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKG,EAAE,KAAK,CAAC,IAAIG,SAAS,CAAEh2G,EAAE,EAAE21G,EAAE,EAAED,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIE,SAAS,CAAE/1G,EAAE,EAAED,EAAE,EAAE21G,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIC,SAAS,CAAE/1G,EAAE,EAAEy1G,EAAE,EAAEC,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;;EAExD,OAAO,KAAK;AAEb;;AAEA;AACA,SAASK,SAASA,CAAE9vI,CAAC,EAAEwW,CAAC,EAAE5Y,CAAC,EAAG;EAE7B,OAAO4Y,CAAC,CAACpC,CAAC,IAAIjB,IAAI,CAACa,GAAG,CAAEhU,CAAC,CAACoU,CAAC,EAAExW,CAAC,CAACwW,CAAE,CAAC,IAAIoC,CAAC,CAACpC,CAAC,IAAIjB,IAAI,CAACY,GAAG,CAAE/T,CAAC,CAACoU,CAAC,EAAExW,CAAC,CAACwW,CAAE,CAAC,IAAIoC,CAAC,CAAC3W,CAAC,IAAIsT,IAAI,CAACa,GAAG,CAAEhU,CAAC,CAACH,CAAC,EAAEjC,CAAC,CAACiC,CAAE,CAAC,IAAI2W,CAAC,CAAC3W,CAAC,IAAIsT,IAAI,CAACY,GAAG,CAAE/T,CAAC,CAACH,CAAC,EAAEjC,CAAC,CAACiC,CAAE,CAAC;AAEhI;AAEA,SAAS+9B,IAAIA,CAAEmyG,GAAG,EAAG;EAEpB,OAAOA,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC;AAEvC;;AAEA;AACA,SAAST,iBAAiBA,CAAEhxI,CAAC,EAAEmY,CAAC,EAAG;EAElC,IAAIzW,CAAC,GAAG1B,CAAC;EACT,GAAG;IAEF,IAAK0B,CAAC,CAAC5B,CAAC,KAAKE,CAAC,CAACF,CAAC,IAAI4B,CAAC,CAAC4B,IAAI,CAACxD,CAAC,KAAKE,CAAC,CAACF,CAAC,IAAI4B,CAAC,CAAC5B,CAAC,KAAKqY,CAAC,CAACrY,CAAC,IAAI4B,CAAC,CAAC4B,IAAI,CAACxD,CAAC,KAAKqY,CAAC,CAACrY,CAAC,IACtEslD,UAAU,CAAE1jD,CAAC,EAAEA,CAAC,CAAC4B,IAAI,EAAEtD,CAAC,EAAEmY,CAAE,CAAC,EAAG,OAAO,IAAI;IAC5CzW,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK1B,CAAC;EAEjB,OAAO,KAAK;AAEb;;AAEA;AACA,SAASyvI,aAAaA,CAAEzvI,CAAC,EAAEmY,CAAC,EAAG;EAE9B,OAAOw2H,IAAI,CAAE3uI,CAAC,CAACiF,IAAI,EAAEjF,CAAC,EAAEA,CAAC,CAACsD,IAAK,CAAC,GAAG,CAAC,GACnCqrI,IAAI,CAAE3uI,CAAC,EAAEmY,CAAC,EAAEnY,CAAC,CAACsD,IAAK,CAAC,IAAI,CAAC,IAAIqrI,IAAI,CAAE3uI,CAAC,EAAEA,CAAC,CAACiF,IAAI,EAAEkT,CAAE,CAAC,IAAI,CAAC,GACtDw2H,IAAI,CAAE3uI,CAAC,EAAEmY,CAAC,EAAEnY,CAAC,CAACiF,IAAK,CAAC,GAAG,CAAC,IAAI0pI,IAAI,CAAE3uI,CAAC,EAAEA,CAAC,CAACsD,IAAI,EAAE6U,CAAE,CAAC,GAAG,CAAC;AAEtD;;AAEA;AACA,SAAS84H,YAAYA,CAAEjxI,CAAC,EAAEmY,CAAC,EAAG;EAE7B,IAAIzW,CAAC,GAAG1B,CAAC;IACR0xI,MAAM,GAAG,KAAK;EACf,IAAMhR,EAAE,GAAG,CAAE1gI,CAAC,CAAC8V,CAAC,GAAGqC,CAAC,CAACrC,CAAC,IAAK,CAAC;IAC3B6qH,EAAE,GAAG,CAAE3gI,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC,IAAK,CAAC;EACvB,GAAG;IAEF,IAASG,CAAC,CAACH,CAAC,GAAGo/H,EAAE,KAASj/H,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,GAAGo/H,EAAI,IAAMj/H,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,KAAKG,CAAC,CAACH,CAAC,IAC5Dm/H,EAAE,GAAG,CAAEh/H,CAAC,CAAC4B,IAAI,CAACwS,CAAC,GAAGpU,CAAC,CAACoU,CAAC,KAAO6qH,EAAE,GAAGj/H,CAAC,CAACH,CAAC,CAAE,IAAKG,CAAC,CAAC4B,IAAI,CAAC/B,CAAC,GAAGG,CAAC,CAACH,CAAC,CAAE,GAAGG,CAAC,CAACoU,CAAG,EACrE47H,MAAM,GAAG,CAAEA,MAAM;IAClBhwI,CAAC,GAAGA,CAAC,CAAC4B,IAAI;EAEX,CAAC,QAAS5B,CAAC,KAAK1B,CAAC;EAEjB,OAAO0xI,MAAM;AAEd;;AAEA;AACA;AACA,SAAS/B,YAAYA,CAAE3vI,CAAC,EAAEmY,CAAC,EAAG;EAE7B,IAAMnC,EAAE,GAAG,IAAI27H,IAAI,CAAE3xI,CAAC,CAACF,CAAC,EAAEE,CAAC,CAAC8V,CAAC,EAAE9V,CAAC,CAACuB,CAAE,CAAC;IACnC2U,EAAE,GAAG,IAAIy7H,IAAI,CAAEx5H,CAAC,CAACrY,CAAC,EAAEqY,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAAC5W,CAAE,CAAC;IAC9BqwI,EAAE,GAAG5xI,CAAC,CAACsD,IAAI;IACXuuI,EAAE,GAAG15H,CAAC,CAAClT,IAAI;EAEZjF,CAAC,CAACsD,IAAI,GAAG6U,CAAC;EACVA,CAAC,CAAClT,IAAI,GAAGjF,CAAC;EAEVgW,EAAE,CAAC1S,IAAI,GAAGsuI,EAAE;EACZA,EAAE,CAAC3sI,IAAI,GAAG+Q,EAAE;EAEZE,EAAE,CAAC5S,IAAI,GAAG0S,EAAE;EACZA,EAAE,CAAC/Q,IAAI,GAAGiR,EAAE;EAEZ27H,EAAE,CAACvuI,IAAI,GAAG4S,EAAE;EACZA,EAAE,CAACjR,IAAI,GAAG4sI,EAAE;EAEZ,OAAO37H,EAAE;AAEV;;AAEA;AACA,SAASo4H,UAAUA,CAAExuI,CAAC,EAAEgW,CAAC,EAAEvU,CAAC,EAAE47H,IAAI,EAAG;EAEpC,IAAMz7H,CAAC,GAAG,IAAIiwI,IAAI,CAAE7xI,CAAC,EAAEgW,CAAC,EAAEvU,CAAE,CAAC;EAE7B,IAAK,CAAE47H,IAAI,EAAG;IAEbz7H,CAAC,CAACuD,IAAI,GAAGvD,CAAC;IACVA,CAAC,CAAC4B,IAAI,GAAG5B,CAAC;EAEX,CAAC,MAAM;IAENA,CAAC,CAAC4B,IAAI,GAAG65H,IAAI,CAAC75H,IAAI;IAClB5B,CAAC,CAACuD,IAAI,GAAGk4H,IAAI;IACbA,IAAI,CAAC75H,IAAI,CAAC2B,IAAI,GAAGvD,CAAC;IAClBy7H,IAAI,CAAC75H,IAAI,GAAG5B,CAAC;EAEd;EAEA,OAAOA,CAAC;AAET;AAEA,SAAS6sI,UAAUA,CAAE7sI,CAAC,EAAG;EAExBA,CAAC,CAAC4B,IAAI,CAAC2B,IAAI,GAAGvD,CAAC,CAACuD,IAAI;EACpBvD,CAAC,CAACuD,IAAI,CAAC3B,IAAI,GAAG5B,CAAC,CAAC4B,IAAI;EAEpB,IAAK5B,CAAC,CAAC6tI,KAAK,EAAG7tI,CAAC,CAAC6tI,KAAK,CAACC,KAAK,GAAG9tI,CAAC,CAAC8tI,KAAK;EACtC,IAAK9tI,CAAC,CAAC8tI,KAAK,EAAG9tI,CAAC,CAAC8tI,KAAK,CAACD,KAAK,GAAG7tI,CAAC,CAAC6tI,KAAK;AAEvC;AAEA,SAASoC,IAAIA,CAAE7xI,CAAC,EAAEgW,CAAC,EAAEvU,CAAC,EAAG;EAExB;EACA,IAAI,CAACzB,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAACgW,CAAC,GAAGA,CAAC;EACV,IAAI,CAACvU,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAAC0D,IAAI,GAAG,IAAI;EAChB,IAAI,CAAC3B,IAAI,GAAG,IAAI;;EAEhB;EACA,IAAI,CAACinB,CAAC,GAAG,CAAC;;EAEV;EACA,IAAI,CAACglH,KAAK,GAAG,IAAI;EACjB,IAAI,CAACC,KAAK,GAAG,IAAI;;EAEjB;EACA,IAAI,CAACd,OAAO,GAAG,KAAK;AAErB;AAEA,SAASL,UAAUA,CAAE7nH,IAAI,EAAEg5B,KAAK,EAAEiG,GAAG,EAAE+nF,GAAG,EAAG;EAE5C,IAAI93D,GAAG,GAAG,CAAC;EACX,KAAM,IAAI51E,CAAC,GAAG0/C,KAAK,EAAElkB,CAAC,GAAGmqB,GAAG,GAAG+nF,GAAG,EAAE1tI,CAAC,GAAG2lD,GAAG,EAAE3lD,CAAC,IAAI0tI,GAAG,EAAG;IAEvD93D,GAAG,IAAI,CAAElvD,IAAI,CAAE8U,CAAC,CAAE,GAAG9U,IAAI,CAAE1mB,CAAC,CAAE,KAAO0mB,IAAI,CAAE1mB,CAAC,GAAG,CAAC,CAAE,GAAG0mB,IAAI,CAAE8U,CAAC,GAAG,CAAC,CAAE,CAAE;IACpEA,CAAC,GAAGx7B,CAAC;EAEN;EAEA,OAAO41E,GAAG;AAEX;AAAC,IAEKo8D,UAAU,GAAA5qI,OAAA,CAAA4qI,UAAA;EAAA,SAAAA,WAAA;IAAAlsI,eAAA,OAAAksI,UAAA;EAAA;EAAAzrI,YAAA,CAAAyrI,UAAA;IAAA1rI,GAAA;IAAAvG,KAAA;IAEf;;IAEA,SAAA8uI,KAAaoD,OAAO,EAAG;MAEtB,IAAMtyI,CAAC,GAAGsyI,OAAO,CAAC5tI,MAAM;MACxB,IAAInE,CAAC,GAAG,GAAG;MAEX,KAAM,IAAI0B,CAAC,GAAGjC,CAAC,GAAG,CAAC,EAAEyY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzY,CAAC,EAAEiC,CAAC,GAAGwW,CAAC,EAAG,EAAG;QAE7ClY,CAAC,IAAI+xI,OAAO,CAAErwI,CAAC,CAAE,CAACoU,CAAC,GAAGi8H,OAAO,CAAE75H,CAAC,CAAE,CAAC3W,CAAC,GAAGwwI,OAAO,CAAE75H,CAAC,CAAE,CAACpC,CAAC,GAAGi8H,OAAO,CAAErwI,CAAC,CAAE,CAACH,CAAC;MAEvE;MAEA,OAAOvB,CAAC,GAAG,GAAG;IAEf;EAAC;IAAAoG,GAAA;IAAAvG,KAAA,EAED,SAAAmyI,YAAoB5M,GAAG,EAAG;MAEzB,OAAO0M,UAAU,CAACnD,IAAI,CAAEvJ,GAAI,CAAC,GAAG,CAAC;IAElC;EAAC;IAAAh/H,GAAA;IAAAvG,KAAA,EAED,SAAAoyI,iBAAyBF,OAAO,EAAE/E,KAAK,EAAG;MAEzC,IAAM1mF,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrB,IAAMinF,WAAW,GAAG,EAAE,CAAC,CAAC;MACxB,IAAM2E,KAAK,GAAG,EAAE,CAAC,CAAC;;MAElBC,eAAe,CAAEJ,OAAQ,CAAC;MAC1BK,UAAU,CAAE9rF,QAAQ,EAAEyrF,OAAQ,CAAC;;MAE/B;;MAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC5tI,MAAM;MAE9B6oI,KAAK,CAAC/qI,OAAO,CAAEkwI,eAAgB,CAAC;MAEhC,KAAM,IAAIryI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGktI,KAAK,CAAC7oI,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEzCytI,WAAW,CAACzpI,IAAI,CAAEuuI,SAAU,CAAC;QAC7BA,SAAS,IAAIrF,KAAK,CAAEltI,CAAC,CAAE,CAACqE,MAAM;QAC9BiuI,UAAU,CAAE9rF,QAAQ,EAAE0mF,KAAK,CAAEltI,CAAC,CAAG,CAAC;MAEnC;;MAEA;;MAEA,IAAMm4E,SAAS,GAAGo1D,MAAM,CAACC,WAAW,CAAEhnF,QAAQ,EAAEinF,WAAY,CAAC;;MAE7D;;MAEA,KAAM,IAAIztI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGm4E,SAAS,CAAC9zE,MAAM,EAAErE,IAAC,IAAI,CAAC,EAAG;QAE/CoyI,KAAK,CAACpuI,IAAI,CAAEm0E,SAAS,CAAC9yE,KAAK,CAAErF,IAAC,EAAEA,IAAC,GAAG,CAAE,CAAE,CAAC;MAE1C;MAEA,OAAOoyI,KAAK;IAEb;EAAC;EAAA,OAAAJ,UAAA;AAAA;AAIF,SAASK,eAAeA,CAAEp6G,MAAM,EAAG;EAElC,IAAM32B,CAAC,GAAG22B,MAAM,CAAC5zB,MAAM;EAEvB,IAAK/C,CAAC,GAAG,CAAC,IAAI22B,MAAM,CAAE32B,CAAC,GAAG,CAAC,CAAE,CAAC8b,MAAM,CAAE6a,MAAM,CAAE,CAAC,CAAG,CAAC,EAAG;IAErDA,MAAM,CAAC/yB,GAAG,CAAC,CAAC;EAEb;AAED;AAEA,SAASotI,UAAUA,CAAE9rF,QAAQ,EAAEyrF,OAAO,EAAG;EAExC,KAAM,IAAIjyI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiyI,OAAO,CAAC5tI,MAAM,EAAErE,CAAC,EAAG,EAAG;IAE3CwmD,QAAQ,CAACxiD,IAAI,CAAEiuI,OAAO,CAAEjyI,CAAC,CAAE,CAACgW,CAAE,CAAC;IAC/BwwC,QAAQ,CAACxiD,IAAI,CAAEiuI,OAAO,CAAEjyI,CAAC,CAAE,CAACyB,CAAE,CAAC;EAEhC;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAuBM+wI,eAAe,GAAAprI,OAAA,CAAAorI,eAAA,0BAAAC,gBAAA;EAAA5qH,SAAA,CAAA2qH,eAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA3qH,YAAA,CAAAyqH,eAAA;EAEpB,SAAAA,gBAAahnG,MAAM,GAAG,IAAIshG,KAAK,CAAE,CAAE,IAAI/yH,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,CAAG,CAAC,EAAEyS,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAmmH,OAAA;IAAA7sI,eAAA,OAAA0sI,eAAA;IAEjKG,OAAA,GAAAD,QAAA,CAAAtxI,IAAA;IAEAuxI,OAAA,CAAKzxI,IAAI,GAAG,iBAAiB;IAE7ByxI,OAAA,CAAKnmG,UAAU,GAAG;MACjBhB,MAAM,EAAEA,MAAM;MACdhf,OAAO,EAAEA;IACV,CAAC;IAEDgf,MAAM,GAAGnkB,KAAK,CAACC,OAAO,CAAEkkB,MAAO,CAAC,GAAGA,MAAM,GAAG,CAAEA,MAAM,CAAE;IAEtD,IAAM+a,KAAK,GAAA39B,sBAAA,CAAA+pH,OAAA,CAAO;IAElB,IAAMC,aAAa,GAAG,EAAE;IACxB,IAAMC,OAAO,GAAG,EAAE;IAElB,KAAM,IAAI7yI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkqC,MAAM,CAACnnC,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEjD,IAAMysC,KAAK,GAAGjB,MAAM,CAAExrC,CAAC,CAAE;MACzB8yI,QAAQ,CAAErmG,KAAM,CAAC;IAElB;;IAEA;;IAEAkmG,OAAA,CAAK7yF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEy0F,aAAa,EAAE,CAAE,CAAE,CAAC;IAC/ED,OAAA,CAAK7yF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE00F,OAAO,EAAE,CAAE,CAAE,CAAC;IAEnEF,OAAA,CAAKzwF,oBAAoB,CAAC,CAAC;;IAE3B;;IAEA,SAAS4wF,QAAQA,CAAErmG,KAAK,EAAG;MAE1B,IAAMsmG,WAAW,GAAG,EAAE;;MAEtB;;MAEA,IAAMC,aAAa,GAAGxmH,OAAO,CAACwmH,aAAa,KAAKhsI,SAAS,GAAGwlB,OAAO,CAACwmH,aAAa,GAAG,EAAE;MACtF,IAAMC,KAAK,GAAGzmH,OAAO,CAACymH,KAAK,KAAKjsI,SAAS,GAAGwlB,OAAO,CAACymH,KAAK,GAAG,CAAC;MAC7D,IAAMtmH,KAAK,GAAGH,OAAO,CAACG,KAAK,KAAK3lB,SAAS,GAAGwlB,OAAO,CAACG,KAAK,GAAG,CAAC;MAE7D,IAAIumH,YAAY,GAAG1mH,OAAO,CAAC0mH,YAAY,KAAKlsI,SAAS,GAAGwlB,OAAO,CAAC0mH,YAAY,GAAG,IAAI;MACnF,IAAIC,cAAc,GAAG3mH,OAAO,CAAC2mH,cAAc,KAAKnsI,SAAS,GAAGwlB,OAAO,CAAC2mH,cAAc,GAAG,GAAG;MACxF,IAAIC,SAAS,GAAG5mH,OAAO,CAAC4mH,SAAS,KAAKpsI,SAAS,GAAGwlB,OAAO,CAAC4mH,SAAS,GAAGD,cAAc,GAAG,GAAG;MAC1F,IAAIE,WAAW,GAAG7mH,OAAO,CAAC6mH,WAAW,KAAKrsI,SAAS,GAAGwlB,OAAO,CAAC6mH,WAAW,GAAG,CAAC;MAC7E,IAAIC,aAAa,GAAG9mH,OAAO,CAAC8mH,aAAa,KAAKtsI,SAAS,GAAGwlB,OAAO,CAAC8mH,aAAa,GAAG,CAAC;MAEnF,IAAMC,WAAW,GAAG/mH,OAAO,CAAC+mH,WAAW;MAEvC,IAAMC,KAAK,GAAGhnH,OAAO,CAACinH,WAAW,KAAKzsI,SAAS,GAAGwlB,OAAO,CAACinH,WAAW,GAAGC,gBAAgB;;MAExF;;MAEA,IAAIC,UAAU;QAAEC,aAAa,GAAG,KAAK;MACrC,IAAIC,UAAU,EAAEC,QAAQ,EAAEt9G,MAAM,EAAEu9G,SAAS;MAE3C,IAAKR,WAAW,EAAG;QAElBI,UAAU,GAAGJ,WAAW,CAACxW,eAAe,CAAEkW,KAAM,CAAC;QAEjDW,aAAa,GAAG,IAAI;QACpBV,YAAY,GAAG,KAAK,CAAC,CAAC;;QAEtB;;QAEA;;QAEAW,UAAU,GAAGN,WAAW,CAACpV,mBAAmB,CAAE8U,KAAK,EAAE,KAAM,CAAC;;QAE5D;;QAEAa,QAAQ,GAAG,IAAI3/G,OAAO,CAAC,CAAC;QACxBqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;QACtB4/G,SAAS,GAAG,IAAI5/G,OAAO,CAAC,CAAC;MAE1B;;MAEA;;MAEA,IAAK,CAAE++G,YAAY,EAAG;QAErBI,aAAa,GAAG,CAAC;QACjBH,cAAc,GAAG,CAAC;QAClBC,SAAS,GAAG,CAAC;QACbC,WAAW,GAAG,CAAC;MAEhB;;MAEA;;MAEA,IAAMW,WAAW,GAAGvnG,KAAK,CAAC4gG,aAAa,CAAE2F,aAAc,CAAC;MAExD,IAAIxsF,QAAQ,GAAGwtF,WAAW,CAACvnG,KAAK;MAChC,IAAMygG,KAAK,GAAG8G,WAAW,CAAC9G,KAAK;MAE/B,IAAMjoI,OAAO,GAAG,CAAE+sI,UAAU,CAACE,WAAW,CAAE1rF,QAAS,CAAC;MAEpD,IAAKvhD,OAAO,EAAG;QAEduhD,QAAQ,GAAGA,QAAQ,CAACvhD,OAAO,CAAC,CAAC;;QAE7B;;QAEA,KAAM,IAAI5D,CAAC,GAAG,CAAC,EAAE4yI,EAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,CAAC,GAAG4yI,EAAE,EAAE5yI,CAAC,EAAG,EAAG;UAElD,IAAM6yI,KAAK,GAAGhH,KAAK,CAAE7rI,CAAC,CAAE;UAExB,IAAK2wI,UAAU,CAACE,WAAW,CAAEgC,KAAM,CAAC,EAAG;YAEtChH,KAAK,CAAE7rI,CAAC,CAAE,GAAG6yI,KAAK,CAACjvI,OAAO,CAAC,CAAC;UAE7B;QAED;MAED;MAGA,IAAMmtI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAE3rF,QAAQ,EAAE0mF,KAAM,CAAC;;MAE5D;;MAEA,IAAM+E,OAAO,GAAGzrF,QAAQ,CAAC,CAAC;;MAE1B,KAAM,IAAInlD,EAAC,GAAG,CAAC,EAAE4yI,GAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,EAAC,GAAG4yI,GAAE,EAAE5yI,EAAC,EAAG,EAAG;QAElD,IAAM6yI,MAAK,GAAGhH,KAAK,CAAE7rI,EAAC,CAAE;QAExBmlD,QAAQ,GAAGA,QAAQ,CAAC9hC,MAAM,CAAEwvH,MAAM,CAAC;MAEpC;MAGA,SAASC,QAAQA,CAAEC,EAAE,EAAE7V,GAAG,EAAEpmG,IAAI,EAAG;QAElC,IAAK,CAAEomG,GAAG,EAAGrlH,OAAO,CAACywB,KAAK,CAAE,2CAA4C,CAAC;QAEzE,OAAOyqG,EAAE,CAAC35H,KAAK,CAAC,CAAC,CAACK,eAAe,CAAEyjH,GAAG,EAAEpmG,IAAK,CAAC;MAE/C;MAEA,IAAMk8G,IAAI,GAAG7tF,QAAQ,CAACniD,MAAM;QAAEiwI,IAAI,GAAGlC,KAAK,CAAC/tI,MAAM;;MAGjD;;MAGA,SAASkwI,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAG;QAE5C;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAIC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;;QAErC;QACA;;QAEA,IAAMC,QAAQ,GAAGN,IAAI,CAACx+H,CAAC,GAAGy+H,MAAM,CAACz+H,CAAC;UACjC++H,QAAQ,GAAGP,IAAI,CAAC/yI,CAAC,GAAGgzI,MAAM,CAAChzI,CAAC;QAC7B,IAAMuzI,QAAQ,GAAGN,MAAM,CAAC1+H,CAAC,GAAGw+H,IAAI,CAACx+H,CAAC;UACjCi/H,QAAQ,GAAGP,MAAM,CAACjzI,CAAC,GAAG+yI,IAAI,CAAC/yI,CAAC;QAE7B,IAAMyzI,YAAY,GAAKJ,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAU;;QAElE;QACA,IAAMI,UAAU,GAAKL,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAU;QAEhE,IAAKjgI,IAAI,CAAC6B,GAAG,CAAEu+H,UAAW,CAAC,GAAGjuI,MAAM,CAAC8pB,OAAO,EAAG;UAE9C;;UAEA;;UAEA,IAAMokH,UAAU,GAAGrgI,IAAI,CAACmH,IAAI,CAAEg5H,YAAa,CAAC;UAC5C,IAAMG,UAAU,GAAGtgI,IAAI,CAACmH,IAAI,CAAE84H,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAS,CAAC;;UAEzE;;UAEA,IAAMK,aAAa,GAAKb,MAAM,CAACz+H,CAAC,GAAG++H,QAAQ,GAAGK,UAAY;UAC1D,IAAMG,aAAa,GAAKd,MAAM,CAAChzI,CAAC,GAAGqzI,QAAQ,GAAGM,UAAY;UAE1D,IAAMI,aAAa,GAAKd,MAAM,CAAC1+H,CAAC,GAAGi/H,QAAQ,GAAGI,UAAY;UAC1D,IAAMI,aAAa,GAAKf,MAAM,CAACjzI,CAAC,GAAGuzI,QAAQ,GAAGK,UAAY;;UAE1D;;UAEA,IAAMK,EAAE,GAAG,CAAE,CAAEF,aAAa,GAAGF,aAAa,IAAKL,QAAQ,GACvD,CAAEQ,aAAa,GAAGF,aAAa,IAAKP,QAAQ,KAC3CF,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAQ,CAAE;;UAE9C;;UAEAL,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGY,EAAE,GAAGlB,IAAI,CAACx+H,CAAG;UACtD4+H,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGW,EAAE,GAAGlB,IAAI,CAAC/yI,CAAG;;UAEtD;UACA;UACA,IAAMk0I,aAAa,GAAKhB,SAAS,GAAGA,SAAS,GAAGC,SAAS,GAAGA,SAAW;UACvE,IAAKe,aAAa,IAAI,CAAC,EAAG;YAEzB,OAAO,IAAI57H,OAAO,CAAE46H,SAAS,EAAEC,SAAU,CAAC;UAE3C,CAAC,MAAM;YAENC,SAAS,GAAG9/H,IAAI,CAACmH,IAAI,CAAEy5H,aAAa,GAAG,CAAE,CAAC;UAE3C;QAED,CAAC,MAAM;UAEN;;UAEA,IAAIC,YAAY,GAAG,KAAK,CAAC,CAAC;;UAE1B,IAAKd,QAAQ,GAAG5tI,MAAM,CAAC8pB,OAAO,EAAG;YAEhC,IAAKgkH,QAAQ,GAAG9tI,MAAM,CAAC8pB,OAAO,EAAG;cAEhC4kH,YAAY,GAAG,IAAI;YAEpB;UAED,CAAC,MAAM;YAEN,IAAKd,QAAQ,GAAG,CAAE5tI,MAAM,CAAC8pB,OAAO,EAAG;cAElC,IAAKgkH,QAAQ,GAAG,CAAE9tI,MAAM,CAAC8pB,OAAO,EAAG;gBAElC4kH,YAAY,GAAG,IAAI;cAEpB;YAED,CAAC,MAAM;cAEN,IAAK7gI,IAAI,CAACyqB,IAAI,CAAEu1G,QAAS,CAAC,KAAKhgI,IAAI,CAACyqB,IAAI,CAAEy1G,QAAS,CAAC,EAAG;gBAEtDW,YAAY,GAAG,IAAI;cAEpB;YAED;UAED;UAEA,IAAKA,YAAY,EAAG;YAEnB;YACAjB,SAAS,GAAG,CAAEI,QAAQ;YACtBH,SAAS,GAAGE,QAAQ;YACpBD,SAAS,GAAG9/H,IAAI,CAACmH,IAAI,CAAEg5H,YAAa,CAAC;UAEtC,CAAC,MAAM;YAEN;YACAP,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAG9/H,IAAI,CAACmH,IAAI,CAAEg5H,YAAY,GAAG,CAAE,CAAC;UAE1C;QAED;QAEA,OAAO,IAAIn7H,OAAO,CAAE46H,SAAS,GAAGE,SAAS,EAAED,SAAS,GAAGC,SAAU,CAAC;MAEnE;MAGA,IAAMgB,gBAAgB,GAAG,EAAE;MAE3B,KAAM,IAAI71I,IAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG2iH,OAAO,CAAC5tI,MAAM,EAAEm3B,CAAC,GAAGlM,EAAE,GAAG,CAAC,EAAEotE,CAAC,GAAG18F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsvB,EAAE,EAAEtvB,IAAC,EAAG,EAAEw7B,CAAC,EAAG,EAAEkhE,CAAC,EAAG,EAAG;QAEvF,IAAKlhE,CAAC,KAAKlM,EAAE,EAAGkM,CAAC,GAAG,CAAC;QACrB,IAAKkhE,CAAC,KAAKptE,EAAE,EAAGotE,CAAC,GAAG,CAAC;;QAErB;QACA;;QAEAm5C,gBAAgB,CAAE71I,IAAC,CAAE,GAAGu0I,WAAW,CAAEtC,OAAO,CAAEjyI,IAAC,CAAE,EAAEiyI,OAAO,CAAEz2G,CAAC,CAAE,EAAEy2G,OAAO,CAAEv1C,CAAC,CAAG,CAAC;MAEhF;MAEA,IAAMo5C,cAAc,GAAG,EAAE;MACzB,IAAIC,gBAAgB;QAAEC,iBAAiB,GAAGH,gBAAgB,CAACnxH,MAAM,CAAC,CAAC;MAEnE,KAAM,IAAIrjB,GAAC,GAAG,CAAC,EAAE4yI,IAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,GAAC,GAAG4yI,IAAE,EAAE5yI,GAAC,EAAG,EAAG;QAElD,IAAM6yI,OAAK,GAAGhH,KAAK,CAAE7rI,GAAC,CAAE;QAExB00I,gBAAgB,GAAG,EAAE;QAErB,KAAM,IAAI/1I,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG4kH,OAAK,CAAC7vI,MAAM,EAAEm3B,GAAC,GAAGlM,KAAE,GAAG,CAAC,EAAEotE,EAAC,GAAG18F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAEw7B,GAAC,EAAG,EAAEkhE,EAAC,EAAG,EAAG;UAErF,IAAKlhE,GAAC,KAAKlM,KAAE,EAAGkM,GAAC,GAAG,CAAC;UACrB,IAAKkhE,EAAC,KAAKptE,KAAE,EAAGotE,EAAC,GAAG,CAAC;;UAErB;UACAq5C,gBAAgB,CAAE/1I,IAAC,CAAE,GAAGu0I,WAAW,CAAEL,OAAK,CAAEl0I,IAAC,CAAE,EAAEk0I,OAAK,CAAE14G,GAAC,CAAE,EAAE04G,OAAK,CAAEx3C,EAAC,CAAG,CAAC;QAE1E;QAEAo5C,cAAc,CAAC9xI,IAAI,CAAE+xI,gBAAiB,CAAC;QACvCC,iBAAiB,GAAGA,iBAAiB,CAACtxH,MAAM,CAAEqxH,gBAAiB,CAAC;MAEjE;;MAGA;;MAEA,KAAM,IAAI19H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi7H,aAAa,EAAEj7H,CAAC,EAAG,EAAG;QAE1C;;QAEA,IAAM9Y,CAAC,GAAG8Y,CAAC,GAAGi7H,aAAa;QAC3B,IAAM7oH,CAAC,GAAG0oH,cAAc,GAAGp+H,IAAI,CAACwD,GAAG,CAAEhZ,CAAC,GAAGwV,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;QACtD,IAAMihI,GAAE,GAAG7C,SAAS,GAAGr+H,IAAI,CAACyD,GAAG,CAAEjZ,CAAC,GAAGwV,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC,GAAGq+H,WAAW;;QAEhE;;QAEA,KAAM,IAAIrzI,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG2iH,OAAO,CAAC5tI,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;UAEpD,IAAMk2I,IAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEjyI,IAAC,CAAE,EAAE61I,gBAAgB,CAAE71I,IAAC,CAAE,EAAEi2I,GAAG,CAAC;UAEhEl0I,CAAC,CAAEm0I,IAAI,CAAClgI,CAAC,EAAEkgI,IAAI,CAACz0I,CAAC,EAAE,CAAEgpB,CAAE,CAAC;QAEzB;;QAEA;;QAEA,KAAM,IAAIppB,GAAC,GAAG,CAAC,EAAE4yI,IAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,GAAC,GAAG4yI,IAAE,EAAE5yI,GAAC,EAAG,EAAG;UAElD,IAAM6yI,OAAK,GAAGhH,KAAK,CAAE7rI,GAAC,CAAE;UACxB00I,gBAAgB,GAAGD,cAAc,CAAEz0I,GAAC,CAAE;UAEtC,KAAM,IAAIrB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG4kH,OAAK,CAAC7vI,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;YAElD,IAAMk2I,KAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAEl0I,IAAC,CAAE,EAAE+1I,gBAAgB,CAAE/1I,IAAC,CAAE,EAAEi2I,GAAG,CAAC;YAE9Dl0I,CAAC,CAAEm0I,KAAI,CAAClgI,CAAC,EAAEkgI,KAAI,CAACz0I,CAAC,EAAE,CAAEgpB,CAAE,CAAC;UAEzB;QAED;MAED;MAEA,IAAMwrH,EAAE,GAAG7C,SAAS,GAAGC,WAAW;;MAElC;;MAEA,KAAM,IAAIrzI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGq0I,IAAI,EAAEr0I,IAAC,EAAG,EAAG;QAEjC,IAAMk2I,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE3tF,QAAQ,CAAExmD,IAAC,CAAE,EAAEg2I,iBAAiB,CAAEh2I,IAAC,CAAE,EAAEi2I,EAAG,CAAC,GAAGzvF,QAAQ,CAAExmD,IAAC,CAAE;QAEjG,IAAK,CAAE4zI,aAAa,EAAG;UAEtB7xI,CAAC,CAAEm0I,MAAI,CAAClgI,CAAC,EAAEkgI,MAAI,CAACz0I,CAAC,EAAE,CAAE,CAAC;QAEvB,CAAC,MAAM;UAEN;;UAEA+0B,MAAM,CAAC9b,IAAI,CAAEm5H,UAAU,CAAC/yF,OAAO,CAAE,CAAC,CAAG,CAAC,CAAC3lC,cAAc,CAAE+6H,MAAI,CAAClgI,CAAE,CAAC;UAC/D89H,QAAQ,CAACp5H,IAAI,CAAEm5H,UAAU,CAACvV,SAAS,CAAE,CAAC,CAAG,CAAC,CAACnjH,cAAc,CAAE+6H,MAAI,CAACz0I,CAAE,CAAC;UAEnEsyI,SAAS,CAACr5H,IAAI,CAAEi5H,UAAU,CAAE,CAAC,CAAG,CAAC,CAACh5H,GAAG,CAAE6b,MAAO,CAAC,CAAC7b,GAAG,CAAEm5H,QAAS,CAAC;UAE/D/xI,CAAC,CAAEgyI,SAAS,CAAC/9H,CAAC,EAAE+9H,SAAS,CAACtyI,CAAC,EAAEsyI,SAAS,CAACtpH,CAAE,CAAC;QAE3C;MAED;;MAEA;MACA;;MAEA,KAAM,IAAIjpB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIyxI,KAAK,EAAEzxI,CAAC,EAAG,EAAG;QAEnC,KAAM,IAAIxB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGq0I,IAAI,EAAEr0I,IAAC,EAAG,EAAG;UAEjC,IAAMk2I,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE3tF,QAAQ,CAAExmD,IAAC,CAAE,EAAEg2I,iBAAiB,CAAEh2I,IAAC,CAAE,EAAEi2I,EAAG,CAAC,GAAGzvF,QAAQ,CAAExmD,IAAC,CAAE;UAEjG,IAAK,CAAE4zI,aAAa,EAAG;YAEtB7xI,CAAC,CAAEm0I,MAAI,CAAClgI,CAAC,EAAEkgI,MAAI,CAACz0I,CAAC,EAAEkrB,KAAK,GAAGsmH,KAAK,GAAGzxI,CAAE,CAAC;UAEvC,CAAC,MAAM;YAEN;;YAEAg1B,MAAM,CAAC9b,IAAI,CAAEm5H,UAAU,CAAC/yF,OAAO,CAAEt/C,CAAC,CAAG,CAAC,CAAC2Z,cAAc,CAAE+6H,MAAI,CAAClgI,CAAE,CAAC;YAC/D89H,QAAQ,CAACp5H,IAAI,CAAEm5H,UAAU,CAACvV,SAAS,CAAE98H,CAAC,CAAG,CAAC,CAAC2Z,cAAc,CAAE+6H,MAAI,CAACz0I,CAAE,CAAC;YAEnEsyI,SAAS,CAACr5H,IAAI,CAAEi5H,UAAU,CAAEnyI,CAAC,CAAG,CAAC,CAACmZ,GAAG,CAAE6b,MAAO,CAAC,CAAC7b,GAAG,CAAEm5H,QAAS,CAAC;YAE/D/xI,CAAC,CAAEgyI,SAAS,CAAC/9H,CAAC,EAAE+9H,SAAS,CAACtyI,CAAC,EAAEsyI,SAAS,CAACtpH,CAAE,CAAC;UAE3C;QAED;MAED;;MAGA;;MAEA;MACA,KAAM,IAAIpS,GAAC,GAAGi7H,aAAa,GAAG,CAAC,EAAEj7H,GAAC,IAAI,CAAC,EAAEA,GAAC,EAAG,EAAG;QAE/C,IAAM9Y,EAAC,GAAG8Y,GAAC,GAAGi7H,aAAa;QAC3B,IAAM7oH,GAAC,GAAG0oH,cAAc,GAAGp+H,IAAI,CAACwD,GAAG,CAAEhZ,EAAC,GAAGwV,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;QACtD,IAAMihI,IAAE,GAAG7C,SAAS,GAAGr+H,IAAI,CAACyD,GAAG,CAAEjZ,EAAC,GAAGwV,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC,GAAGq+H,WAAW;;QAEhE;;QAEA,KAAM,IAAIrzI,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG2iH,OAAO,CAAC5tI,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;UAEpD,IAAMk2I,MAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEjyI,IAAC,CAAE,EAAE61I,gBAAgB,CAAE71I,IAAC,CAAE,EAAEi2I,IAAG,CAAC;UAChEl0I,CAAC,CAAEm0I,MAAI,CAAClgI,CAAC,EAAEkgI,MAAI,CAACz0I,CAAC,EAAEkrB,KAAK,GAAGlC,GAAE,CAAC;QAE/B;;QAEA;;QAEA,KAAM,IAAIppB,GAAC,GAAG,CAAC,EAAE4yI,IAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,GAAC,GAAG4yI,IAAE,EAAE5yI,GAAC,EAAG,EAAG;UAElD,IAAM6yI,OAAK,GAAGhH,KAAK,CAAE7rI,GAAC,CAAE;UACxB00I,gBAAgB,GAAGD,cAAc,CAAEz0I,GAAC,CAAE;UAEtC,KAAM,IAAIrB,IAAC,GAAG,CAAC,EAAEsvB,KAAE,GAAG4kH,OAAK,CAAC7vI,MAAM,EAAErE,IAAC,GAAGsvB,KAAE,EAAEtvB,IAAC,EAAG,EAAG;YAElD,IAAMk2I,MAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAEl0I,IAAC,CAAE,EAAE+1I,gBAAgB,CAAE/1I,IAAC,CAAE,EAAEi2I,IAAG,CAAC;YAE9D,IAAK,CAAErC,aAAa,EAAG;cAEtB7xI,CAAC,CAAEm0I,MAAI,CAAClgI,CAAC,EAAEkgI,MAAI,CAACz0I,CAAC,EAAEkrB,KAAK,GAAGlC,GAAE,CAAC;YAE/B,CAAC,MAAM;cAEN1oB,CAAC,CAAEm0I,MAAI,CAAClgI,CAAC,EAAEkgI,MAAI,CAACz0I,CAAC,GAAGkyI,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAACxxI,CAAC,EAAEkyI,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAACj9H,CAAC,GAAGyU,GAAE,CAAC;YAE/E;UAED;QAED;MAED;;MAEA;;MAEA;;MAEA0rH,aAAa,CAAC,CAAC;;MAEf;;MAEAC,cAAc,CAAC,CAAC;;MAGhB;;MAEA,SAASD,aAAaA,CAAA,EAAG;QAExB,IAAMz2F,KAAK,GAAGkzF,aAAa,CAACvuI,MAAM,GAAG,CAAC;QAEtC,IAAK6uI,YAAY,EAAG;UAEnB,IAAIhlB,KAAK,GAAG,CAAC,CAAC,CAAC;UACf,IAAI5wG,MAAM,GAAG+2H,IAAI,GAAGnmB,KAAK;;UAEzB;;UAEA,KAAM,IAAIluH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs0I,IAAI,EAAEt0I,IAAC,EAAG,EAAG;YAEjC,IAAM8lD,IAAI,GAAGssF,KAAK,CAAEpyI,IAAC,CAAE;YACvBq2I,EAAE,CAAEvwF,IAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAM,EAAEwoC,IAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAM,EAAEwoC,IAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAO,CAAC;UAEjE;UAEA4wG,KAAK,GAAG+kB,KAAK,GAAGK,aAAa,GAAG,CAAC;UACjCh2H,MAAM,GAAG+2H,IAAI,GAAGnmB,KAAK;;UAErB;;UAEA,KAAM,IAAIluH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs0I,IAAI,EAAEt0I,IAAC,EAAG,EAAG;YAEjC,IAAM8lD,KAAI,GAAGssF,KAAK,CAAEpyI,IAAC,CAAE;YACvBq2I,EAAE,CAAEvwF,KAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAM,EAAEwoC,KAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAM,EAAEwoC,KAAI,CAAE,CAAC,CAAE,GAAGxoC,MAAO,CAAC;UAEjE;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAItd,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs0I,IAAI,EAAEt0I,IAAC,EAAG,EAAG;YAEjC,IAAM8lD,MAAI,GAAGssF,KAAK,CAAEpyI,IAAC,CAAE;YACvBq2I,EAAE,CAAEvwF,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAG,CAAC;UAEtC;;UAEA;;UAEA,KAAM,IAAI9lD,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs0I,IAAI,EAAEt0I,IAAC,EAAG,EAAG;YAEjC,IAAM8lD,MAAI,GAAGssF,KAAK,CAAEpyI,IAAC,CAAE;YACvBq2I,EAAE,CAAEvwF,MAAI,CAAE,CAAC,CAAE,GAAGuuF,IAAI,GAAGpB,KAAK,EAAEntF,MAAI,CAAE,CAAC,CAAE,GAAGuuF,IAAI,GAAGpB,KAAK,EAAEntF,MAAI,CAAE,CAAC,CAAE,GAAGuuF,IAAI,GAAGpB,KAAM,CAAC;UAEnF;QAED;QAEA1sF,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEkzF,aAAa,CAACvuI,MAAM,GAAG,CAAC,GAAGq7C,KAAK,EAAE,CAAE,CAAC;MAE7D;;MAEA;;MAEA,SAAS02F,cAAcA,CAAA,EAAG;QAEzB,IAAM12F,KAAK,GAAGkzF,aAAa,CAACvuI,MAAM,GAAG,CAAC;QACtC,IAAIiyI,WAAW,GAAG,CAAC;QACnBC,SAAS,CAAEtE,OAAO,EAAEqE,WAAY,CAAC;QACjCA,WAAW,IAAIrE,OAAO,CAAC5tI,MAAM;QAE7B,KAAM,IAAIhD,GAAC,GAAG,CAAC,EAAE4yI,IAAE,GAAG/G,KAAK,CAAC7oI,MAAM,EAAEhD,GAAC,GAAG4yI,IAAE,EAAE5yI,GAAC,EAAG,EAAG;UAElD,IAAM6yI,OAAK,GAAGhH,KAAK,CAAE7rI,GAAC,CAAE;UACxBk1I,SAAS,CAAErC,OAAK,EAAEoC,WAAY,CAAC;;UAE/B;UACAA,WAAW,IAAIpC,OAAK,CAAC7vI,MAAM;QAE5B;QAGAkiD,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEkzF,aAAa,CAACvuI,MAAM,GAAG,CAAC,GAAGq7C,KAAK,EAAE,CAAE,CAAC;MAG7D;MAEA,SAAS62F,SAASA,CAAEtE,OAAO,EAAEqE,WAAW,EAAG;QAE1C,IAAIt2I,CAAC,GAAGiyI,OAAO,CAAC5tI,MAAM;QAEtB,OAAQ,EAAGrE,CAAC,IAAI,CAAC,EAAG;UAEnB,IAAMw7B,GAAC,GAAGx7B,CAAC;UACX,IAAI08F,GAAC,GAAG18F,CAAC,GAAG,CAAC;UACb,IAAK08F,GAAC,GAAG,CAAC,EAAGA,GAAC,GAAGu1C,OAAO,CAAC5tI,MAAM,GAAG,CAAC;;UAEnC;;UAEA,KAAM,IAAI7C,GAAC,GAAG,CAAC,EAAEg1I,EAAE,GAAKvD,KAAK,GAAGK,aAAa,GAAG,CAAG,EAAE9xI,GAAC,GAAGg1I,EAAE,EAAEh1I,GAAC,EAAG,EAAG;YAEnE,IAAMi1I,KAAK,GAAGpC,IAAI,GAAG7yI,GAAC;YACtB,IAAMk1I,KAAK,GAAGrC,IAAI,IAAK7yI,GAAC,GAAG,CAAC,CAAE;YAE9B,IAAMtB,CAAC,GAAGo2I,WAAW,GAAG96G,GAAC,GAAGi7G,KAAK;cAChCp+H,GAAC,GAAGi+H,WAAW,GAAG55C,GAAC,GAAG+5C,KAAK;cAC3Br2I,CAAC,GAAGk2I,WAAW,GAAG55C,GAAC,GAAGg6C,KAAK;cAC3B70I,CAAC,GAAGy0I,WAAW,GAAG96G,GAAC,GAAGk7G,KAAK;YAE5BC,EAAE,CAAEz2I,CAAC,EAAEmY,GAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;UAEjB;QAED;MAED;MAEA,SAASE,CAACA,CAAEiU,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;QAErBsoH,WAAW,CAAC/uI,IAAI,CAAEgS,CAAE,CAAC;QACrB+8H,WAAW,CAAC/uI,IAAI,CAAEvC,CAAE,CAAC;QACrBsxI,WAAW,CAAC/uI,IAAI,CAAEymB,CAAE,CAAC;MAEtB;MAGA,SAAS4rH,EAAEA,CAAEn2I,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAG;QAEtBw2I,SAAS,CAAE12I,CAAE,CAAC;QACd02I,SAAS,CAAEv+H,CAAE,CAAC;QACdu+H,SAAS,CAAEx2I,CAAE,CAAC;QAEd,IAAMy2I,SAAS,GAAGjE,aAAa,CAACvuI,MAAM,GAAG,CAAC;QAC1C,IAAM08C,GAAG,GAAGyyF,KAAK,CAACsD,aAAa,CAAEvwF,KAAK,EAAEqsF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAE,CAAC;QAEpGE,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;MAElB;MAEA,SAAS41F,EAAEA,CAAEz2I,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEyB,CAAC,EAAG;QAEzB+0I,SAAS,CAAE12I,CAAE,CAAC;QACd02I,SAAS,CAAEv+H,CAAE,CAAC;QACdu+H,SAAS,CAAE/0I,CAAE,CAAC;QAEd+0I,SAAS,CAAEv+H,CAAE,CAAC;QACdu+H,SAAS,CAAEx2I,CAAE,CAAC;QACdw2I,SAAS,CAAE/0I,CAAE,CAAC;QAGd,IAAMg1I,SAAS,GAAGjE,aAAa,CAACvuI,MAAM,GAAG,CAAC;QAC1C,IAAM08C,GAAG,GAAGyyF,KAAK,CAACwD,kBAAkB,CAAEzwF,KAAK,EAAEqsF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAE,CAAC;QAExHE,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QAEjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBg2F,KAAK,CAAEh2F,GAAG,CAAE,CAAC,CAAG,CAAC;MAElB;MAEA,SAAS61F,SAASA,CAAEriI,KAAK,EAAG;QAE3Bq+H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAEx+H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;QAClDq+H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAEx+H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;QAClDq+H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAEx+H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;MAEnD;MAGA,SAASwiI,KAAKA,CAAEE,OAAO,EAAG;QAEzBpE,OAAO,CAAC7uI,IAAI,CAAEizI,OAAO,CAACjhI,CAAE,CAAC;QACzB68H,OAAO,CAAC7uI,IAAI,CAAEizI,OAAO,CAACx1I,CAAE,CAAC;MAE1B;IAED;IAAC,OAAAkxI,OAAA;EAEF;EAACpsI,YAAA,CAAAisI,eAAA;IAAAlsI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAk4F,eAAA,CAAA9yI,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAk4F,eAAA,CAAA9yI,SAAA,mBAAA0B,IAAA,MAAiB;MAE3B,IAAMoqC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;MACrC,IAAMhf,OAAO,GAAG,IAAI,CAACggB,UAAU,CAAChgB,OAAO;MAEvC,OAAO0qH,QAAQ,CAAE1rG,MAAM,EAAEhf,OAAO,EAAE9F,IAAK,CAAC;IAEzC;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAE8kB,MAAM,EAAG;MAE/B,IAAM2rG,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAI37G,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAGh6B,IAAI,CAAC8kB,MAAM,CAACnnC,MAAM,EAAEm3B,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;QAExD,IAAMiR,KAAK,GAAGjB,MAAM,CAAE9kB,IAAI,CAAC8kB,MAAM,CAAEhQ,CAAC,CAAE,CAAE;QAExC27G,cAAc,CAACnzI,IAAI,CAAEyoC,KAAM,CAAC;MAE7B;MAEA,IAAM8mG,WAAW,GAAG7sH,IAAI,CAAC8F,OAAO,CAAC+mH,WAAW;MAE5C,IAAKA,WAAW,KAAKvsI,SAAS,EAAG;QAEhC0f,IAAI,CAAC8F,OAAO,CAAC+mH,WAAW,GAAG,IAAIpP,MAAM,CAAEoP,WAAW,CAACryI,IAAI,CAAE,CAAC,CAAC,CAACumD,QAAQ,CAAE8rF,WAAY,CAAC;MAEpF;MAEA,OAAO,IAAIf,eAAe,CAAE2E,cAAc,EAAEzwH,IAAI,CAAC8F,OAAQ,CAAC;IAE3D;EAAC;EAAA,OAAAgmH,eAAA;AAAA,EAprB4BxzF,cAAc;AAwrB5C,IAAM00F,gBAAgB,GAAG;EAExBoD,aAAa,EAAE,SAAAA,cAAWx9G,QAAQ,EAAEktB,QAAQ,EAAE4wF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAG;IAEtE,IAAMC,GAAG,GAAG/wF,QAAQ,CAAE4wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGhxF,QAAQ,CAAE4wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGjxF,QAAQ,CAAE6wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGlxF,QAAQ,CAAE6wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGnxF,QAAQ,CAAE8wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGpxF,QAAQ,CAAE8wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,OAAO,CACN,IAAIv9H,OAAO,CAAEw9H,GAAG,EAAEC,GAAI,CAAC,EACvB,IAAIz9H,OAAO,CAAE09H,GAAG,EAAEC,GAAI,CAAC,EACvB,IAAI39H,OAAO,CAAE49H,GAAG,EAAEC,GAAI,CAAC,CACvB;EAEF,CAAC;EAEDZ,kBAAkB,EAAE,SAAAA,mBAAW19G,QAAQ,EAAEktB,QAAQ,EAAE4wF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEO,MAAM,EAAG;IAEnF,IAAMN,GAAG,GAAG/wF,QAAQ,CAAE4wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGhxF,QAAQ,CAAE4wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGtxF,QAAQ,CAAE4wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGjxF,QAAQ,CAAE6wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGlxF,QAAQ,CAAE6wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGvxF,QAAQ,CAAE6wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGnxF,QAAQ,CAAE8wF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGpxF,QAAQ,CAAE8wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGxxF,QAAQ,CAAE8wF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMW,GAAG,GAAGzxF,QAAQ,CAAEqxF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAG1xF,QAAQ,CAAEqxF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAG3xF,QAAQ,CAAEqxF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,IAAK9iI,IAAI,CAAC6B,GAAG,CAAE4gI,GAAG,GAAGE,GAAI,CAAC,GAAG3iI,IAAI,CAAC6B,GAAG,CAAE2gI,GAAG,GAAGE,GAAI,CAAC,EAAG;MAEpD,OAAO,CACN,IAAI19H,OAAO,CAAEw9H,GAAG,EAAE,CAAC,GAAGO,GAAI,CAAC,EAC3B,IAAI/9H,OAAO,CAAE09H,GAAG,EAAE,CAAC,GAAGM,GAAI,CAAC,EAC3B,IAAIh+H,OAAO,CAAE49H,GAAG,EAAE,CAAC,GAAGK,GAAI,CAAC,EAC3B,IAAIj+H,OAAO,CAAEk+H,GAAG,EAAE,CAAC,GAAGE,GAAI,CAAC,CAC3B;IAEF,CAAC,MAAM;MAEN,OAAO,CACN,IAAIp+H,OAAO,CAAEy9H,GAAG,EAAE,CAAC,GAAGM,GAAI,CAAC,EAC3B,IAAI/9H,OAAO,CAAE29H,GAAG,EAAE,CAAC,GAAGK,GAAI,CAAC,EAC3B,IAAIh+H,OAAO,CAAE69H,GAAG,EAAE,CAAC,GAAGI,GAAI,CAAC,EAC3B,IAAIj+H,OAAO,CAAEm+H,GAAG,EAAE,CAAC,GAAGC,GAAI,CAAC,CAC3B;IAEF;EAED;AAED,CAAC;AAED,SAASjB,QAAQA,CAAE1rG,MAAM,EAAEhf,OAAO,EAAE9F,IAAI,EAAG;EAE1CA,IAAI,CAAC8kB,MAAM,GAAG,EAAE;EAEhB,IAAKnkB,KAAK,CAACC,OAAO,CAAEkkB,MAAO,CAAC,EAAG;IAE9B,KAAM,IAAIxrC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkqC,MAAM,CAACnnC,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEjD,IAAMysC,KAAK,GAAGjB,MAAM,CAAExrC,CAAC,CAAE;MAEzB0mB,IAAI,CAAC8kB,MAAM,CAACxnC,IAAI,CAAEyoC,KAAK,CAACj3B,IAAK,CAAC;IAE/B;EAED,CAAC,MAAM;IAENkR,IAAI,CAAC8kB,MAAM,CAACxnC,IAAI,CAAEwnC,MAAM,CAACh2B,IAAK,CAAC;EAEhC;EAEAkR,IAAI,CAAC8F,OAAO,GAAG/sB,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAEP,OAAQ,CAAC;EAE3C,IAAKA,OAAO,CAAC+mH,WAAW,KAAKvsI,SAAS,EAAG0f,IAAI,CAAC8F,OAAO,CAAC+mH,WAAW,GAAG/mH,OAAO,CAAC+mH,WAAW,CAACxsH,MAAM,CAAC,CAAC;EAEhG,OAAOL,IAAI;AAEZ;AAAC,IAEK0xH,mBAAmB,GAAAhxI,OAAA,CAAAgxI,mBAAA,0BAAAC,oBAAA;EAAAxwH,SAAA,CAAAuwH,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAvwH,YAAA,CAAAqwH,mBAAA;EAExB,SAAAA,oBAAaxhH,MAAM,GAAG,CAAC,EAAEq5F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAsoB,OAAA;IAAAzyI,eAAA,OAAAsyI,mBAAA;IAErC,IAAM74I,CAAC,GAAG,CAAE,CAAC,GAAGwV,IAAI,CAACmH,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;IAEpC,IAAMsqC,QAAQ,GAAG,CAChB,CAAE,CAAC,EAAEjnD,CAAC,EAAE,CAAC,EAAG,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAC7C,CAAC,EAAE,CAAE,CAAC,EAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAEA,CAAC,EAC5CA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,CAC7C;IAED,IAAMqhD,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EACnD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9C;IAED23F,OAAA,GAAAD,QAAA,CAAAl3I,IAAA,OAAOolD,QAAQ,EAAE5F,OAAO,EAAEhqB,MAAM,EAAEq5F,MAAM;IAExCsoB,OAAA,CAAKr3I,IAAI,GAAG,qBAAqB;IAEjCq3I,OAAA,CAAK/rG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdq5F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAsoB,OAAA;EAEH;EAAChyI,YAAA,CAAA6xI,mBAAA;IAAA9xI,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI0xH,mBAAmB,CAAE1xH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACupG,MAAO,CAAC;IAE3D;EAAC;EAAA,OAAAmoB,mBAAA;AAAA,EAlCgC1O,kBAAkB;AAAA,IAsC9C8O,kBAAkB,GAAApxI,OAAA,CAAAoxI,kBAAA,0BAAAC,oBAAA;EAAA5wH,SAAA,CAAA2wH,kBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAA3wH,YAAA,CAAAywH,kBAAA;EAEvB,SAAAA,mBAAa5hH,MAAM,GAAG,CAAC,EAAEq5F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAA0oB,OAAA;IAAA7yI,eAAA,OAAA0yI,kBAAA;IAErC,IAAMhyF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAC9B;IAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAChB;IAED+3F,OAAA,GAAAD,QAAA,CAAAt3I,IAAA,OAAOolD,QAAQ,EAAE5F,OAAO,EAAEhqB,MAAM,EAAEq5F,MAAM;IAExC0oB,OAAA,CAAKz3I,IAAI,GAAG,oBAAoB;IAEhCy3I,OAAA,CAAKnsG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdq5F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAA0oB,OAAA;EAEH;EAACpyI,YAAA,CAAAiyI,kBAAA;IAAAlyI,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI8xH,kBAAkB,CAAE9xH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACupG,MAAO,CAAC;IAE1D;EAAC;EAAA,OAAAuoB,kBAAA;AAAA,EA9B+B9O,kBAAkB;AAAA,IAkC7CkP,YAAY,GAAAxxI,OAAA,CAAAwxI,YAAA,0BAAAC,gBAAA;EAAAhxH,SAAA,CAAA+wH,YAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA/wH,YAAA,CAAA6wH,YAAA;EAEjB,SAAAA,aAAaG,WAAW,GAAG,GAAG,EAAEC,WAAW,GAAG,CAAC,EAAEC,aAAa,GAAG,EAAE,EAAEC,WAAW,GAAG,CAAC,EAAEhR,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGpzH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAmkI,OAAA;IAAArzI,eAAA,OAAA8yI,YAAA;IAEjIO,OAAA,GAAAL,QAAA,CAAA13I,IAAA;IAEA+3I,OAAA,CAAKj4I,IAAI,GAAG,cAAc;IAE1Bi4I,OAAA,CAAK3sG,UAAU,GAAG;MACjBusG,WAAW,EAAEA,WAAW;MACxBC,WAAW,EAAEA,WAAW;MACxBC,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAEA,WAAW;MACxBhR,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED8Q,aAAa,GAAGlkI,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEqjI,aAAc,CAAC;IAC5CC,WAAW,GAAGnkI,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEsjI,WAAY,CAAC;;IAExC;;IAEA,IAAMt4F,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAInqB,MAAM,GAAGmiH,WAAW;IACxB,IAAMK,UAAU,GAAK,CAAEJ,WAAW,GAAGD,WAAW,IAAKG,WAAa;IAClE,IAAM9/C,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAItQ,OAAO,CAAC,CAAC;;IAExB;;IAEA,KAAM,IAAIyhB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI09G,WAAW,EAAE19G,CAAC,EAAG,EAAG;MAEzC,KAAM,IAAIx7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi5I,aAAa,EAAEj5I,CAAC,EAAG,EAAG;QAE3C;;QAEA,IAAMqoI,OAAO,GAAGH,UAAU,GAAGloI,CAAC,GAAGi5I,aAAa,GAAG9Q,WAAW;;QAE5D;;QAEA/uC,MAAM,CAACpjF,CAAC,GAAG4gB,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAE8vH,OAAQ,CAAC;QACvCjvC,MAAM,CAAC33F,CAAC,GAAGm1B,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAE6vH,OAAQ,CAAC;QAEvC7hF,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEAq2B,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;QAEvB;;QAEAqmB,EAAE,CAACrU,CAAC,GAAG,CAAEojF,MAAM,CAACpjF,CAAC,GAAGgjI,WAAW,GAAG,CAAC,IAAK,CAAC;QACzC3uH,EAAE,CAAC5oB,CAAC,GAAG,CAAE23F,MAAM,CAAC33F,CAAC,GAAGu3I,WAAW,GAAG,CAAC,IAAK,CAAC;QAEzCj4F,GAAG,CAAC/8C,IAAI,CAAEqmB,EAAE,CAACrU,CAAC,EAAEqU,EAAE,CAAC5oB,CAAE,CAAC;MAEvB;;MAEA;;MAEAm1B,MAAM,IAAIwiH,UAAU;IAErB;;IAEA;;IAEA,KAAM,IAAI59G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG09G,WAAW,EAAE19G,IAAC,EAAG,EAAG;MAExC,IAAM69G,iBAAiB,GAAG79G,IAAC,IAAKy9G,aAAa,GAAG,CAAC,CAAE;MAEnD,KAAM,IAAIj5I,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGi5I,aAAa,EAAEj5I,IAAC,EAAG,EAAG;QAE1C,IAAMqoI,QAAO,GAAGroI,IAAC,GAAGq5I,iBAAiB;QAErC,IAAMn5I,CAAC,GAAGmoI,QAAO;QACjB,IAAMhwH,CAAC,GAAGgwH,QAAO,GAAG4Q,aAAa,GAAG,CAAC;QACrC,IAAM74I,CAAC,GAAGioI,QAAO,GAAG4Q,aAAa,GAAG,CAAC;QACrC,IAAMp3I,CAAC,GAAGwmI,QAAO,GAAG,CAAC;;QAErB;;QAEAznF,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAs3I,OAAA,CAAKv5F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBu4F,OAAA,CAAKr5F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E2yF,OAAA,CAAKr5F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEq4F,OAAA,CAAKr5F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAo4F,OAAA;EAEjE;EAAC5yI,YAAA,CAAAqyI,YAAA;IAAAtyI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAs+F,YAAA,CAAAl5I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIkyH,YAAY,CAAElyH,IAAI,CAACqyH,WAAW,EAAEryH,IAAI,CAACsyH,WAAW,EAAEtyH,IAAI,CAACuyH,aAAa,EAAEvyH,IAAI,CAACwyH,WAAW,EAAExyH,IAAI,CAACwhH,UAAU,EAAExhH,IAAI,CAACyhH,WAAY,CAAC;IAEvI;EAAC;EAAA,OAAAyQ,YAAA;AAAA,EArHyB55F,cAAc;AAAA,IAyHnCs6F,aAAa,GAAAlyI,OAAA,CAAAkyI,aAAA,0BAAAC,iBAAA;EAAA1xH,SAAA,CAAAyxH,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAzxH,YAAA,CAAAuxH,aAAA;EAElB,SAAAA,cAAa9tG,MAAM,GAAG,IAAIshG,KAAK,CAAE,CAAE,IAAI/yH,OAAO,CAAE,CAAC,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,CAAG,CAAC,EAAEi5H,aAAa,GAAG,EAAE,EAAG;IAAA,IAAAyG,OAAA;IAAA3zI,eAAA,OAAAwzI,aAAA;IAE1IG,OAAA,GAAAD,QAAA,CAAAp4I,IAAA;IAEAq4I,OAAA,CAAKv4I,IAAI,GAAG,eAAe;IAE3Bu4I,OAAA,CAAKjtG,UAAU,GAAG;MACjBhB,MAAM,EAAEA,MAAM;MACdwnG,aAAa,EAAEA;IAChB,CAAC;;IAED;;IAEA,IAAMpyF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI2F,UAAU,GAAG,CAAC;IAClB,IAAIc,UAAU,GAAG,CAAC;;IAElB;;IAEA,IAAKngC,KAAK,CAACC,OAAO,CAAEkkB,MAAO,CAAC,KAAK,KAAK,EAAG;MAExCsnG,QAAQ,CAAEtnG,MAAO,CAAC;IAEnB,CAAC,MAAM;MAEN,KAAM,IAAIxrC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwrC,MAAM,CAACnnC,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE1C8yI,QAAQ,CAAEtnG,MAAM,CAAExrC,CAAC,CAAG,CAAC;QAEvBy5I,OAAA,CAAKx5F,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAExnD,CAAE,CAAC,CAAC,CAAC;;QAE5C0mD,UAAU,IAAIc,UAAU;QACxBA,UAAU,GAAG,CAAC;MAEf;IAED;;IAEA;;IAEAiyF,OAAA,CAAK75F,QAAQ,CAAEgB,OAAQ,CAAC;IACxB64F,OAAA,CAAK35F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EizF,OAAA,CAAK35F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvE24F,OAAA,CAAK35F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAG/D;;IAEA,SAAS+xF,QAAQA,CAAErmG,KAAK,EAAG;MAE1B,IAAMitG,WAAW,GAAGlzF,QAAQ,CAACniD,MAAM,GAAG,CAAC;MACvC,IAAM4zB,MAAM,GAAGwU,KAAK,CAAC4gG,aAAa,CAAE2F,aAAc,CAAC;MAEnD,IAAI2G,aAAa,GAAG1hH,MAAM,CAACwU,KAAK;MAChC,IAAMmtG,UAAU,GAAG3hH,MAAM,CAACi1G,KAAK;;MAE/B;;MAEA,IAAK8E,UAAU,CAACE,WAAW,CAAEyH,aAAc,CAAC,KAAK,KAAK,EAAG;QAExDA,aAAa,GAAGA,aAAa,CAAC10I,OAAO,CAAC,CAAC;MAExC;MAEA,KAAM,IAAIjF,IAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGs4I,UAAU,CAACv1I,MAAM,EAAErE,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;QAErD,IAAM65I,SAAS,GAAGD,UAAU,CAAE55I,IAAC,CAAE;QAEjC,IAAKgyI,UAAU,CAACE,WAAW,CAAE2H,SAAU,CAAC,KAAK,IAAI,EAAG;UAEnDD,UAAU,CAAE55I,IAAC,CAAE,GAAG65I,SAAS,CAAC50I,OAAO,CAAC,CAAC;QAEtC;MAED;MAEA,IAAMmtI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAEwH,aAAa,EAAEC,UAAW,CAAC;;MAEtE;;MAEA,KAAM,IAAI55I,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAGs4I,UAAU,CAACv1I,MAAM,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;QAErD,IAAM65I,UAAS,GAAGD,UAAU,CAAE55I,IAAC,CAAE;QACjC25I,aAAa,GAAGA,aAAa,CAACj1H,MAAM,CAAEm1H,UAAU,CAAC;MAElD;;MAEA;;MAEA,KAAM,IAAI75I,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAGq4I,aAAa,CAACt1I,MAAM,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;QAExD,IAAMo5F,QAAM,GAAGugD,aAAa,CAAE35I,IAAC,CAAE;QAEjCwmD,QAAQ,CAACxiD,IAAI,CAAEo1F,QAAM,CAACpjF,CAAC,EAAEojF,QAAM,CAAC33F,CAAC,EAAE,CAAE,CAAC;QACtCq/C,OAAO,CAAC98C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACvB+8C,GAAG,CAAC/8C,IAAI,CAAEo1F,QAAM,CAACpjF,CAAC,EAAEojF,QAAM,CAAC33F,CAAE,CAAC,CAAC,CAAC;MAEjC;;MAEA;;MAEA,KAAM,IAAIzB,IAAC,GAAG,CAAC,EAAEsB,IAAC,GAAG8wI,KAAK,CAAC/tI,MAAM,EAAErE,IAAC,GAAGsB,IAAC,EAAEtB,IAAC,EAAG,EAAG;QAEhD,IAAM8lD,IAAI,GAAGssF,KAAK,CAAEpyI,IAAC,CAAE;QAEvB,IAAME,CAAC,GAAG4lD,IAAI,CAAE,CAAC,CAAE,GAAG4zF,WAAW;QACjC,IAAMrhI,CAAC,GAAGytC,IAAI,CAAE,CAAC,CAAE,GAAG4zF,WAAW;QACjC,IAAMt5I,CAAC,GAAG0lD,IAAI,CAAE,CAAC,CAAE,GAAG4zF,WAAW;QAEjC94F,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAEjY,CAAE,CAAC;QACvBonD,UAAU,IAAI,CAAC;MAEhB;IAED;IAAC,OAAAiyF,OAAA;EAEF;EAAClzI,YAAA,CAAA+yI,aAAA;IAAAhzI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAg/F,aAAA,CAAA55I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAg/F,aAAA,CAAA55I,SAAA,mBAAA0B,IAAA,MAAiB;MAE3B,IAAMoqC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;MAErC,OAAOzkB,OAAM,CAAEykB,MAAM,EAAE9kB,IAAK,CAAC;IAE9B;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAE8kB,MAAM,EAAG;MAE/B,IAAM2rG,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAI37G,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAGh6B,IAAI,CAAC8kB,MAAM,CAACnnC,MAAM,EAAEm3B,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;QAExD,IAAMiR,KAAK,GAAGjB,MAAM,CAAE9kB,IAAI,CAAC8kB,MAAM,CAAEhQ,CAAC,CAAE,CAAE;QAExC27G,cAAc,CAACnzI,IAAI,CAAEyoC,KAAM,CAAC;MAE7B;MAEA,OAAO,IAAI6sG,aAAa,CAAEnC,cAAc,EAAEzwH,IAAI,CAACssH,aAAc,CAAC;IAE/D;EAAC;EAAA,OAAAsG,aAAA;AAAA,EAhK0Bt6F,cAAc;AAoK1C,SAASj4B,OAAMA,CAAEykB,MAAM,EAAE9kB,IAAI,EAAG;EAE/BA,IAAI,CAAC8kB,MAAM,GAAG,EAAE;EAEhB,IAAKnkB,KAAK,CAACC,OAAO,CAAEkkB,MAAO,CAAC,EAAG;IAE9B,KAAM,IAAIxrC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkqC,MAAM,CAACnnC,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEjD,IAAMysC,KAAK,GAAGjB,MAAM,CAAExrC,CAAC,CAAE;MAEzB0mB,IAAI,CAAC8kB,MAAM,CAACxnC,IAAI,CAAEyoC,KAAK,CAACj3B,IAAK,CAAC;IAE/B;EAED,CAAC,MAAM;IAENkR,IAAI,CAAC8kB,MAAM,CAACxnC,IAAI,CAAEwnC,MAAM,CAACh2B,IAAK,CAAC;EAEhC;EAEA,OAAOkR,IAAI;AAEZ;AAAC,IAEKozH,cAAc,GAAA1yI,OAAA,CAAA0yI,cAAA,0BAAAC,iBAAA;EAAAlyH,SAAA,CAAAiyH,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAjyH,YAAA,CAAA+xH,cAAA;EAEnB,SAAAA,eAAaljH,MAAM,GAAG,CAAC,EAAEuvB,aAAa,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,EAAE6gF,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGnyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEkzH,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGpzH,IAAI,CAACC,EAAE,EAAG;IAAA,IAAAilI,OAAA;IAAAn0I,eAAA,OAAAg0I,cAAA;IAEhJG,OAAA,GAAAD,QAAA,CAAA54I,IAAA;IAEA64I,OAAA,CAAK/4I,IAAI,GAAG,gBAAgB;IAE5B+4I,OAAA,CAAKztG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACduvB,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9B6gF,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA,SAAS;MACpBgB,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAEDhiF,aAAa,GAAGpxC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACmC,KAAK,CAAEivC,aAAc,CAAE,CAAC;IAC1DC,cAAc,GAAGrxC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACmC,KAAK,CAAEkvC,cAAe,CAAE,CAAC;IAE5D,IAAM8zF,QAAQ,GAAGnlI,IAAI,CAACY,GAAG,CAAEuyH,UAAU,GAAGC,WAAW,EAAEpzH,IAAI,CAACC,EAAG,CAAC;IAE9D,IAAIT,KAAK,GAAG,CAAC;IACb,IAAM4lI,IAAI,GAAG,EAAE;IAEf,IAAM/gD,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;;IAE5B;;IAEA,IAAMysB,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,KAAM,IAAI9rB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAImxB,cAAc,EAAEnxB,EAAE,EAAG,EAAG;MAE/C,IAAMmlH,WAAW,GAAG,EAAE;MAEtB,IAAMr4I,CAAC,GAAGkzB,EAAE,GAAGmxB,cAAc;;MAE7B;;MAEA,IAAIi0F,OAAO,GAAG,CAAC;MAEf,IAAKplH,EAAE,KAAK,CAAC,IAAIizG,UAAU,KAAK,CAAC,EAAG;QAEnCmS,OAAO,GAAG,GAAG,GAAGl0F,aAAa;MAE9B,CAAC,MAAM,IAAKlxB,EAAE,KAAKmxB,cAAc,IAAI8zF,QAAQ,KAAKnlI,IAAI,CAACC,EAAE,EAAG;QAE3DqlI,OAAO,GAAG,CAAE,GAAG,GAAGl0F,aAAa;MAEhC;MAEA,KAAM,IAAInxB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAImxB,aAAa,EAAEnxB,EAAE,EAAG,EAAG;QAE9C,IAAM10B,CAAC,GAAG00B,EAAE,GAAGmxB,aAAa;;QAE5B;;QAEAizC,MAAM,CAACpjF,CAAC,GAAG,CAAE4gB,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAE0uH,QAAQ,GAAG3mI,CAAC,GAAG4mI,SAAU,CAAC,GAAGnyH,IAAI,CAACyD,GAAG,CAAE0vH,UAAU,GAAGnmI,CAAC,GAAGomI,WAAY,CAAC;QACrG/uC,MAAM,CAAC33F,CAAC,GAAGm1B,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAE2vH,UAAU,GAAGnmI,CAAC,GAAGomI,WAAY,CAAC;QAC5D/uC,MAAM,CAAC3uE,CAAC,GAAGmM,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAEyuH,QAAQ,GAAG3mI,CAAC,GAAG4mI,SAAU,CAAC,GAAGnyH,IAAI,CAACyD,GAAG,CAAE0vH,UAAU,GAAGnmI,CAAC,GAAGomI,WAAY,CAAC;QAEnG3hF,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEA+L,MAAM,CAAC9b,IAAI,CAAE0+E,MAAO,CAAC,CAACx/E,SAAS,CAAC,CAAC;QACjCknC,OAAO,CAAC98C,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAs2B,GAAG,CAAC/8C,IAAI,CAAE1D,CAAC,GAAG+5I,OAAO,EAAE,CAAC,GAAGt4I,CAAE,CAAC;QAE9Bq4I,WAAW,CAACp2I,IAAI,CAAEuQ,KAAK,EAAI,CAAC;MAE7B;MAEA4lI,IAAI,CAACn2I,IAAI,CAAEo2I,WAAY,CAAC;IAEzB;;IAEA;;IAEA,KAAM,IAAInlH,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGmxB,cAAc,EAAEnxB,IAAE,EAAG,EAAG;MAE9C,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGmxB,aAAa,EAAEnxB,IAAE,EAAG,EAAG;QAE7C,IAAM90B,CAAC,GAAGi6I,IAAI,CAAEllH,IAAE,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAC9B,IAAM3c,CAAC,GAAG8hI,IAAI,CAAEllH,IAAE,CAAE,CAAED,IAAE,CAAE;QAC1B,IAAM50B,CAAC,GAAG+5I,IAAI,CAAEllH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,CAAE;QAC9B,IAAMnzB,CAAC,GAAGs4I,IAAI,CAAEllH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAElC,IAAKC,IAAE,KAAK,CAAC,IAAIizG,UAAU,GAAG,CAAC,EAAGtnF,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACzD,IAAKozB,IAAE,KAAKmxB,cAAc,GAAG,CAAC,IAAI8zF,QAAQ,GAAGnlI,IAAI,CAACC,EAAE,EAAG4rC,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;MAE/E;IAED;;IAEA;;IAEAo4I,OAAA,CAAKr6F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBq5F,OAAA,CAAKn6F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EyzF,OAAA,CAAKn6F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEm5F,OAAA,CAAKn6F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAk5F,OAAA;EAEjE;EAAC1zI,YAAA,CAAAuzI,cAAA;IAAAxzI,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAw/F,cAAA,CAAAp6I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIozH,cAAc,CAAEpzH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACy/B,aAAa,EAAEz/B,IAAI,CAAC0/B,cAAc,EAAE1/B,IAAI,CAACugH,QAAQ,EAAEvgH,IAAI,CAACwgH,SAAS,EAAExgH,IAAI,CAACwhH,UAAU,EAAExhH,IAAI,CAACyhH,WAAY,CAAC;IAEpJ;EAAC;EAAA,OAAA2R,cAAA;AAAA,EAhI2B96F,cAAc;AAAA,IAoIrCs7F,mBAAmB,GAAAlzI,OAAA,CAAAkzI,mBAAA,0BAAAC,oBAAA;EAAA1yH,SAAA,CAAAyyH,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAzyH,YAAA,CAAAuyH,mBAAA;EAExB,SAAAA,oBAAa1jH,MAAM,GAAG,CAAC,EAAEq5F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAwqB,OAAA;IAAA30I,eAAA,OAAAw0I,mBAAA;IAErC,IAAM9zF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CACjD;IAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnC;IAED65F,OAAA,GAAAD,QAAA,CAAAp5I,IAAA,OAAOolD,QAAQ,EAAE5F,OAAO,EAAEhqB,MAAM,EAAEq5F,MAAM;IAExCwqB,OAAA,CAAKv5I,IAAI,GAAG,qBAAqB;IAEjCu5I,OAAA,CAAKjuG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdq5F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAwqB,OAAA;EAEH;EAACl0I,YAAA,CAAA+zI,mBAAA;IAAAh0I,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAI4zH,mBAAmB,CAAE5zH,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACupG,MAAO,CAAC;IAE3D;EAAC;EAAA,OAAAqqB,mBAAA;AAAA,EA3BgC5Q,kBAAkB;AAAA,IA+B9CgR,aAAa,GAAAtzI,OAAA,CAAAszI,aAAA,0BAAAC,iBAAA;EAAA9yH,SAAA,CAAA6yH,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA7yH,YAAA,CAAA2yH,aAAA;EAElB,SAAAA,cAAa9jH,MAAM,GAAG,CAAC,EAAEikH,IAAI,GAAG,GAAG,EAAEhT,cAAc,GAAG,EAAE,EAAEiT,eAAe,GAAG,EAAE,EAAEtU,GAAG,GAAGzxH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA+lI,OAAA;IAAAj1I,eAAA,OAAA40I,aAAA;IAEnGK,OAAA,GAAAH,QAAA,CAAAx5I,IAAA;IAEA25I,OAAA,CAAK75I,IAAI,GAAG,eAAe;IAE3B65I,OAAA,CAAKvuG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdikH,IAAI,EAAEA,IAAI;MACVhT,cAAc,EAAEA,cAAc;MAC9BiT,eAAe,EAAEA,eAAe;MAChCtU,GAAG,EAAEA;IACN,CAAC;IAEDqB,cAAc,GAAG9yH,IAAI,CAACmC,KAAK,CAAE2wH,cAAe,CAAC;IAC7CiT,eAAe,GAAG/lI,IAAI,CAACmC,KAAK,CAAE4jI,eAAgB,CAAC;;IAE/C;;IAEA,IAAMl6F,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMljC,MAAM,GAAG,IAAIsW,OAAO,CAAC,CAAC;IAC5B,IAAMilE,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;;IAE5B;;IAEA,KAAM,IAAIqH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqsG,cAAc,EAAErsG,CAAC,EAAG,EAAG;MAE5C,KAAM,IAAIx7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI86I,eAAe,EAAE96I,CAAC,EAAG,EAAG;QAE7C,IAAMM,CAAC,GAAGN,CAAC,GAAG86I,eAAe,GAAGtU,GAAG;QACnC,IAAMzkI,CAAC,GAAGy5B,CAAC,GAAGqsG,cAAc,GAAG9yH,IAAI,CAACC,EAAE,GAAG,CAAC;;QAE1C;;QAEAokF,MAAM,CAACpjF,CAAC,GAAG,CAAE4gB,MAAM,GAAGikH,IAAI,GAAG9lI,IAAI,CAACwD,GAAG,CAAExW,CAAE,CAAC,IAAKgT,IAAI,CAACwD,GAAG,CAAEjY,CAAE,CAAC;QAC5D84F,MAAM,CAAC33F,CAAC,GAAG,CAAEm1B,MAAM,GAAGikH,IAAI,GAAG9lI,IAAI,CAACwD,GAAG,CAAExW,CAAE,CAAC,IAAKgT,IAAI,CAACyD,GAAG,CAAElY,CAAE,CAAC;QAC5D84F,MAAM,CAAC3uE,CAAC,GAAGowH,IAAI,GAAG9lI,IAAI,CAACyD,GAAG,CAAEzW,CAAE,CAAC;QAE/BykD,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEA5M,MAAM,CAAC7H,CAAC,GAAG4gB,MAAM,GAAG7hB,IAAI,CAACwD,GAAG,CAAEjY,CAAE,CAAC;QACjCud,MAAM,CAACpc,CAAC,GAAGm1B,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAElY,CAAE,CAAC;QACjCk2B,MAAM,CAACvb,UAAU,CAAEm+E,MAAM,EAAEv7E,MAAO,CAAC,CAACjE,SAAS,CAAC,CAAC;QAE/CknC,OAAO,CAAC98C,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAs2B,GAAG,CAAC/8C,IAAI,CAAEhE,CAAC,GAAG86I,eAAgB,CAAC;QAC/B/5F,GAAG,CAAC/8C,IAAI,CAAEw3B,CAAC,GAAGqsG,cAAe,CAAC;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAIrsG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIqsG,cAAc,EAAErsG,IAAC,EAAG,EAAG;MAE5C,KAAM,IAAIx7B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI86I,eAAe,EAAE96I,IAAC,EAAG,EAAG;QAE7C;;QAEA,IAAME,CAAC,GAAG,CAAE46I,eAAe,GAAG,CAAC,IAAKt/G,IAAC,GAAGx7B,IAAC,GAAG,CAAC;QAC7C,IAAMqY,CAAC,GAAG,CAAEyiI,eAAe,GAAG,CAAC,KAAOt/G,IAAC,GAAG,CAAC,CAAE,GAAGx7B,IAAC,GAAG,CAAC;QACrD,IAAMI,CAAC,GAAG,CAAE06I,eAAe,GAAG,CAAC,KAAOt/G,IAAC,GAAG,CAAC,CAAE,GAAGx7B,IAAC;QACjD,IAAM6B,CAAC,GAAG,CAAEi5I,eAAe,GAAG,CAAC,IAAKt/G,IAAC,GAAGx7B,IAAC;;QAEzC;;QAEA4gD,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAk5I,OAAA,CAAKn7F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBm6F,OAAA,CAAKj7F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1Eu0F,OAAA,CAAKj7F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEi6F,OAAA,CAAKj7F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAg6F,OAAA;EAEjE;EAACx0I,YAAA,CAAAm0I,aAAA;IAAAp0I,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAogG,aAAA,CAAAh7I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIg0H,aAAa,CAAEh0H,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACm0H,IAAI,EAAEn0H,IAAI,CAACmhH,cAAc,EAAEnhH,IAAI,CAACo0H,eAAe,EAAEp0H,IAAI,CAAC8/G,GAAI,CAAC;IAExG;EAAC;EAAA,OAAAkU,aAAA;AAAA,EA/G0B17F,cAAc;AAAA,IAmHpCg8F,iBAAiB,GAAA5zI,OAAA,CAAA4zI,iBAAA,0BAAAC,iBAAA;EAAApzH,SAAA,CAAAmzH,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAnzH,YAAA,CAAAizH,iBAAA;EAEtB,SAAAA,kBAAapkH,MAAM,GAAG,CAAC,EAAEikH,IAAI,GAAG,GAAG,EAAEC,eAAe,GAAG,EAAE,EAAEjT,cAAc,GAAG,CAAC,EAAEjmI,CAAC,GAAG,CAAC,EAAEwW,CAAC,GAAG,CAAC,EAAG;IAAA,IAAA+iI,OAAA;IAAAr1I,eAAA,OAAAk1I,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAA95I,IAAA;IAEA+5I,OAAA,CAAKj6I,IAAI,GAAG,mBAAmB;IAE/Bi6I,OAAA,CAAK3uG,UAAU,GAAG;MACjB5V,MAAM,EAAEA,MAAM;MACdikH,IAAI,EAAEA,IAAI;MACVC,eAAe,EAAEA,eAAe;MAChCjT,cAAc,EAAEA,cAAc;MAC9BjmI,CAAC,EAAEA,CAAC;MACJwW,CAAC,EAAEA;IACJ,CAAC;IAED0iI,eAAe,GAAG/lI,IAAI,CAACmC,KAAK,CAAE4jI,eAAgB,CAAC;IAC/CjT,cAAc,GAAG9yH,IAAI,CAACmC,KAAK,CAAE2wH,cAAe,CAAC;;IAE7C;;IAEA,IAAMjnF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMq4C,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAE5B,IAAMinH,EAAE,GAAG,IAAIjnH,OAAO,CAAC,CAAC;IACxB,IAAMknH,EAAE,GAAG,IAAIlnH,OAAO,CAAC,CAAC;IAExB,IAAMmnH,CAAC,GAAG,IAAInnH,OAAO,CAAC,CAAC;IACvB,IAAMonH,CAAC,GAAG,IAAIpnH,OAAO,CAAC,CAAC;IACvB,IAAMqnH,CAAC,GAAG,IAAIrnH,OAAO,CAAC,CAAC;;IAEvB;;IAEA,KAAM,IAAIn0B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI86I,eAAe,EAAE,EAAG96I,CAAC,EAAG;MAE7C;;MAEA,IAAMM,CAAC,GAAGN,CAAC,GAAG86I,eAAe,GAAGl5I,CAAC,GAAGmT,IAAI,CAACC,EAAE,GAAG,CAAC;;MAE/C;MACA;;MAEAymI,wBAAwB,CAAEn7I,CAAC,EAAEsB,CAAC,EAAEwW,CAAC,EAAEwe,MAAM,EAAEwkH,EAAG,CAAC;MAC/CK,wBAAwB,CAAEn7I,CAAC,GAAG,IAAI,EAAEsB,CAAC,EAAEwW,CAAC,EAAEwe,MAAM,EAAEykH,EAAG,CAAC;;MAEtD;;MAEAE,CAAC,CAACtgI,UAAU,CAAEogI,EAAE,EAAED,EAAG,CAAC;MACtBI,CAAC,CAAC3gI,UAAU,CAAEwgI,EAAE,EAAED,EAAG,CAAC;MACtBE,CAAC,CAAC1lH,YAAY,CAAE2lH,CAAC,EAAEC,CAAE,CAAC;MACtBA,CAAC,CAAC5lH,YAAY,CAAE0lH,CAAC,EAAEC,CAAE,CAAC;;MAEtB;;MAEAD,CAAC,CAAC1hI,SAAS,CAAC,CAAC;MACb4hI,CAAC,CAAC5hI,SAAS,CAAC,CAAC;MAEb,KAAM,IAAI4hB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqsG,cAAc,EAAE,EAAGrsG,CAAC,EAAG;QAE5C;QACA;;QAEA,IAAMz5B,CAAC,GAAGy5B,CAAC,GAAGqsG,cAAc,GAAG9yH,IAAI,CAACC,EAAE,GAAG,CAAC;QAC1C,IAAM4M,EAAE,GAAG,CAAEi5H,IAAI,GAAG9lI,IAAI,CAACwD,GAAG,CAAExW,CAAE,CAAC;QACjC,IAAM8f,EAAE,GAAGg5H,IAAI,GAAG9lI,IAAI,CAACyD,GAAG,CAAEzW,CAAE,CAAC;;QAE/B;QACA;;QAEAq3F,MAAM,CAACpjF,CAAC,GAAGolI,EAAE,CAACplI,CAAC,IAAK4L,EAAE,GAAG45H,CAAC,CAACxlI,CAAC,GAAG6L,EAAE,GAAGy5H,CAAC,CAACtlI,CAAC,CAAE;QACzCojF,MAAM,CAAC33F,CAAC,GAAG25I,EAAE,CAAC35I,CAAC,IAAKmgB,EAAE,GAAG45H,CAAC,CAAC/5I,CAAC,GAAGogB,EAAE,GAAGy5H,CAAC,CAAC75I,CAAC,CAAE;QACzC23F,MAAM,CAAC3uE,CAAC,GAAG2wH,EAAE,CAAC3wH,CAAC,IAAK7I,EAAE,GAAG45H,CAAC,CAAC/wH,CAAC,GAAG5I,EAAE,GAAGy5H,CAAC,CAAC7wH,CAAC,CAAE;QAEzC+7B,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;;QAE7C;;QAEA+L,MAAM,CAACvb,UAAU,CAAEm+E,MAAM,EAAEgiD,EAAG,CAAC,CAACxhI,SAAS,CAAC,CAAC;QAE3CknC,OAAO,CAAC98C,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAs2B,GAAG,CAAC/8C,IAAI,CAAEhE,CAAC,GAAG86I,eAAgB,CAAC;QAC/B/5F,GAAG,CAAC/8C,IAAI,CAAEw3B,CAAC,GAAGqsG,cAAe,CAAC;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAIrsG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIs/G,eAAe,EAAEt/G,IAAC,EAAG,EAAG;MAE7C,KAAM,IAAIx7B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI6nI,cAAc,EAAE7nI,IAAC,EAAG,EAAG;QAE5C;;QAEA,IAAME,CAAC,GAAG,CAAE2nI,cAAc,GAAG,CAAC,KAAOrsG,IAAC,GAAG,CAAC,CAAE,IAAKx7B,IAAC,GAAG,CAAC,CAAE;QACxD,IAAMqY,CAAC,GAAG,CAAEwvH,cAAc,GAAG,CAAC,IAAKrsG,IAAC,IAAKx7B,IAAC,GAAG,CAAC,CAAE;QAChD,IAAMI,CAAC,GAAG,CAAEynI,cAAc,GAAG,CAAC,IAAKrsG,IAAC,GAAGx7B,IAAC;QACxC,IAAM6B,CAAC,GAAG,CAAEgmI,cAAc,GAAG,CAAC,KAAOrsG,IAAC,GAAG,CAAC,CAAE,GAAGx7B,IAAC;;QAEhD;;QAEA4gD,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;QACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAs5I,OAAA,CAAKv7F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBu6F,OAAA,CAAKr7F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E20F,OAAA,CAAKr7F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEq6F,OAAA,CAAKr7F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAE/D;;IAEA,SAAS06F,wBAAwBA,CAAEn7I,CAAC,EAAEsB,CAAC,EAAEwW,CAAC,EAAEwe,MAAM,EAAE4C,QAAQ,EAAG;MAE9D,IAAMkiH,EAAE,GAAG3mI,IAAI,CAACwD,GAAG,CAAEjY,CAAE,CAAC;MACxB,IAAMq7I,EAAE,GAAG5mI,IAAI,CAACyD,GAAG,CAAElY,CAAE,CAAC;MACxB,IAAMs7I,OAAO,GAAGxjI,CAAC,GAAGxW,CAAC,GAAGtB,CAAC;MACzB,IAAMu7I,EAAE,GAAG9mI,IAAI,CAACwD,GAAG,CAAEqjI,OAAQ,CAAC;MAE9BpiH,QAAQ,CAACxjB,CAAC,GAAG4gB,MAAM,IAAK,CAAC,GAAGilH,EAAE,CAAE,GAAG,GAAG,GAAGH,EAAE;MAC3CliH,QAAQ,CAAC/3B,CAAC,GAAGm1B,MAAM,IAAK,CAAC,GAAGilH,EAAE,CAAE,GAAGF,EAAE,GAAG,GAAG;MAC3CniH,QAAQ,CAAC/O,CAAC,GAAGmM,MAAM,GAAG7hB,IAAI,CAACyD,GAAG,CAAEojI,OAAQ,CAAC,GAAG,GAAG;IAEhD;IAAC,OAAAT,OAAA;EAEF;EAAC50I,YAAA,CAAAy0I,iBAAA;IAAA10I,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA0gG,iBAAA,CAAAt7I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB,OAAO,IAAIs0H,iBAAiB,CAAEt0H,IAAI,CAACkQ,MAAM,EAAElQ,IAAI,CAACm0H,IAAI,EAAEn0H,IAAI,CAACo0H,eAAe,EAAEp0H,IAAI,CAACmhH,cAAc,EAAEnhH,IAAI,CAAC9kB,CAAC,EAAE8kB,IAAI,CAACtO,CAAE,CAAC;IAElH;EAAC;EAAA,OAAA4iI,iBAAA;AAAA,EA9J8Bh8F,cAAc;AAAA,IAkKxC88F,YAAY,GAAA10I,OAAA,CAAA00I,YAAA,0BAAAC,iBAAA;EAAAl0H,SAAA,CAAAi0H,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAj0H,YAAA,CAAA+zH,YAAA;EAEjB,SAAAA,aAAa36D,IAAI,GAAG,IAAIsiD,qBAAqB,CAAE,IAAItvG,OAAO,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAE2mH,eAAe,GAAG,EAAE,EAAElkH,MAAM,GAAG,CAAC,EAAEixG,cAAc,GAAG,CAAC,EAAExJ,MAAM,GAAG,KAAK,EAAG;IAAA,IAAA4d,OAAA;IAAAn2I,eAAA,OAAAg2I,YAAA;IAErMG,OAAA,GAAAD,QAAA,CAAA56I,IAAA;IAEA66I,OAAA,CAAK/6I,IAAI,GAAG,cAAc;IAE1B+6I,OAAA,CAAKzvG,UAAU,GAAG;MACjB20C,IAAI,EAAEA,IAAI;MACV25D,eAAe,EAAEA,eAAe;MAChClkH,MAAM,EAAEA,MAAM;MACdixG,cAAc,EAAEA,cAAc;MAC9BxJ,MAAM,EAAEA;IACT,CAAC;IAED,IAAM6d,MAAM,GAAG/6D,IAAI,CAACg9C,mBAAmB,CAAE2c,eAAe,EAAEzc,MAAO,CAAC;;IAElE;;IAEA4d,OAAA,CAAKh7F,QAAQ,GAAGi7F,MAAM,CAACj7F,QAAQ;IAC/Bg7F,OAAA,CAAKn7F,OAAO,GAAGo7F,MAAM,CAACp7F,OAAO;IAC7Bm7F,OAAA,CAAK3d,SAAS,GAAG4d,MAAM,CAAC5d,SAAS;;IAEjC;;IAEA,IAAMllC,MAAM,GAAG,IAAIjlE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAItQ,OAAO,CAAC,CAAC;IACxB,IAAIoiI,CAAC,GAAG,IAAIhoH,OAAO,CAAC,CAAC;;IAErB;;IAEA,IAAMqyB,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IACd,IAAMH,OAAO,GAAG,EAAE;;IAElB;;IAEAw7F,kBAAkB,CAAC,CAAC;;IAEpB;;IAEAH,OAAA,CAAKr8F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBq7F,OAAA,CAAKn8F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1Ey1F,OAAA,CAAKn8F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEm7F,OAAA,CAAKn8F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAE/D;;IAEA,SAASq7F,kBAAkBA,CAAA,EAAG;MAE7B,KAAM,IAAIp8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG86I,eAAe,EAAE96I,CAAC,EAAG,EAAG;QAE5Cq8I,eAAe,CAAEr8I,CAAE,CAAC;MAErB;;MAEA;MACA;MACA;MACA;;MAEAq8I,eAAe,CAAIhe,MAAM,KAAK,KAAK,GAAKyc,eAAe,GAAG,CAAE,CAAC;;MAE7D;MACA;;MAEA5Q,WAAW,CAAC,CAAC;;MAEb;;MAEAoS,eAAe,CAAC,CAAC;IAElB;IAEA,SAASD,eAAeA,CAAEr8I,CAAC,EAAG;MAE7B;;MAEAm8I,CAAC,GAAGh7D,IAAI,CAACu7C,UAAU,CAAE18H,CAAC,GAAG86I,eAAe,EAAEqB,CAAE,CAAC;;MAE7C;;MAEA,IAAMX,CAAC,GAAGU,MAAM,CAACp7F,OAAO,CAAE9gD,CAAC,CAAE;MAC7B,IAAMs7I,CAAC,GAAGY,MAAM,CAAC5d,SAAS,CAAEt+H,CAAC,CAAE;;MAE/B;;MAEA,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqsG,cAAc,EAAErsG,CAAC,EAAG,EAAG;QAE5C,IAAMz5B,CAAC,GAAGy5B,CAAC,GAAGqsG,cAAc,GAAG9yH,IAAI,CAACC,EAAE,GAAG,CAAC;QAE1C,IAAMwD,GAAG,GAAGzD,IAAI,CAACyD,GAAG,CAAEzW,CAAE,CAAC;QACzB,IAAMwW,GAAG,GAAG,CAAExD,IAAI,CAACwD,GAAG,CAAExW,CAAE,CAAC;;QAE3B;;QAEAy0B,MAAM,CAACxgB,CAAC,GAAKuC,GAAG,GAAGijI,CAAC,CAACxlI,CAAC,GAAGwC,GAAG,GAAG8iI,CAAC,CAACtlI,CAAG;QACpCwgB,MAAM,CAAC/0B,CAAC,GAAK8W,GAAG,GAAGijI,CAAC,CAAC/5I,CAAC,GAAG+W,GAAG,GAAG8iI,CAAC,CAAC75I,CAAG;QACpC+0B,MAAM,CAAC/L,CAAC,GAAKlS,GAAG,GAAGijI,CAAC,CAAC/wH,CAAC,GAAGjS,GAAG,GAAG8iI,CAAC,CAAC7wH,CAAG;QACpC+L,MAAM,CAAC5c,SAAS,CAAC,CAAC;QAElBknC,OAAO,CAAC98C,IAAI,CAAEwyB,MAAM,CAACxgB,CAAC,EAAEwgB,MAAM,CAAC/0B,CAAC,EAAE+0B,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEA2uE,MAAM,CAACpjF,CAAC,GAAGmmI,CAAC,CAACnmI,CAAC,GAAG4gB,MAAM,GAAGJ,MAAM,CAACxgB,CAAC;QAClCojF,MAAM,CAAC33F,CAAC,GAAG06I,CAAC,CAAC16I,CAAC,GAAGm1B,MAAM,GAAGJ,MAAM,CAAC/0B,CAAC;QAClC23F,MAAM,CAAC3uE,CAAC,GAAG0xH,CAAC,CAAC1xH,CAAC,GAAGmM,MAAM,GAAGJ,MAAM,CAAC/L,CAAC;QAElC+7B,QAAQ,CAACxiD,IAAI,CAAEo1F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAE,CAAC;MAE9C;IAED;IAEA,SAAS6xH,eAAeA,CAAA,EAAG;MAE1B,KAAM,IAAI9gH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIs/G,eAAe,EAAEt/G,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIx7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6nI,cAAc,EAAE7nI,CAAC,EAAG,EAAG;UAE5C,IAAME,CAAC,GAAG,CAAE2nI,cAAc,GAAG,CAAC,KAAOrsG,CAAC,GAAG,CAAC,CAAE,IAAKx7B,CAAC,GAAG,CAAC,CAAE;UACxD,IAAMqY,CAAC,GAAG,CAAEwvH,cAAc,GAAG,CAAC,IAAKrsG,CAAC,IAAKx7B,CAAC,GAAG,CAAC,CAAE;UAChD,IAAMI,CAAC,GAAG,CAAEynI,cAAc,GAAG,CAAC,IAAKrsG,CAAC,GAAGx7B,CAAC;UACxC,IAAM6B,CAAC,GAAG,CAAEgmI,cAAc,GAAG,CAAC,KAAOrsG,CAAC,GAAG,CAAC,CAAE,GAAGx7B,CAAC;;UAEhD;;UAEA4gD,OAAO,CAAC58C,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAExW,CAAE,CAAC;UACvB++C,OAAO,CAAC58C,IAAI,CAAEqU,CAAC,EAAEjY,CAAC,EAAEyB,CAAE,CAAC;QAExB;MAED;IAED;IAEA,SAASqoI,WAAWA,CAAA,EAAG;MAEtB,KAAM,IAAIlqI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI86I,eAAe,EAAE96I,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqsG,cAAc,EAAErsG,CAAC,EAAG,EAAG;UAE5CnR,EAAE,CAACrU,CAAC,GAAGhW,CAAC,GAAG86I,eAAe;UAC1BzwH,EAAE,CAAC5oB,CAAC,GAAG+5B,CAAC,GAAGqsG,cAAc;UAEzB9mF,GAAG,CAAC/8C,IAAI,CAAEqmB,EAAE,CAACrU,CAAC,EAAEqU,EAAE,CAAC5oB,CAAE,CAAC;QAEvB;MAED;IAED;IAAC,OAAAw6I,OAAA;EAEF;EAAC11I,YAAA,CAAAu1I,YAAA;IAAAx1I,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAwhG,YAAA,CAAAp8I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAlmC,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAwhG,YAAA,CAAAp8I,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAACy6D,IAAI,GAAG,IAAI,CAAC30C,UAAU,CAAC20C,IAAI,CAACp6D,MAAM,CAAC,CAAC;MAEzC,OAAOL,IAAI;IAEZ;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAiB/gC,IAAI,EAAG;MAEvB;MACA;MACA,OAAO,IAAIo1H,YAAY,CACtB,IAAI3X,MAAM,CAAEz9G,IAAI,CAACy6D,IAAI,CAACjgF,IAAI,CAAE,CAAC,CAAC,CAACumD,QAAQ,CAAE/gC,IAAI,CAACy6D,IAAK,CAAC,EACpDz6D,IAAI,CAACo0H,eAAe,EACpBp0H,IAAI,CAACkQ,MAAM,EACXlQ,IAAI,CAACmhH,cAAc,EACnBnhH,IAAI,CAAC23G,MACN,CAAC;IAEF;EAAC;EAAA,OAAAyd,YAAA;AAAA,EA/LyB98F,cAAc;AAAA,IAmMnCu9F,iBAAiB,GAAAn1I,OAAA,CAAAm1I,iBAAA,0BAAAC,iBAAA;EAAA30H,SAAA,CAAA00H,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA10H,YAAA,CAAAw0H,iBAAA;EAEtB,SAAAA,kBAAajjH,QAAQ,GAAG,IAAI,EAAG;IAAA,IAAAojH,OAAA;IAAA52I,eAAA,OAAAy2I,iBAAA;IAE9BG,OAAA,GAAAD,QAAA,CAAAr7I,IAAA;IAEAs7I,OAAA,CAAKx7I,IAAI,GAAG,mBAAmB;IAE/Bw7I,OAAA,CAAKlwG,UAAU,GAAG;MACjBlT,QAAQ,EAAEA;IACX,CAAC;IAED,IAAKA,QAAQ,KAAK,IAAI,EAAG;MAExB;;MAEA,IAAMktB,QAAQ,GAAG,EAAE;MACnB,IAAMm2F,KAAK,GAAG,IAAIz4H,GAAG,CAAC,CAAC;;MAEvB;;MAEA,IAAMw7B,KAAK,GAAG,IAAIvrB,OAAO,CAAC,CAAC;MAC3B,IAAMwxB,GAAG,GAAG,IAAIxxB,OAAO,CAAC,CAAC;MAEzB,IAAKmF,QAAQ,CAAC/kB,KAAK,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAMilB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAC7C,IAAMonB,OAAO,GAAGtnB,QAAQ,CAAC/kB,KAAK;QAC9B,IAAIgrC,MAAM,GAAGjmB,QAAQ,CAACimB,MAAM;QAE5B,IAAKA,MAAM,CAACl7C,MAAM,KAAK,CAAC,EAAG;UAE1Bk7C,MAAM,GAAG,CAAE;YAAEG,KAAK,EAAE,CAAC;YAAEvwB,KAAK,EAAEyxB,OAAO,CAACzxB,KAAK;YAAE+wB,aAAa,EAAE;UAAE,CAAC,CAAE;QAElE;;QAEA;;QAEA,KAAM,IAAIrgD,CAAC,GAAG,CAAC,EAAE+8I,EAAE,GAAGr9F,MAAM,CAACl7C,MAAM,EAAExE,CAAC,GAAG+8I,EAAE,EAAE,EAAG/8I,CAAC,EAAG;UAEnD,IAAMiiD,KAAK,GAAGvC,MAAM,CAAE1/C,CAAC,CAAE;UAEzB,IAAM6mD,UAAU,GAAG5E,KAAK,CAACpC,KAAK;UAC9B,IAAM8H,UAAU,GAAG1F,KAAK,CAAC3yB,KAAK;UAE9B,KAAM,IAAInvB,CAAC,GAAG0mD,UAAU,EAAEplD,CAAC,GAAKolD,UAAU,GAAGc,UAAY,EAAExnD,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAI,CAAC,EAAG;YAE1E,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;cAE9B,IAAMygB,MAAM,GAAG2E,OAAO,CAACljC,IAAI,CAAE1d,CAAC,GAAGw7B,CAAE,CAAC;cACpC,IAAM0gB,MAAM,GAAG0E,OAAO,CAACljC,IAAI,CAAE1d,CAAC,GAAG,CAAEw7B,CAAC,GAAG,CAAC,IAAK,CAAE,CAAC;cAEhDkkB,KAAK,CAACliC,mBAAmB,CAAEgc,QAAQ,EAAEyiB,MAAO,CAAC;cAC7C0J,GAAG,CAACnoC,mBAAmB,CAAEgc,QAAQ,EAAE0iB,MAAO,CAAC;cAE3C,IAAK2gG,YAAY,CAAEn9F,KAAK,EAAEiG,GAAG,EAAEg3F,KAAM,CAAC,KAAK,IAAI,EAAG;gBAEjDn2F,QAAQ,CAACxiD,IAAI,CAAE07C,KAAK,CAAC1pC,CAAC,EAAE0pC,KAAK,CAACj+C,CAAC,EAAEi+C,KAAK,CAACj1B,CAAE,CAAC;gBAC1C+7B,QAAQ,CAACxiD,IAAI,CAAE2hD,GAAG,CAAC3vC,CAAC,EAAE2vC,GAAG,CAAClkD,CAAC,EAAEkkD,GAAG,CAACl7B,CAAE,CAAC;cAErC;YAED;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA,IAAM+O,UAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAE7C,KAAM,IAAIx5B,IAAC,GAAG,CAAC,EAAEsB,IAAC,GAAKk4B,UAAQ,CAACrK,KAAK,GAAG,CAAG,EAAEnvB,IAAC,GAAGsB,IAAC,EAAEtB,IAAC,EAAG,EAAG;UAE1D,KAAM,IAAIw7B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;YAE9B;YACA;;YAEA,IAAMygB,MAAM,GAAG,CAAC,GAAGj8C,IAAC,GAAGw7B,IAAC;YACxB,IAAM0gB,OAAM,GAAG,CAAC,GAAGl8C,IAAC,GAAK,CAAEw7B,IAAC,GAAG,CAAC,IAAK,CAAG;YAExCkkB,KAAK,CAACliC,mBAAmB,CAAEgc,UAAQ,EAAEyiB,MAAO,CAAC;YAC7C0J,GAAG,CAACnoC,mBAAmB,CAAEgc,UAAQ,EAAE0iB,OAAO,CAAC;YAE3C,IAAK2gG,YAAY,CAAEn9F,KAAK,EAAEiG,GAAG,EAAEg3F,KAAM,CAAC,KAAK,IAAI,EAAG;cAEjDn2F,QAAQ,CAACxiD,IAAI,CAAE07C,KAAK,CAAC1pC,CAAC,EAAE0pC,KAAK,CAACj+C,CAAC,EAAEi+C,KAAK,CAACj1B,CAAE,CAAC;cAC1C+7B,QAAQ,CAACxiD,IAAI,CAAE2hD,GAAG,CAAC3vC,CAAC,EAAE2vC,GAAG,CAAClkD,CAAC,EAAEkkD,GAAG,CAACl7B,CAAE,CAAC;YAErC;UAED;QAED;MAED;;MAEA;;MAEAiyH,OAAA,CAAK58F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAE3E;IAAC,OAAAk2F,OAAA;EAEF;EAACn2I,YAAA,CAAAg2I,iBAAA;IAAAj2I,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAiiG,iBAAA,CAAA78I,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC2jB,UAAU,GAAG/sC,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAElE,MAAM,CAAC2jB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA+vG,iBAAA;AAAA,EAtH8Bv9F,cAAc;AA0H9C,SAAS69F,YAAYA,CAAEn9F,KAAK,EAAEiG,GAAG,EAAEg3F,KAAK,EAAG;EAE1C,IAAMG,KAAK,MAAAp4H,MAAA,CAAMg7B,KAAK,CAAC1pC,CAAC,OAAA0O,MAAA,CAAIg7B,KAAK,CAACj+C,CAAC,OAAAijB,MAAA,CAAIg7B,KAAK,CAACj1B,CAAC,OAAA/F,MAAA,CAAIihC,GAAG,CAAC3vC,CAAC,OAAA0O,MAAA,CAAIihC,GAAG,CAAClkD,CAAC,OAAAijB,MAAA,CAAIihC,GAAG,CAACl7B,CAAC,CAAE;EAC3E,IAAMsyH,KAAK,MAAAr4H,MAAA,CAAMihC,GAAG,CAAC3vC,CAAC,OAAA0O,MAAA,CAAIihC,GAAG,CAAClkD,CAAC,OAAAijB,MAAA,CAAIihC,GAAG,CAACl7B,CAAC,OAAA/F,MAAA,CAAIg7B,KAAK,CAAC1pC,CAAC,OAAA0O,MAAA,CAAIg7B,KAAK,CAACj+C,CAAC,OAAAijB,MAAA,CAAIg7B,KAAK,CAACj1B,CAAC,CAAE,CAAC,CAAC;;EAE7E,IAAKkyH,KAAK,CAACl4H,GAAG,CAAEq4H,KAAM,CAAC,KAAK,IAAI,IAAIH,KAAK,CAACl4H,GAAG,CAAEs4H,KAAM,CAAC,KAAK,IAAI,EAAG;IAEjE,OAAO,KAAK;EAEb,CAAC,MAAM;IAENJ,KAAK,CAAChiI,GAAG,CAAEmiI,KAAM,CAAC;IAClBH,KAAK,CAAChiI,GAAG,CAAEoiI,KAAM,CAAC;IAClB,OAAO,IAAI;EAEZ;AAED;AAEA,IAAIC,UAAU,GAAG,aAAav9I,MAAM,CAAC2kI,MAAM,CAAC;EAC3Cx/H,SAAS,EAAE,IAAI;EACfohD,WAAW,EAAEA,WAAW;EACxByhF,eAAe,EAAEA,eAAe;EAChCM,cAAc,EAAEA,cAAc;EAC9BuB,YAAY,EAAEA,YAAY;EAC1BhB,gBAAgB,EAAEA,gBAAgB;EAClC4C,oBAAoB,EAAEA,oBAAoB;EAC1CQ,aAAa,EAAEA,aAAa;EAC5B8G,eAAe,EAAEA,eAAe;EAChC4F,mBAAmB,EAAEA,mBAAmB;EACxCtR,aAAa,EAAEA,aAAa;EAC5B0R,kBAAkB,EAAEA,kBAAkB;EACtCrkF,aAAa,EAAEA,aAAa;EAC5Bu1E,kBAAkB,EAAEA,kBAAkB;EACtCkP,YAAY,EAAEA,YAAY;EAC1BU,aAAa,EAAEA,aAAa;EAC5BQ,cAAc,EAAEA,cAAc;EAC9BQ,mBAAmB,EAAEA,mBAAmB;EACxCI,aAAa,EAAEA,aAAa;EAC5BM,iBAAiB,EAAEA,iBAAiB;EACpCc,YAAY,EAAEA,YAAY;EAC1BS,iBAAiB,EAAEA;AACpB,CAAC,CAAC;AAAC,IAEG9sD,cAAc,GAAAroF,OAAA,CAAAqoF,cAAA,0BAAAwtD,UAAA;EAAAp1H,SAAA,CAAA4nE,cAAA,EAAAwtD,UAAA;EAAA,IAAAC,QAAA,GAAAn1H,YAAA,CAAA0nE,cAAA;EAEnB,SAAAA,eAAajjD,UAAU,EAAG;IAAA,IAAA2wG,OAAA;IAAAr3I,eAAA,OAAA2pF,cAAA;IAEzB0tD,OAAA,GAAAD,QAAA,CAAA97I,IAAA;IAEA+7I,OAAA,CAAKz6B,gBAAgB,GAAG,IAAI;IAE5By6B,OAAA,CAAKj8I,IAAI,GAAG,gBAAgB;IAE5Bi8I,OAAA,CAAKt5H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC;IAClColG,OAAA,CAAKxsG,WAAW,GAAG,IAAI;IAEvBwsG,OAAA,CAAK3lG,GAAG,GAAG,IAAI;IAEf2lG,OAAA,CAAKlqG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA2wG,OAAA;EAE9B;EAAC52I,YAAA,CAAAkpF,cAAA;IAAAnpF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAm1C,cAAA,CAAA/vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAAC2zB,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAi4C,cAAA;AAAA,EA7B2Bv/C,QAAQ;AAAA,IAiC/BktG,iBAAiB,GAAAh2I,OAAA,CAAAg2I,iBAAA,0BAAAC,eAAA;EAAAx1H,SAAA,CAAAu1H,iBAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAv1H,YAAA,CAAAq1H,iBAAA;EAEtB,SAAAA,kBAAa5wG,UAAU,EAAG;IAAA,IAAA+wG,OAAA;IAAAz3I,eAAA,OAAAs3I,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAl8I,IAAA,OAAOorC,UAAU;IAEjB+wG,OAAA,CAAK70D,mBAAmB,GAAG,IAAI;IAE/B60D,OAAA,CAAKr8I,IAAI,GAAG,mBAAmB;IAAC,OAAAq8I,OAAA;EAEjC;EAAC,OAAAh3I,YAAA,CAAA62I,iBAAA;AAAA,EAV8B50F,cAAc;AAAA,IAcxC2mC,oBAAoB,GAAA/nF,OAAA,CAAA+nF,oBAAA,0BAAAquD,UAAA;EAAA31H,SAAA,CAAAsnE,oBAAA,EAAAquD,UAAA;EAAA,IAAAC,QAAA,GAAA11H,YAAA,CAAAonE,oBAAA;EAEzB,SAAAA,qBAAa3iD,UAAU,EAAG;IAAA,IAAAkxG,OAAA;IAAA53I,eAAA,OAAAqpF,oBAAA;IAEzBuuD,OAAA,GAAAD,QAAA,CAAAr8I,IAAA;IAEAs8I,OAAA,CAAK5tD,sBAAsB,GAAG,IAAI;IAElC4tD,OAAA,CAAK70F,OAAO,GAAG;MAAE,UAAU,EAAE;IAAG,CAAC;IAEjC60F,OAAA,CAAKx8I,IAAI,GAAG,sBAAsB;IAElCw8I,OAAA,CAAK75H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;IACpC2lG,OAAA,CAAKrqG,SAAS,GAAG,GAAG;IACpBqqG,OAAA,CAAKpqG,SAAS,GAAG,GAAG;IAEpBoqG,OAAA,CAAK7oG,GAAG,GAAG,IAAI;IAEf6oG,OAAA,CAAK1oG,QAAQ,GAAG,IAAI;IACpB0oG,OAAA,CAAKzoG,iBAAiB,GAAG,GAAG;IAE5ByoG,OAAA,CAAKxoG,KAAK,GAAG,IAAI;IACjBwoG,OAAA,CAAKvoG,cAAc,GAAG,GAAG;IAEzBuoG,OAAA,CAAKhqG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrC2lG,OAAA,CAAK/pG,iBAAiB,GAAG,GAAG;IAC5B+pG,OAAA,CAAK5nG,WAAW,GAAG,IAAI;IAEvB4nG,OAAA,CAAKtoG,OAAO,GAAG,IAAI;IACnBsoG,OAAA,CAAKroG,SAAS,GAAG,CAAC;IAElBqoG,OAAA,CAAKpoG,SAAS,GAAG,IAAI;IACrBooG,OAAA,CAAKnoG,aAAa,GAAG1kC,qBAAqB;IAC1C6sI,OAAA,CAAKloG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC2jI,OAAA,CAAKjoG,eAAe,GAAG,IAAI;IAC3BioG,OAAA,CAAKhoG,iBAAiB,GAAG,CAAC;IAC1BgoG,OAAA,CAAK/nG,gBAAgB,GAAG,CAAC;IAEzB+nG,OAAA,CAAK9nG,YAAY,GAAG,IAAI;IAExB8nG,OAAA,CAAK7nG,YAAY,GAAG,IAAI;IAExB6nG,OAAA,CAAK3oG,QAAQ,GAAG,IAAI;IAEpB2oG,OAAA,CAAKxnG,MAAM,GAAG,IAAI;IAClBwnG,OAAA,CAAKtnG,eAAe,GAAG,GAAG;IAE1BsnG,OAAA,CAAKvmG,SAAS,GAAG,KAAK;IACtBumG,OAAA,CAAKtmG,kBAAkB,GAAG,CAAC;IAC3BsmG,OAAA,CAAKrmG,gBAAgB,GAAG,OAAO;IAC/BqmG,OAAA,CAAKpmG,iBAAiB,GAAG,OAAO;IAEhComG,OAAA,CAAKnmG,WAAW,GAAG,KAAK;IAExBmmG,OAAA,CAAKlmG,GAAG,GAAG,IAAI;IAEfkmG,OAAA,CAAKzqG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAkxG,OAAA;EAE9B;EAACn3I,YAAA,CAAA4oF,oBAAA;IAAA7oF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA60C,oBAAA,CAAAzvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACggC,OAAO,GAAG;QAAE,UAAU,EAAE;MAAG,CAAC;MAEjC,IAAI,CAAChlC,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAC/B,IAAI,CAACwvB,SAAS,GAAGxqB,MAAM,CAACwqB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGzqB,MAAM,CAACyqB,SAAS;MAEjC,IAAI,CAACuB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGnsB,MAAM,CAACmsB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGpsB,MAAM,CAACosB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGrsB,MAAM,CAACqsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGtsB,MAAM,CAACssB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAACh5B,IAAI,CAAEmO,MAAM,CAAC6qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAGjtB,MAAM,CAACitB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG9qB,MAAM,CAAC8qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACC,YAAY,GAAG/sB,MAAM,CAAC+sB,YAAY;MAEvC,IAAI,CAACC,YAAY,GAAGhtB,MAAM,CAACgtB,YAAY;MAEvC,IAAI,CAACd,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGrtB,MAAM,CAACqtB,MAAM;MAC3B,IAAI,CAACE,eAAe,GAAGvtB,MAAM,CAACutB,eAAe;MAE7C,IAAI,CAACe,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGzuB,MAAM,CAACyuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAG1uB,MAAM,CAAC0uB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA23C,oBAAA;AAAA,EAlHiCj/C,QAAQ;AAAA,IAsHrCk/C,oBAAoB,GAAAhoF,OAAA,CAAAgoF,oBAAA,0BAAAuuD,qBAAA;EAAA91H,SAAA,CAAAunE,oBAAA,EAAAuuD,qBAAA;EAAA,IAAAC,QAAA,GAAA71H,YAAA,CAAAqnE,oBAAA;EAEzB,SAAAA,qBAAa5iD,UAAU,EAAG;IAAA,IAAAqxG,OAAA;IAAA/3I,eAAA,OAAAspF,oBAAA;IAEzByuD,OAAA,GAAAD,QAAA,CAAAx8I,IAAA;IAEAy8I,OAAA,CAAKj8B,sBAAsB,GAAG,IAAI;IAElCi8B,OAAA,CAAKh1F,OAAO,GAAG;MAEd,UAAU,EAAE,EAAE;MACd,UAAU,EAAE;IAEb,CAAC;IAEDg1F,OAAA,CAAK38I,IAAI,GAAG,sBAAsB;IAElC28I,OAAA,CAAKlpG,kBAAkB,GAAG,CAAC;IAC3BkpG,OAAA,CAAKjpG,aAAa,GAAG,IAAI;IAEzBipG,OAAA,CAAK3pG,YAAY,GAAG,IAAI;IACxB2pG,OAAA,CAAK5pG,kBAAkB,GAAG,GAAG;IAC7B4pG,OAAA,CAAK1pG,qBAAqB,GAAG,IAAI;IACjC0pG,OAAA,CAAKxpG,oBAAoB,GAAG,IAAIt6B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAC/C8jI,OAAA,CAAKzpG,kBAAkB,GAAG,IAAI;IAE9BypG,OAAA,CAAK59E,GAAG,GAAG,GAAG;IAEdxgE,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAi1H,OAAA,GAAQ,cAAc,EAAE;MAC5C3jI,GAAG,EAAE,SAAAA,IAAA,EAAY;QAEhB,OAASxE,KAAK,CAAE,GAAG,IAAK,IAAI,CAACuqD,GAAG,GAAG,CAAC,CAAE,IAAK,IAAI,CAACA,GAAG,GAAG,CAAC,CAAE,EAAE,CAAC,EAAE,CAAE,CAAC;MAElE,CAAC;MACDhnD,GAAG,EAAE,SAAAA,IAAWo9B,YAAY,EAAG;QAE9B,IAAI,CAAC4pB,GAAG,GAAG,CAAE,CAAC,GAAG,GAAG,GAAG5pB,YAAY,KAAO,CAAC,GAAG,GAAG,GAAGA,YAAY,CAAE;MAEnE;IACD,CAAE,CAAC;IAEHwnG,OAAA,CAAKppG,cAAc,GAAG,IAAI;IAC1BopG,OAAA,CAAKtpG,cAAc,GAAG,GAAG;IACzBspG,OAAA,CAAKrpG,yBAAyB,GAAG,CAAE,GAAG,EAAE,GAAG,CAAE;IAC7CqpG,OAAA,CAAKnpG,uBAAuB,GAAG,IAAI;IAEnCmpG,OAAA,CAAKrqG,UAAU,GAAG,IAAIuE,KAAK,CAAE,QAAS,CAAC;IACvC8lG,OAAA,CAAKz4E,aAAa,GAAG,IAAI;IACzBy4E,OAAA,CAAKpqG,cAAc,GAAG,GAAG;IACzBoqG,OAAA,CAAKv4E,iBAAiB,GAAG,IAAI;IAE7Bu4E,OAAA,CAAKpnG,eAAe,GAAG,IAAI;IAE3BonG,OAAA,CAAKnnG,SAAS,GAAG,CAAC;IAClBmnG,OAAA,CAAKlnG,YAAY,GAAG,IAAI;IACxBknG,OAAA,CAAKjnG,mBAAmB,GAAGnf,QAAQ;IACnComH,OAAA,CAAKhnG,gBAAgB,GAAG,IAAIkB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE5C8lG,OAAA,CAAKhqG,iBAAiB,GAAG,GAAG;IAC5BgqG,OAAA,CAAK7nG,oBAAoB,GAAG,IAAI;IAChC6nG,OAAA,CAAK/pG,aAAa,GAAG,IAAIiE,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzC8lG,OAAA,CAAK5nG,gBAAgB,GAAG,IAAI;IAE5B4nG,OAAA,CAAKC,WAAW,GAAG,CAAC;IACpBD,OAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,OAAA,CAAKG,YAAY,GAAG,CAAC;IACrBH,OAAA,CAAKI,MAAM,GAAG,GAAG;IACjBJ,OAAA,CAAKK,aAAa,GAAG,CAAC;IAEtBL,OAAA,CAAK5qG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAqxG,OAAA;EAE9B;EAACt3I,YAAA,CAAA6oF,oBAAA;IAAA9oF,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAiB;MAEhB,OAAO,IAAI,CAAC4jI,WAAW;IAExB,CAAC;IAAA7kI,GAAA,EAED,SAAAA,IAAgBlZ,KAAK,EAAG;MAEvB,IAAK,IAAI,CAAC+9I,WAAW,GAAG,CAAC,KAAK/9I,KAAK,GAAG,CAAC,EAAG;QAEzC,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACg3H,WAAW,GAAG/9I,KAAK;IAEzB;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAAC6jI,UAAU;IAEvB,CAAC;IAAA9kI,GAAA,EAED,SAAAA,IAAelZ,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACg+I,UAAU,GAAG,CAAC,KAAKh+I,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACi3H,UAAU,GAAGh+I,KAAK;IAExB;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC8jI,YAAY;IAEzB,CAAC;IAAA/kI,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAK,IAAI,CAACi+I,YAAY,GAAG,CAAC,KAAKj+I,KAAK,GAAG,CAAC,EAAG;QAE1C,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACk3H,YAAY,GAAGj+I,KAAK;IAE1B;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAC+jI,MAAM;IAEnB,CAAC;IAAAhlI,GAAA,EAED,SAAAA,IAAWlZ,KAAK,EAAG;MAElB,IAAK,IAAI,CAACk+I,MAAM,GAAG,CAAC,KAAKl+I,KAAK,GAAG,CAAC,EAAG;QAEpC,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACm3H,MAAM,GAAGl+I,KAAK;IAEpB;EAAC;IAAAuG,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAmB;MAElB,OAAO,IAAI,CAACgkI,aAAa;IAE1B,CAAC;IAAAjlI,GAAA,EAED,SAAAA,IAAkBlZ,KAAK,EAAG;MAEzB,IAAK,IAAI,CAACm+I,aAAa,GAAG,CAAC,KAAKn+I,KAAK,GAAG,CAAC,EAAG;QAE3C,IAAI,CAAC+mB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACo3H,aAAa,GAAGn+I,KAAK;IAE3B;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA80C,oBAAA,CAAA1vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACggC,OAAO,GAAG;QAEd,UAAU,EAAE,EAAE;QACd,UAAU,EAAE;MAEb,CAAC;MAED,IAAI,CAACrgC,UAAU,GAAGK,MAAM,CAACL,UAAU;MACnC,IAAI,CAACmsB,kBAAkB,GAAG9rB,MAAM,CAAC8rB,kBAAkB;MACnD,IAAI,CAACC,aAAa,GAAG/rB,MAAM,CAAC+rB,aAAa;MAEzC,IAAI,CAACZ,SAAS,GAAGnrB,MAAM,CAACmrB,SAAS;MACjC,IAAI,CAACE,YAAY,GAAGrrB,MAAM,CAACqrB,YAAY;MACvC,IAAI,CAACD,kBAAkB,GAAGprB,MAAM,CAACorB,kBAAkB;MACnD,IAAI,CAACE,qBAAqB,GAAGtrB,MAAM,CAACsrB,qBAAqB;MACzD,IAAI,CAACC,kBAAkB,GAAGvrB,MAAM,CAACurB,kBAAkB;MACnD,IAAI,CAACC,oBAAoB,CAAC35B,IAAI,CAAEmO,MAAM,CAACwrB,oBAAqB,CAAC;MAE7D,IAAI,CAAC4rB,GAAG,GAAGp3C,MAAM,CAACo3C,GAAG;MAErB,IAAI,CAAC3rB,WAAW,GAAGzrB,MAAM,CAACyrB,WAAW;MACrC,IAAI,CAACG,cAAc,GAAG5rB,MAAM,CAAC4rB,cAAc;MAC3C,IAAI,CAACF,cAAc,GAAG1rB,MAAM,CAAC0rB,cAAc;MAC3C,IAAI,CAACC,yBAAyB,GAAAxK,kBAAA,CAAQnhB,MAAM,CAAC2rB,yBAAyB,CAAE;MACxE,IAAI,CAACE,uBAAuB,GAAG7rB,MAAM,CAAC6rB,uBAAuB;MAE7D,IAAI,CAACnB,KAAK,GAAG1qB,MAAM,CAAC0qB,KAAK;MACzB,IAAI,CAACC,UAAU,CAAC94B,IAAI,CAAEmO,MAAM,CAAC2qB,UAAW,CAAC;MACzC,IAAI,CAAC4xB,aAAa,GAAGv8C,MAAM,CAACu8C,aAAa;MACzC,IAAI,CAAC3xB,cAAc,GAAG5qB,MAAM,CAAC4qB,cAAc;MAC3C,IAAI,CAAC6xB,iBAAiB,GAAGz8C,MAAM,CAACy8C,iBAAiB;MAEjD,IAAI,CAAC9uB,YAAY,GAAG3tB,MAAM,CAAC2tB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG5tB,MAAM,CAAC4tB,eAAe;MAE7C,IAAI,CAACC,SAAS,GAAG7tB,MAAM,CAAC6tB,SAAS;MACjC,IAAI,CAACC,YAAY,GAAG9tB,MAAM,CAAC8tB,YAAY;MACvC,IAAI,CAACC,mBAAmB,GAAG/tB,MAAM,CAAC+tB,mBAAmB;MACrD,IAAI,CAACC,gBAAgB,CAACn8B,IAAI,CAAEmO,MAAM,CAACguB,gBAAiB,CAAC;MAErD,IAAI,CAAChD,iBAAiB,GAAGhrB,MAAM,CAACgrB,iBAAiB;MACjD,IAAI,CAACmC,oBAAoB,GAAGntB,MAAM,CAACmtB,oBAAoB;MACvD,IAAI,CAAClC,aAAa,CAACp5B,IAAI,CAAEmO,MAAM,CAACirB,aAAc,CAAC;MAC/C,IAAI,CAACmC,gBAAgB,GAAGptB,MAAM,CAACotB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAm5C,oBAAA;AAAA,EAtNiCD,oBAAoB;AAAA,IA0NjDF,iBAAiB,GAAA7nF,OAAA,CAAA6nF,iBAAA,0BAAAkvD,WAAA;EAAAt2H,SAAA,CAAAonE,iBAAA,EAAAkvD,WAAA;EAAA,IAAAC,QAAA,GAAAr2H,YAAA,CAAAknE,iBAAA;EAEtB,SAAAA,kBAAaziD,UAAU,EAAG;IAAA,IAAA6xG,OAAA;IAAAv4I,eAAA,OAAAmpF,iBAAA;IAEzBovD,OAAA,GAAAD,QAAA,CAAAh9I,IAAA;IAEAi9I,OAAA,CAAK58B,mBAAmB,GAAG,IAAI;IAE/B48B,OAAA,CAAKn9I,IAAI,GAAG,mBAAmB;IAE/Bm9I,OAAA,CAAKx6H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;IACpCsmG,OAAA,CAAKzqG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAS,CAAC;IACrCsmG,OAAA,CAAKtqG,SAAS,GAAG,EAAE;IAEnBsqG,OAAA,CAAKxpG,GAAG,GAAG,IAAI;IAEfwpG,OAAA,CAAKrpG,QAAQ,GAAG,IAAI;IACpBqpG,OAAA,CAAKppG,iBAAiB,GAAG,GAAG;IAE5BopG,OAAA,CAAKnpG,KAAK,GAAG,IAAI;IACjBmpG,OAAA,CAAKlpG,cAAc,GAAG,GAAG;IAEzBkpG,OAAA,CAAK3qG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrCsmG,OAAA,CAAK1qG,iBAAiB,GAAG,GAAG;IAC5B0qG,OAAA,CAAKvoG,WAAW,GAAG,IAAI;IAEvBuoG,OAAA,CAAKjpG,OAAO,GAAG,IAAI;IACnBipG,OAAA,CAAKhpG,SAAS,GAAG,CAAC;IAElBgpG,OAAA,CAAK/oG,SAAS,GAAG,IAAI;IACrB+oG,OAAA,CAAK9oG,aAAa,GAAG1kC,qBAAqB;IAC1CwtI,OAAA,CAAK7oG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCskI,OAAA,CAAK5oG,eAAe,GAAG,IAAI;IAC3B4oG,OAAA,CAAK3oG,iBAAiB,GAAG,CAAC;IAC1B2oG,OAAA,CAAK1oG,gBAAgB,GAAG,CAAC;IAEzB0oG,OAAA,CAAKtoG,WAAW,GAAG,IAAI;IAEvBsoG,OAAA,CAAKtpG,QAAQ,GAAG,IAAI;IAEpBspG,OAAA,CAAKnoG,MAAM,GAAG,IAAI;IAClBmoG,OAAA,CAAKloG,OAAO,GAAG1rC,iBAAiB;IAChC4zI,OAAA,CAAKhoG,YAAY,GAAG,CAAC;IACrBgoG,OAAA,CAAK/nG,eAAe,GAAG,IAAI;IAE3B+nG,OAAA,CAAKlnG,SAAS,GAAG,KAAK;IACtBknG,OAAA,CAAKjnG,kBAAkB,GAAG,CAAC;IAC3BinG,OAAA,CAAKhnG,gBAAgB,GAAG,OAAO;IAC/BgnG,OAAA,CAAK/mG,iBAAiB,GAAG,OAAO;IAEhC+mG,OAAA,CAAK9mG,WAAW,GAAG,KAAK;IAExB8mG,OAAA,CAAK7mG,GAAG,GAAG,IAAI;IAEf6mG,OAAA,CAAKprG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA6xG,OAAA;EAE9B;EAAC93I,YAAA,CAAA0oF,iBAAA;IAAA3oF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA20C,iBAAA,CAAAvvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAC/B,IAAI,CAAC+vB,QAAQ,CAACl5B,IAAI,CAAEmO,MAAM,CAAC+qB,QAAS,CAAC;MACrC,IAAI,CAACG,SAAS,GAAGlrB,MAAM,CAACkrB,SAAS;MAEjC,IAAI,CAACc,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGnsB,MAAM,CAACmsB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGpsB,MAAM,CAACosB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGrsB,MAAM,CAACqsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGtsB,MAAM,CAACssB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAACh5B,IAAI,CAAEmO,MAAM,CAAC6qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAGjtB,MAAM,CAACitB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG9qB,MAAM,CAAC8qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACI,WAAW,GAAGltB,MAAM,CAACktB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGrtB,MAAM,CAACqtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGttB,MAAM,CAACstB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGxtB,MAAM,CAACwtB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGztB,MAAM,CAACytB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGzuB,MAAM,CAACyuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAG1uB,MAAM,CAAC0uB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAy3C,iBAAA;AAAA,EA9G8B/+C,QAAQ;AAAA,IAkHlCg/C,gBAAgB,GAAA9nF,OAAA,CAAA8nF,gBAAA,0BAAAovD,WAAA;EAAAz2H,SAAA,CAAAqnE,gBAAA,EAAAovD,WAAA;EAAA,IAAAC,QAAA,GAAAx2H,YAAA,CAAAmnE,gBAAA;EAErB,SAAAA,iBAAa1iD,UAAU,EAAG;IAAA,IAAAgyG,OAAA;IAAA14I,eAAA,OAAAopF,gBAAA;IAEzBsvD,OAAA,GAAAD,QAAA,CAAAn9I,IAAA;IAEAo9I,OAAA,CAAKj9B,kBAAkB,GAAG,IAAI;IAE9Bi9B,OAAA,CAAK31F,OAAO,GAAG;MAAE,MAAM,EAAE;IAAG,CAAC;IAE7B21F,OAAA,CAAKt9I,IAAI,GAAG,kBAAkB;IAE9Bs9I,OAAA,CAAK36H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC;IAElCymG,OAAA,CAAK3pG,GAAG,GAAG,IAAI;IACf2pG,OAAA,CAAKjoG,WAAW,GAAG,IAAI;IAEvBioG,OAAA,CAAKxpG,QAAQ,GAAG,IAAI;IACpBwpG,OAAA,CAAKvpG,iBAAiB,GAAG,GAAG;IAE5BupG,OAAA,CAAKtpG,KAAK,GAAG,IAAI;IACjBspG,OAAA,CAAKrpG,cAAc,GAAG,GAAG;IAEzBqpG,OAAA,CAAK9qG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrCymG,OAAA,CAAK7qG,iBAAiB,GAAG,GAAG;IAC5B6qG,OAAA,CAAK1oG,WAAW,GAAG,IAAI;IAEvB0oG,OAAA,CAAKppG,OAAO,GAAG,IAAI;IACnBopG,OAAA,CAAKnpG,SAAS,GAAG,CAAC;IAElBmpG,OAAA,CAAKlpG,SAAS,GAAG,IAAI;IACrBkpG,OAAA,CAAKjpG,aAAa,GAAG1kC,qBAAqB;IAC1C2tI,OAAA,CAAKhpG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCykI,OAAA,CAAK/oG,eAAe,GAAG,IAAI;IAC3B+oG,OAAA,CAAK9oG,iBAAiB,GAAG,CAAC;IAC1B8oG,OAAA,CAAK7oG,gBAAgB,GAAG,CAAC;IAEzB6oG,OAAA,CAAKzpG,QAAQ,GAAG,IAAI;IAEpBypG,OAAA,CAAKrnG,SAAS,GAAG,KAAK;IACtBqnG,OAAA,CAAKpnG,kBAAkB,GAAG,CAAC;IAC3BonG,OAAA,CAAKnnG,gBAAgB,GAAG,OAAO;IAC/BmnG,OAAA,CAAKlnG,iBAAiB,GAAG,OAAO;IAEhCknG,OAAA,CAAKhnG,GAAG,GAAG,IAAI;IAEfgnG,OAAA,CAAKvrG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAgyG,OAAA;EAE9B;EAACj4I,YAAA,CAAA2oF,gBAAA;IAAA5oF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA40C,gBAAA,CAAAxvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MACrB,IAAI,CAAC0B,WAAW,GAAG1tB,MAAM,CAAC0tB,WAAW;MAErC,IAAI,CAACvB,QAAQ,GAAGnsB,MAAM,CAACmsB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGpsB,MAAM,CAACosB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGrsB,MAAM,CAACqsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGtsB,MAAM,CAACssB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAACh5B,IAAI,CAAEmO,MAAM,CAAC6qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAGjtB,MAAM,CAACitB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG9qB,MAAM,CAAC8qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACoC,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGzuB,MAAM,CAACyuB,iBAAiB;MAEjD,IAAI,CAACE,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA03C,gBAAA;AAAA,EA5F6Bh/C,QAAQ;AAAA,IAgGjC6+C,kBAAkB,GAAA3nF,OAAA,CAAA2nF,kBAAA,0BAAA0vD,WAAA;EAAA52H,SAAA,CAAAknE,kBAAA,EAAA0vD,WAAA;EAAA,IAAAC,QAAA,GAAA32H,YAAA,CAAAgnE,kBAAA;EAEvB,SAAAA,mBAAaviD,UAAU,EAAG;IAAA,IAAAmyG,OAAA;IAAA74I,eAAA,OAAAipF,kBAAA;IAEzB4vD,OAAA,GAAAD,QAAA,CAAAt9I,IAAA;IAEAu9I,OAAA,CAAK18B,oBAAoB,GAAG,IAAI;IAEhC08B,OAAA,CAAKz9I,IAAI,GAAG,oBAAoB;IAEhCy9I,OAAA,CAAKvpG,OAAO,GAAG,IAAI;IACnBupG,OAAA,CAAKtpG,SAAS,GAAG,CAAC;IAElBspG,OAAA,CAAKrpG,SAAS,GAAG,IAAI;IACrBqpG,OAAA,CAAKppG,aAAa,GAAG1kC,qBAAqB;IAC1C8tI,OAAA,CAAKnpG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC4kI,OAAA,CAAKlpG,eAAe,GAAG,IAAI;IAC3BkpG,OAAA,CAAKjpG,iBAAiB,GAAG,CAAC;IAC1BipG,OAAA,CAAKhpG,gBAAgB,GAAG,CAAC;IAEzBgpG,OAAA,CAAKxnG,SAAS,GAAG,KAAK;IACtBwnG,OAAA,CAAKvnG,kBAAkB,GAAG,CAAC;IAE3BunG,OAAA,CAAKpnG,WAAW,GAAG,KAAK;IAExBonG,OAAA,CAAK1rG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAmyG,OAAA;EAE9B;EAACp4I,YAAA,CAAAwoF,kBAAA;IAAAzoF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAy0C,kBAAA,CAAArvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACusB,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MAEnD,IAAI,CAACG,WAAW,GAAG1uB,MAAM,CAAC0uB,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAw3C,kBAAA;AAAA,EApD+B7+C,QAAQ;AAAA,IAwDnC8+C,mBAAmB,GAAA5nF,OAAA,CAAA4nF,mBAAA,0BAAA4vD,WAAA;EAAA/2H,SAAA,CAAAmnE,mBAAA,EAAA4vD,WAAA;EAAA,IAAAC,SAAA,GAAA92H,YAAA,CAAAinE,mBAAA;EAExB,SAAAA,oBAAaxiD,UAAU,EAAG;IAAA,IAAAsyG,OAAA;IAAAh5I,eAAA,OAAAkpF,mBAAA;IAEzB8vD,OAAA,GAAAD,SAAA,CAAAz9I,IAAA;IAEA09I,OAAA,CAAKx9B,qBAAqB,GAAG,IAAI;IAEjCw9B,OAAA,CAAK59I,IAAI,GAAG,qBAAqB;IAEjC49I,OAAA,CAAKj7H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpC+mG,OAAA,CAAKjqG,GAAG,GAAG,IAAI;IAEfiqG,OAAA,CAAK9pG,QAAQ,GAAG,IAAI;IACpB8pG,OAAA,CAAK7pG,iBAAiB,GAAG,GAAG;IAE5B6pG,OAAA,CAAK5pG,KAAK,GAAG,IAAI;IACjB4pG,OAAA,CAAK3pG,cAAc,GAAG,GAAG;IAEzB2pG,OAAA,CAAKprG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrC+mG,OAAA,CAAKnrG,iBAAiB,GAAG,GAAG;IAC5BmrG,OAAA,CAAKhpG,WAAW,GAAG,IAAI;IAEvBgpG,OAAA,CAAK1pG,OAAO,GAAG,IAAI;IACnB0pG,OAAA,CAAKzpG,SAAS,GAAG,CAAC;IAElBypG,OAAA,CAAKxpG,SAAS,GAAG,IAAI;IACrBwpG,OAAA,CAAKvpG,aAAa,GAAG1kC,qBAAqB;IAC1CiuI,OAAA,CAAKtpG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC+kI,OAAA,CAAKrpG,eAAe,GAAG,IAAI;IAC3BqpG,OAAA,CAAKppG,iBAAiB,GAAG,CAAC;IAC1BopG,OAAA,CAAKnpG,gBAAgB,GAAG,CAAC;IAEzBmpG,OAAA,CAAK/oG,WAAW,GAAG,IAAI;IAEvB+oG,OAAA,CAAK/pG,QAAQ,GAAG,IAAI;IAEpB+pG,OAAA,CAAK5oG,MAAM,GAAG,IAAI;IAClB4oG,OAAA,CAAK3oG,OAAO,GAAG1rC,iBAAiB;IAChCq0I,OAAA,CAAKzoG,YAAY,GAAG,CAAC;IACrByoG,OAAA,CAAKxoG,eAAe,GAAG,IAAI;IAE3BwoG,OAAA,CAAK3nG,SAAS,GAAG,KAAK;IACtB2nG,OAAA,CAAK1nG,kBAAkB,GAAG,CAAC;IAC3B0nG,OAAA,CAAKznG,gBAAgB,GAAG,OAAO;IAC/BynG,OAAA,CAAKxnG,iBAAiB,GAAG,OAAO;IAEhCwnG,OAAA,CAAKvnG,WAAW,GAAG,KAAK;IAExBunG,OAAA,CAAKtnG,GAAG,GAAG,IAAI;IAEfsnG,OAAA,CAAK7rG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAsyG,OAAA;EAE9B;EAACv4I,YAAA,CAAAyoF,mBAAA;IAAA1oF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA00C,mBAAA,CAAAtvF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChF,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACgxB,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGnsB,MAAM,CAACmsB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGpsB,MAAM,CAACosB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGrsB,MAAM,CAACqsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGtsB,MAAM,CAACssB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAACh5B,IAAI,CAAEmO,MAAM,CAAC6qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAGjtB,MAAM,CAACitB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG9qB,MAAM,CAAC8qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACI,WAAW,GAAGltB,MAAM,CAACktB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGrtB,MAAM,CAACqtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGttB,MAAM,CAACstB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGxtB,MAAM,CAACwtB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGztB,MAAM,CAACytB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGtuB,MAAM,CAACsuB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGvuB,MAAM,CAACuuB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGzuB,MAAM,CAACyuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAG1uB,MAAM,CAAC0uB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAw3C,mBAAA;AAAA,EA1GgC9+C,QAAQ;AAAA,IA8GpCm/C,kBAAkB,GAAAjoF,OAAA,CAAAioF,kBAAA,0BAAA0vD,WAAA;EAAAl3H,SAAA,CAAAwnE,kBAAA,EAAA0vD,WAAA;EAAA,IAAAC,SAAA,GAAAj3H,YAAA,CAAAsnE,kBAAA;EAEvB,SAAAA,mBAAa7iD,UAAU,EAAG;IAAA,IAAAyyG,OAAA;IAAAn5I,eAAA,OAAAupF,kBAAA;IAEzB4vD,OAAA,GAAAD,SAAA,CAAA59I,IAAA;IAEA69I,OAAA,CAAKn9B,oBAAoB,GAAG,IAAI;IAEhCm9B,OAAA,CAAKp2F,OAAO,GAAG;MAAE,QAAQ,EAAE;IAAG,CAAC;IAE/Bo2F,OAAA,CAAK/9I,IAAI,GAAG,oBAAoB;IAEhC+9I,OAAA,CAAKp7H,KAAK,GAAG,IAAIk0B,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpCknG,OAAA,CAAKnqG,MAAM,GAAG,IAAI;IAElBmqG,OAAA,CAAKpqG,GAAG,GAAG,IAAI;IAEfoqG,OAAA,CAAK7pG,OAAO,GAAG,IAAI;IACnB6pG,OAAA,CAAK5pG,SAAS,GAAG,CAAC;IAElB4pG,OAAA,CAAK3pG,SAAS,GAAG,IAAI;IACrB2pG,OAAA,CAAK1pG,aAAa,GAAG1kC,qBAAqB;IAC1CouI,OAAA,CAAKzpG,WAAW,GAAG,IAAIz7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCklI,OAAA,CAAKxpG,eAAe,GAAG,IAAI;IAC3BwpG,OAAA,CAAKvpG,iBAAiB,GAAG,CAAC;IAC1BupG,OAAA,CAAKtpG,gBAAgB,GAAG,CAAC;IAEzBspG,OAAA,CAAKlqG,QAAQ,GAAG,IAAI;IAEpBkqG,OAAA,CAAK1nG,WAAW,GAAG,KAAK;IAExB0nG,OAAA,CAAKznG,GAAG,GAAG,IAAI;IAEfynG,OAAA,CAAKhsG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAyyG,OAAA;EAE9B;EAAC14I,YAAA,CAAA8oF,kBAAA;IAAA/oF,GAAA;IAAAvG,KAAA,EAGD,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA+0C,kBAAA,CAAA3vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACggC,OAAO,GAAG;QAAE,QAAQ,EAAE;MAAG,CAAC;MAE/B,IAAI,CAAChlC,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAE/B,IAAI,CAACixB,MAAM,GAAGjsB,MAAM,CAACisB,MAAM;MAE3B,IAAI,CAACD,GAAG,GAAGhsB,MAAM,CAACgsB,GAAG;MAErB,IAAI,CAACO,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGxsB,MAAM,CAACwsB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGzsB,MAAM,CAACysB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG1sB,MAAM,CAAC0sB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC96B,IAAI,CAAEmO,MAAM,CAAC2sB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG5sB,MAAM,CAAC4sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG7sB,MAAM,CAAC6sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG9sB,MAAM,CAAC8sB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGlsB,MAAM,CAACksB,QAAQ;MAE/B,IAAI,CAACwC,WAAW,GAAG1uB,MAAM,CAAC0uB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAG3uB,MAAM,CAAC2uB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA63C,kBAAA;AAAA,EAvE+Bn/C,QAAQ;AAAA,IA2EnCq/C,kBAAkB,GAAAnoF,OAAA,CAAAmoF,kBAAA,0BAAA2vD,kBAAA;EAAAr3H,SAAA,CAAA0nE,kBAAA,EAAA2vD,kBAAA;EAAA,IAAAC,SAAA,GAAAp3H,YAAA,CAAAwnE,kBAAA;EAEvB,SAAAA,mBAAa/iD,UAAU,EAAG;IAAA,IAAA4yG,OAAA;IAAAt5I,eAAA,OAAAypF,kBAAA;IAEzB6vD,OAAA,GAAAD,SAAA,CAAA/9I,IAAA;IAEAg+I,OAAA,CAAKh9B,oBAAoB,GAAG,IAAI;IAEhCg9B,OAAA,CAAKl+I,IAAI,GAAG,oBAAoB;IAEhCk+I,OAAA,CAAKt9H,KAAK,GAAG,CAAC;IACds9H,OAAA,CAAKpoG,QAAQ,GAAG,CAAC;IACjBooG,OAAA,CAAKnoG,OAAO,GAAG,CAAC;IAEhBmoG,OAAA,CAAKnsG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA4yG,OAAA;EAE9B;EAAC74I,YAAA,CAAAgpF,kBAAA;IAAAjpF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAi1C,kBAAA,CAAA7vF,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC/G,KAAK,GAAG+G,MAAM,CAAC/G,KAAK;MACzB,IAAI,CAACk1B,QAAQ,GAAGnuB,MAAM,CAACmuB,QAAQ;MAC/B,IAAI,CAACC,OAAO,GAAGpuB,MAAM,CAACouB,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAs4C,kBAAA;AAAA,EA5B+BD,iBAAiB,GAgClD;AACA,SAAS+vD,YAAYA,CAAE1qI,KAAK,EAAEzT,IAAI,EAAEo+I,UAAU,EAAG;EAEhD,IAAK,CAAE3qI,KAAK;EAAI;EACf,CAAE2qI,UAAU,IAAI3qI,KAAK,CAACnQ,WAAW,KAAKtD,IAAI,EAAG,OAAOyT,KAAK;EAE1D,IAAK,OAAOzT,IAAI,CAACyyD,iBAAiB,KAAK,QAAQ,EAAG;IAEjD,OAAO,IAAIzyD,IAAI,CAAEyT,KAAM,CAAC,CAAC,CAAC;EAE3B;;EAEA,OAAO0S,KAAK,CAAC3nB,SAAS,CAAC2F,KAAK,CAACjE,IAAI,CAAEuT,KAAM,CAAC,CAAC,CAAC;AAE7C;;AAEA,SAAS4qI,YAAYA,CAAEjnH,MAAM,EAAG;EAE/B,OAAOmiB,WAAW,CAAC+kG,MAAM,CAAElnH,MAAO,CAAC,IAClC,EAAIA,MAAM,YAAYmnH,QAAQ,CAAE;AAElC;;AAEA;AACA,SAASC,gBAAgBA,CAAEC,KAAK,EAAG;EAElC,SAASC,WAAWA,CAAE5/I,CAAC,EAAEw7B,CAAC,EAAG;IAE5B,OAAOmkH,KAAK,CAAE3/I,CAAC,CAAE,GAAG2/I,KAAK,CAAEnkH,CAAC,CAAE;EAE/B;EAEA,IAAM77B,CAAC,GAAGggJ,KAAK,CAACt7I,MAAM;EACtB,IAAMmmC,MAAM,GAAG,IAAInjB,KAAK,CAAE1nB,CAAE,CAAC;EAC7B,KAAM,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAGwqC,MAAM,CAAExqC,CAAC,CAAE,GAAGA,CAAC;EAEhDwqC,MAAM,CAACgwC,IAAI,CAAEolE,WAAY,CAAC;EAE1B,OAAOp1G,MAAM;AAEd;;AAEA;AACA,SAASq1G,WAAWA,CAAE79I,MAAM,EAAEkhD,MAAM,EAAE5qC,KAAK,EAAG;EAE7C,IAAMwnI,OAAO,GAAG99I,MAAM,CAACqC,MAAM;EAC7B,IAAMmmC,MAAM,GAAG,IAAIxoC,MAAM,CAACwC,WAAW,CAAEs7I,OAAQ,CAAC;EAEhD,KAAM,IAAI9/I,CAAC,GAAG,CAAC,EAAEizB,SAAS,GAAG,CAAC,EAAEA,SAAS,KAAK6sH,OAAO,EAAE,EAAG9/I,CAAC,EAAG;IAE7D,IAAM+/I,SAAS,GAAGznI,KAAK,CAAEtY,CAAC,CAAE,GAAGkjD,MAAM;IAErC,KAAM,IAAI1nB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK0nB,MAAM,EAAE,EAAG1nB,CAAC,EAAG;MAErCgP,MAAM,CAAEvX,SAAS,EAAG,CAAE,GAAGjxB,MAAM,CAAE+9I,SAAS,GAAGvkH,CAAC,CAAE;IAEjD;EAED;EAEA,OAAOgP,MAAM;AAEd;;AAEA;AACA,SAASw1G,WAAWA,CAAEC,QAAQ,EAAEN,KAAK,EAAE39I,MAAM,EAAEk+I,iBAAiB,EAAG;EAElE,IAAIlgJ,CAAC,GAAG,CAAC;IAAEsG,GAAG,GAAG25I,QAAQ,CAAE,CAAC,CAAE;EAE9B,OAAQ35I,GAAG,KAAKU,SAAS,IAAIV,GAAG,CAAE45I,iBAAiB,CAAE,KAAKl5I,SAAS,EAAG;IAErEV,GAAG,GAAG25I,QAAQ,CAAEjgJ,CAAC,EAAG,CAAE;EAEvB;EAEA,IAAKsG,GAAG,KAAKU,SAAS,EAAG,OAAO,CAAC;;EAEjC,IAAIjH,KAAK,GAAGuG,GAAG,CAAE45I,iBAAiB,CAAE;EACpC,IAAKngJ,KAAK,KAAKiH,SAAS,EAAG,OAAO,CAAC;;EAEnC,IAAKqgB,KAAK,CAACC,OAAO,CAAEvnB,KAAM,CAAC,EAAG;IAE7B,GAAG;MAEFA,KAAK,GAAGuG,GAAG,CAAE45I,iBAAiB,CAAE;MAEhC,IAAKngJ,KAAK,KAAKiH,SAAS,EAAG;QAE1B24I,KAAK,CAAC37I,IAAI,CAAEsC,GAAG,CAAC4rD,IAAK,CAAC;QACtBlwD,MAAM,CAACgC,IAAI,CAAC+lC,KAAK,CAAE/nC,MAAM,EAAEjC,KAAM,CAAC,CAAC,CAAC;MAErC;;MAEAuG,GAAG,GAAG25I,QAAQ,CAAEjgJ,CAAC,EAAG,CAAE;IAEvB,CAAC,QAASsG,GAAG,KAAKU,SAAS;EAE5B,CAAC,MAAM,IAAKjH,KAAK,CAACwd,OAAO,KAAKvW,SAAS,EAAG;IAEzC;;IAEA,GAAG;MAEFjH,KAAK,GAAGuG,GAAG,CAAE45I,iBAAiB,CAAE;MAEhC,IAAKngJ,KAAK,KAAKiH,SAAS,EAAG;QAE1B24I,KAAK,CAAC37I,IAAI,CAAEsC,GAAG,CAAC4rD,IAAK,CAAC;QACtBnyD,KAAK,CAACwd,OAAO,CAAEvb,MAAM,EAAEA,MAAM,CAACqC,MAAO,CAAC;MAEvC;MAEAiC,GAAG,GAAG25I,QAAQ,CAAEjgJ,CAAC,EAAG,CAAE;IAEvB,CAAC,QAASsG,GAAG,KAAKU,SAAS;EAE5B,CAAC,MAAM;IAEN;;IAEA,GAAG;MAEFjH,KAAK,GAAGuG,GAAG,CAAE45I,iBAAiB,CAAE;MAEhC,IAAKngJ,KAAK,KAAKiH,SAAS,EAAG;QAE1B24I,KAAK,CAAC37I,IAAI,CAAEsC,GAAG,CAAC4rD,IAAK,CAAC;QACtBlwD,MAAM,CAACgC,IAAI,CAAEjE,KAAM,CAAC;MAErB;MAEAuG,GAAG,GAAG25I,QAAQ,CAAEjgJ,CAAC,EAAG,CAAE;IAEvB,CAAC,QAASsG,GAAG,KAAKU,SAAS;EAE5B;AAED;AAEA,SAASm5I,OAAOA,CAAEC,UAAU,EAAE37I,IAAI,EAAE47I,UAAU,EAAEC,QAAQ,EAAEC,GAAG,GAAG,EAAE,EAAG;EAEpE,IAAMC,IAAI,GAAGJ,UAAU,CAAC3lI,KAAK,CAAC,CAAC;EAE/B+lI,IAAI,CAAC/7I,IAAI,GAAGA,IAAI;EAEhB,IAAMg8I,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAIzgJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwgJ,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGrE,CAAC,EAAG;IAE/C,IAAM0gJ,KAAK,GAAGF,IAAI,CAACC,MAAM,CAAEzgJ,CAAC,CAAE;IAC9B,IAAM2gJ,SAAS,GAAGD,KAAK,CAACE,YAAY,CAAC,CAAC;IAEtC,IAAMjB,KAAK,GAAG,EAAE;IAChB,IAAM39I,MAAM,GAAG,EAAE;IAEjB,KAAM,IAAIw5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGklH,KAAK,CAACf,KAAK,CAACt7I,MAAM,EAAE,EAAGm3B,CAAC,EAAG;MAE/C,IAAM22B,KAAK,GAAGuuF,KAAK,CAACf,KAAK,CAAEnkH,CAAC,CAAE,GAAG+kH,GAAG;MAEpC,IAAKpuF,KAAK,GAAGkuF,UAAU,IAAIluF,KAAK,IAAImuF,QAAQ,EAAG;MAE/CX,KAAK,CAAC37I,IAAI,CAAE08I,KAAK,CAACf,KAAK,CAAEnkH,CAAC,CAAG,CAAC;MAE9B,KAAM,IAAIkhE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGikD,SAAS,EAAE,EAAGjkD,CAAC,EAAG;QAEtC16F,MAAM,CAACgC,IAAI,CAAE08I,KAAK,CAAC1+I,MAAM,CAAEw5B,CAAC,GAAGmlH,SAAS,GAAGjkD,CAAC,CAAG,CAAC;MAEjD;IAED;IAEA,IAAKijD,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG;IAE1Bq8I,KAAK,CAACf,KAAK,GAAGN,YAAY,CAAEM,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACn7I,WAAY,CAAC;IAC5Dk8I,KAAK,CAAC1+I,MAAM,GAAGq9I,YAAY,CAAEr9I,MAAM,EAAE0+I,KAAK,CAAC1+I,MAAM,CAACwC,WAAY,CAAC;IAE/Di8I,MAAM,CAACz8I,IAAI,CAAE08I,KAAM,CAAC;EAErB;EAEAF,IAAI,CAACC,MAAM,GAAGA,MAAM;;EAEpB;;EAEA,IAAII,YAAY,GAAGppH,QAAQ;EAE3B,KAAM,IAAIz3B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGwgJ,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGrE,IAAC,EAAG;IAE/C,IAAK6gJ,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEzgJ,IAAC,CAAE,CAAC2/I,KAAK,CAAE,CAAC,CAAE,EAAG;MAEjDkB,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEzgJ,IAAC,CAAE,CAAC2/I,KAAK,CAAE,CAAC,CAAE;IAE3C;EAED;;EAEA;;EAEA,KAAM,IAAI3/I,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGwgJ,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGrE,IAAC,EAAG;IAE/CwgJ,IAAI,CAACC,MAAM,CAAEzgJ,IAAC,CAAE,CAACqoH,KAAK,CAAE,CAAE,CAAC,GAAGw4B,YAAa,CAAC;EAE7C;EAEAL,IAAI,CAACM,aAAa,CAAC,CAAC;EAEpB,OAAON,IAAI;AAEZ;AAEA,SAASO,gBAAgBA,CAAEC,UAAU,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAGF,UAAU,EAAET,GAAG,GAAG,EAAE,EAAG;EAEjG,IAAKA,GAAG,IAAI,CAAC,EAAGA,GAAG,GAAG,EAAE;EAExB,IAAMY,SAAS,GAAGD,aAAa,CAACT,MAAM,CAACp8I,MAAM;EAC7C,IAAM+8I,aAAa,GAAGH,cAAc,GAAGV,GAAG;;EAE1C;EAAA,IAAAc,KAAA,YAAAA,MAAA,EACuC;MAEtC,IAAMC,cAAc,GAAGJ,aAAa,CAACT,MAAM,CAAEzgJ,CAAC,CAAE;MAChD,IAAMuhJ,kBAAkB,GAAGD,cAAc,CAACE,aAAa;;MAEvD;MACA,IAAKD,kBAAkB,KAAK,MAAM,IAAIA,kBAAkB,KAAK,QAAQ;;MAErE;MACA,IAAME,WAAW,GAAGT,UAAU,CAACP,MAAM,CAACiB,IAAI,CAAE,UAAWhB,KAAK,EAAG;QAE9D,OAAOA,KAAK,CAACj8I,IAAI,KAAK68I,cAAc,CAAC78I,IAAI,IACrCi8I,KAAK,CAACc,aAAa,KAAKD,kBAAkB;MAE/C,CAAE,CAAC;MAEH,IAAKE,WAAW,KAAKz6I,SAAS;MAE9B,IAAI26I,eAAe,GAAG,CAAC;MACvB,IAAMC,kBAAkB,GAAGN,cAAc,CAACV,YAAY,CAAC,CAAC;MAExD,IAAKU,cAAc,CAACO,iBAAiB,CAACC,yCAAyC,EAAG;QAEjFH,eAAe,GAAGC,kBAAkB,GAAG,CAAC;MAEzC;MAEA,IAAIG,YAAY,GAAG,CAAC;MACpB,IAAMC,eAAe,GAAGP,WAAW,CAACb,YAAY,CAAC,CAAC;MAElD,IAAKa,WAAW,CAACI,iBAAiB,CAACC,yCAAyC,EAAG;QAE9EC,YAAY,GAAGC,eAAe,GAAG,CAAC;MAEnC;MAEA,IAAM3gE,SAAS,GAAGigE,cAAc,CAAC3B,KAAK,CAACt7I,MAAM,GAAG,CAAC;MACjD,IAAI49I,cAAc;;MAElB;MACA,IAAKb,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAE,CAAC,CAAE,EAAG;QAEjD;QACA,IAAMuC,UAAU,GAAGP,eAAe;QAClC,IAAMQ,QAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDM,cAAc,GAAGX,cAAc,CAACt/I,MAAM,CAACqD,KAAK,CAAE68I,UAAU,EAAEC,QAAS,CAAC;MAErE,CAAC,MAAM,IAAKf,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAEt+D,SAAS,CAAE,EAAG;QAEhE;QACA,IAAM6gE,WAAU,GAAG7gE,SAAS,GAAGugE,kBAAkB,GAAGD,eAAe;QACnE,IAAMQ,SAAQ,GAAGD,WAAU,GAAGN,kBAAkB,GAAGD,eAAe;QAClEM,cAAc,GAAGX,cAAc,CAACt/I,MAAM,CAACqD,KAAK,CAAE68I,WAAU,EAAEC,SAAS,CAAC;MAErE,CAAC,MAAM;QAEN;QACA,IAAMC,WAAW,GAAGd,cAAc,CAACO,iBAAiB,CAAC,CAAC;QACtD,IAAMK,YAAU,GAAGP,eAAe;QAClC,IAAMQ,UAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDS,WAAW,CAACC,QAAQ,CAAEjB,aAAc,CAAC;QACrCa,cAAc,GAAGG,WAAW,CAACE,YAAY,CAACj9I,KAAK,CAAE68I,YAAU,EAAEC,UAAS,CAAC;MAExE;;MAEA;MACA,IAAKZ,kBAAkB,KAAK,YAAY,EAAG;QAE1C,IAAMgB,aAAa,GAAG,IAAIhzH,UAAU,CAAC,CAAC,CAAClS,SAAS,CAAE4kI,cAAe,CAAC,CAACroI,SAAS,CAAC,CAAC,CAACwX,SAAS,CAAC,CAAC;QAC1FmxH,aAAa,CAAChlI,OAAO,CAAE0kI,cAAe,CAAC;MAExC;;MAEA;;MAEA,IAAMO,QAAQ,GAAGf,WAAW,CAAC9B,KAAK,CAACt7I,MAAM;MACzC,KAAM,IAAIm3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgnH,QAAQ,EAAE,EAAGhnH,CAAC,EAAG;QAErC,IAAMinH,UAAU,GAAGjnH,CAAC,GAAGwmH,eAAe,GAAGD,YAAY;QAErD,IAAKR,kBAAkB,KAAK,YAAY,EAAG;UAE1C;UACAhyH,UAAU,CAAC2E,uBAAuB,CACjCutH,WAAW,CAACz/I,MAAM,EAClBygJ,UAAU,EACVR,cAAc,EACd,CAAC,EACDR,WAAW,CAACz/I,MAAM,EAClBygJ,UACD,CAAC;QAEF,CAAC,MAAM;UAEN,IAAMC,QAAQ,GAAGV,eAAe,GAAGD,YAAY,GAAG,CAAC;;UAEnD;UACA,KAAM,IAAIrlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgmD,QAAQ,EAAE,EAAGhmD,CAAC,EAAG;YAErC+kD,WAAW,CAACz/I,MAAM,CAAEygJ,UAAU,GAAG/lD,CAAC,CAAE,IAAIulD,cAAc,CAAEvlD,CAAC,CAAE;UAE5D;QAED;MAED;IAED,CAAC;IAAAimD,IAAA;EA3GD,KAAM,IAAI3iJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmhJ,SAAS,EAAE,EAAGnhJ,CAAC;IAAA2iJ,IAAA,GAAAtB,KAAA;IAAA,IAAAsB,IAAA,QAMqC;EAAS;EAuGlF3B,UAAU,CAAC4B,SAAS,GAAGvyI,0BAA0B;EAEjD,OAAO2wI,UAAU;AAElB;AAEA,IAAM6B,cAAc,GAAAz7I,OAAA,CAAAy7I,cAAA,GAAG;EACtBxD,YAAY,EAAEA,YAAY;EAC1BE,YAAY,EAAEA,YAAY;EAC1BG,gBAAgB,EAAEA,gBAAgB;EAClCG,WAAW,EAAEA,WAAW;EACxBG,WAAW,EAAEA,WAAW;EACxBG,OAAO,EAAEA,OAAO;EAChBY,gBAAgB,EAAEA;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA,IAqBM+B,WAAW,GAAA17I,OAAA,CAAA07I,WAAA;EAEhB,SAAAA,YAAaC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAx8I,eAAA,OAAAg9I,WAAA;IAEzE,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACG,YAAY,GAAG,CAAC;IAErB,IAAI,CAACZ,YAAY,GAAGA,YAAY,KAAKt7I,SAAS,GAC7Cs7I,YAAY,GAAG,IAAIU,YAAY,CAACx+I,WAAW,CAAEy+I,UAAW,CAAC;IAC1D,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACrC,SAAS,GAAGsC,UAAU;IAE3B,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAE3B;EAAC78I,YAAA,CAAAu8I,WAAA;IAAAx8I,GAAA;IAAAvG,KAAA,EAED,SAAAsiJ,SAAU9iJ,CAAC,EAAG;MAEb,IAAM8jJ,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAI70G,EAAE,GAAG,IAAI,CAACg1G,YAAY;QACzB3kH,EAAE,GAAG8kH,EAAE,CAAEn1G,EAAE,CAAE;QACb5P,EAAE,GAAG+kH,EAAE,CAAEn1G,EAAE,GAAG,CAAC,CAAE;MAElBo1G,iBAAiB,EAAE;QAElBC,IAAI,EAAE;UAEL,IAAIj/G,KAAK;UAETk/G,WAAW,EAAE;YAEZ;YACA;YACA;YACA;YACAC,YAAY,EAAE,IAAK,EAAIlkJ,CAAC,GAAGg/B,EAAE,CAAE,EAAG;cAEjC,KAAM,IAAImlH,QAAQ,GAAGx1G,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAK3P,EAAE,KAAKv3B,SAAS,EAAG;kBAEvB,IAAKzH,CAAC,GAAG++B,EAAE,EAAG,MAAMmlH,YAAY;;kBAEhC;;kBAEAv1G,EAAE,GAAGm1G,EAAE,CAACh/I,MAAM;kBACd,IAAI,CAAC6+I,YAAY,GAAGh1G,EAAE;kBACtB,OAAO,IAAI,CAACy1G,gBAAgB,CAAEz1G,EAAE,GAAG,CAAE,CAAC;gBAEvC;gBAEA,IAAKA,EAAE,KAAKw1G,QAAQ,EAAG,MAAM,CAAC;;gBAE9BplH,EAAE,GAAGC,EAAE;gBACPA,EAAE,GAAG8kH,EAAE,CAAE,EAAGn1G,EAAE,CAAE;gBAEhB,IAAK3uC,CAAC,GAAGg/B,EAAE,EAAG;kBAEb;kBACA,MAAMglH,IAAI;gBAEX;cAED;;cAEA;cACAj/G,KAAK,GAAG++G,EAAE,CAACh/I,MAAM;cACjB,MAAMm/I,WAAW;YAElB;;YAEA;YACA;YACA,IAAK,EAAIjkJ,CAAC,IAAI++B,EAAE,CAAE,EAAG;cAEpB;;cAEA,IAAMslH,QAAQ,GAAGP,EAAE,CAAE,CAAC,CAAE;cAExB,IAAK9jJ,CAAC,GAAGqkJ,QAAQ,EAAG;gBAEnB11G,EAAE,GAAG,CAAC,CAAC,CAAC;gBACR5P,EAAE,GAAGslH,QAAQ;cAEd;;cAEA;;cAEA,KAAM,IAAIF,SAAQ,GAAGx1G,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAK5P,EAAE,KAAKt3B,SAAS,EAAG;kBAEvB;;kBAEA,IAAI,CAACk8I,YAAY,GAAG,CAAC;kBACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAE,CAAC;gBAElC;gBAEA,IAAKz1G,EAAE,KAAKw1G,SAAQ,EAAG,MAAM,CAAC;;gBAE9BnlH,EAAE,GAAGD,EAAE;gBACPA,EAAE,GAAG+kH,EAAE,CAAE,EAAGn1G,EAAE,GAAG,CAAC,CAAE;gBAEpB,IAAK3uC,CAAC,IAAI++B,EAAE,EAAG;kBAEd;kBACA,MAAMilH,IAAI;gBAEX;cAED;;cAEA;cACAj/G,KAAK,GAAG4J,EAAE;cACVA,EAAE,GAAG,CAAC;cACN,MAAMs1G,WAAW;YAElB;;YAEA;;YAEA,MAAMF,iBAAiB;UAExB,CAAC,CAAC;;UAEF;;UAEA,OAAQp1G,EAAE,GAAG5J,KAAK,EAAG;YAEpB,IAAMu/G,GAAG,GAAK31G,EAAE,GAAG5J,KAAK,KAAO,CAAC;YAEhC,IAAK/kC,CAAC,GAAG8jJ,EAAE,CAAEQ,GAAG,CAAE,EAAG;cAEpBv/G,KAAK,GAAGu/G,GAAG;YAEZ,CAAC,MAAM;cAEN31G,EAAE,GAAG21G,GAAG,GAAG,CAAC;YAEb;UAED;UAEAtlH,EAAE,GAAG8kH,EAAE,CAAEn1G,EAAE,CAAE;UACb5P,EAAE,GAAG+kH,EAAE,CAAEn1G,EAAE,GAAG,CAAC,CAAE;;UAEjB;;UAEA,IAAK5P,EAAE,KAAKt3B,SAAS,EAAG;YAEvB,IAAI,CAACk8I,YAAY,GAAG,CAAC;YACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAE,CAAC;UAElC;UAEA,IAAKplH,EAAE,KAAKv3B,SAAS,EAAG;YAEvBknC,EAAE,GAAGm1G,EAAE,CAACh/I,MAAM;YACd,IAAI,CAAC6+I,YAAY,GAAGh1G,EAAE;YACtB,OAAO,IAAI,CAACy1G,gBAAgB,CAAEz1G,EAAE,GAAG,CAAE,CAAC;UAEvC;QAED,CAAC,CAAC;;QAEF,IAAI,CAACg1G,YAAY,GAAGh1G,EAAE;QAEtB,IAAI,CAAC41G,gBAAgB,CAAE51G,EAAE,EAAE5P,EAAE,EAAEC,EAAG,CAAC;MAEpC,CAAC,CAAC;;MAEF,OAAO,IAAI,CAACwlH,YAAY,CAAE71G,EAAE,EAAE5P,EAAE,EAAE/+B,CAAC,EAAEg/B,EAAG,CAAC;IAE1C;EAAC;IAAAj4B,GAAA;IAAAvG,KAAA,EAED,SAAAikJ,aAAA,EAAe;MAEd,OAAO,IAAI,CAACb,QAAQ,IAAI,IAAI,CAACC,gBAAgB;IAE9C;EAAC;IAAA98I,GAAA;IAAAvG,KAAA,EAED,SAAA4jJ,iBAAkBpvI,KAAK,EAAG;MAEzB;;MAEA,IAAMi2B,MAAM,GAAG,IAAI,CAAC83G,YAAY;QAC/BtgJ,MAAM,GAAG,IAAI,CAACghJ,YAAY;QAC1B9/F,MAAM,GAAG,IAAI,CAACy9F,SAAS;QACvBrjI,MAAM,GAAG/I,KAAK,GAAG2uC,MAAM;MAExB,KAAM,IAAIljD,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;QAErCwqC,MAAM,CAAExqC,CAAC,CAAE,GAAGgC,MAAM,CAAEsb,MAAM,GAAGtd,CAAC,CAAE;MAEnC;MAEA,OAAOwqC,MAAM;IAEd;;IAEA;EAAA;IAAAlkC,GAAA;IAAAvG,KAAA,EAEA,SAAAgkJ,aAAA,CAAc;IAAA,EAAsB;MAEnC,MAAM,IAAInhJ,KAAK,CAAE,yBAA0B,CAAC;MAC5C;IAED;EAAC;IAAA0D,GAAA;IAAAvG,KAAA,EAED,SAAA+jJ,iBAAA,CAAkB;IAAA,EAAmB;;MAEpC;IAAA;EAEA;EAAA,OAAAhB,WAAA;AAAA;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAQMmB,gBAAgB,GAAA78I,OAAA,CAAA68I,gBAAA,0BAAAC,YAAA;EAAAr8H,SAAA,CAAAo8H,gBAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAp8H,YAAA,CAAAk8H,gBAAA;EAErB,SAAAA,iBAAalB,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAA,IAAA8B,OAAA;IAAAt+I,eAAA,OAAAm+I,gBAAA;IAEzEG,OAAA,GAAAD,SAAA,CAAA/iJ,IAAA,OAAO2hJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAEjE8B,OAAA,CAAKC,WAAW,GAAG,CAAE,CAAC;IACtBD,OAAA,CAAKE,WAAW,GAAG,CAAE,CAAC;IACtBF,OAAA,CAAKG,WAAW,GAAG,CAAE,CAAC;IACtBH,OAAA,CAAKI,WAAW,GAAG,CAAE,CAAC;IAEtBJ,OAAA,CAAKhB,gBAAgB,GAAG;MAEvBqB,WAAW,EAAEx0I,mBAAmB;MAChCy0I,SAAS,EAAEz0I;IAEZ,CAAC;IAAC,OAAAm0I,OAAA;EAEH;EAAC79I,YAAA,CAAA09I,gBAAA;IAAA39I,GAAA;IAAAvG,KAAA,EAED,SAAA+jJ,iBAAkB51G,EAAE,EAAE5P,EAAE,EAAEC,EAAE,EAAG;MAE9B,IAAM8kH,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAI4B,KAAK,GAAGz2G,EAAE,GAAG,CAAC;QACjB02G,KAAK,GAAG12G,EAAE,GAAG,CAAC;QAEd22G,KAAK,GAAGxB,EAAE,CAAEsB,KAAK,CAAE;QACnBG,KAAK,GAAGzB,EAAE,CAAEuB,KAAK,CAAE;MAEpB,IAAKC,KAAK,KAAK79I,SAAS,EAAG;QAE1B,QAAS,IAAI,CAACg9I,YAAY,CAAC,CAAC,CAACS,WAAW;UAEvC,KAAKv0I,eAAe;YAEnB;YACAy0I,KAAK,GAAGz2G,EAAE;YACV22G,KAAK,GAAG,CAAC,GAAGvmH,EAAE,GAAGC,EAAE;YAEnB;UAED,KAAKpuB,gBAAgB;YAEpB;YACAw0I,KAAK,GAAGtB,EAAE,CAACh/I,MAAM,GAAG,CAAC;YACrBwgJ,KAAK,GAAGvmH,EAAE,GAAG+kH,EAAE,CAAEsB,KAAK,CAAE,GAAGtB,EAAE,CAAEsB,KAAK,GAAG,CAAC,CAAE;YAE1C;UAED;YAAS;;YAER;YACAA,KAAK,GAAGz2G,EAAE;YACV22G,KAAK,GAAGtmH,EAAE;QAEZ;MAED;MAEA,IAAKumH,KAAK,KAAK99I,SAAS,EAAG;QAE1B,QAAS,IAAI,CAACg9I,YAAY,CAAC,CAAC,CAACU,SAAS;UAErC,KAAKx0I,eAAe;YAEnB;YACA00I,KAAK,GAAG12G,EAAE;YACV42G,KAAK,GAAG,CAAC,GAAGvmH,EAAE,GAAGD,EAAE;YAEnB;UAED,KAAKnuB,gBAAgB;YAEpB;YACAy0I,KAAK,GAAG,CAAC;YACTE,KAAK,GAAGvmH,EAAE,GAAG8kH,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;YAE9B;UAED;YAAS;;YAER;YACAuB,KAAK,GAAG12G,EAAE,GAAG,CAAC;YACd42G,KAAK,GAAGxmH,EAAE;QAEZ;MAED;MAEA,IAAMymH,MAAM,GAAG,CAAExmH,EAAE,GAAGD,EAAE,IAAK,GAAG;QAC/B4kB,MAAM,GAAG,IAAI,CAACy9F,SAAS;MAExB,IAAI,CAAC0D,WAAW,GAAGU,MAAM,IAAKzmH,EAAE,GAAGumH,KAAK,CAAE;MAC1C,IAAI,CAACN,WAAW,GAAGQ,MAAM,IAAKD,KAAK,GAAGvmH,EAAE,CAAE;MAC1C,IAAI,CAAC+lH,WAAW,GAAGK,KAAK,GAAGzhG,MAAM;MACjC,IAAI,CAACshG,WAAW,GAAGI,KAAK,GAAG1hG,MAAM;IAElC;EAAC;IAAA58C,GAAA;IAAAvG,KAAA,EAED,SAAAgkJ,aAAc71G,EAAE,EAAE5P,EAAE,EAAE/+B,CAAC,EAAEg/B,EAAE,EAAG;MAE7B,IAAMiM,MAAM,GAAG,IAAI,CAAC83G,YAAY;QAC/BtgJ,MAAM,GAAG,IAAI,CAACghJ,YAAY;QAC1B9/F,MAAM,GAAG,IAAI,CAACy9F,SAAS;QAEvBrP,EAAE,GAAGpjG,EAAE,GAAGgV,MAAM;QAAG8hG,EAAE,GAAG1T,EAAE,GAAGpuF,MAAM;QACnC+hG,EAAE,GAAG,IAAI,CAACX,WAAW;QAAGY,EAAE,GAAG,IAAI,CAACV,WAAW;QAC7CW,EAAE,GAAG,IAAI,CAACd,WAAW;QAAEe,EAAE,GAAG,IAAI,CAACb,WAAW;QAE5C3iJ,CAAC,GAAG,CAAErC,CAAC,GAAG++B,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAC5B+kH,EAAE,GAAGzhJ,CAAC,GAAGA,CAAC;QACVyjJ,GAAG,GAAGhC,EAAE,GAAGzhJ,CAAC;;MAEb;;MAEA,IAAM0jJ,EAAE,GAAG,CAAEH,EAAE,GAAGE,GAAG,GAAG,CAAC,GAAGF,EAAE,GAAG9B,EAAE,GAAG8B,EAAE,GAAGvjJ,CAAC;MAC5C,IAAMk8B,EAAE,GAAG,CAAE,CAAC,GAAGqnH,EAAE,IAAKE,GAAG,GAAG,CAAE,CAAE,GAAG,GAAG,CAAC,GAAGF,EAAE,IAAK9B,EAAE,GAAG,CAAE,CAAE,GAAG,GAAG8B,EAAE,IAAKvjJ,CAAC,GAAG,CAAC;MAC9E,IAAM0uB,EAAE,GAAG,CAAE,CAAE,CAAC,GAAG80H,EAAE,IAAKC,GAAG,GAAG,CAAE,GAAG,GAAGD,EAAE,IAAK/B,EAAE,GAAG,GAAG,GAAGzhJ,CAAC;MAC3D,IAAM2jJ,EAAE,GAAGH,EAAE,GAAGC,GAAG,GAAGD,EAAE,GAAG/B,EAAE;;MAE7B;;MAEA,KAAM,IAAIrjJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;QAErCwqC,MAAM,CAAExqC,CAAC,CAAE,GACTslJ,EAAE,GAAGtjJ,MAAM,CAAEijJ,EAAE,GAAGjlJ,CAAC,CAAE,GACrB89B,EAAE,GAAG97B,MAAM,CAAEgjJ,EAAE,GAAGhlJ,CAAC,CAAE,GACrBswB,EAAE,GAAGtuB,MAAM,CAAEsvI,EAAE,GAAGtxI,CAAC,CAAE,GACrBulJ,EAAE,GAAGvjJ,MAAM,CAAEkjJ,EAAE,GAAGllJ,CAAC,CAAE;MAExB;MAEA,OAAOwqC,MAAM;IAEd;EAAC;EAAA,OAAAy5G,gBAAA;AAAA,EAtI6BnB,WAAW;AAAA,IA0IpC0C,iBAAiB,GAAAp+I,OAAA,CAAAo+I,iBAAA,0BAAAC,aAAA;EAAA59H,SAAA,CAAA29H,iBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA39H,YAAA,CAAAy9H,iBAAA;EAEtB,SAAAA,kBAAazC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAx8I,eAAA,OAAA0/I,iBAAA;IAAA,OAAAE,SAAA,CAAAtkJ,IAAA,OAElE2hJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC/7I,YAAA,CAAAi/I,iBAAA;IAAAl/I,GAAA;IAAAvG,KAAA,EAED,SAAAgkJ,aAAc71G,EAAE,EAAE5P,EAAE,EAAE/+B,CAAC,EAAEg/B,EAAE,EAAG;MAE7B,IAAMiM,MAAM,GAAG,IAAI,CAAC83G,YAAY;QAC/BtgJ,MAAM,GAAG,IAAI,CAACghJ,YAAY;QAC1B9/F,MAAM,GAAG,IAAI,CAACy9F,SAAS;QAEvBgF,OAAO,GAAGz3G,EAAE,GAAGgV,MAAM;QACrB0iG,OAAO,GAAGD,OAAO,GAAGziG,MAAM;QAE1B2iG,OAAO,GAAG,CAAEtmJ,CAAC,GAAG++B,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAClCwnH,OAAO,GAAG,CAAC,GAAGD,OAAO;MAEtB,KAAM,IAAI7lJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;QAErCwqC,MAAM,CAAExqC,CAAC,CAAE,GACTgC,MAAM,CAAE4jJ,OAAO,GAAG5lJ,CAAC,CAAE,GAAG8lJ,OAAO,GAC/B9jJ,MAAM,CAAE2jJ,OAAO,GAAG3lJ,CAAC,CAAE,GAAG6lJ,OAAO;MAElC;MAEA,OAAOr7G,MAAM;IAEd;EAAC;EAAA,OAAAg7G,iBAAA;AAAA,EA9B8B1C,WAAW;AAkC3C;AACA;AACA;AACA;AACA;AAJA,IAMMiD,mBAAmB,GAAA3+I,OAAA,CAAA2+I,mBAAA,0BAAAC,aAAA;EAAAn+H,SAAA,CAAAk+H,mBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAl+H,YAAA,CAAAg+H,mBAAA;EAExB,SAAAA,oBAAahD,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAx8I,eAAA,OAAAigJ,mBAAA;IAAA,OAAAE,SAAA,CAAA7kJ,IAAA,OAElE2hJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC/7I,YAAA,CAAAw/I,mBAAA;IAAAz/I,GAAA;IAAAvG,KAAA,EAED,SAAAgkJ,aAAc71G,EAAE,CAAC,kBAAmB;MAEnC,OAAO,IAAI,CAACy1G,gBAAgB,CAAEz1G,EAAE,GAAG,CAAE,CAAC;IAEvC;EAAC;EAAA,OAAA63G,mBAAA;AAAA,EAZgCjD,WAAW;AAAA,IAgBvCoD,aAAa,GAAA9+I,OAAA,CAAA8+I,aAAA;EAElB,SAAAA,cAAazhJ,IAAI,EAAEk7I,KAAK,EAAE39I,MAAM,EAAEmkJ,aAAa,EAAG;IAAArgJ,eAAA,OAAAogJ,aAAA;IAEjD,IAAKzhJ,IAAI,KAAKuC,SAAS,EAAG,MAAM,IAAIpE,KAAK,CAAE,8CAA+C,CAAC;IAC3F,IAAK+8I,KAAK,KAAK34I,SAAS,IAAI24I,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG,MAAM,IAAIzB,KAAK,CAAE,mDAAmD,GAAG6B,IAAK,CAAC;IAE9H,IAAI,CAACA,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACk7I,KAAK,GAAGN,YAAY,CAAEM,KAAK,EAAE,IAAI,CAACyG,cAAe,CAAC;IACvD,IAAI,CAACpkJ,MAAM,GAAGq9I,YAAY,CAAEr9I,MAAM,EAAE,IAAI,CAACqkJ,eAAgB,CAAC;IAE1D,IAAI,CAACC,gBAAgB,CAAEH,aAAa,IAAI,IAAI,CAACI,oBAAqB,CAAC;EAEpE;;EAEA;EACA;EAAAhgJ,YAAA,CAAA2/I,aAAA;IAAA5/I,GAAA;IAAAvG,KAAA,EAwCA,SAAAymJ,iCAAkCh8G,MAAM,EAAG;MAE1C,OAAO,IAAIu7G,mBAAmB,CAAE,IAAI,CAACpG,KAAK,EAAE,IAAI,CAAC39I,MAAM,EAAE,IAAI,CAAC4+I,YAAY,CAAC,CAAC,EAAEp2G,MAAO,CAAC;IAEvF;EAAC;IAAAlkC,GAAA;IAAAvG,KAAA,EAED,SAAA0mJ,+BAAgCj8G,MAAM,EAAG;MAExC,OAAO,IAAIg7G,iBAAiB,CAAE,IAAI,CAAC7F,KAAK,EAAE,IAAI,CAAC39I,MAAM,EAAE,IAAI,CAAC4+I,YAAY,CAAC,CAAC,EAAEp2G,MAAO,CAAC;IAErF;EAAC;IAAAlkC,GAAA;IAAAvG,KAAA,EAED,SAAA2mJ,+BAAgCl8G,MAAM,EAAG;MAExC,OAAO,IAAIy5G,gBAAgB,CAAE,IAAI,CAACtE,KAAK,EAAE,IAAI,CAAC39I,MAAM,EAAE,IAAI,CAAC4+I,YAAY,CAAC,CAAC,EAAEp2G,MAAO,CAAC;IAEpF;EAAC;IAAAlkC,GAAA;IAAAvG,KAAA,EAED,SAAAumJ,iBAAkBH,aAAa,EAAG;MAEjC,IAAIQ,aAAa;MAEjB,QAASR,aAAa;QAErB,KAAKr2I,mBAAmB;UAEvB62I,aAAa,GAAG,IAAI,CAACH,gCAAgC;UAErD;QAED,KAAKz2I,iBAAiB;UAErB42I,aAAa,GAAG,IAAI,CAACF,8BAA8B;UAEnD;QAED,KAAKz2I,iBAAiB;UAErB22I,aAAa,GAAG,IAAI,CAACD,8BAA8B;UAEnD;MAEF;MAEA,IAAKC,aAAa,KAAK3/I,SAAS,EAAG;QAElC,IAAMoc,OAAO,GAAG,gCAAgC,GAC/C,IAAI,CAACo+H,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAAC/8I,IAAI;QAE1D,IAAK,IAAI,CAACo9I,iBAAiB,KAAK76I,SAAS,EAAG;UAE3C;UACA,IAAKm/I,aAAa,KAAK,IAAI,CAACI,oBAAoB,EAAG;YAElD,IAAI,CAACD,gBAAgB,CAAE,IAAI,CAACC,oBAAqB,CAAC;UAEnD,CAAC,MAAM;YAEN,MAAM,IAAI3jJ,KAAK,CAAEwgB,OAAQ,CAAC,CAAC,CAAC;UAE7B;QAED;;QAEAlK,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAEiK,OAAQ,CAAC;QAC/C,OAAO,IAAI;MAEZ;MAEA,IAAI,CAACy+H,iBAAiB,GAAG8E,aAAa;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAArgJ,GAAA;IAAAvG,KAAA,EAED,SAAAgvC,iBAAA,EAAmB;MAElB,QAAS,IAAI,CAAC8yG,iBAAiB;QAE9B,KAAK,IAAI,CAAC2E,gCAAgC;UAEzC,OAAO12I,mBAAmB;QAE3B,KAAK,IAAI,CAAC22I,8BAA8B;UAEvC,OAAO12I,iBAAiB;QAEzB,KAAK,IAAI,CAAC22I,8BAA8B;UAEvC,OAAO12I,iBAAiB;MAE1B;IAED;EAAC;IAAA1J,GAAA;IAAAvG,KAAA,EAED,SAAA6gJ,aAAA,EAAe;MAEd,OAAO,IAAI,CAAC5+I,MAAM,CAACqC,MAAM,GAAG,IAAI,CAACs7I,KAAK,CAACt7I,MAAM;IAE9C;;IAEA;EAAA;IAAAiC,GAAA;IAAAvG,KAAA,EACA,SAAAsoH,MAAOu+B,UAAU,EAAG;MAEnB,IAAKA,UAAU,KAAK,GAAG,EAAG;QAEzB,IAAMjH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAI3/I,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGggJ,KAAK,CAACt7I,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAElD2/I,KAAK,CAAE3/I,CAAC,CAAE,IAAI4mJ,UAAU;QAEzB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAtgJ,GAAA;IAAAvG,KAAA,EACA,SAAA+hB,MAAO+kI,SAAS,EAAG;MAElB,IAAKA,SAAS,KAAK,GAAG,EAAG;QAExB,IAAMlH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAI3/I,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGggJ,KAAK,CAACt7I,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAElD2/I,KAAK,CAAE3/I,CAAC,CAAE,IAAI6mJ,SAAS;QAExB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAAvgJ,GAAA;IAAAvG,KAAA,EACA,SAAAwjF,KAAMujE,SAAS,EAAEC,OAAO,EAAG;MAE1B,IAAMpH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvBqH,KAAK,GAAGrH,KAAK,CAACt7I,MAAM;MAErB,IAAIojB,IAAI,GAAG,CAAC;QACXk7D,EAAE,GAAGqkE,KAAK,GAAG,CAAC;MAEf,OAAQv/H,IAAI,KAAKu/H,KAAK,IAAIrH,KAAK,CAAEl4H,IAAI,CAAE,GAAGq/H,SAAS,EAAG;QAErD,EAAGr/H,IAAI;MAER;MAEA,OAAQk7D,EAAE,KAAK,CAAE,CAAC,IAAIg9D,KAAK,CAAEh9D,EAAE,CAAE,GAAGokE,OAAO,EAAG;QAE7C,EAAGpkE,EAAE;MAEN;MAEA,EAAGA,EAAE,CAAC,CAAC;;MAEP,IAAKl7D,IAAI,KAAK,CAAC,IAAIk7D,EAAE,KAAKqkE,KAAK,EAAG;QAEjC;QACA,IAAKv/H,IAAI,IAAIk7D,EAAE,EAAG;UAEjBA,EAAE,GAAG5tE,IAAI,CAACa,GAAG,CAAE+sE,EAAE,EAAE,CAAE,CAAC;UACtBl7D,IAAI,GAAGk7D,EAAE,GAAG,CAAC;QAEd;QAEA,IAAMz/B,MAAM,GAAG,IAAI,CAAC09F,YAAY,CAAC,CAAC;QAClC,IAAI,CAACjB,KAAK,GAAGA,KAAK,CAACt6I,KAAK,CAAEoiB,IAAI,EAAEk7D,EAAG,CAAC;QACpC,IAAI,CAAC3gF,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqD,KAAK,CAAEoiB,IAAI,GAAGy7B,MAAM,EAAEy/B,EAAE,GAAGz/B,MAAO,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA58C,GAAA;IAAAvG,KAAA,EACA,SAAAknJ,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,IAAMvG,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MACrC,IAAKD,SAAS,GAAG5rI,IAAI,CAACmC,KAAK,CAAEypI,SAAU,CAAC,KAAK,CAAC,EAAG;QAEhDznI,OAAO,CAACywB,KAAK,CAAE,mDAAmD,EAAE,IAAK,CAAC;QAC1Eu9G,KAAK,GAAG,KAAK;MAEd;MAEA,IAAMvH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvB39I,MAAM,GAAG,IAAI,CAACA,MAAM;QAEpBglJ,KAAK,GAAGrH,KAAK,CAACt7I,MAAM;MAErB,IAAK2iJ,KAAK,KAAK,CAAC,EAAG;QAElB9tI,OAAO,CAACywB,KAAK,CAAE,sCAAsC,EAAE,IAAK,CAAC;QAC7Du9G,KAAK,GAAG,KAAK;MAEd;MAEA,IAAIC,QAAQ,GAAG,IAAI;MAEnB,KAAM,IAAInnJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKgnJ,KAAK,EAAEhnJ,CAAC,EAAG,EAAG;QAEpC,IAAMonJ,QAAQ,GAAGzH,KAAK,CAAE3/I,CAAC,CAAE;QAE3B,IAAK,OAAOonJ,QAAQ,KAAK,QAAQ,IAAIhjJ,KAAK,CAAEgjJ,QAAS,CAAC,EAAG;UAExDluI,OAAO,CAACywB,KAAK,CAAE,kDAAkD,EAAE,IAAI,EAAE3pC,CAAC,EAAEonJ,QAAS,CAAC;UACtFF,KAAK,GAAG,KAAK;UACb;QAED;QAEA,IAAKC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAGC,QAAQ,EAAG;UAE/CluI,OAAO,CAACywB,KAAK,CAAE,yCAAyC,EAAE,IAAI,EAAE3pC,CAAC,EAAEonJ,QAAQ,EAAED,QAAS,CAAC;UACvFD,KAAK,GAAG,KAAK;UACb;QAED;QAEAC,QAAQ,GAAGC,QAAQ;MAEpB;MAEA,IAAKplJ,MAAM,KAAKgF,SAAS,EAAG;QAE3B,IAAKu4I,YAAY,CAAEv9I,MAAO,CAAC,EAAG;UAE7B,KAAM,IAAIhC,IAAC,GAAG,CAAC,EAAEL,CAAC,GAAGqC,MAAM,CAACqC,MAAM,EAAErE,IAAC,KAAKL,CAAC,EAAE,EAAGK,IAAC,EAAG;YAEnD,IAAMD,OAAK,GAAGiC,MAAM,CAAEhC,IAAC,CAAE;YAEzB,IAAKoE,KAAK,CAAErE,OAAM,CAAC,EAAG;cAErBmZ,OAAO,CAACywB,KAAK,CAAE,mDAAmD,EAAE,IAAI,EAAE3pC,IAAC,EAAED,OAAM,CAAC;cACpFmnJ,KAAK,GAAG,KAAK;cACb;YAED;UAED;QAED;MAED;MAEA,OAAOA,KAAK;IAEb;;IAEA;IACA;EAAA;IAAA5gJ,GAAA;IAAAvG,KAAA,EACA,SAAAsnJ,SAAA,EAAW;MAEV;MACA,IAAM1H,KAAK,GAAG,IAAI,CAACA,KAAK,CAACt6I,KAAK,CAAC,CAAC;QAC/BrD,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqD,KAAK,CAAC,CAAC;QAC5B69C,MAAM,GAAG,IAAI,CAAC09F,YAAY,CAAC,CAAC;QAE5B0G,mBAAmB,GAAG,IAAI,CAACv4G,gBAAgB,CAAC,CAAC,KAAK/+B,iBAAiB;QAEnEqxE,SAAS,GAAGs+D,KAAK,CAACt7I,MAAM,GAAG,CAAC;MAE7B,IAAIkjJ,UAAU,GAAG,CAAC;MAElB,KAAM,IAAIvnJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqhF,SAAS,EAAE,EAAGrhF,CAAC,EAAG;QAEtC,IAAIwnJ,IAAI,GAAG,KAAK;QAEhB,IAAMt1F,IAAI,GAAGytF,KAAK,CAAE3/I,CAAC,CAAE;QACvB,IAAMynJ,QAAQ,GAAG9H,KAAK,CAAE3/I,CAAC,GAAG,CAAC,CAAE;;QAE/B;;QAEA,IAAKkyD,IAAI,KAAKu1F,QAAQ,KAAMznJ,CAAC,KAAK,CAAC,IAAIkyD,IAAI,KAAKytF,KAAK,CAAE,CAAC,CAAE,CAAE,EAAG;UAE9D,IAAK,CAAE2H,mBAAmB,EAAG;YAE5B;;YAEA,IAAMhqI,MAAM,GAAGtd,CAAC,GAAGkjD,MAAM;cACxBwkG,OAAO,GAAGpqI,MAAM,GAAG4lC,MAAM;cACzBykG,OAAO,GAAGrqI,MAAM,GAAG4lC,MAAM;YAE1B,KAAM,IAAI1nB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK0nB,MAAM,EAAE,EAAG1nB,CAAC,EAAG;cAErC,IAAMz7B,OAAK,GAAGiC,MAAM,CAAEsb,MAAM,GAAGke,CAAC,CAAE;cAElC,IAAKz7B,OAAK,KAAKiC,MAAM,CAAE0lJ,OAAO,GAAGlsH,CAAC,CAAE,IACnCz7B,OAAK,KAAKiC,MAAM,CAAE2lJ,OAAO,GAAGnsH,CAAC,CAAE,EAAG;gBAElCgsH,IAAI,GAAG,IAAI;gBACX;cAED;YAED;UAED,CAAC,MAAM;YAENA,IAAI,GAAG,IAAI;UAEZ;QAED;;QAEA;;QAEA,IAAKA,IAAI,EAAG;UAEX,IAAKxnJ,CAAC,KAAKunJ,UAAU,EAAG;YAEvB5H,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAE3/I,CAAC,CAAE;YAEhC,IAAM4nJ,UAAU,GAAG5nJ,CAAC,GAAGkjD,MAAM;cAC5B2kG,WAAW,GAAGN,UAAU,GAAGrkG,MAAM;YAElC,KAAM,IAAI1nB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAK0nB,MAAM,EAAE,EAAG1nB,IAAC,EAAG;cAErCx5B,MAAM,CAAE6lJ,WAAW,GAAGrsH,IAAC,CAAE,GAAGx5B,MAAM,CAAE4lJ,UAAU,GAAGpsH,IAAC,CAAE;YAErD;UAED;UAEA,EAAG+rH,UAAU;QAEd;MAED;;MAEA;;MAEA,IAAKlmE,SAAS,GAAG,CAAC,EAAG;QAEpBs+D,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAEt+D,SAAS,CAAE;QAExC,KAAM,IAAIumE,WAAU,GAAGvmE,SAAS,GAAGn+B,MAAM,EAAE2kG,YAAW,GAAGN,UAAU,GAAGrkG,MAAM,EAAE1nB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAK0nB,MAAM,EAAE,EAAG1nB,IAAC,EAAG;UAEzGx5B,MAAM,CAAE6lJ,YAAW,GAAGrsH,IAAC,CAAE,GAAGx5B,MAAM,CAAE4lJ,WAAU,GAAGpsH,IAAC,CAAE;QAErD;QAEA,EAAG+rH,UAAU;MAEd;MAEA,IAAKA,UAAU,KAAK5H,KAAK,CAACt7I,MAAM,EAAG;QAElC,IAAI,CAACs7I,KAAK,GAAGA,KAAK,CAACt6I,KAAK,CAAE,CAAC,EAAEkiJ,UAAW,CAAC;QACzC,IAAI,CAACvlJ,MAAM,GAAGA,MAAM,CAACqD,KAAK,CAAE,CAAC,EAAEkiJ,UAAU,GAAGrkG,MAAO,CAAC;MAErD,CAAC,MAAM;QAEN,IAAI,CAACy8F,KAAK,GAAGA,KAAK;QAClB,IAAI,CAAC39I,MAAM,GAAGA,MAAM;MAErB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsE,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,IAAMklI,KAAK,GAAG,IAAI,CAACA,KAAK,CAACt6I,KAAK,CAAC,CAAC;MAChC,IAAMrD,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqD,KAAK,CAAC,CAAC;MAElC,IAAMyiJ,kBAAkB,GAAG,IAAI,CAACtjJ,WAAW;MAC3C,IAAMk8I,KAAK,GAAG,IAAIoH,kBAAkB,CAAE,IAAI,CAACrjJ,IAAI,EAAEk7I,KAAK,EAAE39I,MAAO,CAAC;;MAEhE;MACA0+I,KAAK,CAACmB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD,OAAOnB,KAAK;IAEb;EAAC;IAAAp6I,GAAA;IAAAvG,KAAA,EAxaD,SAAAgnB,OAAe25H,KAAK,EAAG;MAEtB,IAAMqH,SAAS,GAAGrH,KAAK,CAACl8I,WAAW;MAEnC,IAAIwxH,IAAI;;MAER;MACA,IAAK+xB,SAAS,CAAChhI,MAAM,KAAK,IAAI,CAACA,MAAM,EAAG;QAEvCivG,IAAI,GAAG+xB,SAAS,CAAChhI,MAAM,CAAE25H,KAAM,CAAC;MAEjC,CAAC,MAAM;QAEN;QACA1qB,IAAI,GAAG;UAEN,MAAM,EAAE0qB,KAAK,CAACj8I,IAAI;UAClB,OAAO,EAAE46I,YAAY,CAAEqB,KAAK,CAACf,KAAK,EAAEt4H,KAAM,CAAC;UAC3C,QAAQ,EAAEg4H,YAAY,CAAEqB,KAAK,CAAC1+I,MAAM,EAAEqlB,KAAM;QAE7C,CAAC;QAED,IAAM8+H,aAAa,GAAGzF,KAAK,CAAC3xG,gBAAgB,CAAC,CAAC;QAE9C,IAAKo3G,aAAa,KAAKzF,KAAK,CAAC6F,oBAAoB,EAAG;UAEnDvwB,IAAI,CAACmwB,aAAa,GAAGA,aAAa;QAEnC;MAED;MAEAnwB,IAAI,CAAC90H,IAAI,GAAGw/I,KAAK,CAACc,aAAa,CAAC,CAAC;;MAEjC,OAAOxrB,IAAI;IAEZ;EAAC;EAAA,OAAAkwB,aAAA;AAAA;AAwYFA,aAAa,CAACxmJ,SAAS,CAAC0mJ,cAAc,GAAG/sI,YAAY;AACrD6sI,aAAa,CAACxmJ,SAAS,CAAC2mJ,eAAe,GAAGhtI,YAAY;AACtD6sI,aAAa,CAACxmJ,SAAS,CAAC6mJ,oBAAoB,GAAGx2I,iBAAiB;;AAEhE;AACA;AACA;AAFA,IAGMi4I,oBAAoB,GAAA5gJ,OAAA,CAAA4gJ,oBAAA,0BAAAC,cAAA;EAAApgI,SAAA,CAAAmgI,oBAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAngI,YAAA,CAAAigI,oBAAA;EAAA,SAAAA,qBAAA;IAAAliJ,eAAA,OAAAkiJ,oBAAA;IAAA,OAAAE,SAAA,CAAAn+G,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAAyhJ,oBAAA;AAAA,EAAS9B,aAAa;AAEhD8B,oBAAoB,CAACtoJ,SAAS,CAAC8hJ,aAAa,GAAG,MAAM;AACrDwG,oBAAoB,CAACtoJ,SAAS,CAAC2mJ,eAAe,GAAGh/H,KAAK;AACtD2gI,oBAAoB,CAACtoJ,SAAS,CAAC6mJ,oBAAoB,GAAGz2I,mBAAmB;AACzEk4I,oBAAoB,CAACtoJ,SAAS,CAAC+mJ,8BAA8B,GAAGz/I,SAAS;AACzEghJ,oBAAoB,CAACtoJ,SAAS,CAACgnJ,8BAA8B,GAAG1/I,SAAS;;AAEzE;AACA;AACA;AAFA,IAGMmhJ,kBAAkB,GAAA/gJ,OAAA,CAAA+gJ,kBAAA,0BAAAC,eAAA;EAAAvgI,SAAA,CAAAsgI,kBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAtgI,YAAA,CAAAogI,kBAAA;EAAA,SAAAA,mBAAA;IAAAriJ,eAAA,OAAAqiJ,kBAAA;IAAA,OAAAE,SAAA,CAAAt+G,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAA4hJ,kBAAA;AAAA,EAASjC,aAAa;AAE9CiC,kBAAkB,CAACzoJ,SAAS,CAAC8hJ,aAAa,GAAG,OAAO;;AAEpD;AACA;AACA;AAFA,IAGM8G,mBAAmB,GAAAlhJ,OAAA,CAAAkhJ,mBAAA,0BAAAC,eAAA;EAAA1gI,SAAA,CAAAygI,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAzgI,YAAA,CAAAugI,mBAAA;EAAA,SAAAA,oBAAA;IAAAxiJ,eAAA,OAAAwiJ,mBAAA;IAAA,OAAAE,SAAA,CAAAz+G,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAA+hJ,mBAAA;AAAA,EAASpC,aAAa;AAE/CoC,mBAAmB,CAAC5oJ,SAAS,CAAC8hJ,aAAa,GAAG,QAAQ;;AAEtD;AACA;AACA;AAFA,IAIMiH,2BAA2B,GAAArhJ,OAAA,CAAAqhJ,2BAAA,0BAAAC,aAAA;EAAA7gI,SAAA,CAAA4gI,2BAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA5gI,YAAA,CAAA0gI,2BAAA;EAEhC,SAAAA,4BAAa1F,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAx8I,eAAA,OAAA2iJ,2BAAA;IAAA,OAAAE,SAAA,CAAAvnJ,IAAA,OAElE2hJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC/7I,YAAA,CAAAkiJ,2BAAA;IAAAniJ,GAAA;IAAAvG,KAAA,EAED,SAAAgkJ,aAAc71G,EAAE,EAAE5P,EAAE,EAAE/+B,CAAC,EAAEg/B,EAAE,EAAG;MAE7B,IAAMiM,MAAM,GAAG,IAAI,CAAC83G,YAAY;QAC/BtgJ,MAAM,GAAG,IAAI,CAACghJ,YAAY;QAC1B9/F,MAAM,GAAG,IAAI,CAACy9F,SAAS;QAEvB3jI,KAAK,GAAG,CAAEzd,CAAC,GAAG++B,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;MAEjC,IAAIhhB,MAAM,GAAG4wB,EAAE,GAAGgV,MAAM;MAExB,KAAM,IAAIyC,GAAG,GAAGroC,MAAM,GAAG4lC,MAAM,EAAE5lC,MAAM,KAAKqoC,GAAG,EAAEroC,MAAM,IAAI,CAAC,EAAG;QAE9DiS,UAAU,CAACwD,SAAS,CAAEyX,MAAM,EAAE,CAAC,EAAExoC,MAAM,EAAEsb,MAAM,GAAG4lC,MAAM,EAAElhD,MAAM,EAAEsb,MAAM,EAAEN,KAAM,CAAC;MAElF;MAEA,OAAOwtB,MAAM;IAEd;EAAC;EAAA,OAAAi+G,2BAAA;AAAA,EA1BwC3F,WAAW;AA8BrD;AACA;AACA;AAFA,IAGM8F,uBAAuB,GAAAxhJ,OAAA,CAAAwhJ,uBAAA,0BAAAC,eAAA;EAAAhhI,SAAA,CAAA+gI,uBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAA/gI,YAAA,CAAA6gI,uBAAA;EAAA,SAAAA,wBAAA;IAAA9iJ,eAAA,OAAA8iJ,uBAAA;IAAA,OAAAE,SAAA,CAAA/+G,KAAA,OAAAL,SAAA;EAAA;EAAAnjC,YAAA,CAAAqiJ,uBAAA;IAAAtiJ,GAAA;IAAAvG,KAAA,EAE5B,SAAA0mJ,+BAAgCj8G,MAAM,EAAG;MAExC,OAAO,IAAIi+G,2BAA2B,CAAE,IAAI,CAAC9I,KAAK,EAAE,IAAI,CAAC39I,MAAM,EAAE,IAAI,CAAC4+I,YAAY,CAAC,CAAC,EAAEp2G,MAAO,CAAC;IAE/F;EAAC;EAAA,OAAAo+G,uBAAA;AAAA,EANoC1C,aAAa;AAUnD0C,uBAAuB,CAAClpJ,SAAS,CAAC8hJ,aAAa,GAAG,YAAY;AAC9D;AACAoH,uBAAuB,CAAClpJ,SAAS,CAAC6mJ,oBAAoB,GAAGx2I,iBAAiB;AAC1E64I,uBAAuB,CAAClpJ,SAAS,CAACgnJ,8BAA8B,GAAG1/I,SAAS;;AAE5E;AACA;AACA;AAFA,IAGM+hJ,mBAAmB,GAAA3hJ,OAAA,CAAA2hJ,mBAAA,0BAAAC,eAAA;EAAAnhI,SAAA,CAAAkhI,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAlhI,YAAA,CAAAghI,mBAAA;EAAA,SAAAA,oBAAA;IAAAjjJ,eAAA,OAAAijJ,mBAAA;IAAA,OAAAE,SAAA,CAAAl/G,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAAwiJ,mBAAA;AAAA,EAAS7C,aAAa;AAE/C6C,mBAAmB,CAACrpJ,SAAS,CAAC8hJ,aAAa,GAAG,QAAQ;AACtDuH,mBAAmB,CAACrpJ,SAAS,CAAC2mJ,eAAe,GAAGh/H,KAAK;AACrD0hI,mBAAmB,CAACrpJ,SAAS,CAAC6mJ,oBAAoB,GAAGz2I,mBAAmB;AACxEi5I,mBAAmB,CAACrpJ,SAAS,CAAC+mJ,8BAA8B,GAAGz/I,SAAS;AACxE+hJ,mBAAmB,CAACrpJ,SAAS,CAACgnJ,8BAA8B,GAAG1/I,SAAS;;AAExE;AACA;AACA;AAFA,IAGMkiJ,mBAAmB,GAAA9hJ,OAAA,CAAA8hJ,mBAAA,0BAAAC,eAAA;EAAAthI,SAAA,CAAAqhI,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAArhI,YAAA,CAAAmhI,mBAAA;EAAA,SAAAA,oBAAA;IAAApjJ,eAAA,OAAAojJ,mBAAA;IAAA,OAAAE,SAAA,CAAAr/G,KAAA,OAAAL,SAAA;EAAA;EAAA,OAAAnjC,YAAA,CAAA2iJ,mBAAA;AAAA,EAAShD,aAAa;AAE/CgD,mBAAmB,CAACxpJ,SAAS,CAAC8hJ,aAAa,GAAG,QAAQ;AAAC,IAEjD6H,aAAa,GAAAjiJ,OAAA,CAAAiiJ,aAAA;EAElB,SAAAA,cAAa5kJ,IAAI,EAAE6kJ,QAAQ,GAAG,CAAE,CAAC,EAAE7I,MAAM,EAAEmC,SAAS,GAAGxyI,wBAAwB,EAAG;IAAAtK,eAAA,OAAAujJ,aAAA;IAEjF,IAAI,CAAC5kJ,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACg8I,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC6I,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC1G,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAACptI,IAAI,GAAGN,YAAY,CAAC,CAAC;;IAE1B;IACA,IAAK,IAAI,CAACo0I,QAAQ,GAAG,CAAC,EAAG;MAExB,IAAI,CAACxI,aAAa,CAAC,CAAC;IAErB;EAED;EAACv6I,YAAA,CAAA8iJ,aAAA;IAAA/iJ,GAAA;IAAAvG,KAAA,EA+RD,SAAA+gJ,cAAA,EAAgB;MAEf,IAAML,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI6I,QAAQ,GAAG,CAAC;MAEhB,KAAM,IAAItpJ,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG8gJ,MAAM,CAACp8I,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEnD,IAAM0gJ,KAAK,GAAG,IAAI,CAACD,MAAM,CAAEzgJ,CAAC,CAAE;QAE9BspJ,QAAQ,GAAGv0I,IAAI,CAACa,GAAG,CAAE0zI,QAAQ,EAAE5I,KAAK,CAACf,KAAK,CAAEe,KAAK,CAACf,KAAK,CAACt7I,MAAM,GAAG,CAAC,CAAG,CAAC;MAEvE;MAEA,IAAI,CAACilJ,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAAwjF,KAAA,EAAO;MAEN,KAAM,IAAIvjF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygJ,MAAM,CAACp8I,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE/C,IAAI,CAACygJ,MAAM,CAAEzgJ,CAAC,CAAE,CAACujF,IAAI,CAAE,CAAC,EAAE,IAAI,CAAC+lE,QAAS,CAAC;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAAknJ,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,KAAM,IAAIlnJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygJ,MAAM,CAACp8I,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE/CknJ,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACzG,MAAM,CAAEzgJ,CAAC,CAAE,CAACinJ,QAAQ,CAAC,CAAC;MAE7C;MAEA,OAAOC,KAAK;IAEb;EAAC;IAAA5gJ,GAAA;IAAAvG,KAAA,EAED,SAAAsnJ,SAAA,EAAW;MAEV,KAAM,IAAIrnJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygJ,MAAM,CAACp8I,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE/C,IAAI,CAACygJ,MAAM,CAAEzgJ,CAAC,CAAE,CAACqnJ,QAAQ,CAAC,CAAC;MAE5B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/gJ,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,IAAMgmI,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIzgJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygJ,MAAM,CAACp8I,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE/CygJ,MAAM,CAACz8I,IAAI,CAAE,IAAI,CAACy8I,MAAM,CAAEzgJ,CAAC,CAAE,CAACya,KAAK,CAAC,CAAE,CAAC;MAExC;MAEA,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAAC6kJ,QAAQ,EAAE7I,MAAM,EAAE,IAAI,CAACmC,SAAU,CAAC;IAEhF;EAAC;IAAAt8I,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,OAAO,IAAI,CAACviB,WAAW,CAACuiB,MAAM,CAAE,IAAK,CAAC;IAEvC;EAAC;IAAAzgB,GAAA;IAAAvG,KAAA,EAvWD,SAAA8pB,MAAcmsG,IAAI,EAAG;MAEpB,IAAMyqB,MAAM,GAAG,EAAE;QAChB8I,UAAU,GAAGvzB,IAAI,CAACyqB,MAAM;QACxB+I,SAAS,GAAG,GAAG,IAAKxzB,IAAI,CAACuqB,GAAG,IAAI,GAAG,CAAE;MAEtC,KAAM,IAAIvgJ,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG4pJ,UAAU,CAACllJ,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEvDygJ,MAAM,CAACz8I,IAAI,CAAEylJ,kBAAkB,CAAEF,UAAU,CAAEvpJ,CAAC,CAAG,CAAC,CAAC8hB,KAAK,CAAE0nI,SAAU,CAAE,CAAC;MAExE;MAEA,IAAMhJ,IAAI,GAAG,IAAI,IAAI,CAAExqB,IAAI,CAACvxH,IAAI,EAAEuxH,IAAI,CAACszB,QAAQ,EAAE7I,MAAM,EAAEzqB,IAAI,CAAC4sB,SAAU,CAAC;MACzEpC,IAAI,CAAChrI,IAAI,GAAGwgH,IAAI,CAACxgH,IAAI;MAErB,OAAOgrI,IAAI;IAEZ;EAAC;IAAAl6I,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAey5H,IAAI,EAAG;MAErB,IAAMC,MAAM,GAAG,EAAE;QAChBiJ,UAAU,GAAGlJ,IAAI,CAACC,MAAM;MAEzB,IAAMzqB,IAAI,GAAG;QAEZ,MAAM,EAAEwqB,IAAI,CAAC/7I,IAAI;QACjB,UAAU,EAAE+7I,IAAI,CAAC8I,QAAQ;QACzB,QAAQ,EAAE7I,MAAM;QAChB,MAAM,EAAED,IAAI,CAAChrI,IAAI;QACjB,WAAW,EAAEgrI,IAAI,CAACoC;MAEnB,CAAC;MAED,KAAM,IAAI5iJ,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG+pJ,UAAU,CAACrlJ,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEvDygJ,MAAM,CAACz8I,IAAI,CAAEkiJ,aAAa,CAACn/H,MAAM,CAAE2iI,UAAU,CAAE1pJ,CAAC,CAAG,CAAE,CAAC;MAEvD;MAEA,OAAOg2H,IAAI;IAEZ;EAAC;IAAA1vH,GAAA;IAAAvG,KAAA,EAED,SAAA4pJ,8BAAsCllJ,IAAI,EAAEmlJ,mBAAmB,EAAErJ,GAAG,EAAEsJ,MAAM,EAAG;MAE9E,IAAMC,eAAe,GAAGF,mBAAmB,CAACvlJ,MAAM;MAClD,IAAMo8I,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIzgJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8pJ,eAAe,EAAE9pJ,CAAC,EAAG,EAAG;QAE5C,IAAI2/I,KAAK,GAAG,EAAE;QACd,IAAI39I,MAAM,GAAG,EAAE;QAEf29I,KAAK,CAAC37I,IAAI,CACT,CAAEhE,CAAC,GAAG8pJ,eAAe,GAAG,CAAC,IAAKA,eAAe,EAC7C9pJ,CAAC,EACD,CAAEA,CAAC,GAAG,CAAC,IAAK8pJ,eAAgB,CAAC;QAE9B9nJ,MAAM,CAACgC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEtB,IAAMsU,KAAK,GAAGonI,gBAAgB,CAAEC,KAAM,CAAC;QACvCA,KAAK,GAAGE,WAAW,CAAEF,KAAK,EAAE,CAAC,EAAErnI,KAAM,CAAC;QACtCtW,MAAM,GAAG69I,WAAW,CAAE79I,MAAM,EAAE,CAAC,EAAEsW,KAAM,CAAC;;QAExC;QACA;QACA,IAAK,CAAEuxI,MAAM,IAAIlK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG;UAEnCA,KAAK,CAAC37I,IAAI,CAAE8lJ,eAAgB,CAAC;UAC7B9nJ,MAAM,CAACgC,IAAI,CAAEhC,MAAM,CAAE,CAAC,CAAG,CAAC;QAE3B;QAEAy+I,MAAM,CAACz8I,IAAI,CACV,IAAIskJ,mBAAmB,CACtB,yBAAyB,GAAGsB,mBAAmB,CAAE5pJ,CAAC,CAAE,CAACyE,IAAI,GAAG,GAAG,EAC/Dk7I,KAAK,EAAE39I,MACR,CAAC,CAAC8f,KAAK,CAAE,GAAG,GAAGy+H,GAAI,CAAE,CAAC;MAExB;MAEA,OAAO,IAAI,IAAI,CAAE97I,IAAI,EAAE,CAAE,CAAC,EAAEg8I,MAAO,CAAC;IAErC;EAAC;IAAAn6I,GAAA;IAAAvG,KAAA,EAED,SAAAgqJ,WAAmBC,iBAAiB,EAAEvlJ,IAAI,EAAG;MAE5C,IAAIwlJ,SAAS,GAAGD,iBAAiB;MAEjC,IAAK,CAAE3iI,KAAK,CAACC,OAAO,CAAE0iI,iBAAkB,CAAC,EAAG;QAE3C,IAAMnqJ,CAAC,GAAGmqJ,iBAAiB;QAC3BC,SAAS,GAAGpqJ,CAAC,CAACy5B,QAAQ,IAAIz5B,CAAC,CAACy5B,QAAQ,CAAC+O,UAAU,IAAIxoC,CAAC,CAACwoC,UAAU;MAEhE;MAEA,KAAM,IAAIroC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiqJ,SAAS,CAAC5lJ,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE7C,IAAKiqJ,SAAS,CAAEjqJ,CAAC,CAAE,CAACyE,IAAI,KAAKA,IAAI,EAAG;UAEnC,OAAOwlJ,SAAS,CAAEjqJ,CAAC,CAAE;QAEtB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAmqJ,oCAA4CxwE,YAAY,EAAE6mE,GAAG,EAAEsJ,MAAM,EAAG;MAEvE,IAAMM,uBAAuB,GAAG,CAAC,CAAC;;MAElC;MACA;MACA,IAAMC,OAAO,GAAG,oBAAoB;;MAEpC;MACA;MACA,KAAM,IAAIpqJ,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGoqD,YAAY,CAACr1E,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEzD,IAAM+5E,WAAW,GAAGL,YAAY,CAAE15E,CAAC,CAAE;QACrC,IAAMqqJ,KAAK,GAAGtwE,WAAW,CAACt1E,IAAI,CAAC68E,KAAK,CAAE8oE,OAAQ,CAAC;QAE/C,IAAKC,KAAK,IAAIA,KAAK,CAAChmJ,MAAM,GAAG,CAAC,EAAG;UAEhC,IAAMI,IAAI,GAAG4lJ,KAAK,CAAE,CAAC,CAAE;UAEvB,IAAIC,qBAAqB,GAAGH,uBAAuB,CAAE1lJ,IAAI,CAAE;UAE3D,IAAK,CAAE6lJ,qBAAqB,EAAG;YAE9BH,uBAAuB,CAAE1lJ,IAAI,CAAE,GAAG6lJ,qBAAqB,GAAG,EAAE;UAE7D;UAEAA,qBAAqB,CAACtmJ,IAAI,CAAE+1E,WAAY,CAAC;QAE1C;MAED;MAEA,IAAMwwE,KAAK,GAAG,EAAE;MAEhB,KAAM,IAAM9lJ,MAAI,IAAI0lJ,uBAAuB,EAAG;QAE7CI,KAAK,CAACvmJ,IAAI,CAAE,IAAI,CAAC2lJ,6BAA6B,CAAEllJ,MAAI,EAAE0lJ,uBAAuB,CAAE1lJ,MAAI,CAAE,EAAE87I,GAAG,EAAEsJ,MAAO,CAAE,CAAC;MAEvG;MAEA,OAAOU,KAAK;IAEb;;IAEA;EAAA;IAAAjkJ,GAAA;IAAAvG,KAAA,EACA,SAAAyqJ,eAAuBx9G,SAAS,EAAE6nF,KAAK,EAAG;MAEzC,IAAK,CAAE7nF,SAAS,EAAG;QAElB9zB,OAAO,CAACywB,KAAK,CAAE,uDAAwD,CAAC;QACxE,OAAO,IAAI;MAEZ;MAEA,IAAM8gH,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAc1C,SAAS,EAAE2C,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,UAAU,EAAG;QAEnG;QACA,IAAKF,aAAa,CAACtmJ,MAAM,KAAK,CAAC,EAAG;UAEjC,IAAMs7I,KAAK,GAAG,EAAE;UAChB,IAAM39I,MAAM,GAAG,EAAE;UAEjBg+I,WAAW,CAAE2K,aAAa,EAAEhL,KAAK,EAAE39I,MAAM,EAAE4oJ,YAAa,CAAC;;UAEzD;UACA,IAAKjL,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG;YAEzBwmJ,UAAU,CAAC7mJ,IAAI,CAAE,IAAI+jJ,SAAS,CAAE2C,SAAS,EAAE/K,KAAK,EAAE39I,MAAO,CAAE,CAAC;UAE7D;QAED;MAED,CAAC;MAED,IAAMy+I,MAAM,GAAG,EAAE;MAEjB,IAAMqK,QAAQ,GAAG99G,SAAS,CAACvoC,IAAI,IAAI,SAAS;MAC5C,IAAM87I,GAAG,GAAGvzG,SAAS,CAACuzG,GAAG,IAAI,EAAE;MAC/B,IAAMqC,SAAS,GAAG51G,SAAS,CAAC41G,SAAS;;MAErC;MACA,IAAI0G,QAAQ,GAAGt8G,SAAS,CAAC3oC,MAAM,IAAI,CAAE,CAAC;MAEtC,IAAM0mJ,eAAe,GAAG/9G,SAAS,CAACg+G,SAAS,IAAI,EAAE;MAEjD,KAAM,IAAI3pJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0pJ,eAAe,CAAC1mJ,MAAM,EAAEhD,CAAC,EAAG,EAAG;QAEnD,IAAMspJ,aAAa,GAAGI,eAAe,CAAE1pJ,CAAC,CAAE,CAAC2D,IAAI;;QAE/C;QACA,IAAK,CAAE2lJ,aAAa,IAAIA,aAAa,CAACtmJ,MAAM,KAAK,CAAC,EAAG;;QAErD;QACA,IAAKsmJ,aAAa,CAAE,CAAC,CAAE,CAACjxE,YAAY,EAAG;UAEtC;UACA,IAAMuxE,gBAAgB,GAAG,CAAC,CAAC;UAE3B,IAAIvuD,CAAC;UAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiuD,aAAa,CAACtmJ,MAAM,EAAEq4F,CAAC,EAAG,EAAG;YAE7C,IAAKiuD,aAAa,CAAEjuD,CAAC,CAAE,CAAChjB,YAAY,EAAG;cAEtC,KAAM,IAAI5jE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG60I,aAAa,CAAEjuD,CAAC,CAAE,CAAChjB,YAAY,CAACr1E,MAAM,EAAEyR,CAAC,EAAG,EAAG;gBAEnEm1I,gBAAgB,CAAEN,aAAa,CAAEjuD,CAAC,CAAE,CAAChjB,YAAY,CAAE5jE,CAAC,CAAE,CAAE,GAAG,CAAE,CAAC;cAE/D;YAED;UAED;;UAEA;UACA;UACA;UACA,KAAM,IAAMo1I,eAAe,IAAID,gBAAgB,EAAG;YAEjD,IAAMtL,KAAK,GAAG,EAAE;YAChB,IAAM39I,MAAM,GAAG,EAAE;YAEjB,KAAM,IAAI8T,EAAC,GAAG,CAAC,EAAEA,EAAC,KAAK60I,aAAa,CAAEjuD,CAAC,CAAE,CAAChjB,YAAY,CAACr1E,MAAM,EAAE,EAAGyR,EAAC,EAAG;cAErE,IAAMq1I,YAAY,GAAGR,aAAa,CAAEjuD,CAAC,CAAE;cAEvCijD,KAAK,CAAC37I,IAAI,CAAEmnJ,YAAY,CAACj5F,IAAK,CAAC;cAC/BlwD,MAAM,CAACgC,IAAI,CAAImnJ,YAAY,CAACpxE,WAAW,KAAKmxE,eAAe,GAAK,CAAC,GAAG,CAAE,CAAC;YAExE;YAEAzK,MAAM,CAACz8I,IAAI,CAAE,IAAIskJ,mBAAmB,CAAE,wBAAwB,GAAG4C,eAAe,GAAG,GAAG,EAAEvL,KAAK,EAAE39I,MAAO,CAAE,CAAC;UAE1G;UAEAsnJ,QAAQ,GAAG2B,gBAAgB,CAAC5mJ,MAAM,GAAGk8I,GAAG;QAEzC,CAAC,MAAM;UAEN;;UAEA,IAAM6K,QAAQ,GAAG,SAAS,GAAGv2B,KAAK,CAAExzH,CAAC,CAAE,CAACoD,IAAI,GAAG,GAAG;UAElDgmJ,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,WAAW,EAC3CT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;UAE/BgK,gBAAgB,CACf7B,uBAAuB,EAAEwC,QAAQ,GAAG,aAAa,EACjDT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;UAE/BgK,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,QAAQ,EACxCT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;QAEhC;MAED;MAEA,IAAKA,MAAM,CAACp8I,MAAM,KAAK,CAAC,EAAG;QAE1B,OAAO,IAAI;MAEZ;MAEA,IAAMm8I,IAAI,GAAG,IAAI,IAAI,CAAEsK,QAAQ,EAAExB,QAAQ,EAAE7I,MAAM,EAAEmC,SAAU,CAAC;MAE9D,OAAOpC,IAAI;IAEZ;EAAC;EAAA,OAAA6I,aAAA;AAAA;AAiFF,SAASgC,4BAA4BA,CAAEC,QAAQ,EAAG;EAEjD,QAASA,QAAQ,CAAC71I,WAAW,CAAC,CAAC;IAE9B,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,SAAS;MAEb,OAAO6yI,mBAAmB;IAE3B,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,SAAS;IACd,KAAK,SAAS;MAEb,OAAOY,mBAAmB;IAE3B,KAAK,OAAO;MAEX,OAAOf,kBAAkB;IAE1B,KAAK,YAAY;MAEhB,OAAOS,uBAAuB;IAE/B,KAAK,MAAM;IACX,KAAK,SAAS;MAEb,OAAOZ,oBAAoB;IAE5B,KAAK,QAAQ;MAEZ,OAAOe,mBAAmB;EAE5B;EAEA,MAAM,IAAInmJ,KAAK,CAAE,6CAA6C,GAAG0oJ,QAAS,CAAC;AAE5E;AAEA,SAAS7B,kBAAkBA,CAAEzzB,IAAI,EAAG;EAEnC,IAAKA,IAAI,CAAC90H,IAAI,KAAK8F,SAAS,EAAG;IAE9B,MAAM,IAAIpE,KAAK,CAAE,0DAA2D,CAAC;EAE9E;EAEA,IAAMmlJ,SAAS,GAAGsD,4BAA4B,CAAEr1B,IAAI,CAAC90H,IAAK,CAAC;EAE3D,IAAK80H,IAAI,CAAC2pB,KAAK,KAAK34I,SAAS,EAAG;IAE/B,IAAM24I,KAAK,GAAG,EAAE;MAAE39I,MAAM,GAAG,EAAE;IAE7Bg+I,WAAW,CAAEhqB,IAAI,CAAChxH,IAAI,EAAE26I,KAAK,EAAE39I,MAAM,EAAE,OAAQ,CAAC;IAEhDg0H,IAAI,CAAC2pB,KAAK,GAAGA,KAAK;IAClB3pB,IAAI,CAACh0H,MAAM,GAAGA,MAAM;EAErB;;EAEA;EACA,IAAK+lJ,SAAS,CAACl+H,KAAK,KAAK7iB,SAAS,EAAG;IAEpC,OAAO+gJ,SAAS,CAACl+H,KAAK,CAAEmsG,IAAK,CAAC;EAE/B,CAAC,MAAM;IAEN;IACA,OAAO,IAAI+xB,SAAS,CAAE/xB,IAAI,CAACvxH,IAAI,EAAEuxH,IAAI,CAAC2pB,KAAK,EAAE3pB,IAAI,CAACh0H,MAAM,EAAEg0H,IAAI,CAACmwB,aAAc,CAAC;EAE/E;AAED;AAEA,IAAMoF,KAAK,GAAAnkJ,OAAA,CAAAmkJ,KAAA,GAAG;EAEbnnI,OAAO,EAAE,KAAK;EAEdonI,KAAK,EAAE,CAAC,CAAC;EAET7wI,GAAG,EAAE,SAAAA,IAAWrU,GAAG,EAAEmlJ,IAAI,EAAG;IAE3B,IAAK,IAAI,CAACrnI,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,IAAI,CAAConI,KAAK,CAAEllJ,GAAG,CAAE,GAAGmlJ,IAAI;EAEzB,CAAC;EAEDvxI,GAAG,EAAE,SAAAA,IAAW5T,GAAG,EAAG;IAErB,IAAK,IAAI,CAAC8d,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,OAAO,IAAI,CAAConI,KAAK,CAAEllJ,GAAG,CAAE;EAEzB,CAAC;EAEDsjC,MAAM,EAAE,SAAAA,OAAWtjC,GAAG,EAAG;IAExB,OAAO,IAAI,CAACklJ,KAAK,CAAEllJ,GAAG,CAAE;EAEzB,CAAC;EAEDwjC,KAAK,EAAE,SAAAA,MAAA,EAAY;IAElB,IAAI,CAAC0hH,KAAK,GAAG,CAAC,CAAC;EAEhB;AAED,CAAC;AAAC,IAEIE,cAAc,GAAAtkJ,OAAA,CAAAskJ,cAAA,gBAAAnlJ,YAAA,CAEnB,SAAAmlJ,eAAaC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;EAAA/lJ,eAAA,OAAA4lJ,cAAA;EAE1C,IAAMnlG,KAAK,GAAG,IAAI;EAElB,IAAIulG,SAAS,GAAG,KAAK;EACrB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAGjlJ,SAAS;EAC3B,IAAMklJ,QAAQ,GAAG,EAAE;;EAEnB;EACA;;EAEA,IAAI,CAACC,OAAO,GAAGnlJ,SAAS;EACxB,IAAI,CAAC2kJ,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;EAEtB,IAAI,CAACO,SAAS,GAAG,UAAWhlI,GAAG,EAAG;IAEjC4kI,UAAU,EAAG;IAEb,IAAKF,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAKvlG,KAAK,CAAC4lG,OAAO,KAAKnlJ,SAAS,EAAG;QAElCu/C,KAAK,CAAC4lG,OAAO,CAAE/kI,GAAG,EAAE2kI,WAAW,EAAEC,UAAW,CAAC;MAE9C;IAED;IAEAF,SAAS,GAAG,IAAI;EAEjB,CAAC;EAED,IAAI,CAACO,OAAO,GAAG,UAAWjlI,GAAG,EAAG;IAE/B2kI,WAAW,EAAG;IAEd,IAAKxlG,KAAK,CAACqlG,UAAU,KAAK5kJ,SAAS,EAAG;MAErCu/C,KAAK,CAACqlG,UAAU,CAAExkI,GAAG,EAAE2kI,WAAW,EAAEC,UAAW,CAAC;IAEjD;IAEA,IAAKD,WAAW,KAAKC,UAAU,EAAG;MAEjCF,SAAS,GAAG,KAAK;MAEjB,IAAKvlG,KAAK,CAAColG,MAAM,KAAK3kJ,SAAS,EAAG;QAEjCu/C,KAAK,CAAColG,MAAM,CAAC,CAAC;MAEf;IAED;EAED,CAAC;EAED,IAAI,CAACW,SAAS,GAAG,UAAWllI,GAAG,EAAG;IAEjC,IAAKm/B,KAAK,CAACslG,OAAO,KAAK7kJ,SAAS,EAAG;MAElCu/C,KAAK,CAACslG,OAAO,CAAEzkI,GAAI,CAAC;IAErB;EAED,CAAC;EAED,IAAI,CAACmlI,UAAU,GAAG,UAAWnlI,GAAG,EAAG;IAElC,IAAK6kI,WAAW,EAAG;MAElB,OAAOA,WAAW,CAAE7kI,GAAI,CAAC;IAE1B;IAEA,OAAOA,GAAG;EAEX,CAAC;EAED,IAAI,CAAColI,cAAc,GAAG,UAAWpzC,SAAS,EAAG;IAE5C6yC,WAAW,GAAG7yC,SAAS;IAEvB,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACqzC,UAAU,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;IAE5CT,QAAQ,CAACloJ,IAAI,CAAE0oJ,KAAK,EAAEC,MAAO,CAAC;IAE9B,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,UAAWF,KAAK,EAAG;IAEvC,IAAMn4I,KAAK,GAAG23I,QAAQ,CAAC/3I,OAAO,CAAEu4I,KAAM,CAAC;IAEvC,IAAKn4I,KAAK,KAAK,CAAE,CAAC,EAAG;MAEpB23I,QAAQ,CAAC13I,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;IAE5B;IAEA,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACs4I,UAAU,GAAG,UAAWpB,IAAI,EAAG;IAEnC,KAAM,IAAIzrJ,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG4qJ,QAAQ,CAAC7nJ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAI,CAAC,EAAG;MAErD,IAAM0sJ,KAAK,GAAGR,QAAQ,CAAElsJ,CAAC,CAAE;MAC3B,IAAM2sJ,MAAM,GAAGT,QAAQ,CAAElsJ,CAAC,GAAG,CAAC,CAAE;MAEhC,IAAK0sJ,KAAK,CAACI,MAAM,EAAGJ,KAAK,CAACrrE,SAAS,GAAG,CAAC,CAAC,CAAC;;MAEzC,IAAKqrE,KAAK,CAAChnI,IAAI,CAAE+lI,IAAK,CAAC,EAAG;QAEzB,OAAOkB,MAAM;MAEd;IAED;IAEA,OAAO,IAAI;EAEZ,CAAC;AAEF,CAAC;AAIF,IAAMI,qBAAqB,GAAA3lJ,OAAA,CAAA2lJ,qBAAA,GAAG,aAAc,IAAIrB,cAAc,CAAC,CAAC;AAAC,IAE3DsB,MAAM,GAAA5lJ,OAAA,CAAA4lJ,MAAA;EAEX,SAAAA,OAAaC,OAAO,EAAG;IAAAnnJ,eAAA,OAAAknJ,MAAA;IAEtB,IAAI,CAACC,OAAO,GAAKA,OAAO,KAAKjmJ,SAAS,GAAKimJ,OAAO,GAAGF,qBAAqB;IAE1E,IAAI,CAACG,WAAW,GAAG,WAAW;IAC9B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAChsE,IAAI,GAAG,EAAE;IACd,IAAI,CAACisE,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAExB;EAAC9mJ,YAAA,CAAAymJ,MAAA;IAAA1mJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAA,CAAM,wCAAyC,CAAC;EAAC;IAAAhnJ,GAAA;IAAAvG,KAAA,EAEjD,SAAAwtJ,UAAWnmI,GAAG,EAAEwkI,UAAU,EAAG;MAE5B,IAAMrlG,KAAK,GAAG,IAAI;MAElB,OAAO,IAAIxhD,OAAO,CAAE,UAAWvC,OAAO,EAAEgrJ,MAAM,EAAG;QAEhDjnG,KAAK,CAAC+mG,IAAI,CAAElmI,GAAG,EAAE5kB,OAAO,EAAEopJ,UAAU,EAAE4B,MAAO,CAAC;MAE/C,CAAE,CAAC;IAEJ;EAAC;IAAAlnJ,GAAA;IAAAvG,KAAA,EAED,SAAA8pB,MAAA,CAAO,YAAa,CAAC;EAAC;IAAAvjB,GAAA;IAAAvG,KAAA,EAEtB,SAAA0tJ,eAAgBP,WAAW,EAAG;MAE7B,IAAI,CAACA,WAAW,GAAGA,WAAW;MAC9B,OAAO,IAAI;IAEZ;EAAC;IAAA5mJ,GAAA;IAAAvG,KAAA,EAED,SAAA2tJ,mBAAoB3tJ,KAAK,EAAG;MAE3B,IAAI,CAACotJ,eAAe,GAAGptJ,KAAK;MAC5B,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA4tJ,QAASxsE,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,OAAO,IAAI;IAEZ;EAAC;IAAA76E,GAAA;IAAAvG,KAAA,EAED,SAAA6tJ,gBAAiBR,YAAY,EAAG;MAE/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,OAAO,IAAI;IAEZ;EAAC;IAAA9mJ,GAAA;IAAAvG,KAAA,EAED,SAAA8tJ,iBAAkBR,aAAa,EAAG;MAEjC,IAAI,CAACA,aAAa,GAAGA,aAAa;MAClC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAL,MAAA;AAAA;AAIFA,MAAM,CAACc,qBAAqB,GAAG,WAAW;AAE1C,IAAMC,OAAO,GAAG,CAAC,CAAC;AAAC,IAEbC,SAAS,0BAAAC,MAAA;EAAApmI,SAAA,CAAAmmI,SAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAnmI,YAAA,CAAAimI,SAAA;EAEd,SAAAA,UAAa5qI,OAAO,EAAE+qI,QAAQ,EAAG;IAAA,IAAAC,OAAA;IAAAtoJ,eAAA,OAAAkoJ,SAAA;IAEhCI,OAAA,GAAAF,SAAA,CAAA9sJ,IAAA,OAAOgiB,OAAO;IACdgrI,OAAA,CAAKD,QAAQ,GAAGA,QAAQ;IAAC,OAAAC,OAAA;EAE1B;EAAC,OAAA7nJ,YAAA,CAAAynJ,SAAA;AAAA,gBAAAK,gBAAA,CAPsBzrJ,KAAK;AAAA,IAWvB0rJ,UAAU,GAAAlnJ,OAAA,CAAAknJ,UAAA,0BAAAC,OAAA;EAAA1mI,SAAA,CAAAymI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAzmI,YAAA,CAAAumI,UAAA;EAEf,SAAAA,WAAarB,OAAO,EAAG;IAAAnnJ,eAAA,OAAAwoJ,UAAA;IAAA,OAAAE,SAAA,CAAAptJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA+nJ,UAAA;IAAAhoJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAAA,IAAA4C,OAAA;MAExC,IAAKrnI,GAAG,KAAKpgB,SAAS,EAAGogB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAAC+5D,IAAI,KAAKn6E,SAAS,EAAGogB,GAAG,GAAG,IAAI,CAAC+5D,IAAI,GAAG/5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC6lI,OAAO,CAACV,UAAU,CAAEnlI,GAAI,CAAC;MAEpC,IAAM6sC,MAAM,GAAGs3F,KAAK,CAACrxI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAK6sC,MAAM,KAAKjtD,SAAS,EAAG;QAE3B,IAAI,CAACimJ,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;QAE7BsnI,UAAU,CAAE,YAAM;UAEjB,IAAK/C,MAAM,EAAGA,MAAM,CAAE13F,MAAO,CAAC;UAE9Bw6F,OAAI,CAACxB,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;QAE5B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAO6sC,MAAM;MAEd;;MAEA;;MAEA,IAAK85F,OAAO,CAAE3mI,GAAG,CAAE,KAAKpgB,SAAS,EAAG;QAEnC+mJ,OAAO,CAAE3mI,GAAG,CAAE,CAACpjB,IAAI,CAAE;UAEpB2nJ,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU;UACtBC,OAAO,EAAEA;QAEV,CAAE,CAAC;QAEH;MAED;;MAEA;MACAkC,OAAO,CAAE3mI,GAAG,CAAE,GAAG,EAAE;MAEnB2mI,OAAO,CAAE3mI,GAAG,CAAE,CAACpjB,IAAI,CAAE;QACpB2nJ,MAAM,EAAEA,MAAM;QACdC,UAAU,EAAEA,UAAU;QACtBC,OAAO,EAAEA;MACV,CAAE,CAAC;;MAEH;MACA,IAAM8C,GAAG,GAAG,IAAIC,OAAO,CAAExnI,GAAG,EAAE;QAC7BynI,OAAO,EAAE,IAAIC,OAAO,CAAE,IAAI,CAACzB,aAAc,CAAC;QAC1C0B,WAAW,EAAE,IAAI,CAAC5B,eAAe,GAAG,SAAS,GAAG;QAChD;MACD,CAAE,CAAC;;MAEH;MACA,IAAM6B,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;;MAEtC;MACAC,KAAK,CAAEP,GAAI,CAAC,CACVjsJ,IAAI,CAAE,UAAAyrJ,QAAQ,EAAI;QAElB,IAAKA,QAAQ,CAACjrE,MAAM,KAAK,GAAG,IAAIirE,QAAQ,CAACjrE,MAAM,KAAK,CAAC,EAAG;UAEvD;UACA;;UAEA,IAAKirE,QAAQ,CAACjrE,MAAM,KAAK,CAAC,EAAG;YAE5BhqE,OAAO,CAACC,IAAI,CAAE,2CAA4C,CAAC;UAE5D;;UAEA;;UAEA,IAAK,OAAOg2I,cAAc,KAAK,WAAW,IAAIhB,QAAQ,CAACiB,IAAI,KAAKpoJ,SAAS,IAAImnJ,QAAQ,CAACiB,IAAI,CAACC,SAAS,KAAKroJ,SAAS,EAAG;YAEpH,OAAOmnJ,QAAQ;UAEhB;UAEA,IAAMmB,SAAS,GAAGvB,OAAO,CAAE3mI,GAAG,CAAE;UAChC,IAAMmoI,MAAM,GAAGpB,QAAQ,CAACiB,IAAI,CAACC,SAAS,CAAC,CAAC;;UAExC;UACA;UACA,IAAMG,aAAa,GAAGrB,QAAQ,CAACU,OAAO,CAAC30I,GAAG,CAAE,gBAAiB,CAAC,IAAIi0I,QAAQ,CAACU,OAAO,CAAC30I,GAAG,CAAE,aAAc,CAAC;UACvG,IAAMu1I,KAAK,GAAGD,aAAa,GAAG72G,QAAQ,CAAE62G,aAAc,CAAC,GAAG,CAAC;UAC3D,IAAME,gBAAgB,GAAGD,KAAK,KAAK,CAAC;UACpC,IAAIE,MAAM,GAAG,CAAC;;UAEd;UACA,IAAMC,MAAM,GAAG,IAAIT,cAAc,CAAE;YAClCzvG,KAAK,WAAAA,MAAEm8D,UAAU,EAAG;cAEnBg0C,QAAQ,CAAC,CAAC;cAEV,SAASA,QAAQA,CAAA,EAAG;gBAEnBN,MAAM,CAACO,IAAI,CAAC,CAAC,CAACptJ,IAAI,CAAE,UAAE;kBAAEG,IAAI,EAAJA,IAAI;kBAAE9C,KAAK,EAALA;gBAAM,CAAC,EAAM;kBAE1C,IAAK8C,IAAI,EAAG;oBAEXg5G,UAAU,CAACk0C,KAAK,CAAC,CAAC;kBAEnB,CAAC,MAAM;oBAENJ,MAAM,IAAI5vJ,KAAK,CAACiwJ,UAAU;oBAE1B,IAAMt7I,KAAK,GAAG,IAAIu7I,aAAa,CAAE,UAAU,EAAE;sBAAEP,gBAAgB,EAAhBA,gBAAgB;sBAAEC,MAAM,EAANA,MAAM;sBAAEF,KAAK,EAALA;oBAAM,CAAE,CAAC;oBAClF,KAAM,IAAIzvJ,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGggI,SAAS,CAACjrJ,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;sBAEtD,IAAM6yB,QAAQ,GAAGy8H,SAAS,CAAEtvJ,CAAC,CAAE;sBAC/B,IAAK6yB,QAAQ,CAAC+4H,UAAU,EAAG/4H,QAAQ,CAAC+4H,UAAU,CAAEl3I,KAAM,CAAC;oBAExD;oBAEAmnG,UAAU,CAACq0C,OAAO,CAAEnwJ,KAAM,CAAC;oBAC3B8vJ,QAAQ,CAAC,CAAC;kBAEX;gBAED,CAAE,CAAC;cAEJ;YAED;UAED,CAAE,CAAC;UAEH,OAAO,IAAIM,QAAQ,CAAEP,MAAO,CAAC;QAE9B,CAAC,MAAM;UAEN,MAAM,IAAI5B,SAAS,gBAAAtpI,MAAA,CAAgBypI,QAAQ,CAAC/mI,GAAG,wBAAA1C,MAAA,CAAoBypI,QAAQ,CAACjrE,MAAM,QAAAx+D,MAAA,CAAKypI,QAAQ,CAACiC,UAAU,GAAIjC,QAAS,CAAC;QAEzH;MAED,CAAE,CAAC,CACFzrJ,IAAI,CAAE,UAAAyrJ,QAAQ,EAAI;QAElB,QAASc,YAAY;UAEpB,KAAK,aAAa;YAEjB,OAAOd,QAAQ,CAACkC,WAAW,CAAC,CAAC;UAE9B,KAAK,MAAM;YAEV,OAAOlC,QAAQ,CAACmC,IAAI,CAAC,CAAC;UAEvB,KAAK,UAAU;YAEd,OAAOnC,QAAQ,CAACoC,IAAI,CAAC,CAAC,CACpB7tJ,IAAI,CAAE,UAAA6tJ,IAAI,EAAI;cAEd,IAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;cAC9B,OAAOD,MAAM,CAACE,eAAe,CAAEH,IAAI,EAAEvB,QAAS,CAAC;YAEhD,CAAE,CAAC;UAEL,KAAK,MAAM;YAEV,OAAOb,QAAQ,CAACn4B,IAAI,CAAC,CAAC;UAEvB;YAEC,IAAKg5B,QAAQ,KAAKhoJ,SAAS,EAAG;cAE7B,OAAOmnJ,QAAQ,CAACoC,IAAI,CAAC,CAAC;YAEvB,CAAC,MAAM;cAEN;cACA,IAAMI,EAAE,GAAG,yBAAyB;cACpC,IAAMl4G,IAAI,GAAGk4G,EAAE,CAACl4G,IAAI,CAAEu2G,QAAS,CAAC;cAChC,IAAM4B,KAAK,GAAGn4G,IAAI,IAAIA,IAAI,CAAE,CAAC,CAAE,GAAGA,IAAI,CAAE,CAAC,CAAE,CAAChjC,WAAW,CAAC,CAAC,GAAGzO,SAAS;cACrE,IAAM6pJ,OAAO,GAAG,IAAIC,WAAW,CAAEF,KAAM,CAAC;cACxC,OAAOzC,QAAQ,CAACkC,WAAW,CAAC,CAAC,CAAC3tJ,IAAI,CAAE,UAAAkgD,EAAE;gBAAA,OAAIiuG,OAAO,CAACE,MAAM,CAAEnuG,EAAG,CAAC;cAAA,CAAC,CAAC;YAEjE;QAEF;MAED,CAAE,CAAC,CACFlgD,IAAI,CAAE,UAAAgkB,IAAI,EAAI;QAEd;QACA;QACA6kI,KAAK,CAAC5wI,GAAG,CAAEyM,GAAG,EAAEV,IAAK,CAAC;QAEtB,IAAM4oI,SAAS,GAAGvB,OAAO,CAAE3mI,GAAG,CAAE;QAChC,OAAO2mI,OAAO,CAAE3mI,GAAG,CAAE;QAErB,KAAM,IAAIpnB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGggI,SAAS,CAACjrJ,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAEtD,IAAM6yB,QAAQ,GAAGy8H,SAAS,CAAEtvJ,CAAC,CAAE;UAC/B,IAAK6yB,QAAQ,CAAC84H,MAAM,EAAG94H,QAAQ,CAAC84H,MAAM,CAAEjlI,IAAK,CAAC;QAE/C;MAED,CAAE,CAAC,CACF/gB,KAAK,CAAE,UAAAsnD,GAAG,EAAI;QAEd;;QAEA,IAAMqiG,SAAS,GAAGvB,OAAO,CAAE3mI,GAAG,CAAE;QAEhC,IAAKkoI,SAAS,KAAKtoJ,SAAS,EAAG;UAE9B;UACAynJ,OAAI,CAACxB,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;UAC7B,MAAM6lC,GAAG;QAEV;QAEA,OAAO8gG,OAAO,CAAE3mI,GAAG,CAAE;QAErB,KAAM,IAAIpnB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGggI,SAAS,CAACjrJ,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAEtD,IAAM6yB,QAAQ,GAAGy8H,SAAS,CAAEtvJ,CAAC,CAAE;UAC/B,IAAK6yB,QAAQ,CAACg5H,OAAO,EAAGh5H,QAAQ,CAACg5H,OAAO,CAAE5+F,GAAI,CAAC;QAEhD;QAEAwhG,OAAI,CAACxB,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;MAE9B,CAAE,CAAC,CACF4pI,OAAO,CAAE,YAAM;QAEfvC,OAAI,CAACxB,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;MAE5B,CAAE,CAAC;MAEJ,IAAI,CAAC6lI,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;IAE9B;EAAC;IAAA9gB,GAAA;IAAAvG,KAAA,EAED,SAAAkxJ,gBAAiBlxJ,KAAK,EAAG;MAExB,IAAI,CAACkvJ,YAAY,GAAGlvJ,KAAK;MACzB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAmxJ,YAAanxJ,KAAK,EAAG;MAEpB,IAAI,CAACivJ,QAAQ,GAAGjvJ,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAuuJ,UAAA;AAAA,EAtQuBtB,MAAM;AAAA,IA0QzBmE,eAAe,GAAA/pJ,OAAA,CAAA+pJ,eAAA,0BAAAC,QAAA;EAAAvpI,SAAA,CAAAspI,eAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtpI,YAAA,CAAAopI,eAAA;EAEpB,SAAAA,gBAAalE,OAAO,EAAG;IAAAnnJ,eAAA,OAAAqrJ,eAAA;IAAA,OAAAE,SAAA,CAAAjwJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA4qJ,eAAA;IAAA7qJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMomG,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;MAC7CN,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAC3BwrE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;MAC7CV,MAAM,CAACe,kBAAkB,CAAE,IAAI,CAACP,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWmpI,IAAI,EAAG;QAEnC,IAAI;UAEH5E,MAAM,CAAEplG,KAAK,CAAC18B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0mI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQjxJ,CAAC,EAAG;UAEb,IAAKusJ,OAAO,EAAG;YAEdA,OAAO,CAAEvsJ,CAAE,CAAC;UAEb,CAAC,MAAM;YAEN4Z,OAAO,CAACywB,KAAK,CAAErqC,CAAE,CAAC;UAEnB;UAEAinD,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEwkI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAAvlJ,GAAA;IAAAvG,KAAA,EAED,SAAA8pB,MAAOmsG,IAAI,EAAG;MAEb,IAAM3tF,UAAU,GAAG,EAAE;MAErB,KAAM,IAAIroC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGg2H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,EAAG,EAAG;QAExC,IAAMwgJ,IAAI,GAAG6I,aAAa,CAACx/H,KAAK,CAAEmsG,IAAI,CAAEh2H,CAAC,CAAG,CAAC;QAE7CqoC,UAAU,CAACrkC,IAAI,CAAEw8I,IAAK,CAAC;MAExB;MAEA,OAAOn4G,UAAU;IAElB;EAAC;EAAA,OAAA8oH,eAAA;AAAA,EAxD4BnE,MAAM;AA4DpC;AACA;AACA;AACA;AACA;AAJA,IAMMsE,uBAAuB,GAAAlqJ,OAAA,CAAAkqJ,uBAAA,0BAAAC,QAAA;EAAA1pI,SAAA,CAAAypI,uBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAzpI,YAAA,CAAAupI,uBAAA;EAE5B,SAAAA,wBAAarE,OAAO,EAAG;IAAAnnJ,eAAA,OAAAwrJ,uBAAA;IAAA,OAAAE,SAAA,CAAApwJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA+qJ,uBAAA;IAAAhrJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMr/B,MAAM,GAAG,EAAE;MAEjB,IAAMkG,OAAO,GAAG,IAAIiuG,iBAAiB,CAAC,CAAC;MAEvC,IAAMsxB,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;MAC7CN,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAC3BwrE,MAAM,CAACsE,eAAe,CAAE,aAAc,CAAC;MACvCtE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;MAC7CV,MAAM,CAACe,kBAAkB,CAAEnnG,KAAK,CAAC4mG,eAAgB,CAAC;MAElD,IAAIwC,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAEzxJ,CAAC,EAAG;QAEzB2sJ,MAAM,CAACW,IAAI,CAAElmI,GAAG,CAAEpnB,CAAC,CAAE,EAAE,UAAW2iB,MAAM,EAAG;UAE1C,IAAM+uI,QAAQ,GAAGnrG,KAAK,CAAC18B,KAAK,CAAElH,MAAM,EAAE,IAAK,CAAC;UAE5CuE,MAAM,CAAElnB,CAAC,CAAE,GAAG;YACb6lB,KAAK,EAAE6rI,QAAQ,CAAC7rI,KAAK;YACrBC,MAAM,EAAE4rI,QAAQ,CAAC5rI,MAAM;YACvByC,MAAM,EAAEmpI,QAAQ,CAACnpI,MAAM;YACvBO,OAAO,EAAE4oI,QAAQ,CAAC5oI;UACnB,CAAC;UAED6mI,MAAM,IAAI,CAAC;UAEX,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnB,IAAK+B,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAGvkI,OAAO,CAAC9E,SAAS,GAAGtc,YAAY;YAElEohB,OAAO,CAAC3H,KAAK,GAAGyB,MAAM;YACtBkG,OAAO,CAAC7E,MAAM,GAAGmpI,QAAQ,CAACnpI,MAAM;YAChC6E,OAAO,CAACrD,WAAW,GAAG,IAAI;YAE1B,IAAK4hI,MAAM,EAAGA,MAAM,CAAEv+H,OAAQ,CAAC;UAEhC;QAED,CAAC,EAAEw+H,UAAU,EAAEC,OAAQ,CAAC;MAEzB;MAEA,IAAKxkI,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC,EAAG;QAE3B,KAAM,IAAIpnB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGlI,GAAG,CAAC/iB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAE,EAAGtvB,CAAC,EAAG;UAEhDyxJ,WAAW,CAAEzxJ,CAAE,CAAC;QAEjB;MAED,CAAC,MAAM;QAEN;;QAEA2sJ,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWzE,MAAM,EAAG;UAErC,IAAM+uI,QAAQ,GAAGnrG,KAAK,CAAC18B,KAAK,CAAElH,MAAM,EAAE,IAAK,CAAC;UAE5C,IAAK+uI,QAAQ,CAACE,SAAS,EAAG;YAEzB,IAAMxf,KAAK,GAAGsf,QAAQ,CAAC5oI,OAAO,CAACzkB,MAAM,GAAGqtJ,QAAQ,CAACC,WAAW;YAE5D,KAAM,IAAIpwJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6wI,KAAK,EAAE7wI,CAAC,EAAG,EAAG;cAElC2lB,MAAM,CAAE3lB,CAAC,CAAE,GAAG;gBAAEunB,OAAO,EAAE;cAAG,CAAC;cAE7B,KAAM,IAAI9oB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0xJ,QAAQ,CAACC,WAAW,EAAE3xJ,IAAC,EAAG,EAAG;gBAEjDknB,MAAM,CAAE3lB,CAAC,CAAE,CAACunB,OAAO,CAAC9kB,IAAI,CAAE0tJ,QAAQ,CAAC5oI,OAAO,CAAEvnB,CAAC,GAAGmwJ,QAAQ,CAACC,WAAW,GAAG3xJ,IAAC,CAAG,CAAC;gBAC5EknB,MAAM,CAAE3lB,CAAC,CAAE,CAACgnB,MAAM,GAAGmpI,QAAQ,CAACnpI,MAAM;gBACpCrB,MAAM,CAAE3lB,CAAC,CAAE,CAACskB,KAAK,GAAG6rI,QAAQ,CAAC7rI,KAAK;gBAClCqB,MAAM,CAAE3lB,CAAC,CAAE,CAACukB,MAAM,GAAG4rI,QAAQ,CAAC5rI,MAAM;cAErC;YAED;YAEAsH,OAAO,CAAC3H,KAAK,GAAGyB,MAAM;UAEvB,CAAC,MAAM;YAENkG,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAG6rI,QAAQ,CAAC7rI,KAAK;YACpCuH,OAAO,CAAC3H,KAAK,CAACK,MAAM,GAAG4rI,QAAQ,CAAC5rI,MAAM;YACtCsH,OAAO,CAACtE,OAAO,GAAG4oI,QAAQ,CAAC5oI,OAAO;UAEnC;UAEA,IAAK4oI,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG;YAEjCvkI,OAAO,CAAC9E,SAAS,GAAGtc,YAAY;UAEjC;UAEAohB,OAAO,CAAC7E,MAAM,GAAGmpI,QAAQ,CAACnpI,MAAM;UAChC6E,OAAO,CAACrD,WAAW,GAAG,IAAI;UAE1B,IAAK4hI,MAAM,EAAGA,MAAM,CAAEv+H,OAAQ,CAAC;QAEhC,CAAC,EAAEw+H,UAAU,EAAEC,OAAQ,CAAC;MAEzB;MAEA,OAAOz+H,OAAO;IAEf;EAAC;EAAA,OAAAkkI,uBAAA;AAAA,EArHoCtE,MAAM;AAAA,IAyHtC6E,WAAW,GAAAzqJ,OAAA,CAAAyqJ,WAAA,0BAAAC,QAAA;EAAAjqI,SAAA,CAAAgqI,WAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAhqI,YAAA,CAAA8pI,WAAA;EAEhB,SAAAA,YAAa5E,OAAO,EAAG;IAAAnnJ,eAAA,OAAA+rJ,WAAA;IAAA,OAAAE,SAAA,CAAA3wJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAAsrJ,WAAA;IAAAvrJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAK,IAAI,CAAC1qE,IAAI,KAAKn6E,SAAS,EAAGogB,GAAG,GAAG,IAAI,CAAC+5D,IAAI,GAAG/5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC6lI,OAAO,CAACV,UAAU,CAAEnlI,GAAI,CAAC;MAEpC,IAAMm/B,KAAK,GAAG,IAAI;MAElB,IAAM0N,MAAM,GAAGs3F,KAAK,CAACrxI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAK6sC,MAAM,KAAKjtD,SAAS,EAAG;QAE3Bu/C,KAAK,CAAC0mG,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;QAE9BsnI,UAAU,CAAE,YAAY;UAEvB,IAAK/C,MAAM,EAAGA,MAAM,CAAE13F,MAAO,CAAC;UAE9B1N,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;QAE7B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAO6sC,MAAM;MAEd;MAEA,IAAMxuC,KAAK,GAAG7C,eAAe,CAAE,KAAM,CAAC;MAEtC,SAASovI,WAAWA,CAAA,EAAG;QAEtBC,oBAAoB,CAAC,CAAC;QAEtB1G,KAAK,CAAC5wI,GAAG,CAAEyM,GAAG,EAAE,IAAK,CAAC;QAEtB,IAAKukI,MAAM,EAAGA,MAAM,CAAE,IAAK,CAAC;QAE5BplG,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;MAE7B;MAEA,SAAS8qI,YAAYA,CAAEx9I,KAAK,EAAG;QAE9Bu9I,oBAAoB,CAAC,CAAC;QAEtB,IAAKpG,OAAO,EAAGA,OAAO,CAAEn3I,KAAM,CAAC;QAE/B6xC,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;QAC9Bm/B,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;MAE7B;MAEA,SAAS6qI,oBAAoBA,CAAA,EAAG;QAE/BxsI,KAAK,CAACpR,mBAAmB,CAAE,MAAM,EAAE29I,WAAW,EAAE,KAAM,CAAC;QACvDvsI,KAAK,CAACpR,mBAAmB,CAAE,OAAO,EAAE69I,YAAY,EAAE,KAAM,CAAC;MAE1D;MAEAzsI,KAAK,CAAC1R,gBAAgB,CAAE,MAAM,EAAEi+I,WAAW,EAAE,KAAM,CAAC;MACpDvsI,KAAK,CAAC1R,gBAAgB,CAAE,OAAO,EAAEm+I,YAAY,EAAE,KAAM,CAAC;MAEtD,IAAK9qI,GAAG,CAAC/hB,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,KAAK,OAAO,EAAG;QAEpC,IAAK,IAAI,CAAC6nJ,WAAW,KAAKlmJ,SAAS,EAAGye,KAAK,CAACynI,WAAW,GAAG,IAAI,CAACA,WAAW;MAE3E;MAEA3mG,KAAK,CAAC0mG,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;MAE9B3B,KAAK,CAACE,GAAG,GAAGyB,GAAG;MAEf,OAAO3B,KAAK;IAEb;EAAC;EAAA,OAAAosI,WAAA;AAAA,EAjFwB7E,MAAM;AAAA,IAqF1BmF,iBAAiB,GAAA/qJ,OAAA,CAAA+qJ,iBAAA,0BAAAC,QAAA;EAAAvqI,SAAA,CAAAsqI,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtqI,YAAA,CAAAoqI,iBAAA;EAEtB,SAAAA,kBAAalF,OAAO,EAAG;IAAAnnJ,eAAA,OAAAqsJ,iBAAA;IAAA,OAAAE,SAAA,CAAAjxJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA4rJ,iBAAA;IAAA7rJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMgF,IAAI,EAAE3G,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAEzC,IAAMz+H,OAAO,GAAG,IAAI2gC,WAAW,CAAC,CAAC;MACjC3gC,OAAO,CAAC5I,UAAU,GAAGxT,cAAc;MAEnC,IAAM27I,MAAM,GAAG,IAAIkF,WAAW,CAAE,IAAI,CAAC5E,OAAQ,CAAC;MAC9CN,MAAM,CAACc,cAAc,CAAE,IAAI,CAACP,WAAY,CAAC;MACzCP,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAE3B,IAAIwuE,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAEzxJ,CAAC,EAAG;QAEzB2sJ,MAAM,CAACW,IAAI,CAAEgF,IAAI,CAAEtyJ,CAAC,CAAE,EAAE,UAAWylB,KAAK,EAAG;UAE1C2H,OAAO,CAAClG,MAAM,CAAElnB,CAAC,CAAE,GAAGylB,KAAK;UAE3BkqI,MAAM,EAAG;UAET,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnBviI,OAAO,CAACrD,WAAW,GAAG,IAAI;YAE1B,IAAK4hI,MAAM,EAAGA,MAAM,CAAEv+H,OAAQ,CAAC;UAEhC;QAED,CAAC,EAAEpmB,SAAS,EAAE6kJ,OAAQ,CAAC;MAExB;MAEA,KAAM,IAAI7rJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsyJ,IAAI,CAACjuJ,MAAM,EAAE,EAAGrE,CAAC,EAAG;QAExCyxJ,WAAW,CAAEzxJ,CAAE,CAAC;MAEjB;MAEA,OAAOotB,OAAO;IAEf;EAAC;EAAA,OAAA+kI,iBAAA;AAAA,EA/C8BnF,MAAM;AAmDtC;AACA;AACA;AACA;AACA;AAJA,IAMMuF,iBAAiB,GAAAnrJ,OAAA,CAAAmrJ,iBAAA,0BAAAC,QAAA;EAAA3qI,SAAA,CAAA0qI,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA1qI,YAAA,CAAAwqI,iBAAA;EAEtB,SAAAA,kBAAatF,OAAO,EAAG;IAAAnnJ,eAAA,OAAAysJ,iBAAA;IAAA,OAAAE,SAAA,CAAArxJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAAgsJ,iBAAA;IAAAjsJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMn5B,OAAO,GAAG,IAAIioG,WAAW,CAAC,CAAC;MAEjC,IAAMs3B,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;MAC7CN,MAAM,CAACsE,eAAe,CAAE,aAAc,CAAC;MACvCtE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;MAC7CV,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAC3BwrE,MAAM,CAACe,kBAAkB,CAAEnnG,KAAK,CAAC4mG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWzE,MAAM,EAAG;QAErC,IAAI+vI,OAAO;QAEX,IAAI;UAEHA,OAAO,GAAGnsG,KAAK,CAAC18B,KAAK,CAAElH,MAAO,CAAC;QAEhC,CAAC,CAAC,OAAQgnB,KAAK,EAAG;UAEjB,IAAKkiH,OAAO,KAAK7kJ,SAAS,EAAG;YAE5B6kJ,OAAO,CAAEliH,KAAM,CAAC;UAEjB,CAAC,MAAM;YAENzwB,OAAO,CAACywB,KAAK,CAAEA,KAAM,CAAC;YACtB;UAED;QAED;QAEA,IAAK+oH,OAAO,CAACjtI,KAAK,KAAKze,SAAS,EAAG;UAElComB,OAAO,CAAC3H,KAAK,GAAGitI,OAAO,CAACjtI,KAAK;QAE9B,CAAC,MAAM,IAAKitI,OAAO,CAAChsI,IAAI,KAAK1f,SAAS,EAAG;UAExComB,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAG6sI,OAAO,CAAC7sI,KAAK;UACnCuH,OAAO,CAAC3H,KAAK,CAACK,MAAM,GAAG4sI,OAAO,CAAC5sI,MAAM;UACrCsH,OAAO,CAAC3H,KAAK,CAACiB,IAAI,GAAGgsI,OAAO,CAAChsI,IAAI;QAElC;QAEA0G,OAAO,CAACjF,KAAK,GAAGuqI,OAAO,CAACvqI,KAAK,KAAKnhB,SAAS,GAAG0rJ,OAAO,CAACvqI,KAAK,GAAG1c,mBAAmB;QACjF2hB,OAAO,CAAChF,KAAK,GAAGsqI,OAAO,CAACtqI,KAAK,KAAKphB,SAAS,GAAG0rJ,OAAO,CAACtqI,KAAK,GAAG3c,mBAAmB;QAEjF2hB,OAAO,CAAC/E,SAAS,GAAGqqI,OAAO,CAACrqI,SAAS,KAAKrhB,SAAS,GAAG0rJ,OAAO,CAACrqI,SAAS,GAAGrc,YAAY;QACtFohB,OAAO,CAAC9E,SAAS,GAAGoqI,OAAO,CAACpqI,SAAS,KAAKthB,SAAS,GAAG0rJ,OAAO,CAACpqI,SAAS,GAAGtc,YAAY;QAEtFohB,OAAO,CAAC5E,UAAU,GAAGkqI,OAAO,CAAClqI,UAAU,KAAKxhB,SAAS,GAAG0rJ,OAAO,CAAClqI,UAAU,GAAG,CAAC;QAE9E,IAAKkqI,OAAO,CAACluI,UAAU,KAAKxd,SAAS,EAAG;UAEvComB,OAAO,CAAC5I,UAAU,GAAGkuI,OAAO,CAACluI,UAAU;QAExC,CAAC,MAAM,IAAKkuI,OAAO,CAACpoI,QAAQ,KAAKtjB,SAAS,EAAG;UAAE;;UAE9ComB,OAAO,CAAC9C,QAAQ,GAAGooI,OAAO,CAACpoI,QAAQ;QAEpC;QAEA,IAAKooI,OAAO,CAACrpI,KAAK,KAAKriB,SAAS,EAAG;UAElComB,OAAO,CAAC/D,KAAK,GAAGqpI,OAAO,CAACrpI,KAAK;QAE9B;QAEA,IAAKqpI,OAAO,CAACnqI,MAAM,KAAKvhB,SAAS,EAAG;UAEnComB,OAAO,CAAC7E,MAAM,GAAGmqI,OAAO,CAACnqI,MAAM;QAEhC;QAEA,IAAKmqI,OAAO,CAACxxJ,IAAI,KAAK8F,SAAS,EAAG;UAEjComB,OAAO,CAAClsB,IAAI,GAAGwxJ,OAAO,CAACxxJ,IAAI;QAE5B;QAEA,IAAKwxJ,OAAO,CAAC5pI,OAAO,KAAK9hB,SAAS,EAAG;UAEpComB,OAAO,CAACtE,OAAO,GAAG4pI,OAAO,CAAC5pI,OAAO;UACjCsE,OAAO,CAAC9E,SAAS,GAAGnc,wBAAwB,CAAC,CAAC;QAE/C;;QAEA,IAAKumJ,OAAO,CAACf,WAAW,KAAK,CAAC,EAAG;UAEhCvkI,OAAO,CAAC9E,SAAS,GAAGtc,YAAY;QAEjC;QAEA,IAAK0mJ,OAAO,CAACvpI,eAAe,KAAKniB,SAAS,EAAG;UAE5ComB,OAAO,CAACjE,eAAe,GAAGupI,OAAO,CAACvpI,eAAe;QAElD;QAEAiE,OAAO,CAACrD,WAAW,GAAG,IAAI;QAE1B,IAAK4hI,MAAM,EAAGA,MAAM,CAAEv+H,OAAO,EAAEslI,OAAQ,CAAC;MAEzC,CAAC,EAAE9G,UAAU,EAAEC,OAAQ,CAAC;MAGxB,OAAOz+H,OAAO;IAEf;EAAC;EAAA,OAAAmlI,iBAAA;AAAA,EAtH8BvF,MAAM;AAAA,IA0HhC2F,aAAa,GAAAvrJ,OAAA,CAAAurJ,aAAA,0BAAAC,QAAA;EAAA/qI,SAAA,CAAA8qI,aAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA9qI,YAAA,CAAA4qI,aAAA;EAElB,SAAAA,cAAa1F,OAAO,EAAG;IAAAnnJ,eAAA,OAAA6sJ,aAAA;IAAA,OAAAE,SAAA,CAAAzxJ,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAAosJ,aAAA;IAAArsJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMz+H,OAAO,GAAG,IAAIzF,OAAO,CAAC,CAAC;MAE7B,IAAMglI,MAAM,GAAG,IAAIkF,WAAW,CAAE,IAAI,CAAC5E,OAAQ,CAAC;MAC9CN,MAAM,CAACc,cAAc,CAAE,IAAI,CAACP,WAAY,CAAC;MACzCP,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAE3BwrE,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAW3B,KAAK,EAAG;QAEpC2H,OAAO,CAAC3H,KAAK,GAAGA,KAAK;QACrB2H,OAAO,CAACrD,WAAW,GAAG,IAAI;QAE1B,IAAK4hI,MAAM,KAAK3kJ,SAAS,EAAG;UAE3B2kJ,MAAM,CAAEv+H,OAAQ,CAAC;QAElB;MAED,CAAC,EAAEw+H,UAAU,EAAEC,OAAQ,CAAC;MAExB,OAAOz+H,OAAO;IAEf;EAAC;EAAA,OAAAulI,aAAA;AAAA,EA/B0B3F,MAAM;AAAA,IAmC5B8F,KAAK,GAAA1rJ,OAAA,CAAA0rJ,KAAA,0BAAAC,WAAA;EAAAlrI,SAAA,CAAAirI,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAjrI,YAAA,CAAA+qI,KAAA;EAEV,SAAAA,MAAajvI,KAAK,EAAE8yE,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAs8D,OAAA;IAAAntJ,eAAA,OAAAgtJ,KAAA;IAEnCG,OAAA,GAAAD,SAAA,CAAA5xJ,IAAA;IAEA6xJ,OAAA,CAAKxpH,OAAO,GAAG,IAAI;IAEnBwpH,OAAA,CAAK/xJ,IAAI,GAAG,OAAO;IAEnB+xJ,OAAA,CAAKpvI,KAAK,GAAG,IAAIk0B,KAAK,CAAEl0B,KAAM,CAAC;IAC/BovI,OAAA,CAAKt8D,SAAS,GAAGA,SAAS;IAAC,OAAAs8D,OAAA;EAE5B;EAAC1sJ,YAAA,CAAAusJ,KAAA;IAAAxsJ,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;;MAET;IAAA;EAEA;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAw4G,KAAA,CAAApzJ,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACtpB,KAAK,CAACnJ,IAAI,CAAEmO,MAAM,CAAChF,KAAM,CAAC;MAC/B,IAAI,CAAC8yE,SAAS,GAAG9tE,MAAM,CAAC8tE,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAArwF,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAw4G,KAAA,CAAApzJ,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAAC4R,MAAM,CAACzU,KAAK,GAAG,IAAI,CAACA,KAAK,CAACuvB,MAAM,CAAC,CAAC;MACvC1sB,IAAI,CAAC4R,MAAM,CAACq+D,SAAS,GAAG,IAAI,CAACA,SAAS;MAEtC,IAAK,IAAI,CAACzzB,WAAW,KAAKl8D,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAAC4qC,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC9vB,MAAM,CAAC,CAAC;MAEzF,IAAK,IAAI,CAAClK,QAAQ,KAAKliC,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAAC4Q,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACvE,IAAK,IAAI,CAAC9sB,KAAK,KAAKpV,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAAClc,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAACimD,KAAK,KAAKr7D,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAAC+pC,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAACi1B,QAAQ,KAAKtwF,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAACg/D,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvE,IAAK,IAAI,CAAC3yB,MAAM,KAAK39D,SAAS,EAAG0f,IAAI,CAAC4R,MAAM,CAACqsC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC59C,MAAM,CAAC,CAAC;MAE1E,OAAOL,IAAI;IAEZ;EAAC;EAAA,OAAAosI,KAAA;AAAA,EAlDkB9rH,QAAQ;AAAA,IAsDtBksH,eAAe,GAAA9rJ,OAAA,CAAA8rJ,eAAA,0BAAAC,MAAA;EAAAtrI,SAAA,CAAAqrI,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAArrI,YAAA,CAAAmrI,eAAA;EAEpB,SAAAA,gBAAajwF,QAAQ,EAAEC,WAAW,EAAEyzB,SAAS,EAAG;IAAA,IAAA08D,OAAA;IAAAvtJ,eAAA,OAAAotJ,eAAA;IAE/CG,OAAA,GAAAD,SAAA,CAAAhyJ,IAAA,OAAO6hE,QAAQ,EAAE0zB,SAAS;IAE1B08D,OAAA,CAAK37D,iBAAiB,GAAG,IAAI;IAE7B27D,OAAA,CAAKnyJ,IAAI,GAAG,iBAAiB;IAE7BmyJ,OAAA,CAAK75H,QAAQ,CAAC9e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzC+rH,OAAA,CAAK1pI,YAAY,CAAC,CAAC;IAEnB0pI,OAAA,CAAKnwF,WAAW,GAAG,IAAInrB,KAAK,CAAEmrB,WAAY,CAAC;IAAC,OAAAmwF,OAAA;EAE7C;EAAC9sJ,YAAA,CAAA2sJ,eAAA;IAAA5sJ,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA44G,eAAA,CAAAxzJ,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAAC+1B,WAAW,CAACxoD,IAAI,CAAEmO,MAAM,CAACq6C,WAAY,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAgwF,eAAA;AAAA,EAzB4BJ,KAAK;AA6BnC,IAAMQ,mBAAmB,GAAG,aAAc,IAAI1zH,OAAO,CAAC,CAAC;AACvD,IAAM2zH,qBAAqB,GAAG,aAAc,IAAIp/H,OAAO,CAAC,CAAC;AACzD,IAAMq/H,aAAa,GAAG,aAAc,IAAIr/H,OAAO,CAAC,CAAC;AAAC,IAE5Cs/H,WAAW;EAEhB,SAAAA,YAAap+H,MAAM,EAAG;IAAAvvB,eAAA,OAAA2tJ,WAAA;IAErB,IAAI,CAACp+H,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAAC6hE,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACvgE,MAAM,GAAG,CAAC;IACf,IAAI,CAACklE,WAAW,GAAG,CAAC;IAEpB,IAAI,CAAC1E,OAAO,GAAG,IAAIr9E,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IAEtC,IAAI,CAAC86B,GAAG,GAAG,IAAI;IACf,IAAI,CAACknD,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC15E,MAAM,GAAG,IAAIud,OAAO,CAAC,CAAC;IAE3B,IAAI,CAAC86D,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC3wE,WAAW,GAAG,KAAK;IAExB,IAAI,CAAC2vE,QAAQ,GAAG,IAAIvpC,OAAO,CAAC,CAAC;IAC7B,IAAI,CAACujG,aAAa,GAAG,IAAI35I,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAExC,IAAI,CAAC45I,cAAc,GAAG,CAAC;IAEvB,IAAI,CAACC,UAAU,GAAG,CAEjB,IAAIrpI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAEzB;EAEF;EAAChkB,YAAA,CAAAktJ,WAAA;IAAAntJ,GAAA;IAAAvG,KAAA,EAED,SAAAw7F,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACo4D,cAAc;IAE3B;EAAC;IAAArtJ,GAAA;IAAAvG,KAAA,EAED,SAAA27F,WAAA,EAAa;MAEZ,OAAO,IAAI,CAAChC,QAAQ;IAErB;EAAC;IAAApzF,GAAA;IAAAvG,KAAA,EAED,SAAAw3F,eAAgB3C,KAAK,EAAG;MAEvB,IAAM6H,YAAY,GAAG,IAAI,CAACpnE,MAAM;MAChC,IAAMw+H,YAAY,GAAG,IAAI,CAACxxI,MAAM;MAEhCkxI,qBAAqB,CAACt8H,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;MAChE+mE,YAAY,CAACjjE,QAAQ,CAAC9e,IAAI,CAAE64I,qBAAsB,CAAC;MAEnDC,aAAa,CAACv8H,qBAAqB,CAAE29D,KAAK,CAAC1uF,MAAM,CAACwvB,WAAY,CAAC;MAC/D+mE,YAAY,CAACt/D,MAAM,CAAEq2H,aAAc,CAAC;MACpC/2D,YAAY,CAACvxD,iBAAiB,CAAC,CAAC;MAEhCooH,mBAAmB,CAACl0I,gBAAgB,CAAEq9E,YAAY,CAAClnE,gBAAgB,EAAEknE,YAAY,CAACnnE,kBAAmB,CAAC;MACtG,IAAI,CAACokE,QAAQ,CAAClpC,uBAAuB,CAAE8iG,mBAAoB,CAAC;MAE5DO,YAAY,CAAC56I,GAAG,CACf,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAChB,CAAC;MAED46I,YAAY,CAAC34I,QAAQ,CAAEo4I,mBAAoB,CAAC;IAE7C;EAAC;IAAAhtJ,GAAA;IAAAvG,KAAA,EAED,SAAA07F,YAAaq4D,aAAa,EAAG;MAE5B,OAAO,IAAI,CAACF,UAAU,CAAEE,aAAa,CAAE;IAExC;EAAC;IAAAxtJ,GAAA;IAAAvG,KAAA,EAED,SAAAq7F,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACs4D,aAAa;IAE1B;EAAC;IAAAptJ,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAK,IAAI,CAAC0qB,GAAG,EAAG;QAEf,IAAI,CAACA,GAAG,CAAC1qB,OAAO,CAAC,CAAC;MAEnB;MAEA,IAAK,IAAI,CAAC4xE,OAAO,EAAG;QAEnB,IAAI,CAACA,OAAO,CAAC5xE,OAAO,CAAC,CAAC;MAEvB;IAED;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACwM,MAAM,GAAGxM,MAAM,CAACwM,MAAM,CAAC5a,KAAK,CAAC,CAAC;MAEnC,IAAI,CAACy8E,IAAI,GAAGruE,MAAM,CAACquE,IAAI;MACvB,IAAI,CAACtgE,MAAM,GAAG/N,MAAM,CAAC+N,MAAM;MAE3B,IAAI,CAACwgE,OAAO,CAAC18E,IAAI,CAAEmO,MAAM,CAACuuE,OAAQ,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAA9wF,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAMuR,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAK,IAAI,CAAC4+D,IAAI,KAAK,CAAC,EAAG5+D,MAAM,CAAC4+D,IAAI,GAAG,IAAI,CAACA,IAAI;MAC9C,IAAK,IAAI,CAACC,UAAU,KAAK,CAAC,EAAG7+D,MAAM,CAAC6+D,UAAU,GAAG,IAAI,CAACA,UAAU;MAChE,IAAK,IAAI,CAACvgE,MAAM,KAAK,CAAC,EAAG0B,MAAM,CAAC1B,MAAM,GAAG,IAAI,CAACA,MAAM;MACpD,IAAK,IAAI,CAACwgE,OAAO,CAACphF,CAAC,KAAK,GAAG,IAAI,IAAI,CAACohF,OAAO,CAAC31F,CAAC,KAAK,GAAG,EAAG62B,MAAM,CAAC8+D,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC75E,OAAO,CAAC,CAAC;MAE/F+a,MAAM,CAACjD,MAAM,GAAG,IAAI,CAACA,MAAM,CAACtO,MAAM,CAAE,KAAM,CAAC,CAACuR,MAAM;MAClD,OAAOA,MAAM,CAACjD,MAAM,CAAChT,MAAM;MAE3B,OAAOiW,MAAM;IAEd;EAAC;EAAA,OAAAm7H,WAAA;AAAA;AAAA,IAIIM,eAAe,0BAAAC,YAAA;EAAAnsI,SAAA,CAAAksI,eAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAlsI,YAAA,CAAAgsI,eAAA;EAEpB,SAAAA,gBAAA,EAAc;IAAA,IAAAG,OAAA;IAAApuJ,eAAA,OAAAiuJ,eAAA;IAEbG,OAAA,GAAAD,SAAA,CAAA7yJ,IAAA,OAAO,IAAI6oD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAE/CiqG,OAAA,CAAKC,iBAAiB,GAAG,IAAI;IAE7BD,OAAA,CAAKzpG,KAAK,GAAG,CAAC;IAAC,OAAAypG,OAAA;EAEhB;EAAC3tJ,YAAA,CAAAwtJ,eAAA;IAAAztJ,GAAA;IAAAvG,KAAA,EAED,SAAAw3F,eAAgB3C,KAAK,EAAG;MAEvB,IAAMv/D,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAM+0B,GAAG,GAAGn1C,OAAO,GAAG,CAAC,GAAG2/E,KAAK,CAACx4E,KAAK,GAAG,IAAI,CAACquC,KAAK;MAClD,IAAMJ,MAAM,GAAG,IAAI,CAAC+sC,OAAO,CAACvxE,KAAK,GAAG,IAAI,CAACuxE,OAAO,CAACtxE,MAAM;MACvD,IAAM4e,GAAG,GAAGkwD,KAAK,CAAC1rD,QAAQ,IAAI7T,MAAM,CAACqP,GAAG;MAExC,IAAK0lB,GAAG,KAAK/0B,MAAM,CAAC+0B,GAAG,IAAIC,MAAM,KAAKh1B,MAAM,CAACg1B,MAAM,IAAI3lB,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;QAE3ErP,MAAM,CAAC+0B,GAAG,GAAGA,GAAG;QAChB/0B,MAAM,CAACg1B,MAAM,GAAGA,MAAM;QACtBh1B,MAAM,CAACqP,GAAG,GAAGA,GAAG;QAChBrP,MAAM,CAACw1B,sBAAsB,CAAC,CAAC;MAEhC;MAEAxQ,IAAA,CAAAC,eAAA,CAAAy5G,eAAA,CAAAr0J,SAAA,2BAAA0B,IAAA,OAAsBwzF,KAAK;IAE5B;EAAC;IAAAtuF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAy5G,eAAA,CAAAr0J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC4hC,KAAK,GAAG5hC,MAAM,CAAC4hC,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAspG,eAAA;AAAA,EAzC4BN,WAAW;AAAA,IA6CnCW,SAAS,GAAAhtJ,OAAA,CAAAgtJ,SAAA,0BAAAC,OAAA;EAAAxsI,SAAA,CAAAusI,SAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAvsI,YAAA,CAAAqsI,SAAA;EAEd,SAAAA,UAAavwI,KAAK,EAAE8yE,SAAS,EAAEztD,QAAQ,GAAG,CAAC,EAAE9sB,KAAK,GAAGrH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEsiF,QAAQ,GAAG,CAAC,EAAEj1B,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAkyF,QAAA;IAAAzuJ,eAAA,OAAAsuJ,SAAA;IAE3FG,QAAA,GAAAD,SAAA,CAAAlzJ,IAAA,OAAOyiB,KAAK,EAAE8yE,SAAS;IAEvB49D,QAAA,CAAKl9D,WAAW,GAAG,IAAI;IAEvBk9D,QAAA,CAAKrzJ,IAAI,GAAG,WAAW;IAEvBqzJ,QAAA,CAAK/6H,QAAQ,CAAC9e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzCitH,QAAA,CAAK5qI,YAAY,CAAC,CAAC;IAEnB4qI,QAAA,CAAKruJ,MAAM,GAAG,IAAI8gC,QAAQ,CAAC,CAAC;IAE5ButH,QAAA,CAAKrrH,QAAQ,GAAGA,QAAQ;IACxBqrH,QAAA,CAAKn4I,KAAK,GAAGA,KAAK;IAClBm4I,QAAA,CAAKj9D,QAAQ,GAAGA,QAAQ;IACxBi9D,QAAA,CAAKlyF,KAAK,GAAGA,KAAK;IAElBkyF,QAAA,CAAK1/G,GAAG,GAAG,IAAI;IAEf0/G,QAAA,CAAK5vF,MAAM,GAAG,IAAIovF,eAAe,CAAC,CAAC;IAAC,OAAAQ,QAAA;EAErC;EAAChuJ,YAAA,CAAA6tJ,SAAA;IAAA9tJ,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAACy8E,SAAS,GAAG5hF,IAAI,CAACC,EAAE;IAEhC,CAAC;IAAAiE,GAAA,EAED,SAAAA,IAAWu7I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC79D,SAAS,GAAG69D,KAAK,GAAGz/I,IAAI,CAACC,EAAE;IAEjC;EAAC;IAAA1O,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACw6C,MAAM,CAACx6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA85G,SAAA,CAAA10J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACjE,QAAQ,GAAGrgB,MAAM,CAACqgB,QAAQ;MAC/B,IAAI,CAAC9sB,KAAK,GAAGyM,MAAM,CAACzM,KAAK;MACzB,IAAI,CAACk7E,QAAQ,GAAGzuE,MAAM,CAACyuE,QAAQ;MAC/B,IAAI,CAACj1B,KAAK,GAAGx5C,MAAM,CAACw5C,KAAK;MAEzB,IAAI,CAACn8D,MAAM,GAAG2iB,MAAM,CAAC3iB,MAAM,CAACuU,KAAK,CAAC,CAAC;MAEnC,IAAI,CAACkqD,MAAM,GAAG97C,MAAM,CAAC87C,MAAM,CAAClqD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA25I,SAAA;AAAA,EA9DsBtB,KAAK;AAkE7B,IAAMrrC,iBAAiB,GAAG,aAAc,IAAI7nF,OAAO,CAAC,CAAC;AACrD,IAAM60H,mBAAmB,GAAG,aAAc,IAAItgI,OAAO,CAAC,CAAC;AACvD,IAAMugI,WAAW,GAAG,aAAc,IAAIvgI,OAAO,CAAC,CAAC;AAAC,IAE1CwgI,gBAAgB,0BAAAC,aAAA;EAAA/sI,SAAA,CAAA8sI,gBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA9sI,YAAA,CAAA4sI,gBAAA;EAErB,SAAAA,iBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAhvJ,eAAA,OAAA6uJ,gBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAzzJ,IAAA,OAAO,IAAI6oD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAE/C6qG,QAAA,CAAKl5D,kBAAkB,GAAG,IAAI;IAE9Bk5D,QAAA,CAAKpB,aAAa,GAAG,IAAI35I,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAExC+6I,QAAA,CAAKnB,cAAc,GAAG,CAAC;IAEvBmB,QAAA,CAAKlB,UAAU,GAAG;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,IAAIrpI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CACzB;IAEDuqI,QAAA,CAAKC,eAAe,GAAG,CACtB,IAAI5gI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACxE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAC1E;IAED2gI,QAAA,CAAKE,QAAQ,GAAG,CACf,IAAI7gI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACtE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CACxE;IAAC,OAAA2gI,QAAA;EAEH;EAACvuJ,YAAA,CAAAouJ,gBAAA;IAAAruJ,GAAA;IAAAvG,KAAA,EAED,SAAAw3F,eAAgB3C,KAAK,EAAEk/D,aAAa,GAAG,CAAC,EAAG;MAE1C,IAAMz+H,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMw+H,YAAY,GAAG,IAAI,CAACxxI,MAAM;MAEhC,IAAMqiB,GAAG,GAAGkwD,KAAK,CAAC1rD,QAAQ,IAAI7T,MAAM,CAACqP,GAAG;MAExC,IAAKA,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;QAEzBrP,MAAM,CAACqP,GAAG,GAAGA,GAAG;QAChBrP,MAAM,CAACw1B,sBAAsB,CAAC,CAAC;MAEhC;MAEA4pG,mBAAmB,CAACx9H,qBAAqB,CAAE29D,KAAK,CAACl/D,WAAY,CAAC;MAC9DL,MAAM,CAACmE,QAAQ,CAAC9e,IAAI,CAAE+5I,mBAAoB,CAAC;MAE3CC,WAAW,CAACh6I,IAAI,CAAE2a,MAAM,CAACmE,QAAS,CAAC;MACnCk7H,WAAW,CAAC/5I,GAAG,CAAE,IAAI,CAACo6I,eAAe,CAAEjB,aAAa,CAAG,CAAC;MACxDz+H,MAAM,CAACwM,EAAE,CAACnnB,IAAI,CAAE,IAAI,CAACs6I,QAAQ,CAAElB,aAAa,CAAG,CAAC;MAChDz+H,MAAM,CAAC8H,MAAM,CAAEu3H,WAAY,CAAC;MAC5Br/H,MAAM,CAAC6V,iBAAiB,CAAC,CAAC;MAE1B2oH,YAAY,CAACzxI,eAAe,CAAE,CAAEqyI,mBAAmB,CAACz+I,CAAC,EAAE,CAAEy+I,mBAAmB,CAAChzJ,CAAC,EAAE,CAAEgzJ,mBAAmB,CAAChqI,CAAE,CAAC;MAEzGg9F,iBAAiB,CAACroG,gBAAgB,CAAEiW,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAmB,CAAC;MACxF,IAAI,CAACokE,QAAQ,CAAClpC,uBAAuB,CAAEi3D,iBAAkB,CAAC;IAE3D;EAAC;EAAA,OAAAktC,gBAAA;AAAA,EAhF6BlB,WAAW;AAAA,IAoFpCwB,UAAU,GAAA7tJ,OAAA,CAAA6tJ,UAAA,0BAAAC,OAAA;EAAArtI,SAAA,CAAAotI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAptI,YAAA,CAAAktI,UAAA;EAEf,SAAAA,WAAapxI,KAAK,EAAE8yE,SAAS,EAAEztD,QAAQ,GAAG,CAAC,EAAEm5B,KAAK,GAAG,CAAC,EAAG;IAAA,IAAA+yF,QAAA;IAAAtvJ,eAAA,OAAAmvJ,UAAA;IAExDG,QAAA,GAAAD,SAAA,CAAA/zJ,IAAA,OAAOyiB,KAAK,EAAE8yE,SAAS;IAEvBy+D,QAAA,CAAK39D,YAAY,GAAG,IAAI;IAExB29D,QAAA,CAAKl0J,IAAI,GAAG,YAAY;IAExBk0J,QAAA,CAAKlsH,QAAQ,GAAGA,QAAQ;IACxBksH,QAAA,CAAK/yF,KAAK,GAAGA,KAAK;IAElB+yF,QAAA,CAAKzwF,MAAM,GAAG,IAAIgwF,gBAAgB,CAAC,CAAC;IAAC,OAAAS,QAAA;EAEtC;EAAC7uJ,YAAA,CAAA0uJ,UAAA;IAAA3uJ,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAACy8E,SAAS,GAAG,CAAC,GAAG5hF,IAAI,CAACC,EAAE;IAEpC,CAAC;IAAAiE,GAAA,EAED,SAAAA,IAAWu7I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC79D,SAAS,GAAG69D,KAAK,IAAK,CAAC,GAAGz/I,IAAI,CAACC,EAAE,CAAE;IAEzC;EAAC;IAAA1O,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACw6C,MAAM,CAACx6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA26G,UAAA,CAAAv1J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAACjE,QAAQ,GAAGrgB,MAAM,CAACqgB,QAAQ;MAC/B,IAAI,CAACm5B,KAAK,GAAGx5C,MAAM,CAACw5C,KAAK;MAEzB,IAAI,CAACsC,MAAM,GAAG97C,MAAM,CAAC87C,MAAM,CAAClqD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAw6I,UAAA;AAAA,EAjDuBnC,KAAK;AAAA,IAqDxBuC,sBAAsB,0BAAAC,aAAA;EAAAztI,SAAA,CAAAwtI,sBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAxtI,YAAA,CAAAstI,sBAAA;EAE3B,SAAAA,uBAAA,EAAc;IAAA,IAAAG,QAAA;IAAA1vJ,eAAA,OAAAuvJ,sBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAn0J,IAAA,OAAO,IAAIovE,kBAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAEzDglF,QAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,QAAA;EAEtC;EAAC,OAAAjvJ,YAAA,CAAA8uJ,sBAAA;AAAA,EARmC5B,WAAW;AAAA,IAY1CiC,gBAAgB,GAAAtuJ,OAAA,CAAAsuJ,gBAAA,0BAAAC,OAAA;EAAA9tI,SAAA,CAAA6tI,gBAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAA7tI,YAAA,CAAA2tI,gBAAA;EAErB,SAAAA,iBAAa7xI,KAAK,EAAE8yE,SAAS,EAAG;IAAA,IAAAk/D,QAAA;IAAA/vJ,eAAA,OAAA4vJ,gBAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAAx0J,IAAA,OAAOyiB,KAAK,EAAE8yE,SAAS;IAEvBk/D,QAAA,CAAK7+D,kBAAkB,GAAG,IAAI;IAE9B6+D,QAAA,CAAK30J,IAAI,GAAG,kBAAkB;IAE9B20J,QAAA,CAAKr8H,QAAQ,CAAC9e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzCuuH,QAAA,CAAKlsI,YAAY,CAAC,CAAC;IAEnBksI,QAAA,CAAK3vJ,MAAM,GAAG,IAAI8gC,QAAQ,CAAC,CAAC;IAE5B6uH,QAAA,CAAKlxF,MAAM,GAAG,IAAI0wF,sBAAsB,CAAC,CAAC;IAAC,OAAAQ,QAAA;EAE5C;EAACtvJ,YAAA,CAAAmvJ,gBAAA;IAAApvJ,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACw6C,MAAM,CAACx6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAo7G,gBAAA,CAAAh2J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC3iB,MAAM,GAAG2iB,MAAM,CAAC3iB,MAAM,CAACuU,KAAK,CAAC,CAAC;MACnC,IAAI,CAACkqD,MAAM,GAAG97C,MAAM,CAAC87C,MAAM,CAAClqD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAi7I,gBAAA;AAAA,EAlC6B5C,KAAK;AAAA,IAsC9BgD,YAAY,GAAA1uJ,OAAA,CAAA0uJ,YAAA,0BAAAC,OAAA;EAAAluI,SAAA,CAAAiuI,YAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAjuI,YAAA,CAAA+tI,YAAA;EAEjB,SAAAA,aAAajyI,KAAK,EAAE8yE,SAAS,EAAG;IAAA,IAAAs/D,QAAA;IAAAnwJ,eAAA,OAAAgwJ,YAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAA50J,IAAA,OAAOyiB,KAAK,EAAE8yE,SAAS;IAEvBs/D,QAAA,CAAKr/D,cAAc,GAAG,IAAI;IAE1Bq/D,QAAA,CAAK/0J,IAAI,GAAG,cAAc;IAAC,OAAA+0J,QAAA;EAE5B;EAAC,OAAA1vJ,YAAA,CAAAuvJ,YAAA;AAAA,EAVyBhD,KAAK;AAAA,IAc1BoD,aAAa,GAAA9uJ,OAAA,CAAA8uJ,aAAA,0BAAAC,OAAA;EAAAtuI,SAAA,CAAAquI,aAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAruI,YAAA,CAAAmuI,aAAA;EAElB,SAAAA,cAAaryI,KAAK,EAAE8yE,SAAS,EAAE9wE,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAuwI,QAAA;IAAAvwJ,eAAA,OAAAowJ,aAAA;IAExDG,QAAA,GAAAD,SAAA,CAAAh1J,IAAA,OAAOyiB,KAAK,EAAE8yE,SAAS;IAEvB0/D,QAAA,CAAK7+D,eAAe,GAAG,IAAI;IAE3B6+D,QAAA,CAAKn1J,IAAI,GAAG,eAAe;IAE3Bm1J,QAAA,CAAKxwI,KAAK,GAAGA,KAAK;IAClBwwI,QAAA,CAAKvwI,MAAM,GAAGA,MAAM;IAAC,OAAAuwI,QAAA;EAEtB;EAAC9vJ,YAAA,CAAA2vJ,aAAA;IAAA5vJ,GAAA;IAAA4T,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA,OAAO,IAAI,CAACy8E,SAAS,GAAG,IAAI,CAAC9wE,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG/Q,IAAI,CAACC,EAAE;IAE3D,CAAC;IAAAiE,GAAA,EAED,SAAAA,IAAWu7I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC79D,SAAS,GAAG69D,KAAK,IAAK,IAAI,CAAC3uI,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG/Q,IAAI,CAACC,EAAE,CAAE;IAEhE;EAAC;IAAA1O,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA47G,aAAA,CAAAx2J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAChD,KAAK,GAAGgD,MAAM,CAAChD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG+C,MAAM,CAAC/C,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAxf,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA47G,aAAA,CAAAx2J,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAAC4R,MAAM,CAACzS,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9Ba,IAAI,CAAC4R,MAAM,CAACxS,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,OAAOY,IAAI;IAEZ;EAAC;EAAA,OAAAwvI,aAAA;AAAA,EAjD0BpD,KAAK;AAqDjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,IAEMwD,mBAAmB,GAAAlvJ,OAAA,CAAAkvJ,mBAAA;EAExB,SAAAA,oBAAA,EAAc;IAAAxwJ,eAAA,OAAAwwJ,mBAAA;IAEb,IAAI,CAACC,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAACx/D,YAAY,GAAG,EAAE;IAEtB,KAAM,IAAI/2F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MAE9B,IAAI,CAAC+2F,YAAY,CAAC/yF,IAAI,CAAE,IAAImwB,OAAO,CAAC,CAAE,CAAC;IAExC;EAED;EAAC5tB,YAAA,CAAA+vJ,mBAAA;IAAAhwJ,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK89E,YAAY,EAAG;MAEnB,KAAM,IAAI/2F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAAC0a,IAAI,CAAEq8E,YAAY,CAAE/2F,CAAC,CAAG,CAAC;MAEjD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAy2J,KAAA,EAAO;MAEN,KAAM,IAAIx2J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACiZ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtC;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAA3S,GAAA;IAAAvG,KAAA,EACA,SAAA02J,MAAOjgI,MAAM,EAAEtwB,MAAM,EAAG;MAEvB;;MAEA,IAAM8P,CAAC,GAAGwgB,MAAM,CAACxgB,CAAC;QAAEvU,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC;QAAEgpB,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;MAE9C,IAAMisI,KAAK,GAAG,IAAI,CAAC3/D,YAAY;;MAE/B;MACA7wF,MAAM,CAACwU,IAAI,CAAEg8I,KAAK,CAAE,CAAC,CAAG,CAAC,CAACv7I,cAAc,CAAE,QAAS,CAAC;;MAEpD;MACAjV,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGj1J,CAAE,CAAC;MAClDyE,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGjsI,CAAE,CAAC;MAClDvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG1gJ,CAAE,CAAC;;MAElD;MACA9P,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1gJ,CAAC,GAAGvU,CAAC,CAAG,CAAC;MAC1DyE,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKj1J,CAAC,GAAGgpB,CAAC,CAAG,CAAC;MAC1DvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK,GAAG,GAAGjsI,CAAC,GAAGA,CAAC,GAAG,GAAG,CAAG,CAAC;MACtEvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1gJ,CAAC,GAAGyU,CAAC,CAAG,CAAC;MAC1DvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1gJ,CAAC,GAAGA,CAAC,GAAGvU,CAAC,GAAGA,CAAC,CAAG,CAAC;MAElE,OAAOyE,MAAM;IAEd;;IAEA;IACA;IACA;EAAA;IAAAI,GAAA;IAAAvG,KAAA,EACA,SAAA42J,gBAAiBngI,MAAM,EAAEtwB,MAAM,EAAG;MAEjC;;MAEA,IAAM8P,CAAC,GAAGwgB,MAAM,CAACxgB,CAAC;QAAEvU,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC;QAAEgpB,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;MAE9C,IAAMisI,KAAK,GAAG,IAAI,CAAC3/D,YAAY;;MAE/B;MACA7wF,MAAM,CAACwU,IAAI,CAAEg8I,KAAK,CAAE,CAAC,CAAG,CAAC,CAACv7I,cAAc,CAAE,QAAS,CAAC,CAAC,CAAC;;MAEtD;MACAjV,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGj1J,CAAE,CAAC,CAAC,CAAC;MAC1DyE,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGjsI,CAAE,CAAC;MACxDvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1gJ,CAAE,CAAC;;MAExD;MACA9P,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1gJ,CAAC,GAAGvU,CAAE,CAAC,CAAC,CAAC;MAC9DyE,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGj1J,CAAC,GAAGgpB,CAAE,CAAC;MAC5DvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGjsI,CAAC,GAAGA,CAAC,GAAG,QAAS,CAAC,CAAC,CAAC;MACnEvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1gJ,CAAC,GAAGyU,CAAE,CAAC;MAC5DvkB,MAAM,CAAC4U,eAAe,CAAE47I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1gJ,CAAC,GAAGA,CAAC,GAAGvU,CAAC,GAAGA,CAAC,CAAG,CAAC,CAAC,CAAC;;MAEpE,OAAOyE,MAAM;IAEd;EAAC;IAAAI,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAKm8E,EAAE,EAAG;MAET,KAAM,IAAI92F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAAC2a,GAAG,CAAEm8E,EAAE,CAACC,YAAY,CAAE/2F,CAAC,CAAG,CAAC;MAEnD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAA62J,YAAa9/D,EAAE,EAAEt1F,CAAC,EAAG;MAEpB,KAAM,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAAC8a,eAAe,CAAEg8E,EAAE,CAACC,YAAY,CAAE/2F,CAAC,CAAE,EAAEwB,CAAE,CAAC;MAElE;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAA+hB,MAAOtgB,CAAC,EAAG;MAEV,KAAM,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACmb,cAAc,CAAE3Z,CAAE,CAAC;MAE3C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAuW,KAAMwgF,EAAE,EAAE95E,KAAK,EAAG;MAEjB,KAAM,IAAIhd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACsW,IAAI,CAAEwgF,EAAE,CAACC,YAAY,CAAE/2F,CAAC,CAAE,EAAEgd,KAAM,CAAC;MAE3D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQ05E,EAAE,EAAG;MAEZ,KAAM,IAAI92F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAE,IAAI,CAAC+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACod,MAAM,CAAE05E,EAAE,CAACC,YAAY,CAAE/2F,CAAC,CAAG,CAAC,EAAG;UAE9D,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMo8E,EAAE,EAAG;MAEV,OAAO,IAAI,CAAC79E,GAAG,CAAE69E,EAAE,CAACC,YAAa,CAAC;IAEnC;EAAC;IAAAzwF,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAAsd,UAAW1I,KAAK,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAMy5E,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAI/2F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACqd,SAAS,CAAE1I,KAAK,EAAE2I,MAAM,GAAKtd,CAAC,GAAG,CAAI,CAAC;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAwd,QAAS5I,KAAK,GAAG,EAAE,EAAE2I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMy5E,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAI/2F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B+2F,YAAY,CAAE/2F,CAAC,CAAE,CAACud,OAAO,CAAE5I,KAAK,EAAE2I,MAAM,GAAKtd,CAAC,GAAG,CAAI,CAAC;MAEvD;MAEA,OAAO2U,KAAK;IAEb;;IAEA;IACA;EAAA;IAAArO,GAAA;IAAAvG,KAAA,EACA,SAAA82J,WAAmBrgI,MAAM,EAAEsgI,OAAO,EAAG;MAEpC;;MAEA,IAAM9gJ,CAAC,GAAGwgB,MAAM,CAACxgB,CAAC;QAAEvU,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC;QAAEgpB,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;;MAE9C;MACAqsI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ;;MAEvB;MACAA,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGr1J,CAAC;MAC3Bq1J,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGrsI,CAAC;MAC3BqsI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9gJ,CAAC;;MAE3B;MACA8gJ,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9gJ,CAAC,GAAGvU,CAAC;MAC/Bq1J,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGr1J,CAAC,GAAGgpB,CAAC;MAC/BqsI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK,CAAC,GAAGrsI,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAE;MAC3CqsI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9gJ,CAAC,GAAGyU,CAAC;MAC/BqsI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK9gJ,CAAC,GAAGA,CAAC,GAAGvU,CAAC,GAAGA,CAAC,CAAE;IAE5C;EAAC;EAAA,OAAA60J,mBAAA;AAAA;AAAA,IAIIS,UAAU,GAAA3vJ,OAAA,CAAA2vJ,UAAA,0BAAAC,OAAA;EAAAnvI,SAAA,CAAAkvI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAlvI,YAAA,CAAAgvI,UAAA;EAEf,SAAAA,WAAajgE,EAAE,GAAG,IAAIw/D,mBAAmB,CAAC,CAAC,EAAE3/D,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAugE,QAAA;IAAApxJ,eAAA,OAAAixJ,UAAA;IAE5DG,QAAA,GAAAD,SAAA,CAAA71J,IAAA,OAAO4F,SAAS,EAAE2vF,SAAS;IAE3BugE,QAAA,CAAKrgE,YAAY,GAAG,IAAI;IAExBqgE,QAAA,CAAKpgE,EAAE,GAAGA,EAAE;IAAC,OAAAogE,QAAA;EAEd;EAAC3wJ,YAAA,CAAAwwJ,UAAA;IAAAzwJ,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAy8G,UAAA,CAAAr3J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACiuE,EAAE,CAACp8E,IAAI,CAAEmO,MAAM,CAACiuE,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxwF,GAAA;IAAAvG,KAAA,EAED,SAAA0nD,SAAUuuE,IAAI,EAAG;MAEhB,IAAI,CAACr/B,SAAS,GAAGq/B,IAAI,CAACr/B,SAAS,CAAC,CAAC;MACjC,IAAI,CAACG,EAAE,CAACz5E,SAAS,CAAE24G,IAAI,CAACl/B,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAxwF,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAAy8G,UAAA,CAAAr3J,SAAA,mBAAA0B,IAAA,OAAiB4lB,IAAI,CAAE;MAEjCN,IAAI,CAAC4R,MAAM,CAACw+D,EAAE,GAAG,IAAI,CAACA,EAAE,CAACv5E,OAAO,CAAC,CAAC;MAElC,OAAOmJ,IAAI;IAEZ;EAAC;EAAA,OAAAqwI,UAAA;AAAA,EAvCuBjE,KAAK;AAAA,IA2CxBqE,cAAc,GAAA/vJ,OAAA,CAAA+vJ,cAAA,0BAAAC,QAAA;EAAAvvI,SAAA,CAAAsvI,cAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtvI,YAAA,CAAAovI,cAAA;EAEnB,SAAAA,eAAalK,OAAO,EAAG;IAAA,IAAAqK,QAAA;IAAAxxJ,eAAA,OAAAqxJ,cAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAAj2J,IAAA,OAAO6rJ,OAAO;IACdqK,QAAA,CAAKttI,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAAstI,QAAA;EAEpB;EAAC/wJ,YAAA,CAAA4wJ,cAAA;IAAA7wJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMomG,MAAM,GAAG,IAAI2B,UAAU,CAAE/nG,KAAK,CAAC0mG,OAAQ,CAAC;MAC9CN,MAAM,CAACgB,OAAO,CAAEpnG,KAAK,CAAC46B,IAAK,CAAC;MAC5BwrE,MAAM,CAACkB,gBAAgB,CAAEtnG,KAAK,CAAC8mG,aAAc,CAAC;MAC9CV,MAAM,CAACe,kBAAkB,CAAEnnG,KAAK,CAAC4mG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWmpI,IAAI,EAAG;QAEnC,IAAI;UAEH5E,MAAM,CAAEplG,KAAK,CAAC18B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0mI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQjxJ,CAAC,EAAG;UAEb,IAAKusJ,OAAO,EAAG;YAEdA,OAAO,CAAEvsJ,CAAE,CAAC;UAEb,CAAC,MAAM;YAEN4Z,OAAO,CAACywB,KAAK,CAAErqC,CAAE,CAAC;UAEnB;UAEAinD,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEwkI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAAvlJ,GAAA;IAAAvG,KAAA,EAED,SAAA8pB,MAAOmsG,IAAI,EAAG;MAEb,IAAMhsG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,SAASutI,UAAUA,CAAE9yJ,IAAI,EAAG;QAE3B,IAAKulB,QAAQ,CAAEvlB,IAAI,CAAE,KAAKuC,SAAS,EAAG;UAErCkS,OAAO,CAACC,IAAI,CAAE,yCAAyC,EAAE1U,IAAK,CAAC;QAEhE;QAEA,OAAOulB,QAAQ,CAAEvlB,IAAI,CAAE;MAExB;MAEA,IAAMqoC,QAAQ,GAAGqqH,cAAc,CAACK,sBAAsB,CAAExhC,IAAI,CAAC90H,IAAK,CAAC;MAEnE,IAAK80H,IAAI,CAACxgH,IAAI,KAAKxO,SAAS,EAAG8lC,QAAQ,CAACt3B,IAAI,GAAGwgH,IAAI,CAACxgH,IAAI;MACxD,IAAKwgH,IAAI,CAACvxH,IAAI,KAAKuC,SAAS,EAAG8lC,QAAQ,CAACroC,IAAI,GAAGuxH,IAAI,CAACvxH,IAAI;MACxD,IAAKuxH,IAAI,CAACnyG,KAAK,KAAK7c,SAAS,IAAI8lC,QAAQ,CAACjpB,KAAK,KAAK7c,SAAS,EAAG8lC,QAAQ,CAACjpB,KAAK,CAACo0B,MAAM,CAAE+9E,IAAI,CAACnyG,KAAM,CAAC;MACnG,IAAKmyG,IAAI,CAAC3iF,SAAS,KAAKrsC,SAAS,EAAG8lC,QAAQ,CAACuG,SAAS,GAAG2iF,IAAI,CAAC3iF,SAAS;MACvE,IAAK2iF,IAAI,CAAC1iF,SAAS,KAAKtsC,SAAS,EAAG8lC,QAAQ,CAACwG,SAAS,GAAG0iF,IAAI,CAAC1iF,SAAS;MACvE,IAAK0iF,IAAI,CAACziF,KAAK,KAAKvsC,SAAS,EAAG8lC,QAAQ,CAACyG,KAAK,GAAGyiF,IAAI,CAACziF,KAAK;MAC3D,IAAKyiF,IAAI,CAACxiF,UAAU,KAAKxsC,SAAS,EAAG8lC,QAAQ,CAAC0G,UAAU,GAAG,IAAIuE,KAAK,CAAC,CAAC,CAACE,MAAM,CAAE+9E,IAAI,CAACxiF,UAAW,CAAC;MAChG,IAAKwiF,IAAI,CAACviF,cAAc,KAAKzsC,SAAS,EAAG8lC,QAAQ,CAAC2G,cAAc,GAAGuiF,IAAI,CAACviF,cAAc;MACtF,IAAKuiF,IAAI,CAACtiF,QAAQ,KAAK1sC,SAAS,IAAI8lC,QAAQ,CAAC4G,QAAQ,KAAK1sC,SAAS,EAAG8lC,QAAQ,CAAC4G,QAAQ,CAACuE,MAAM,CAAE+9E,IAAI,CAACtiF,QAAS,CAAC;MAC/G,IAAKsiF,IAAI,CAACpiF,QAAQ,KAAK5sC,SAAS,IAAI8lC,QAAQ,CAAC8G,QAAQ,KAAK5sC,SAAS,EAAG8lC,QAAQ,CAAC8G,QAAQ,CAACqE,MAAM,CAAE+9E,IAAI,CAACpiF,QAAS,CAAC;MAC/G,IAAKoiF,IAAI,CAACniF,iBAAiB,KAAK7sC,SAAS,EAAG8lC,QAAQ,CAAC+G,iBAAiB,GAAGmiF,IAAI,CAACniF,iBAAiB;MAC/F,IAAKmiF,IAAI,CAACliF,aAAa,KAAK9sC,SAAS,IAAI8lC,QAAQ,CAACgH,aAAa,KAAK9sC,SAAS,EAAG8lC,QAAQ,CAACgH,aAAa,CAACmE,MAAM,CAAE+9E,IAAI,CAACliF,aAAc,CAAC;MACnI,IAAKkiF,IAAI,CAACjiF,SAAS,KAAK/sC,SAAS,EAAG8lC,QAAQ,CAACiH,SAAS,GAAGiiF,IAAI,CAACjiF,SAAS;MACvE,IAAKiiF,IAAI,CAAChiF,SAAS,KAAKhtC,SAAS,EAAG8lC,QAAQ,CAACkH,SAAS,GAAGgiF,IAAI,CAAChiF,SAAS;MACvE,IAAKgiF,IAAI,CAAC/hF,kBAAkB,KAAKjtC,SAAS,EAAG8lC,QAAQ,CAACmH,kBAAkB,GAAG+hF,IAAI,CAAC/hF,kBAAkB;MAClG,IAAK+hF,IAAI,CAAC1hF,WAAW,KAAKttC,SAAS,EAAG8lC,QAAQ,CAACwH,WAAW,GAAG0hF,IAAI,CAAC1hF,WAAW;MAC7E,IAAK0hF,IAAI,CAACzhF,cAAc,KAAKvtC,SAAS,EAAG8lC,QAAQ,CAACyH,cAAc,GAAGyhF,IAAI,CAACzhF,cAAc;MACtF,IAAKyhF,IAAI,CAACxhF,yBAAyB,KAAKxtC,SAAS,EAAG8lC,QAAQ,CAAC0H,yBAAyB,GAAGwhF,IAAI,CAACxhF,yBAAyB;MACvH,IAAKwhF,IAAI,CAACx/E,YAAY,KAAKxvC,SAAS,EAAG8lC,QAAQ,CAAC0J,YAAY,GAAGw/E,IAAI,CAACx/E,YAAY;MAChF,IAAKw/E,IAAI,CAACt/E,SAAS,KAAK1vC,SAAS,EAAG8lC,QAAQ,CAAC4J,SAAS,GAAGs/E,IAAI,CAACt/E,SAAS;MACvE,IAAKs/E,IAAI,CAACp/E,mBAAmB,KAAK5vC,SAAS,EAAG8lC,QAAQ,CAAC8J,mBAAmB,GAAGo/E,IAAI,CAACp/E,mBAAmB;MACrG,IAAKo/E,IAAI,CAACn/E,gBAAgB,KAAK7vC,SAAS,IAAI8lC,QAAQ,CAAC+J,gBAAgB,KAAK7vC,SAAS,EAAG8lC,QAAQ,CAAC+J,gBAAgB,CAACoB,MAAM,CAAE+9E,IAAI,CAACn/E,gBAAiB,CAAC;MAC/I,IAAKm/E,IAAI,CAACxtG,UAAU,KAAKxhB,SAAS,EAAG8lC,QAAQ,CAACtkB,UAAU,GAAGwtG,IAAI,CAACxtG,UAAU;MAC1E,IAAKwtG,IAAI,CAACrhF,kBAAkB,KAAK3tC,SAAS,EAAG8lC,QAAQ,CAAC6H,kBAAkB,GAAGqhF,IAAI,CAACrhF,kBAAkB;MAClG,IAAKqhF,IAAI,CAACx+E,GAAG,KAAKxwC,SAAS,EAAG8lC,QAAQ,CAAC0K,GAAG,GAAGw+E,IAAI,CAACx+E,GAAG;MACrD,IAAKw+E,IAAI,CAACz+E,WAAW,KAAKvwC,SAAS,EAAG8lC,QAAQ,CAACyK,WAAW,GAAGy+E,IAAI,CAACz+E,WAAW;MAC7E,IAAKy+E,IAAI,CAACzlF,QAAQ,KAAKvpC,SAAS,EAAG8lC,QAAQ,CAACyD,QAAQ,GAAGylF,IAAI,CAACzlF,QAAQ;MACpE,IAAKylF,IAAI,CAAC7/E,OAAO,KAAKnvC,SAAS,EAAG8lC,QAAQ,CAACqJ,OAAO,GAAG6/E,IAAI,CAAC7/E,OAAO;MACjE,IAAK6/E,IAAI,CAACxlF,IAAI,KAAKxpC,SAAS,EAAG8lC,QAAQ,CAAC0D,IAAI,GAAGwlF,IAAI,CAACxlF,IAAI;MACxD,IAAKwlF,IAAI,CAAC/jF,UAAU,KAAKjrC,SAAS,EAAG8lC,QAAQ,CAACmF,UAAU,GAAG+jF,IAAI,CAAC/jF,UAAU;MAC1E,IAAK+jF,IAAI,CAACtlF,OAAO,KAAK1pC,SAAS,EAAG8lC,QAAQ,CAAC4D,OAAO,GAAGslF,IAAI,CAACtlF,OAAO;MACjE,IAAKslF,IAAI,CAACrlF,WAAW,KAAK3pC,SAAS,EAAG8lC,QAAQ,CAAC6D,WAAW,GAAGqlF,IAAI,CAACrlF,WAAW;MAC7E,IAAKqlF,IAAI,CAAC9+E,SAAS,KAAKlwC,SAAS,EAAG8lC,QAAQ,CAACoK,SAAS,GAAG8+E,IAAI,CAAC9+E,SAAS;MACvE,IAAK8+E,IAAI,CAACplF,SAAS,KAAK5pC,SAAS,EAAG8lC,QAAQ,CAAC8D,SAAS,GAAGolF,IAAI,CAACplF,SAAS;MACvE,IAAKolF,IAAI,CAAC5kF,SAAS,KAAKpqC,SAAS,EAAG8lC,QAAQ,CAACsE,SAAS,GAAG4kF,IAAI,CAAC5kF,SAAS;MACvE,IAAK4kF,IAAI,CAAC3kF,UAAU,KAAKrqC,SAAS,EAAG8lC,QAAQ,CAACuE,UAAU,GAAG2kF,IAAI,CAAC3kF,UAAU;MAC1E,IAAK2kF,IAAI,CAAC9jF,UAAU,KAAKlrC,SAAS,EAAG8lC,QAAQ,CAACoF,UAAU,GAAG8jF,IAAI,CAAC9jF,UAAU;MAE1E,IAAK8jF,IAAI,CAACnkF,YAAY,KAAK7qC,SAAS,EAAG8lC,QAAQ,CAAC+E,YAAY,GAAGmkF,IAAI,CAACnkF,YAAY;MAChF,IAAKmkF,IAAI,CAAC1kF,gBAAgB,KAAKtqC,SAAS,EAAG8lC,QAAQ,CAACwE,gBAAgB,GAAG0kF,IAAI,CAAC1kF,gBAAgB;MAC5F,IAAK0kF,IAAI,CAACzkF,WAAW,KAAKvqC,SAAS,EAAG8lC,QAAQ,CAACyE,WAAW,GAAGykF,IAAI,CAACzkF,WAAW;MAC7E,IAAKykF,IAAI,CAACxkF,UAAU,KAAKxqC,SAAS,EAAG8lC,QAAQ,CAAC0E,UAAU,GAAGwkF,IAAI,CAACxkF,UAAU;MAC1E,IAAKwkF,IAAI,CAACvkF,eAAe,KAAKzqC,SAAS,EAAG8lC,QAAQ,CAAC2E,eAAe,GAAGukF,IAAI,CAACvkF,eAAe;MACzF,IAAKukF,IAAI,CAACtkF,WAAW,KAAK1qC,SAAS,EAAG8lC,QAAQ,CAAC4E,WAAW,GAAGskF,IAAI,CAACtkF,WAAW;MAC7E,IAAKskF,IAAI,CAACrkF,YAAY,KAAK3qC,SAAS,EAAG8lC,QAAQ,CAAC6E,YAAY,GAAGqkF,IAAI,CAACrkF,YAAY;MAChF,IAAKqkF,IAAI,CAACpkF,YAAY,KAAK5qC,SAAS,EAAG8lC,QAAQ,CAAC8E,YAAY,GAAGokF,IAAI,CAACpkF,YAAY;MAEhF,IAAKokF,IAAI,CAAC7+E,SAAS,KAAKnwC,SAAS,EAAG8lC,QAAQ,CAACqK,SAAS,GAAG6+E,IAAI,CAAC7+E,SAAS;MACvE,IAAK6+E,IAAI,CAAC5+E,kBAAkB,KAAKpwC,SAAS,EAAG8lC,QAAQ,CAACsK,kBAAkB,GAAG4+E,IAAI,CAAC5+E,kBAAkB;MAClG,IAAK4+E,IAAI,CAAC3+E,gBAAgB,KAAKrwC,SAAS,EAAG8lC,QAAQ,CAACuK,gBAAgB,GAAG2+E,IAAI,CAAC3+E,gBAAgB;MAC5F,IAAK2+E,IAAI,CAAC1+E,iBAAiB,KAAKtwC,SAAS,EAAG8lC,QAAQ,CAACwK,iBAAiB,GAAG0+E,IAAI,CAAC1+E,iBAAiB;MAE/F,IAAK0+E,IAAI,CAACr0G,QAAQ,KAAK3a,SAAS,EAAG8lC,QAAQ,CAACnrB,QAAQ,GAAGq0G,IAAI,CAACr0G,QAAQ;MAEpE,IAAKq0G,IAAI,CAACj/E,SAAS,KAAK/vC,SAAS,EAAG8lC,QAAQ,CAACiK,SAAS,GAAGi/E,IAAI,CAACj/E,SAAS;MACvE,IAAKi/E,IAAI,CAACh/E,QAAQ,KAAKhwC,SAAS,EAAG8lC,QAAQ,CAACkK,QAAQ,GAAGg/E,IAAI,CAACh/E,QAAQ;MACpE,IAAKg/E,IAAI,CAAC/+E,OAAO,KAAKjwC,SAAS,EAAG8lC,QAAQ,CAACmK,OAAO,GAAG++E,IAAI,CAAC/+E,OAAO;MACjE,IAAK++E,IAAI,CAACl0G,KAAK,KAAK9a,SAAS,EAAG8lC,QAAQ,CAAChrB,KAAK,GAAGk0G,IAAI,CAACl0G,KAAK;MAE3D,IAAKk0G,IAAI,CAAC5jF,aAAa,KAAKprC,SAAS,EAAG8lC,QAAQ,CAACsF,aAAa,GAAG4jF,IAAI,CAAC5jF,aAAa;MACnF,IAAK4jF,IAAI,CAAC3jF,mBAAmB,KAAKrrC,SAAS,EAAG8lC,QAAQ,CAACuF,mBAAmB,GAAG2jF,IAAI,CAAC3jF,mBAAmB;MACrG,IAAK2jF,IAAI,CAAC1jF,kBAAkB,KAAKtrC,SAAS,EAAG8lC,QAAQ,CAACwF,kBAAkB,GAAG0jF,IAAI,CAAC1jF,kBAAkB;MAElG,IAAK0jF,IAAI,CAACzjF,SAAS,KAAKvrC,SAAS,EAAG8lC,QAAQ,CAACyF,SAAS,GAAGyjF,IAAI,CAACzjF,SAAS;MAEvE,IAAKyjF,IAAI,CAACxjF,eAAe,KAAKxrC,SAAS,EAAG8lC,QAAQ,CAAC0F,eAAe,GAAGwjF,IAAI,CAACxjF,eAAe;MACzF,IAAKwjF,IAAI,CAACvjF,kBAAkB,KAAKzrC,SAAS,EAAG8lC,QAAQ,CAAC2F,kBAAkB,GAAGujF,IAAI,CAACvjF,kBAAkB;MAClG,IAAKujF,IAAI,CAACtjF,eAAe,KAAK1rC,SAAS,EAAG8lC,QAAQ,CAAC4F,eAAe,GAAGsjF,IAAI,CAACtjF,eAAe;MAEzF,IAAKsjF,IAAI,CAAChuF,OAAO,KAAKhhC,SAAS,EAAG8lC,QAAQ,CAAC9E,OAAO,GAAGguF,IAAI,CAAChuF,OAAO;MAEjE,IAAKguF,IAAI,CAACrjF,UAAU,KAAK3rC,SAAS,EAAG8lC,QAAQ,CAAC6F,UAAU,GAAGqjF,IAAI,CAACrjF,UAAU;MAE1E,IAAKqjF,IAAI,CAACzsG,QAAQ,KAAKviB,SAAS,EAAG8lC,QAAQ,CAACvjB,QAAQ,GAAGysG,IAAI,CAACzsG,QAAQ;MAEpE,IAAKysG,IAAI,CAACvlF,YAAY,KAAKzpC,SAAS,EAAG;QAEtC,IAAK,OAAOgvH,IAAI,CAACvlF,YAAY,KAAK,QAAQ,EAAG;UAE5C3D,QAAQ,CAAC2D,YAAY,GAAKulF,IAAI,CAACvlF,YAAY,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;QAEjE,CAAC,MAAM;UAEN3D,QAAQ,CAAC2D,YAAY,GAAGulF,IAAI,CAACvlF,YAAY;QAE1C;MAED;;MAEA;;MAEA,IAAKulF,IAAI,CAACnuE,QAAQ,KAAK7gD,SAAS,EAAG;QAElC,KAAM,IAAMvC,IAAI,IAAIuxH,IAAI,CAACnuE,QAAQ,EAAG;UAEnC,IAAM+B,OAAO,GAAGosE,IAAI,CAACnuE,QAAQ,CAAEpjD,IAAI,CAAE;UAErCqoC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,GAAG,CAAC,CAAC;UAE9B,QAASmlD,OAAO,CAAC1oD,IAAI;YAEpB,KAAK,GAAG;cACP4rC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAGw3J,UAAU,CAAE3tG,OAAO,CAAC7pD,KAAM,CAAC;cAC7D;YAED,KAAK,GAAG;cACP+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAIg4C,KAAK,CAAC,CAAC,CAACE,MAAM,CAAE2R,OAAO,CAAC7pD,KAAM,CAAC;cACrE;YAED,KAAK,IAAI;cACR+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAIga,OAAO,CAAC,CAAC,CAACsD,SAAS,CAAEusC,OAAO,CAAC7pD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACR+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAIo0B,OAAO,CAAC,CAAC,CAAC9W,SAAS,CAAEusC,OAAO,CAAC7pD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACR+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAIwqB,OAAO,CAAC,CAAC,CAAClN,SAAS,CAAEusC,OAAO,CAAC7pD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACR+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAIie,OAAO,CAAC,CAAC,CAACX,SAAS,CAAEusC,OAAO,CAAC7pD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACR+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG,IAAI6/B,OAAO,CAAC,CAAC,CAACviB,SAAS,CAAEusC,OAAO,CAAC7pD,KAAM,CAAC;cAC1E;YAED;cACC+sC,QAAQ,CAAC+a,QAAQ,CAAEpjD,IAAI,CAAE,CAAC1E,KAAK,GAAG6pD,OAAO,CAAC7pD,KAAK;UAEjD;QAED;MAED;MAEA,IAAKi2H,IAAI,CAACntE,OAAO,KAAK7hD,SAAS,EAAG8lC,QAAQ,CAAC+b,OAAO,GAAGmtE,IAAI,CAACntE,OAAO;MACjE,IAAKmtE,IAAI,CAACjtE,YAAY,KAAK/hD,SAAS,EAAG8lC,QAAQ,CAACic,YAAY,GAAGitE,IAAI,CAACjtE,YAAY;MAChF,IAAKitE,IAAI,CAAChtE,cAAc,KAAKhiD,SAAS,EAAG8lC,QAAQ,CAACkc,cAAc,GAAGgtE,IAAI,CAAChtE,cAAc;MACtF,IAAKgtE,IAAI,CAACrsE,WAAW,KAAK3iD,SAAS,EAAG8lC,QAAQ,CAAC6c,WAAW,GAAGqsE,IAAI,CAACrsE,WAAW;MAE7E,IAAKqsE,IAAI,CAAC7sE,UAAU,KAAKniD,SAAS,EAAG;QAEpC,KAAM,IAAMV,GAAG,IAAI0vH,IAAI,CAAC7sE,UAAU,EAAG;UAEpCrc,QAAQ,CAACqc,UAAU,CAAE7iD,GAAG,CAAE,GAAG0vH,IAAI,CAAC7sE,UAAU,CAAE7iD,GAAG,CAAE;QAEpD;MAED;MAEA,IAAK0vH,IAAI,CAAC/sE,MAAM,KAAKjiD,SAAS,EAAG8lC,QAAQ,CAACmc,MAAM,GAAG+sE,IAAI,CAAC/sE,MAAM;MAC9D,IAAK+sE,IAAI,CAAC9sE,QAAQ,KAAKliD,SAAS,EAAG8lC,QAAQ,CAACoc,QAAQ,GAAG8sE,IAAI,CAAC9sE,QAAQ;;MAEpE;;MAEA,IAAK8sE,IAAI,CAAC79F,IAAI,KAAKnxB,SAAS,EAAG8lC,QAAQ,CAAC3U,IAAI,GAAG69F,IAAI,CAAC79F,IAAI;MACxD,IAAK69F,IAAI,CAACl/E,eAAe,KAAK9vC,SAAS,EAAG8lC,QAAQ,CAACgK,eAAe,GAAGk/E,IAAI,CAACl/E,eAAe;;MAEzF;;MAEA,IAAKk/E,IAAI,CAACnhF,GAAG,KAAK7tC,SAAS,EAAG8lC,QAAQ,CAAC+H,GAAG,GAAG0iH,UAAU,CAAEvhC,IAAI,CAACnhF,GAAI,CAAC;MACnE,IAAKmhF,IAAI,CAAClhF,MAAM,KAAK9tC,SAAS,EAAG8lC,QAAQ,CAACgI,MAAM,GAAGyiH,UAAU,CAAEvhC,IAAI,CAAClhF,MAAO,CAAC;MAE5E,IAAKkhF,IAAI,CAACjhF,QAAQ,KAAK/tC,SAAS,EAAG8lC,QAAQ,CAACiI,QAAQ,GAAGwiH,UAAU,CAAEvhC,IAAI,CAACjhF,QAAS,CAAC;MAElF,IAAKihF,IAAI,CAAC5gF,OAAO,KAAKpuC,SAAS,EAAG8lC,QAAQ,CAACsI,OAAO,GAAGmiH,UAAU,CAAEvhC,IAAI,CAAC5gF,OAAQ,CAAC;MAC/E,IAAK4gF,IAAI,CAAC3gF,SAAS,KAAKruC,SAAS,EAAG8lC,QAAQ,CAACuI,SAAS,GAAG2gF,IAAI,CAAC3gF,SAAS;MAEvE,IAAK2gF,IAAI,CAAC1gF,SAAS,KAAKtuC,SAAS,EAAG8lC,QAAQ,CAACwI,SAAS,GAAGiiH,UAAU,CAAEvhC,IAAI,CAAC1gF,SAAU,CAAC;MACrF,IAAK0gF,IAAI,CAACzgF,aAAa,KAAKvuC,SAAS,EAAG8lC,QAAQ,CAACyI,aAAa,GAAGygF,IAAI,CAACzgF,aAAa;MACnF,IAAKygF,IAAI,CAACxgF,WAAW,KAAKxuC,SAAS,EAAG;QAErC,IAAIwuC,WAAW,GAAGwgF,IAAI,CAACxgF,WAAW;QAElC,IAAKnuB,KAAK,CAACC,OAAO,CAAEkuB,WAAY,CAAC,KAAK,KAAK,EAAG;UAE7C;;UAEAA,WAAW,GAAG,CAAEA,WAAW,EAAEA,WAAW,CAAE;QAE3C;QAEA1I,QAAQ,CAAC0I,WAAW,GAAG,IAAIz7B,OAAO,CAAC,CAAC,CAACsD,SAAS,CAAEm4B,WAAY,CAAC;MAE9D;MAEA,IAAKwgF,IAAI,CAACvgF,eAAe,KAAKzuC,SAAS,EAAG8lC,QAAQ,CAAC2I,eAAe,GAAG8hH,UAAU,CAAEvhC,IAAI,CAACvgF,eAAgB,CAAC;MACvG,IAAKugF,IAAI,CAACtgF,iBAAiB,KAAK1uC,SAAS,EAAG8lC,QAAQ,CAAC4I,iBAAiB,GAAGsgF,IAAI,CAACtgF,iBAAiB;MAC/F,IAAKsgF,IAAI,CAACrgF,gBAAgB,KAAK3uC,SAAS,EAAG8lC,QAAQ,CAAC6I,gBAAgB,GAAGqgF,IAAI,CAACrgF,gBAAgB;MAE5F,IAAKqgF,IAAI,CAACpgF,YAAY,KAAK5uC,SAAS,EAAG8lC,QAAQ,CAAC8I,YAAY,GAAG2hH,UAAU,CAAEvhC,IAAI,CAACpgF,YAAa,CAAC;MAC9F,IAAKogF,IAAI,CAACngF,YAAY,KAAK7uC,SAAS,EAAG8lC,QAAQ,CAAC+I,YAAY,GAAG0hH,UAAU,CAAEvhC,IAAI,CAACngF,YAAa,CAAC;MAE9F,IAAKmgF,IAAI,CAAClgF,WAAW,KAAK9uC,SAAS,EAAG8lC,QAAQ,CAACgJ,WAAW,GAAGyhH,UAAU,CAAEvhC,IAAI,CAAClgF,WAAY,CAAC;MAC3F,IAAKkgF,IAAI,CAACriF,iBAAiB,KAAK3sC,SAAS,EAAG8lC,QAAQ,CAAC6G,iBAAiB,GAAGqiF,IAAI,CAACriF,iBAAiB;MAE/F,IAAKqiF,IAAI,CAACjgF,WAAW,KAAK/uC,SAAS,EAAG8lC,QAAQ,CAACiJ,WAAW,GAAGwhH,UAAU,CAAEvhC,IAAI,CAACjgF,WAAY,CAAC;MAC3F,IAAKigF,IAAI,CAAChgF,oBAAoB,KAAKhvC,SAAS,EAAG8lC,QAAQ,CAACkJ,oBAAoB,GAAGuhH,UAAU,CAAEvhC,IAAI,CAAChgF,oBAAqB,CAAC;MACtH,IAAKggF,IAAI,CAAC//E,gBAAgB,KAAKjvC,SAAS,EAAG8lC,QAAQ,CAACmJ,gBAAgB,GAAGshH,UAAU,CAAEvhC,IAAI,CAAC//E,gBAAiB,CAAC;MAE1G,IAAK+/E,IAAI,CAAC9/E,MAAM,KAAKlvC,SAAS,EAAG8lC,QAAQ,CAACoJ,MAAM,GAAGqhH,UAAU,CAAEvhC,IAAI,CAAC9/E,MAAO,CAAC;MAC5E,IAAK8/E,IAAI,CAAC5/E,eAAe,KAAKpvC,SAAS,EAAG8lC,QAAQ,CAACsJ,eAAe,GAAG4/E,IAAI,CAAC5/E,eAAe;MAEzF,IAAK4/E,IAAI,CAAC3/E,YAAY,KAAKrvC,SAAS,EAAG8lC,QAAQ,CAACuJ,YAAY,GAAG2/E,IAAI,CAAC3/E,YAAY;MAChF,IAAK2/E,IAAI,CAAC1/E,eAAe,KAAKtvC,SAAS,EAAG8lC,QAAQ,CAACwJ,eAAe,GAAG0/E,IAAI,CAAC1/E,eAAe;MAEzF,IAAK0/E,IAAI,CAAChhF,QAAQ,KAAKhuC,SAAS,EAAG8lC,QAAQ,CAACkI,QAAQ,GAAGuiH,UAAU,CAAEvhC,IAAI,CAAChhF,QAAS,CAAC;MAClF,IAAKghF,IAAI,CAAC/gF,iBAAiB,KAAKjuC,SAAS,EAAG8lC,QAAQ,CAACmI,iBAAiB,GAAG+gF,IAAI,CAAC/gF,iBAAiB;MAE/F,IAAK+gF,IAAI,CAAC9gF,KAAK,KAAKluC,SAAS,EAAG8lC,QAAQ,CAACoI,KAAK,GAAGqiH,UAAU,CAAEvhC,IAAI,CAAC9gF,KAAM,CAAC;MACzE,IAAK8gF,IAAI,CAAC7gF,cAAc,KAAKnuC,SAAS,EAAG8lC,QAAQ,CAACqI,cAAc,GAAG6gF,IAAI,CAAC7gF,cAAc;MAEtF,IAAK6gF,IAAI,CAACz/E,WAAW,KAAKvvC,SAAS,EAAG8lC,QAAQ,CAACyJ,WAAW,GAAGghH,UAAU,CAAEvhC,IAAI,CAACz/E,WAAY,CAAC;MAE3F,IAAKy/E,IAAI,CAAC9hF,YAAY,KAAKltC,SAAS,EAAG8lC,QAAQ,CAACoH,YAAY,GAAGqjH,UAAU,CAAEvhC,IAAI,CAAC9hF,YAAa,CAAC;MAC9F,IAAK8hF,IAAI,CAAC7hF,qBAAqB,KAAKntC,SAAS,EAAG8lC,QAAQ,CAACqH,qBAAqB,GAAGojH,UAAU,CAAEvhC,IAAI,CAAC7hF,qBAAsB,CAAC;MACzH,IAAK6hF,IAAI,CAAC5hF,kBAAkB,KAAKptC,SAAS,EAAG8lC,QAAQ,CAACsH,kBAAkB,GAAGmjH,UAAU,CAAEvhC,IAAI,CAAC5hF,kBAAmB,CAAC;MAChH,IAAK4hF,IAAI,CAAC3hF,oBAAoB,KAAKrtC,SAAS,EAAG8lC,QAAQ,CAACuH,oBAAoB,GAAG,IAAIt6B,OAAO,CAAC,CAAC,CAACsD,SAAS,CAAE24G,IAAI,CAAC3hF,oBAAqB,CAAC;MAEnI,IAAK2hF,IAAI,CAACvhF,cAAc,KAAKztC,SAAS,EAAG8lC,QAAQ,CAAC2H,cAAc,GAAG8iH,UAAU,CAAEvhC,IAAI,CAACvhF,cAAe,CAAC;MACpG,IAAKuhF,IAAI,CAACthF,uBAAuB,KAAK1tC,SAAS,EAAG8lC,QAAQ,CAAC4H,uBAAuB,GAAG6iH,UAAU,CAAEvhC,IAAI,CAACthF,uBAAwB,CAAC;MAE/H,IAAKshF,IAAI,CAACv/E,eAAe,KAAKzvC,SAAS,EAAG8lC,QAAQ,CAAC2J,eAAe,GAAG8gH,UAAU,CAAEvhC,IAAI,CAACv/E,eAAgB,CAAC;MACvG,IAAKu/E,IAAI,CAACr/E,YAAY,KAAK3vC,SAAS,EAAG8lC,QAAQ,CAAC6J,YAAY,GAAG4gH,UAAU,CAAEvhC,IAAI,CAACr/E,YAAa,CAAC;MAE9F,IAAKq/E,IAAI,CAACphF,aAAa,KAAK5tC,SAAS,EAAG8lC,QAAQ,CAAC8H,aAAa,GAAG2iH,UAAU,CAAEvhC,IAAI,CAACphF,aAAc,CAAC;MAEjG,IAAKohF,IAAI,CAAC5wD,aAAa,KAAKp+D,SAAS,EAAG8lC,QAAQ,CAACs4B,aAAa,GAAGmyF,UAAU,CAAEvhC,IAAI,CAAC5wD,aAAc,CAAC;MACjG,IAAK4wD,IAAI,CAAC1wD,iBAAiB,KAAKt+D,SAAS,EAAG8lC,QAAQ,CAACw4B,iBAAiB,GAAGiyF,UAAU,CAAEvhC,IAAI,CAAC1wD,iBAAkB,CAAC;MAE7G,OAAOx4B,QAAQ;IAEhB;EAAC;IAAAxmC,GAAA;IAAAvG,KAAA,EAED,SAAA03J,YAAa13J,KAAK,EAAG;MAEpB,IAAI,CAACiqB,QAAQ,GAAGjqB,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAy3J,uBAA+Bt2J,IAAI,EAAG;MAErC,IAAMw2J,WAAW,GAAG;QACnBjoE,cAAc,EAAdA,cAAc;QACdC,cAAc,EAAdA,cAAc;QACd0tD,iBAAiB,EAAjBA,iBAAiB;QACjB50F,cAAc,EAAdA,cAAc;QACdgnC,cAAc,EAAdA,cAAc;QACdJ,oBAAoB,EAApBA,oBAAoB;QACpBD,oBAAoB,EAApBA,oBAAoB;QACpBF,iBAAiB,EAAjBA,iBAAiB;QACjBC,gBAAgB,EAAhBA,gBAAgB;QAChBH,kBAAkB,EAAlBA,kBAAkB;QAClBC,mBAAmB,EAAnBA,mBAAmB;QACnBH,iBAAiB,EAAjBA,iBAAiB;QACjBC,oBAAoB,EAApBA,oBAAoB;QACpB90C,iBAAiB,EAAjBA,iBAAiB;QACjBq1C,kBAAkB,EAAlBA,kBAAkB;QAClBE,kBAAkB,EAAlBA,kBAAkB;QAClBD,iBAAiB,EAAjBA,iBAAiB;QACjBp/C,QAAQ,EAARA;MACD,CAAC;MAED,OAAO,IAAIwnH,WAAW,CAAEx2J,IAAI,CAAE,CAAC,CAAC;IAEjC;EAAC;EAAA,OAAAi2J,cAAA;AAAA,EA1U2BnK,MAAM;AAAA,IA8U7B2K,WAAW,GAAAvwJ,OAAA,CAAAuwJ,WAAA;EAAA,SAAAA,YAAA;IAAA7xJ,eAAA,OAAA6xJ,WAAA;EAAA;EAAApxJ,YAAA,CAAAoxJ,WAAA;IAAArxJ,GAAA;IAAAvG,KAAA,EAEhB,SAAA63J,WAAmBjjJ,KAAK,EAAG;MAE1B,IAAK,OAAOm8I,WAAW,KAAK,WAAW,EAAG;QAEzC,OAAO,IAAIA,WAAW,CAAC,CAAC,CAACC,MAAM,CAAEp8I,KAAM,CAAC;MAEzC;;MAEA;MACA;;MAEA,IAAInT,CAAC,GAAG,EAAE;MAEV,KAAM,IAAIxB,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG3a,KAAK,CAACtQ,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAElD;QACAwB,CAAC,IAAImF,MAAM,CAACkxJ,YAAY,CAAEljJ,KAAK,CAAE3U,CAAC,CAAG,CAAC;MAEvC;MAEA,IAAI;QAEH;;QAEA,OAAO83J,kBAAkB,CAAEC,MAAM,CAAEv2J,CAAE,CAAE,CAAC;MAEzC,CAAC,CAAC,OAAQlC,CAAC,EAAG;QAAE;;QAEf,OAAOkC,CAAC;MAET;IAED;EAAC;IAAA8E,GAAA;IAAAvG,KAAA,EAED,SAAAi4J,eAAuB5wI,GAAG,EAAG;MAE5B,IAAM7S,KAAK,GAAG6S,GAAG,CAAC6wI,WAAW,CAAE,GAAI,CAAC;MAEpC,IAAK1jJ,KAAK,KAAK,CAAE,CAAC,EAAG,OAAO,IAAI;MAEhC,OAAO6S,GAAG,CAAC/hB,KAAK,CAAE,CAAC,EAAEkP,KAAK,GAAG,CAAE,CAAC;IAEjC;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAwsJ,WAAmBnlI,GAAG,EAAE+5D,IAAI,EAAG;MAE9B;MACA,IAAK,OAAO/5D,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,EAAE,EAAG,OAAO,EAAE;;MAEtD;MACA,IAAK,eAAe,CAAC1B,IAAI,CAAEy7D,IAAK,CAAC,IAAI,KAAK,CAACz7D,IAAI,CAAE0B,GAAI,CAAC,EAAG;QAExD+5D,IAAI,GAAGA,IAAI,CAACuE,OAAO,CAAE,yBAAyB,EAAE,IAAK,CAAC;MAEvD;;MAEA;MACA,IAAK,kBAAkB,CAAChgE,IAAI,CAAE0B,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAEhD;MACA,IAAK,eAAe,CAAC1B,IAAI,CAAE0B,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAE7C;MACA,IAAK,YAAY,CAAC1B,IAAI,CAAE0B,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAE1C;MACA,OAAO+5D,IAAI,GAAG/5D,GAAG;IAElB;EAAC;EAAA,OAAAuwI,WAAA;AAAA;AAAA,IAIIO,uBAAuB,GAAA9wJ,OAAA,CAAA8wJ,uBAAA,0BAAAC,iBAAA;EAAAtwI,SAAA,CAAAqwI,uBAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAArwI,YAAA,CAAAmwI,uBAAA;EAE5B,SAAAA,wBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAvyJ,eAAA,OAAAoyJ,uBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAh3J,IAAA;IAEAi3J,QAAA,CAAKrtF,yBAAyB,GAAG,IAAI;IAErCqtF,QAAA,CAAKn3J,IAAI,GAAG,yBAAyB;IACrCm3J,QAAA,CAAKhgF,aAAa,GAAG5gD,QAAQ;IAAC,OAAA4gI,QAAA;EAE/B;EAAC9xJ,YAAA,CAAA2xJ,uBAAA;IAAA5xJ,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA49G,uBAAA,CAAAx4J,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAACwvD,aAAa,GAAGxvD,MAAM,CAACwvD,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA/xE,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAA,EAAS;MAER,IAAML,IAAI,GAAA2zB,IAAA,CAAAC,eAAA,CAAA49G,uBAAA,CAAAx4J,SAAA,mBAAA0B,IAAA,MAAiB;MAE3BslB,IAAI,CAAC2xD,aAAa,GAAG,IAAI,CAACA,aAAa;MAEvC3xD,IAAI,CAACskD,yBAAyB,GAAG,IAAI;MAErC,OAAOtkD,IAAI;IAEZ;EAAC;EAAA,OAAAwxI,uBAAA;AAAA,EAjCoCl5G,cAAc;AAAA,IAqC9Cs5G,oBAAoB,GAAAlxJ,OAAA,CAAAkxJ,oBAAA,0BAAAC,QAAA;EAAA1wI,SAAA,CAAAywI,oBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAzwI,YAAA,CAAAuwI,oBAAA;EAEzB,SAAAA,qBAAarL,OAAO,EAAG;IAAAnnJ,eAAA,OAAAwyJ,oBAAA;IAAA,OAAAE,SAAA,CAAAp3J,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA+xJ,oBAAA;IAAAhyJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMomG,MAAM,GAAG,IAAI2B,UAAU,CAAE/nG,KAAK,CAAC0mG,OAAQ,CAAC;MAC9CN,MAAM,CAACgB,OAAO,CAAEpnG,KAAK,CAAC46B,IAAK,CAAC;MAC5BwrE,MAAM,CAACkB,gBAAgB,CAAEtnG,KAAK,CAAC8mG,aAAc,CAAC;MAC9CV,MAAM,CAACe,kBAAkB,CAAEnnG,KAAK,CAAC4mG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWmpI,IAAI,EAAG;QAEnC,IAAI;UAEH5E,MAAM,CAAEplG,KAAK,CAAC18B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0mI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQjxJ,CAAC,EAAG;UAEb,IAAKusJ,OAAO,EAAG;YAEdA,OAAO,CAAEvsJ,CAAE,CAAC;UAEb,CAAC,MAAM;YAEN4Z,OAAO,CAACywB,KAAK,CAAErqC,CAAE,CAAC;UAEnB;UAEAinD,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEwkI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAAvlJ,GAAA;IAAAvG,KAAA,EAED,SAAA8pB,MAAOmsG,IAAI,EAAG;MAEb,IAAMyiC,oBAAoB,GAAG,CAAC,CAAC;MAC/B,IAAMC,cAAc,GAAG,CAAC,CAAC;MAEzB,SAASC,oBAAoBA,CAAE3iC,IAAI,EAAExgH,IAAI,EAAG;QAE3C,IAAKijJ,oBAAoB,CAAEjjJ,IAAI,CAAE,KAAKxO,SAAS,EAAG,OAAOyxJ,oBAAoB,CAAEjjJ,IAAI,CAAE;QAErF,IAAM67G,kBAAkB,GAAG2E,IAAI,CAAC3E,kBAAkB;QAClD,IAAMD,iBAAiB,GAAGC,kBAAkB,CAAE77G,IAAI,CAAE;QAEpD,IAAMmN,MAAM,GAAGi2I,cAAc,CAAE5iC,IAAI,EAAE5E,iBAAiB,CAACzuG,MAAO,CAAC;QAE/D,IAAMhO,KAAK,GAAG+N,aAAa,CAAE0uG,iBAAiB,CAAClwH,IAAI,EAAEyhB,MAAO,CAAC;QAC7D,IAAMsuG,EAAE,GAAG,IAAIJ,iBAAiB,CAAEl8G,KAAK,EAAEy8G,iBAAiB,CAACluE,MAAO,CAAC;QACnE+tE,EAAE,CAACz7G,IAAI,GAAG47G,iBAAiB,CAAC57G,IAAI;QAEhCijJ,oBAAoB,CAAEjjJ,IAAI,CAAE,GAAGy7G,EAAE;QAEjC,OAAOA,EAAE;MAEV;MAEA,SAAS2nC,cAAcA,CAAE5iC,IAAI,EAAExgH,IAAI,EAAG;QAErC,IAAKkjJ,cAAc,CAAEljJ,IAAI,CAAE,KAAKxO,SAAS,EAAG,OAAO0xJ,cAAc,CAAEljJ,IAAI,CAAE;QAEzE,IAAMu7G,YAAY,GAAGiF,IAAI,CAACjF,YAAY;QACtC,IAAMs/B,WAAW,GAAGt/B,YAAY,CAAEv7G,IAAI,CAAE;QAExC,IAAMotC,EAAE,GAAG,IAAItpC,WAAW,CAAE+2I,WAAY,CAAC,CAAC1tI,MAAM;QAEhD+1I,cAAc,CAAEljJ,IAAI,CAAE,GAAGotC,EAAE;QAE3B,OAAOA,EAAE;MAEV;MAEA,IAAMtpB,QAAQ,GAAG08F,IAAI,CAAChrD,yBAAyB,GAAG,IAAIktF,uBAAuB,CAAC,CAAC,GAAG,IAAIl5G,cAAc,CAAC,CAAC;MAEtG,IAAMzqC,KAAK,GAAGyhH,IAAI,CAACtvG,IAAI,CAACnS,KAAK;MAE7B,IAAKA,KAAK,KAAKvN,SAAS,EAAG;QAE1B,IAAM6xJ,UAAU,GAAGn2I,aAAa,CAAEnO,KAAK,CAACrT,IAAI,EAAEqT,KAAK,CAACI,KAAM,CAAC;QAC3D2kB,QAAQ,CAACsmB,QAAQ,CAAE,IAAIrE,eAAe,CAAEs9G,UAAU,EAAE,CAAE,CAAE,CAAC;MAE1D;MAEA,IAAMt/H,UAAU,GAAGy8F,IAAI,CAACtvG,IAAI,CAAC6S,UAAU;MAEvC,KAAM,IAAMjzB,GAAG,IAAIizB,UAAU,EAAG;QAE/B,IAAM9b,SAAS,GAAG8b,UAAU,CAAEjzB,GAAG,CAAE;QACnC,IAAIwyJ,eAAe;QAEnB,IAAKr7I,SAAS,CAACwlC,4BAA4B,EAAG;UAE7C,IAAMmuE,iBAAiB,GAAGunC,oBAAoB,CAAE3iC,IAAI,CAACtvG,IAAI,EAAEjJ,SAAS,CAACiJ,IAAK,CAAC;UAC3EoyI,eAAe,GAAG,IAAI3nC,0BAA0B,CAAEC,iBAAiB,EAAE3zG,SAAS,CAAC+9B,QAAQ,EAAE/9B,SAAS,CAACH,MAAM,EAAEG,SAAS,CAACg+B,UAAW,CAAC;QAElI,CAAC,MAAM;UAEN,IAAMo9G,WAAU,GAAGn2I,aAAa,CAAEjF,SAAS,CAACvc,IAAI,EAAEuc,SAAS,CAAC9I,KAAM,CAAC;UACnE,IAAMokJ,qBAAqB,GAAGt7I,SAAS,CAAC6tD,0BAA0B,GAAG4qD,wBAAwB,GAAG36E,eAAe;UAC/Gu9G,eAAe,GAAG,IAAIC,qBAAqB,CAAEF,WAAU,EAAEp7I,SAAS,CAAC+9B,QAAQ,EAAE/9B,SAAS,CAACg+B,UAAW,CAAC;QAEpG;QAEA,IAAKh+B,SAAS,CAAChZ,IAAI,KAAKuC,SAAS,EAAG8xJ,eAAe,CAACr0J,IAAI,GAAGgZ,SAAS,CAAChZ,IAAI;QACzE,IAAKgZ,SAAS,CAACk+B,KAAK,KAAK30C,SAAS,EAAG8xJ,eAAe,CAAC/8G,QAAQ,CAAEt+B,SAAS,CAACk+B,KAAM,CAAC;QAEhF,IAAKl+B,SAAS,CAACm+B,WAAW,KAAK50C,SAAS,EAAG;UAE1C8xJ,eAAe,CAACl9G,WAAW,CAACt+B,MAAM,GAAGG,SAAS,CAACm+B,WAAW,CAACt+B,MAAM;UACjEw7I,eAAe,CAACl9G,WAAW,CAACzsB,KAAK,GAAG1R,SAAS,CAACm+B,WAAW,CAACzsB,KAAK;QAEhE;QAEAmK,QAAQ,CAACwmB,YAAY,CAAEx5C,GAAG,EAAEwyJ,eAAgB,CAAC;MAE9C;MAEA,IAAMz5G,eAAe,GAAG22E,IAAI,CAACtvG,IAAI,CAAC24B,eAAe;MAEjD,IAAKA,eAAe,EAAG;QAEtB,KAAM,IAAM/4C,KAAG,IAAI+4C,eAAe,EAAG;UAEpC,IAAMkE,cAAc,GAAGlE,eAAe,CAAE/4C,KAAG,CAAE;UAE7C,IAAMqO,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI3U,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGi0B,cAAc,CAACl/C,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;YAE3D,IAAMyd,WAAS,GAAG8lC,cAAc,CAAEvjD,CAAC,CAAE;YACrC,IAAI84J,gBAAe;YAEnB,IAAKr7I,WAAS,CAACwlC,4BAA4B,EAAG;cAE7C,IAAMmuE,kBAAiB,GAAGunC,oBAAoB,CAAE3iC,IAAI,CAACtvG,IAAI,EAAEjJ,WAAS,CAACiJ,IAAK,CAAC;cAC3EoyI,gBAAe,GAAG,IAAI3nC,0BAA0B,CAAEC,kBAAiB,EAAE3zG,WAAS,CAAC+9B,QAAQ,EAAE/9B,WAAS,CAACH,MAAM,EAAEG,WAAS,CAACg+B,UAAW,CAAC;YAElI,CAAC,MAAM;cAEN,IAAMo9G,YAAU,GAAGn2I,aAAa,CAAEjF,WAAS,CAACvc,IAAI,EAAEuc,WAAS,CAAC9I,KAAM,CAAC;cACnEmkJ,gBAAe,GAAG,IAAIv9G,eAAe,CAAEs9G,YAAU,EAAEp7I,WAAS,CAAC+9B,QAAQ,EAAE/9B,WAAS,CAACg+B,UAAW,CAAC;YAE9F;YAEA,IAAKh+B,WAAS,CAAChZ,IAAI,KAAKuC,SAAS,EAAG8xJ,gBAAe,CAACr0J,IAAI,GAAGgZ,WAAS,CAAChZ,IAAI;YACzEkQ,KAAK,CAAC3Q,IAAI,CAAE80J,gBAAgB,CAAC;UAE9B;UAEAx/H,QAAQ,CAAC+lB,eAAe,CAAE/4C,KAAG,CAAE,GAAGqO,KAAK;QAExC;MAED;MAEA,IAAM2qC,oBAAoB,GAAG02E,IAAI,CAACtvG,IAAI,CAAC44B,oBAAoB;MAE3D,IAAKA,oBAAoB,EAAG;QAE3BhmB,QAAQ,CAACgmB,oBAAoB,GAAG,IAAI;MAErC;MAEA,IAAMC,MAAM,GAAGy2E,IAAI,CAACtvG,IAAI,CAAC64B,MAAM,IAAIy2E,IAAI,CAACtvG,IAAI,CAACsyI,SAAS,IAAIhjC,IAAI,CAACtvG,IAAI,CAACuyI,OAAO;MAE3E,IAAK15G,MAAM,KAAKv4C,SAAS,EAAG;QAE3B,KAAM,IAAIhH,IAAC,GAAG,CAAC,EAAEL,CAAC,GAAG4/C,MAAM,CAACl7C,MAAM,EAAErE,IAAC,KAAKL,CAAC,EAAE,EAAGK,IAAC,EAAG;UAEnD,IAAM8hD,KAAK,GAAGvC,MAAM,CAAEv/C,IAAC,CAAE;UAEzBs5B,QAAQ,CAAC2mB,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAAC3yB,KAAK,EAAE2yB,KAAK,CAAC5B,aAAc,CAAC;QAEnE;MAED;MAEA,IAAMV,cAAc,GAAGw2E,IAAI,CAACtvG,IAAI,CAAC84B,cAAc;MAE/C,IAAKA,cAAc,KAAKx4C,SAAS,EAAG;QAEnC,IAAM6W,MAAM,GAAG,IAAIsW,OAAO,CAAC,CAAC;QAE5B,IAAKqrB,cAAc,CAAC3hC,MAAM,KAAK7W,SAAS,EAAG;UAE1C6W,MAAM,CAACR,SAAS,CAAEmiC,cAAc,CAAC3hC,MAAO,CAAC;QAE1C;QAEAyb,QAAQ,CAACkmB,cAAc,GAAG,IAAIzjB,MAAM,CAAEle,MAAM,EAAE2hC,cAAc,CAAC5oB,MAAO,CAAC;MAEtE;MAEA,IAAKo/F,IAAI,CAACvxH,IAAI,EAAG60B,QAAQ,CAAC70B,IAAI,GAAGuxH,IAAI,CAACvxH,IAAI;MAC1C,IAAKuxH,IAAI,CAACzsG,QAAQ,EAAG+P,QAAQ,CAAC/P,QAAQ,GAAGysG,IAAI,CAACzsG,QAAQ;MAEtD,OAAO+P,QAAQ;IAEhB;EAAC;EAAA,OAAAg/H,oBAAA;AAAA,EA/MiCtL,MAAM;AAAA,IAmNnCkM,YAAY,GAAA9xJ,OAAA,CAAA8xJ,YAAA,0BAAAC,SAAA;EAAAtxI,SAAA,CAAAqxI,YAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAArxI,YAAA,CAAAmxI,YAAA;EAEjB,SAAAA,aAAajM,OAAO,EAAG;IAAAnnJ,eAAA,OAAAozJ,YAAA;IAAA,OAAAE,SAAA,CAAAh4J,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA2yJ,YAAA;IAAA5yJ,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAM46B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAKw2E,WAAW,CAACK,cAAc,CAAE5wI,GAAI,CAAC,GAAG,IAAI,CAAC+5D,IAAI;MACjF,IAAI,CAACisE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIjsE,IAAI;MAE7C,IAAMwrE,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;MAC7CN,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAC3BwrE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;MAC7CV,MAAM,CAACe,kBAAkB,CAAE,IAAI,CAACP,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWmpI,IAAI,EAAG;QAEnC,IAAIv6B,IAAI,GAAG,IAAI;QAEf,IAAI;UAEHA,IAAI,GAAGpsG,IAAI,CAACC,KAAK,CAAE0mI,IAAK,CAAC;QAE1B,CAAC,CAAC,OAAQ5mH,KAAK,EAAG;UAEjB,IAAKkiH,OAAO,KAAK7kJ,SAAS,EAAG6kJ,OAAO,CAAEliH,KAAM,CAAC;UAE7CzwB,OAAO,CAACywB,KAAK,CAAE,mCAAmC,GAAGviB,GAAG,GAAG,GAAG,EAAEuiB,KAAK,CAACvmB,OAAQ,CAAC;UAE/E;QAED;QAEA,IAAM6G,QAAQ,GAAG+rG,IAAI,CAAC/rG,QAAQ;QAE9B,IAAKA,QAAQ,KAAKjjB,SAAS,IAAIijB,QAAQ,CAAC/oB,IAAI,KAAK8F,SAAS,IAAIijB,QAAQ,CAAC/oB,IAAI,CAACuU,WAAW,CAAC,CAAC,KAAK,UAAU,EAAG;UAE1G,IAAKo2I,OAAO,KAAK7kJ,SAAS,EAAG6kJ,OAAO,CAAE,IAAIjpJ,KAAK,CAAE,kCAAkC,GAAGwkB,GAAI,CAAE,CAAC;UAE7FlO,OAAO,CAACywB,KAAK,CAAE,kCAAkC,GAAGviB,GAAI,CAAC;UACzD;QAED;QAEAm/B,KAAK,CAAC18B,KAAK,CAAEmsG,IAAI,EAAE21B,MAAO,CAAC;MAE5B,CAAC,EAAEC,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAAvlJ,GAAA;IAAAvG,KAAA;MAAA,IAAAs5J,UAAA,GAAAt8C,iBAAA,eAAA19G,mBAAA,GAAAqF,IAAA,CAED,SAAA40J,SAAiBlyI,GAAG,EAAEwkI,UAAU;QAAA,IAAArlG,KAAA,EAAA46B,IAAA,EAAAwrE,MAAA,EAAA4D,IAAA,EAAAv6B,IAAA,EAAA/rG,QAAA;QAAA,OAAA5qB,mBAAA,GAAAuB,IAAA,UAAA24J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAr0J,IAAA,GAAAq0J,UAAA,CAAAh2J,IAAA;YAAA;cAEzB+iD,KAAK,GAAG,IAAI;cAEZ46B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAKw2E,WAAW,CAACK,cAAc,CAAE5wI,GAAI,CAAC,GAAG,IAAI,CAAC+5D,IAAI;cACjF,IAAI,CAACisE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIjsE,IAAI;cAEvCwrE,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;cAC7CN,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;cAC3BwrE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;cAC7CV,MAAM,CAACe,kBAAkB,CAAE,IAAI,CAACP,eAAgB,CAAC;cAACqM,UAAA,CAAAh2J,IAAA;cAAA,OAE/BmpJ,MAAM,CAACY,SAAS,CAAEnmI,GAAG,EAAEwkI,UAAW,CAAC;YAAA;cAAhD2E,IAAI,GAAAiJ,UAAA,CAAAv2J,IAAA;cAEJ+yH,IAAI,GAAGpsG,IAAI,CAACC,KAAK,CAAE0mI,IAAK,CAAC;cAEzBtmI,QAAQ,GAAG+rG,IAAI,CAAC/rG,QAAQ;cAAA,MAEzBA,QAAQ,KAAKjjB,SAAS,IAAIijB,QAAQ,CAAC/oB,IAAI,KAAK8F,SAAS,IAAIijB,QAAQ,CAAC/oB,IAAI,CAACuU,WAAW,CAAC,CAAC,KAAK,UAAU;gBAAA+jJ,UAAA,CAAAh2J,IAAA;gBAAA;cAAA;cAAA,MAEjG,IAAIZ,KAAK,CAAE,kCAAkC,GAAGwkB,GAAI,CAAC;YAAA;cAAAoyI,UAAA,CAAAh2J,IAAA;cAAA,OAI/C+iD,KAAK,CAACkzG,UAAU,CAAEzjC,IAAK,CAAC;YAAA;cAAA,OAAAwjC,UAAA,CAAAp2J,MAAA,WAAAo2J,UAAA,CAAAv2J,IAAA;YAAA;YAAA;cAAA,OAAAu2J,UAAA,CAAAl0J,IAAA;UAAA;QAAA,GAAAg0J,QAAA;MAAA,CAErC;MAAA,SAAA/L,UAAAmM,GAAA,EAAAC,GAAA;QAAA,OAAAN,UAAA,CAAAtvH,KAAA,OAAAL,SAAA;MAAA;MAAA,OAAA6jH,SAAA;IAAA;EAAA;IAAAjnJ,GAAA;IAAAvG,KAAA,EAED,SAAA8pB,MAAOmsG,IAAI,EAAE21B,MAAM,EAAG;MAErB,IAAMtjH,UAAU,GAAG,IAAI,CAACuxH,eAAe,CAAE5jC,IAAI,CAAC3tF,UAAW,CAAC;MAC1D,IAAMmD,MAAM,GAAG,IAAI,CAACquH,WAAW,CAAE7jC,IAAI,CAACxqF,MAAO,CAAC;MAC9C,IAAMF,UAAU,GAAG,IAAI,CAACwuH,eAAe,CAAE9jC,IAAI,CAAC1qF,UAAU,EAAEE,MAAO,CAAC;MAElE,IAAMtkB,MAAM,GAAG,IAAI,CAAC6yI,WAAW,CAAE/jC,IAAI,CAAC9uG,MAAM,EAAE,YAAY;QAEzD,IAAKykI,MAAM,KAAK3kJ,SAAS,EAAG2kJ,MAAM,CAAErzH,MAAO,CAAC;MAE7C,CAAE,CAAC;MAEH,IAAMtO,QAAQ,GAAG,IAAI,CAACgwI,aAAa,CAAEhkC,IAAI,CAAChsG,QAAQ,EAAE9C,MAAO,CAAC;MAC5D,IAAMqkB,SAAS,GAAG,IAAI,CAAC0uH,cAAc,CAAEjkC,IAAI,CAACzqF,SAAS,EAAEvhB,QAAS,CAAC;MAEjE,IAAMsO,MAAM,GAAG,IAAI,CAAC4hI,WAAW,CAAElkC,IAAI,CAAC19F,MAAM,EAAEgT,UAAU,EAAEC,SAAS,EAAEvhB,QAAQ,EAAEqe,UAAW,CAAC;MAC3F,IAAMoD,SAAS,GAAG,IAAI,CAAC0uH,cAAc,CAAEnkC,IAAI,CAACvqF,SAAS,EAAEnT,MAAO,CAAC;MAE/D,IAAI,CAAC8hI,aAAa,CAAE9hI,MAAM,EAAEmT,SAAU,CAAC;;MAEvC;;MAEA,IAAKkgH,MAAM,KAAK3kJ,SAAS,EAAG;QAE3B,IAAIqzJ,SAAS,GAAG,KAAK;QAErB,KAAM,IAAM7kJ,IAAI,IAAI0R,MAAM,EAAG;UAE5B,IAAKA,MAAM,CAAE1R,IAAI,CAAE,CAACkR,IAAI,YAAYJ,gBAAgB,EAAG;YAEtD+zI,SAAS,GAAG,IAAI;YAChB;UAED;QAED;QAEA,IAAKA,SAAS,KAAK,KAAK,EAAG1O,MAAM,CAAErzH,MAAO,CAAC;MAE5C;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA;MAAA,IAAAu6J,WAAA,GAAAv9C,iBAAA,eAAA19G,mBAAA,GAAAqF,IAAA,CAED,SAAA61J,SAAkBvkC,IAAI;QAAA,IAAA3tF,UAAA,EAAAmD,MAAA,EAAAF,UAAA,EAAApkB,MAAA,EAAA8C,QAAA,EAAAuhB,SAAA,EAAAjT,MAAA,EAAAmT,SAAA;QAAA,OAAApsC,mBAAA,GAAAuB,IAAA,UAAA45J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAt1J,IAAA,GAAAs1J,UAAA,CAAAj3J,IAAA;YAAA;cAEf6kC,UAAU,GAAG,IAAI,CAACuxH,eAAe,CAAE5jC,IAAI,CAAC3tF,UAAW,CAAC;cACpDmD,MAAM,GAAG,IAAI,CAACquH,WAAW,CAAE7jC,IAAI,CAACxqF,MAAO,CAAC;cACxCF,UAAU,GAAG,IAAI,CAACwuH,eAAe,CAAE9jC,IAAI,CAAC1qF,UAAU,EAAEE,MAAO,CAAC;cAAAivH,UAAA,CAAAj3J,IAAA;cAAA,OAE7C,IAAI,CAACk3J,gBAAgB,CAAE1kC,IAAI,CAAC9uG,MAAO,CAAC;YAAA;cAAnDA,MAAM,GAAAuzI,UAAA,CAAAx3J,IAAA;cAEN+mB,QAAQ,GAAG,IAAI,CAACgwI,aAAa,CAAEhkC,IAAI,CAAChsG,QAAQ,EAAE9C,MAAO,CAAC;cACtDqkB,SAAS,GAAG,IAAI,CAAC0uH,cAAc,CAAEjkC,IAAI,CAACzqF,SAAS,EAAEvhB,QAAS,CAAC;cAE3DsO,MAAM,GAAG,IAAI,CAAC4hI,WAAW,CAAElkC,IAAI,CAAC19F,MAAM,EAAEgT,UAAU,EAAEC,SAAS,EAAEvhB,QAAQ,EAAEqe,UAAW,CAAC;cACrFoD,SAAS,GAAG,IAAI,CAAC0uH,cAAc,CAAEnkC,IAAI,CAACvqF,SAAS,EAAEnT,MAAO,CAAC;cAE/D,IAAI,CAAC8hI,aAAa,CAAE9hI,MAAM,EAAEmT,SAAU,CAAC;cAAC,OAAAgvH,UAAA,CAAAr3J,MAAA,WAEjCk1B,MAAM;YAAA;YAAA;cAAA,OAAAmiI,UAAA,CAAAn1J,IAAA;UAAA;QAAA,GAAAi1J,QAAA;MAAA,CAEb;MAAA,SAAAd,WAAAkB,GAAA;QAAA,OAAAL,WAAA,CAAAvwH,KAAA,OAAAL,SAAA;MAAA;MAAA,OAAA+vH,UAAA;IAAA;EAAA;IAAAnzJ,GAAA;IAAAvG,KAAA,EAED,SAAA85J,YAAa7jC,IAAI,EAAG;MAEnB,IAAMxqF,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAKwqF,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,KAAM,IAAIhH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE/C,IAAMysC,KAAK,GAAG,IAAIqgG,KAAK,CAAC,CAAC,CAACrlF,QAAQ,CAAEuuE,IAAI,CAAEh2H,CAAC,CAAG,CAAC;UAE/CwrC,MAAM,CAAEiB,KAAK,CAACj3B,IAAI,CAAE,GAAGi3B,KAAK;QAE7B;MAED;MAEA,OAAOjB,MAAM;IAEd;EAAC;IAAAllC,GAAA;IAAAvG,KAAA,EAED,SAAAo6J,eAAgBnkC,IAAI,EAAE19F,MAAM,EAAG;MAE9B,IAAMmT,SAAS,GAAG,CAAC,CAAC;MACpB,IAAMopF,KAAK,GAAG,CAAC,CAAC;;MAEhB;;MAEAv8F,MAAM,CAACyS,QAAQ,CAAE,UAAWT,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAAC8qF,MAAM,EAAGP,KAAK,CAAEvqF,KAAK,CAAC90B,IAAI,CAAE,GAAG80B,KAAK;MAEhD,CAAE,CAAC;;MAEH;;MAEA,IAAK0rF,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,KAAM,IAAIhH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE/C,IAAM6sC,QAAQ,GAAG,IAAI8oF,QAAQ,CAAC,CAAC,CAACluE,QAAQ,CAAEuuE,IAAI,CAAEh2H,CAAC,CAAE,EAAE60H,KAAM,CAAC;UAE5DppF,SAAS,CAAEoB,QAAQ,CAACr3B,IAAI,CAAE,GAAGq3B,QAAQ;QAEtC;MAED;MAEA,OAAOpB,SAAS;IAEjB;EAAC;IAAAnlC,GAAA;IAAAvG,KAAA,EAED,SAAA+5J,gBAAiB9jC,IAAI,EAAExqF,MAAM,EAAG;MAE/B,IAAMF,UAAU,GAAG,CAAC,CAAC;MAErB,IAAK0qF,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,IAAM4zJ,oBAAoB,GAAG,IAAItC,oBAAoB,CAAC,CAAC;QAEvD,KAAM,IAAIt4J,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE/C,IAAIs5B,QAAQ;UACZ,IAAM5S,IAAI,GAAGsvG,IAAI,CAAEh2H,CAAC,CAAE;UAEtB,QAAS0mB,IAAI,CAACxlB,IAAI;YAEjB,KAAK,gBAAgB;YACrB,KAAK,yBAAyB;cAE7Bo4B,QAAQ,GAAGshI,oBAAoB,CAAC/wI,KAAK,CAAEnD,IAAK,CAAC;cAC7C;YAED;cAEC,IAAKA,IAAI,CAACxlB,IAAI,IAAI87I,UAAU,EAAG;gBAE9B1jH,QAAQ,GAAG0jH,UAAU,CAAEt2H,IAAI,CAACxlB,IAAI,CAAE,CAACumD,QAAQ,CAAE/gC,IAAI,EAAE8kB,MAAO,CAAC;cAE5D,CAAC,MAAM;gBAENtyB,OAAO,CAACC,IAAI,oDAAAuL,MAAA,CAAqDgC,IAAI,CAACxlB,IAAI,OAAK,CAAC;cAEjF;UAEF;UAEAo4B,QAAQ,CAAC9jB,IAAI,GAAGkR,IAAI,CAAClR,IAAI;UAEzB,IAAKkR,IAAI,CAACjiB,IAAI,KAAKuC,SAAS,EAAGsyB,QAAQ,CAAC70B,IAAI,GAAGiiB,IAAI,CAACjiB,IAAI;UACxD,IAAKiiB,IAAI,CAAC6C,QAAQ,KAAKviB,SAAS,EAAGsyB,QAAQ,CAAC/P,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;UAEpE+hB,UAAU,CAAE5kB,IAAI,CAAClR,IAAI,CAAE,GAAG8jB,QAAQ;QAEnC;MAED;MAEA,OAAOgS,UAAU;IAElB;EAAC;IAAAhlC,GAAA;IAAAvG,KAAA,EAED,SAAAk6J,eAAgBjkC,IAAI,EAAEhsG,QAAQ,EAAG;MAEhC,IAAMkjB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MAClB,IAAM3B,SAAS,GAAG,CAAC,CAAC;MAEpB,IAAKyqF,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,IAAM2lJ,MAAM,GAAG,IAAIwK,cAAc,CAAC,CAAC;QACnCxK,MAAM,CAAC8K,WAAW,CAAEztI,QAAS,CAAC;QAE9B,KAAM,IAAIhqB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE/C,IAAM0mB,IAAI,GAAGsvG,IAAI,CAAEh2H,CAAC,CAAE;UAEtB,IAAKktC,KAAK,CAAExmB,IAAI,CAAClR,IAAI,CAAE,KAAKxO,SAAS,EAAG;YAEvCkmC,KAAK,CAAExmB,IAAI,CAAClR,IAAI,CAAE,GAAGm3I,MAAM,CAAC9iI,KAAK,CAAEnD,IAAK,CAAC;UAE1C;UAEA6kB,SAAS,CAAE7kB,IAAI,CAAClR,IAAI,CAAE,GAAG03B,KAAK,CAAExmB,IAAI,CAAClR,IAAI,CAAE;QAE5C;MAED;MAEA,OAAO+1B,SAAS;IAEjB;EAAC;IAAAjlC,GAAA;IAAAvG,KAAA,EAED,SAAA65J,gBAAiB5jC,IAAI,EAAG;MAEvB,IAAM3tF,UAAU,GAAG,CAAC,CAAC;MAErB,IAAK2tF,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,KAAM,IAAIhH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGg2H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,EAAG,EAAG;UAExC,IAAM0mB,IAAI,GAAGsvG,IAAI,CAAEh2H,CAAC,CAAE;UAEtB,IAAMwgJ,IAAI,GAAG6I,aAAa,CAACx/H,KAAK,CAAEnD,IAAK,CAAC;UAExC2hB,UAAU,CAAEm4G,IAAI,CAAChrI,IAAI,CAAE,GAAGgrI,IAAI;QAE/B;MAED;MAEA,OAAOn4G,UAAU;IAElB;EAAC;IAAA/hC,GAAA;IAAAvG,KAAA,EAED,SAAAg6J,YAAa/jC,IAAI,EAAE21B,MAAM,EAAG;MAE3B,IAAMplG,KAAK,GAAG,IAAI;MAClB,IAAMr/B,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAIylI,MAAM;MAEV,SAASkO,SAASA,CAAEzzI,GAAG,EAAG;QAEzBm/B,KAAK,CAAC0mG,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;QAE9B,OAAOulI,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,YAAY;UAEpCm/B,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;QAE7B,CAAC,EAAEpgB,SAAS,EAAE,YAAY;UAEzBu/C,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;UAC9Bm/B,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;QAE7B,CAAE,CAAC;MAEJ;MAEA,SAAS0zI,gBAAgBA,CAAEr1I,KAAK,EAAG;QAElC,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UAEhC,IAAM2B,GAAG,GAAG3B,KAAK;UAEjB,IAAM07D,IAAI,GAAG,2BAA2B,CAACz7D,IAAI,CAAE0B,GAAI,CAAC,GAAGA,GAAG,GAAGm/B,KAAK,CAAC6mG,YAAY,GAAGhmI,GAAG;UAErF,OAAOyzI,SAAS,CAAE15E,IAAK,CAAC;QAEzB,CAAC,MAAM;UAEN,IAAK17D,KAAK,CAACiB,IAAI,EAAG;YAEjB,OAAO;cACNA,IAAI,EAAEhE,aAAa,CAAE+C,KAAK,CAACvkB,IAAI,EAAEukB,KAAK,CAACiB,IAAK,CAAC;cAC7Cb,KAAK,EAAEJ,KAAK,CAACI,KAAK;cAClBC,MAAM,EAAEL,KAAK,CAACK;YACf,CAAC;UAEF,CAAC,MAAM;YAEN,OAAO,IAAI;UAEZ;QAED;MAED;MAEA,IAAKkwG,IAAI,KAAKhvH,SAAS,IAAIgvH,IAAI,CAAC3xH,MAAM,GAAG,CAAC,EAAG;QAE5C,IAAM4oJ,OAAO,GAAG,IAAIvB,cAAc,CAAEC,MAAO,CAAC;QAE5CgB,MAAM,GAAG,IAAIkF,WAAW,CAAE5E,OAAQ,CAAC;QACnCN,MAAM,CAACc,cAAc,CAAE,IAAI,CAACP,WAAY,CAAC;QAEzC,KAAM,IAAIltJ,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG0mG,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;UAEjD,IAAMylB,KAAK,GAAGuwG,IAAI,CAAEh2H,CAAC,CAAE;UACvB,IAAMonB,GAAG,GAAG3B,KAAK,CAAC2B,GAAG;UAErB,IAAKC,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC,EAAG;YAE3B;;YAEA,IAAM2zI,UAAU,GAAG,EAAE;YAErB,KAAM,IAAIv/H,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAGt5B,GAAG,CAAC/iB,MAAM,EAAEm3B,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;cAEhD,IAAMw/H,UAAU,GAAG5zI,GAAG,CAAEoU,CAAC,CAAE;cAE3B,IAAMy/H,iBAAiB,GAAGH,gBAAgB,CAAEE,UAAW,CAAC;cAExD,IAAKC,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY30I,gBAAgB,EAAG;kBAEpDy0I,UAAU,CAAC/2J,IAAI,CAAEi3J,iBAAkB,CAAC;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAAC/2J,IAAI,CAAE,IAAIqxH,WAAW,CAAE4lC,iBAAiB,CAACv0I,IAAI,EAAEu0I,iBAAiB,CAACp1I,KAAK,EAAEo1I,iBAAiB,CAACn1I,MAAO,CAAE,CAAC;gBAEhH;cAED;YAED;YAEAoB,MAAM,CAAEzB,KAAK,CAACjQ,IAAI,CAAE,GAAG,IAAIoR,MAAM,CAAEm0I,UAAW,CAAC;UAEhD,CAAC,MAAM;YAEN;;YAEA,IAAME,kBAAiB,GAAGH,gBAAgB,CAAEr1I,KAAK,CAAC2B,GAAI,CAAC;YACvDF,MAAM,CAAEzB,KAAK,CAACjQ,IAAI,CAAE,GAAG,IAAIoR,MAAM,CAAEq0I,kBAAkB,CAAC;UAGvD;QAED;MAED;MAEA,OAAO/zI,MAAM;IAEd;EAAC;IAAA5gB,GAAA;IAAAvG,KAAA;MAAA,IAAAm7J,iBAAA,GAAAn+C,iBAAA,eAAA19G,mBAAA,GAAAqF,IAAA,CAED,SAAAy2J,SAAwBnlC,IAAI;QAAA,IAAAzvE,KAAA,EAAAr/B,MAAA,EAAAylI,MAAA,EAOZmO,gBAAgB,EAAAM,iBAAA,EAAAp7J,CAAA,EAAAsvB,EAAA,EAAA7J,KAAA,EAAA2B,GAAA,EAAA2zI,UAAA,EAAAv/H,CAAA,EAAAklB,EAAA,EAAAs6G,UAAA,EAAAC,iBAAA,EAAAI,mBAAA;QAAA,OAAAh8J,mBAAA,GAAAuB,IAAA,UAAA06J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAp2J,IAAA,GAAAo2J,UAAA,CAAA/3J,IAAA;YAAA;cAAA43J,iBAAA,YAAAI,mBAAA;gBAAAJ,iBAAA,GAAAr+C,iBAAA,eAAA19G,mBAAA,GAAAqF,IAAA,CAA/B,SAAA+2J,SAAiCh2I,KAAK;kBAAA,IAAAi2I,IAAA,EAAAv6E,IAAA;kBAAA,OAAA9hF,mBAAA,GAAAuB,IAAA,UAAA+6J,UAAAC,UAAA;oBAAA,kBAAAA,UAAA,CAAAz2J,IAAA,GAAAy2J,UAAA,CAAAp4J,IAAA;sBAAA;wBAAA,MAEhC,OAAOiiB,KAAK,KAAK,QAAQ;0BAAAm2I,UAAA,CAAAp4J,IAAA;0BAAA;wBAAA;wBAEvB4jB,IAAG,GAAG3B,KAAK;wBAEX07D,IAAI,GAAG,2BAA2B,CAACz7D,IAAI,CAAE0B,IAAI,CAAC,GAAGA,IAAG,GAAGm/B,KAAK,CAAC6mG,YAAY,GAAGhmI,IAAG;wBAAAw0I,UAAA,CAAAp4J,IAAA;wBAAA,OAExEmpJ,MAAM,CAACY,SAAS,CAAEpsE,IAAK,CAAC;sBAAA;wBAAA,OAAAy6E,UAAA,CAAAx4J,MAAA,WAAAw4J,UAAA,CAAA34J,IAAA;sBAAA;wBAAA,KAIhCwiB,KAAK,CAACiB,IAAI;0BAAAk1I,UAAA,CAAAp4J,IAAA;0BAAA;wBAAA;wBAAA,OAAAo4J,UAAA,CAAAx4J,MAAA,WAEP;0BACNsjB,IAAI,EAAEhE,aAAa,CAAE+C,KAAK,CAACvkB,IAAI,EAAEukB,KAAK,CAACiB,IAAK,CAAC;0BAC7Cb,KAAK,EAAEJ,KAAK,CAACI,KAAK;0BAClBC,MAAM,EAAEL,KAAK,CAACK;wBACf,CAAC;sBAAA;wBAAA,OAAA81I,UAAA,CAAAx4J,MAAA,WAIM,IAAI;sBAAA;sBAAA;wBAAA,OAAAw4J,UAAA,CAAAt2J,IAAA;oBAAA;kBAAA,GAAAm2J,QAAA;gBAAA,CAMb;gBAAA,OAAAL,iBAAA,CAAArxH,KAAA,OAAAL,SAAA;cAAA;cA5BcoxH,gBAAgB,YAAAe,mBAAAC,IAAA;gBAAA,OAAAV,iBAAA,CAAArxH,KAAA,OAAAL,SAAA;cAAA;cALzB6c,KAAK,GAAG,IAAI;cACZr/B,MAAM,GAAG,CAAC,CAAC;cAAA,MAkCZ8uG,IAAI,KAAKhvH,SAAS,IAAIgvH,IAAI,CAAC3xH,MAAM,GAAG,CAAC;gBAAAk3J,UAAA,CAAA/3J,IAAA;gBAAA;cAAA;cAEzCmpJ,MAAM,GAAG,IAAIkF,WAAW,CAAE,IAAI,CAAC5E,OAAQ,CAAC;cACxCN,MAAM,CAACc,cAAc,CAAE,IAAI,CAACP,WAAY,CAAC;cAE/BltJ,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG0mG,IAAI,CAAC3xH,MAAM;YAAA;cAAA,MAAErE,CAAC,GAAGsvB,EAAE;gBAAAisI,UAAA,CAAA/3J,IAAA;gBAAA;cAAA;cAElCiiB,KAAK,GAAGuwG,IAAI,CAAEh2H,CAAC,CAAE;cACjBonB,GAAG,GAAG3B,KAAK,CAAC2B,GAAG;cAAA,KAEhBC,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC;gBAAAm0I,UAAA,CAAA/3J,IAAA;gBAAA;cAAA;cAExB;cAEMu3J,UAAU,GAAG,EAAE;cAEXv/H,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAGt5B,GAAG,CAAC/iB,MAAM;YAAA;cAAA,MAAEm3B,CAAC,GAAGklB,EAAE;gBAAA66G,UAAA,CAAA/3J,IAAA;gBAAA;cAAA;cAEjCw3J,UAAU,GAAG5zI,GAAG,CAAEoU,CAAC,CAAE;cAAA+/H,UAAA,CAAA/3J,IAAA;cAAA,OAEKs3J,gBAAgB,CAAEE,UAAW,CAAC;YAAA;cAAxDC,iBAAiB,GAAAM,UAAA,CAAAt4J,IAAA;cAEvB,IAAKg4J,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY30I,gBAAgB,EAAG;kBAEpDy0I,UAAU,CAAC/2J,IAAI,CAAEi3J,iBAAkB,CAAC;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAAC/2J,IAAI,CAAE,IAAIqxH,WAAW,CAAE4lC,iBAAiB,CAACv0I,IAAI,EAAEu0I,iBAAiB,CAACp1I,KAAK,EAAEo1I,iBAAiB,CAACn1I,MAAO,CAAE,CAAC;gBAEhH;cAED;YAAC;cApBwC0V,CAAC,EAAG;cAAA+/H,UAAA,CAAA/3J,IAAA;cAAA;YAAA;cAwB9C0jB,MAAM,CAAEzB,KAAK,CAACjQ,IAAI,CAAE,GAAG,IAAIoR,MAAM,CAAEm0I,UAAW,CAAC;cAACQ,UAAA,CAAA/3J,IAAA;cAAA;YAAA;cAAA+3J,UAAA,CAAA/3J,IAAA;cAAA,OAMhBs3J,gBAAgB,CAAEr1I,KAAK,CAAC2B,GAAI,CAAC;YAAA;cAAvD6zI,mBAAiB,GAAAM,UAAA,CAAAt4J,IAAA;cACvBikB,MAAM,CAAEzB,KAAK,CAACjQ,IAAI,CAAE,GAAG,IAAIoR,MAAM,CAAEq0I,mBAAkB,CAAC;YAAC;cA1Cdj7J,CAAC,EAAG;cAAAu7J,UAAA,CAAA/3J,IAAA;cAAA;YAAA;cAAA,OAAA+3J,UAAA,CAAAn4J,MAAA,WAkDzC8jB,MAAM;YAAA;YAAA;cAAA,OAAAq0I,UAAA,CAAAj2J,IAAA;UAAA;QAAA,GAAA61J,QAAA;MAAA,CAEb;MAAA,SAAAT,iBAAAqB,IAAA;QAAA,OAAAb,iBAAA,CAAAnxH,KAAA,OAAAL,SAAA;MAAA;MAAA,OAAAgxH,gBAAA;IAAA;EAAA;IAAAp0J,GAAA;IAAAvG,KAAA,EAED,SAAAi6J,cAAehkC,IAAI,EAAE9uG,MAAM,EAAG;MAE7B,SAAS80I,aAAaA,CAAEj8J,KAAK,EAAEmB,IAAI,EAAG;QAErC,IAAK,OAAOnB,KAAK,KAAK,QAAQ,EAAG,OAAOA,KAAK;QAE7CmZ,OAAO,CAACC,IAAI,CAAE,sEAAsE,EAAEpZ,KAAM,CAAC;QAE7F,OAAOmB,IAAI,CAAEnB,KAAK,CAAE;MAErB;MAEA,IAAMiqB,QAAQ,GAAG,CAAC,CAAC;MAEnB,IAAKgsG,IAAI,KAAKhvH,SAAS,EAAG;QAEzB,KAAM,IAAIhH,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG00H,IAAI,CAAC3xH,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAE/C,IAAM0mB,IAAI,GAAGsvG,IAAI,CAAEh2H,CAAC,CAAE;UAEtB,IAAK0mB,IAAI,CAACjB,KAAK,KAAKze,SAAS,EAAG;YAE/BkS,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEuN,IAAI,CAAClR,IAAK,CAAC;UAE1E;UAEA,IAAK0R,MAAM,CAAER,IAAI,CAACjB,KAAK,CAAE,KAAKze,SAAS,EAAG;YAEzCkS,OAAO,CAACC,IAAI,CAAE,qCAAqC,EAAEuN,IAAI,CAACjB,KAAM,CAAC;UAElE;UAEA,IAAMoD,MAAM,GAAG3B,MAAM,CAAER,IAAI,CAACjB,KAAK,CAAE;UACnC,IAAMA,KAAK,GAAGoD,MAAM,CAACnC,IAAI;UAEzB,IAAI0G,OAAO;UAEX,IAAK/F,KAAK,CAACC,OAAO,CAAE7B,KAAM,CAAC,EAAG;YAE7B2H,OAAO,GAAG,IAAI2gC,WAAW,CAAC,CAAC;YAE3B,IAAKtoC,KAAK,CAACphB,MAAM,KAAK,CAAC,EAAG+oB,OAAO,CAACrD,WAAW,GAAG,IAAI;UAErD,CAAC,MAAM;YAEN,IAAKtE,KAAK,IAAIA,KAAK,CAACiB,IAAI,EAAG;cAE1B0G,OAAO,GAAG,IAAIioG,WAAW,CAAC,CAAC;YAE5B,CAAC,MAAM;cAENjoG,OAAO,GAAG,IAAIzF,OAAO,CAAC,CAAC;YAExB;YAEA,IAAKlC,KAAK,EAAG2H,OAAO,CAACrD,WAAW,GAAG,IAAI,CAAC,CAAC;UAE1C;;UAEAqD,OAAO,CAACvE,MAAM,GAAGA,MAAM;UAEvBuE,OAAO,CAAC5X,IAAI,GAAGkR,IAAI,CAAClR,IAAI;UAExB,IAAKkR,IAAI,CAACjiB,IAAI,KAAKuC,SAAS,EAAGomB,OAAO,CAAC3oB,IAAI,GAAGiiB,IAAI,CAACjiB,IAAI;UAEvD,IAAKiiB,IAAI,CAACuB,OAAO,KAAKjhB,SAAS,EAAGomB,OAAO,CAACnF,OAAO,GAAG+zI,aAAa,CAAEt1I,IAAI,CAACuB,OAAO,EAAEg0I,eAAgB,CAAC;UAClG,IAAKv1I,IAAI,CAACqC,OAAO,KAAK/hB,SAAS,EAAGomB,OAAO,CAACrE,OAAO,GAAGrC,IAAI,CAACqC,OAAO;UAEhE,IAAKrC,IAAI,CAACpJ,MAAM,KAAKtW,SAAS,EAAGomB,OAAO,CAAC9P,MAAM,CAACD,SAAS,CAAEqJ,IAAI,CAACpJ,MAAO,CAAC;UACxE,IAAKoJ,IAAI,CAACuC,MAAM,KAAKjiB,SAAS,EAAGomB,OAAO,CAACnE,MAAM,CAAC5L,SAAS,CAAEqJ,IAAI,CAACuC,MAAO,CAAC;UACxE,IAAKvC,IAAI,CAAC7I,MAAM,KAAK7W,SAAS,EAAGomB,OAAO,CAACvP,MAAM,CAACR,SAAS,CAAEqJ,IAAI,CAAC7I,MAAO,CAAC;UACxE,IAAK6I,IAAI,CAAC/E,QAAQ,KAAK3a,SAAS,EAAGomB,OAAO,CAACzL,QAAQ,GAAG+E,IAAI,CAAC/E,QAAQ;UAEnE,IAAK+E,IAAI,CAAC9lB,IAAI,KAAKoG,SAAS,EAAG;YAE9BomB,OAAO,CAACjF,KAAK,GAAG6zI,aAAa,CAAEt1I,IAAI,CAAC9lB,IAAI,CAAE,CAAC,CAAE,EAAEs7J,gBAAiB,CAAC;YACjE9uI,OAAO,CAAChF,KAAK,GAAG4zI,aAAa,CAAEt1I,IAAI,CAAC9lB,IAAI,CAAE,CAAC,CAAE,EAAEs7J,gBAAiB,CAAC;UAElE;UAEA,IAAKx1I,IAAI,CAAC6B,MAAM,KAAKvhB,SAAS,EAAGomB,OAAO,CAAC7E,MAAM,GAAG7B,IAAI,CAAC6B,MAAM;UAC7D,IAAK7B,IAAI,CAACsC,cAAc,KAAKhiB,SAAS,EAAGomB,OAAO,CAACpE,cAAc,GAAGtC,IAAI,CAACsC,cAAc;UACrF,IAAKtC,IAAI,CAACxlB,IAAI,KAAK8F,SAAS,EAAGomB,OAAO,CAAClsB,IAAI,GAAGwlB,IAAI,CAACxlB,IAAI;UACvD,IAAKwlB,IAAI,CAAClC,UAAU,KAAKxd,SAAS,EAAGomB,OAAO,CAAC5I,UAAU,GAAGkC,IAAI,CAAClC,UAAU;UACzE,IAAKkC,IAAI,CAAC4D,QAAQ,KAAKtjB,SAAS,EAAGomB,OAAO,CAAC9C,QAAQ,GAAG5D,IAAI,CAAC4D,QAAQ,CAAC,CAAC;;UAErE,IAAK5D,IAAI,CAAC4B,SAAS,KAAKthB,SAAS,EAAGomB,OAAO,CAAC9E,SAAS,GAAG0zI,aAAa,CAAEt1I,IAAI,CAAC4B,SAAS,EAAE6zI,cAAe,CAAC;UACvG,IAAKz1I,IAAI,CAAC2B,SAAS,KAAKrhB,SAAS,EAAGomB,OAAO,CAAC/E,SAAS,GAAG2zI,aAAa,CAAEt1I,IAAI,CAAC2B,SAAS,EAAE8zI,cAAe,CAAC;UACvG,IAAKz1I,IAAI,CAAC8B,UAAU,KAAKxhB,SAAS,EAAGomB,OAAO,CAAC5E,UAAU,GAAG9B,IAAI,CAAC8B,UAAU;UAEzE,IAAK9B,IAAI,CAAC2C,KAAK,KAAKriB,SAAS,EAAGomB,OAAO,CAAC/D,KAAK,GAAG3C,IAAI,CAAC2C,KAAK;UAE1D,IAAK3C,IAAI,CAACyC,eAAe,KAAKniB,SAAS,EAAGomB,OAAO,CAACjE,eAAe,GAAGzC,IAAI,CAACyC,eAAe;UACxF,IAAKzC,IAAI,CAAC0C,gBAAgB,KAAKpiB,SAAS,EAAGomB,OAAO,CAAChE,gBAAgB,GAAG1C,IAAI,CAAC0C,gBAAgB;UAC3F,IAAK1C,IAAI,CAAC4C,eAAe,KAAKtiB,SAAS,EAAGomB,OAAO,CAAC9D,eAAe,GAAG5C,IAAI,CAAC4C,eAAe;UACxF,IAAK5C,IAAI,CAAC4mF,eAAe,KAAKtmG,SAAS,EAAGomB,OAAO,CAACkgF,eAAe,GAAG5mF,IAAI,CAAC4mF,eAAe;UAExF,IAAK5mF,IAAI,CAAC6C,QAAQ,KAAKviB,SAAS,EAAGomB,OAAO,CAAC7D,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;UAEnES,QAAQ,CAAEtD,IAAI,CAAClR,IAAI,CAAE,GAAG4X,OAAO;QAEhC;MAED;MAEA,OAAOpD,QAAQ;IAEhB;EAAC;IAAA1jB,GAAA;IAAAvG,KAAA,EAED,SAAAm6J,YAAaxzI,IAAI,EAAE4kB,UAAU,EAAEC,SAAS,EAAEvhB,QAAQ,EAAEqe,UAAU,EAAG;MAEhE,IAAI/P,MAAM;MAEV,SAAS8jI,WAAWA,CAAE33J,IAAI,EAAG;QAE5B,IAAK6mC,UAAU,CAAE7mC,IAAI,CAAE,KAAKuC,SAAS,EAAG;UAEvCkS,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAE1U,IAAK,CAAC;QAE/D;QAEA,OAAO6mC,UAAU,CAAE7mC,IAAI,CAAE;MAE1B;MAEA,SAAS43J,WAAWA,CAAE53J,IAAI,EAAG;QAE5B,IAAKA,IAAI,KAAKuC,SAAS,EAAG,OAAOA,SAAS;QAE1C,IAAKqgB,KAAK,CAACC,OAAO,CAAE7iB,IAAK,CAAC,EAAG;UAE5B,IAAMkQ,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI3U,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGmD,IAAI,CAACJ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;YAE/C,IAAMwV,IAAI,GAAG/Q,IAAI,CAAEzE,CAAC,CAAE;YAEtB,IAAKurC,SAAS,CAAE/1B,IAAI,CAAE,KAAKxO,SAAS,EAAG;cAEtCkS,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAE3D,IAAK,CAAC;YAE/D;YAEAb,KAAK,CAAC3Q,IAAI,CAAEunC,SAAS,CAAE/1B,IAAI,CAAG,CAAC;UAEhC;UAEA,OAAOb,KAAK;QAEb;QAEA,IAAK42B,SAAS,CAAE9mC,IAAI,CAAE,KAAKuC,SAAS,EAAG;UAEtCkS,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAE1U,IAAK,CAAC;QAE/D;QAEA,OAAO8mC,SAAS,CAAE9mC,IAAI,CAAE;MAEzB;MAEA,SAAS8yJ,UAAUA,CAAE/hJ,IAAI,EAAG;QAE3B,IAAKwU,QAAQ,CAAExU,IAAI,CAAE,KAAKxO,SAAS,EAAG;UAErCkS,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAE3D,IAAK,CAAC;QAE9D;QAEA,OAAOwU,QAAQ,CAAExU,IAAI,CAAE;MAExB;MAEA,IAAI8jB,QAAQ,EAAEwT,QAAQ;MAEtB,QAASpmB,IAAI,CAACxlB,IAAI;QAEjB,KAAK,OAAO;UAEXo3B,MAAM,GAAG,IAAIm4F,KAAK,CAAC,CAAC;UAEpB,IAAK/pG,IAAI,CAACwlB,UAAU,KAAKllC,SAAS,EAAG;YAEpC,IAAKE,MAAM,CAACo1J,SAAS,CAAE51I,IAAI,CAACwlB,UAAW,CAAC,EAAG;cAE1C5T,MAAM,CAAC4T,UAAU,GAAG,IAAI6L,KAAK,CAAErxB,IAAI,CAACwlB,UAAW,CAAC;YAEjD,CAAC,MAAM;cAEN5T,MAAM,CAAC4T,UAAU,GAAGqrH,UAAU,CAAE7wI,IAAI,CAACwlB,UAAW,CAAC;YAElD;UAED;UAEA,IAAKxlB,IAAI,CAAC0lB,WAAW,KAAKplC,SAAS,EAAG;YAErCsxB,MAAM,CAAC8T,WAAW,GAAGmrH,UAAU,CAAE7wI,IAAI,CAAC0lB,WAAY,CAAC;UAEpD;UAEA,IAAK1lB,IAAI,CAAC8wB,GAAG,KAAKxwC,SAAS,EAAG;YAE7B,IAAK0f,IAAI,CAAC8wB,GAAG,CAACt2C,IAAI,KAAK,KAAK,EAAG;cAE9Bo3B,MAAM,CAACkf,GAAG,GAAG,IAAIg5E,GAAG,CAAE9pG,IAAI,CAAC8wB,GAAG,CAAC3zB,KAAK,EAAE6C,IAAI,CAAC8wB,GAAG,CAAC/S,IAAI,EAAE/d,IAAI,CAAC8wB,GAAG,CAAC9S,GAAI,CAAC;YAEpE,CAAC,MAAM,IAAKhe,IAAI,CAAC8wB,GAAG,CAACt2C,IAAI,KAAK,SAAS,EAAG;cAEzCo3B,MAAM,CAACkf,GAAG,GAAG,IAAI+4E,OAAO,CAAE7pG,IAAI,CAAC8wB,GAAG,CAAC3zB,KAAK,EAAE6C,IAAI,CAAC8wB,GAAG,CAACypE,OAAQ,CAAC;YAE7D;YAEA,IAAKv6F,IAAI,CAAC8wB,GAAG,CAAC/yC,IAAI,KAAK,EAAE,EAAG;cAE3B6zB,MAAM,CAACkf,GAAG,CAAC/yC,IAAI,GAAGiiB,IAAI,CAAC8wB,GAAG,CAAC/yC,IAAI;YAEhC;UAED;UAEA,IAAKiiB,IAAI,CAACw9C,oBAAoB,KAAKl9D,SAAS,EAAGsxB,MAAM,CAAC4rC,oBAAoB,GAAGx9C,IAAI,CAACw9C,oBAAoB;UACtG,IAAKx9C,IAAI,CAACs9C,mBAAmB,KAAKh9D,SAAS,EAAGsxB,MAAM,CAAC0rC,mBAAmB,GAAGt9C,IAAI,CAACs9C,mBAAmB;UAEnG;QAED,KAAK,mBAAmB;UAEvB1rC,MAAM,GAAG,IAAI2xB,iBAAiB,CAAEvjC,IAAI,CAAC0jC,GAAG,EAAE1jC,IAAI,CAAC2jC,MAAM,EAAE3jC,IAAI,CAAC+d,IAAI,EAAE/d,IAAI,CAACge,GAAI,CAAC;UAE5E,IAAKhe,IAAI,CAAC+jC,KAAK,KAAKzjD,SAAS,EAAGsxB,MAAM,CAACmyB,KAAK,GAAG/jC,IAAI,CAAC+jC,KAAK;UACzD,IAAK/jC,IAAI,CAAC8jC,IAAI,KAAKxjD,SAAS,EAAGsxB,MAAM,CAACkyB,IAAI,GAAG9jC,IAAI,CAAC8jC,IAAI;UACtD,IAAK9jC,IAAI,CAACikC,SAAS,KAAK3jD,SAAS,EAAGsxB,MAAM,CAACqyB,SAAS,GAAGjkC,IAAI,CAACikC,SAAS;UACrE,IAAKjkC,IAAI,CAACkkC,UAAU,KAAK5jD,SAAS,EAAGsxB,MAAM,CAACsyB,UAAU,GAAGlkC,IAAI,CAACkkC,UAAU;UACxE,IAAKlkC,IAAI,CAACgkC,IAAI,KAAK1jD,SAAS,EAAGsxB,MAAM,CAACoyB,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAErG,IAAI,CAACgkC,IAAK,CAAC;UAE3E;QAED,KAAK,oBAAoB;UAExBpyB,MAAM,GAAG,IAAIk4C,kBAAkB,CAAE9pD,IAAI,CAAC2d,IAAI,EAAE3d,IAAI,CAAC4d,KAAK,EAAE5d,IAAI,CAAC6d,GAAG,EAAE7d,IAAI,CAAC8d,MAAM,EAAE9d,IAAI,CAAC+d,IAAI,EAAE/d,IAAI,CAACge,GAAI,CAAC;UAEpG,IAAKhe,IAAI,CAAC8jC,IAAI,KAAKxjD,SAAS,EAAGsxB,MAAM,CAACkyB,IAAI,GAAG9jC,IAAI,CAAC8jC,IAAI;UACtD,IAAK9jC,IAAI,CAACgkC,IAAI,KAAK1jD,SAAS,EAAGsxB,MAAM,CAACoyB,IAAI,GAAGjrD,MAAM,CAACstB,MAAM,CAAE,CAAC,CAAC,EAAErG,IAAI,CAACgkC,IAAK,CAAC;UAE3E;QAED,KAAK,cAAc;UAElBpyB,MAAM,GAAG,IAAIw9H,YAAY,CAAEpvI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACiwE,SAAU,CAAC;UAEvD;QAED,KAAK,kBAAkB;UAEtBr+D,MAAM,GAAG,IAAIo9H,gBAAgB,CAAEhvI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACiwE,SAAU,CAAC;UAE3D;QAED,KAAK,YAAY;UAEhBr+D,MAAM,GAAG,IAAI28H,UAAU,CAAEvuI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACiwE,SAAS,EAAEjwE,IAAI,CAACwiB,QAAQ,EAAExiB,IAAI,CAAC27C,KAAM,CAAC;UAEhF;QAED,KAAK,eAAe;UAEnB/pC,MAAM,GAAG,IAAI49H,aAAa,CAAExvI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACiwE,SAAS,EAAEjwE,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACZ,MAAO,CAAC;UAEjF;QAED,KAAK,WAAW;UAEfwS,MAAM,GAAG,IAAI87H,SAAS,CAAE1tI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACiwE,SAAS,EAAEjwE,IAAI,CAACwiB,QAAQ,EAAExiB,IAAI,CAACtK,KAAK,EAAEsK,IAAI,CAAC4wE,QAAQ,EAAE5wE,IAAI,CAAC27C,KAAM,CAAC;UAE1G;QAED,KAAK,iBAAiB;UAErB/pC,MAAM,GAAG,IAAI46H,eAAe,CAAExsI,IAAI,CAAC7C,KAAK,EAAE6C,IAAI,CAACw8C,WAAW,EAAEx8C,IAAI,CAACiwE,SAAU,CAAC;UAE5E;QAED,KAAK,YAAY;UAEhBr+D,MAAM,GAAG,IAAIy+H,UAAU,CAAC,CAAC,CAACtvG,QAAQ,CAAE/gC,IAAK,CAAC;UAE1C;QAED,KAAK,aAAa;UAEjB4S,QAAQ,GAAG8iI,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC;UACtCwT,QAAQ,GAAGuvH,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAC;UAExCxU,MAAM,GAAG,IAAI47F,WAAW,CAAE56F,QAAQ,EAAEwT,QAAS,CAAC;UAE9C,IAAKpmB,IAAI,CAACimB,QAAQ,KAAK3lC,SAAS,EAAGsxB,MAAM,CAACqU,QAAQ,GAAGjmB,IAAI,CAACimB,QAAQ;UAClE,IAAKjmB,IAAI,CAACkmB,UAAU,KAAK5lC,SAAS,EAAGsxB,MAAM,CAACsU,UAAU,CAACvvB,SAAS,CAAEqJ,IAAI,CAACkmB,UAAW,CAAC;UACnF,IAAKlmB,IAAI,CAACmmB,QAAQ,KAAK7lC,SAAS,EAAGsxB,MAAM,CAACuU,QAAQ,GAAGnmB,IAAI,CAACmmB,QAAQ;UAElE;QAED,KAAK,MAAM;UAEVvT,QAAQ,GAAG8iI,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC;UACvCwT,QAAQ,GAAGuvH,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAC;UAEvCxU,MAAM,GAAG,IAAImsB,IAAI,CAAEnrB,QAAQ,EAAEwT,QAAS,CAAC;UAEvC;QAED,KAAK,eAAe;UAEnBxT,QAAQ,GAAG8iI,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC;UACvCwT,QAAQ,GAAGuvH,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAC;UACvC,IAAM3d,KAAK,GAAGzI,IAAI,CAACyI,KAAK;UACxB,IAAMyc,cAAc,GAAGllB,IAAI,CAACklB,cAAc;UAC1C,IAAMC,aAAa,GAAGnlB,IAAI,CAACmlB,aAAa;UAExCvT,MAAM,GAAG,IAAIu+F,aAAa,CAAEv9F,QAAQ,EAAEwT,QAAQ,EAAE3d,KAAM,CAAC;UACvDmJ,MAAM,CAACsT,cAAc,GAAG,IAAIsqF,wBAAwB,CAAE,IAAI78G,YAAY,CAAEuyB,cAAc,CAACj3B,KAAM,CAAC,EAAE,EAAG,CAAC;UACpG,IAAKk3B,aAAa,KAAK7kC,SAAS,EAAGsxB,MAAM,CAACuT,aAAa,GAAG,IAAIqqF,wBAAwB,CAAE,IAAI78G,YAAY,CAAEwyB,aAAa,CAACl3B,KAAM,CAAC,EAAEk3B,aAAa,CAAC2P,QAAS,CAAC;UAEzJ;QAED,KAAK,KAAK;UAETljB,MAAM,GAAG,IAAI06F,GAAG,CAAC,CAAC;UAElB;QAED,KAAK,MAAM;UAEV16F,MAAM,GAAG,IAAI2/F,IAAI,CAAEmkC,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC,EAAE+iI,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAE,CAAC;UAE/E;QAED,KAAK,UAAU;UAEdxU,MAAM,GAAG,IAAI8gG,QAAQ,CAAEgjC,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC,EAAE+iI,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAE,CAAC;UAEnF;QAED,KAAK,cAAc;UAElBxU,MAAM,GAAG,IAAI0gG,YAAY,CAAEojC,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC,EAAE+iI,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAE,CAAC;UAEvF;QAED,KAAK,YAAY;QACjB,KAAK,QAAQ;UAEZxU,MAAM,GAAG,IAAIyhG,MAAM,CAAEqiC,WAAW,CAAE11I,IAAI,CAAC4S,QAAS,CAAC,EAAE+iI,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAE,CAAC;UAEjF;QAED,KAAK,QAAQ;UAEZxU,MAAM,GAAG,IAAIg6F,MAAM,CAAE+pC,WAAW,CAAE31I,IAAI,CAAComB,QAAS,CAAE,CAAC;UAEnD;QAED,KAAK,OAAO;UAEXxU,MAAM,GAAG,IAAIq+E,KAAK,CAAC,CAAC;UAEpB;QAED,KAAK,MAAM;UAEVr+E,MAAM,GAAG,IAAI08F,IAAI,CAAC,CAAC;UAEnB;QAED;UAEC18F,MAAM,GAAG,IAAI0O,QAAQ,CAAC,CAAC;MAEzB;MAEA1O,MAAM,CAAC9iB,IAAI,GAAGkR,IAAI,CAAClR,IAAI;MAEvB,IAAKkR,IAAI,CAACjiB,IAAI,KAAKuC,SAAS,EAAGsxB,MAAM,CAAC7zB,IAAI,GAAGiiB,IAAI,CAACjiB,IAAI;MAEtD,IAAKiiB,IAAI,CAACrE,MAAM,KAAKrb,SAAS,EAAG;QAEhCsxB,MAAM,CAACjW,MAAM,CAAChF,SAAS,CAAEqJ,IAAI,CAACrE,MAAO,CAAC;QAEtC,IAAKqE,IAAI,CAACwC,gBAAgB,KAAKliB,SAAS,EAAGsxB,MAAM,CAACpP,gBAAgB,GAAGxC,IAAI,CAACwC,gBAAgB;QAC1F,IAAKoP,MAAM,CAACpP,gBAAgB,EAAGoP,MAAM,CAACjW,MAAM,CAAC0hB,SAAS,CAAEzL,MAAM,CAACkB,QAAQ,EAAElB,MAAM,CAACvI,UAAU,EAAEuI,MAAM,CAACxW,KAAM,CAAC;MAE3G,CAAC,MAAM;QAEN,IAAK4E,IAAI,CAAC8S,QAAQ,KAAKxyB,SAAS,EAAGsxB,MAAM,CAACkB,QAAQ,CAACnc,SAAS,CAAEqJ,IAAI,CAAC8S,QAAS,CAAC;QAC7E,IAAK9S,IAAI,CAAC/E,QAAQ,KAAK3a,SAAS,EAAGsxB,MAAM,CAAC3W,QAAQ,CAACtE,SAAS,CAAEqJ,IAAI,CAAC/E,QAAS,CAAC;QAC7E,IAAK+E,IAAI,CAACqJ,UAAU,KAAK/oB,SAAS,EAAGsxB,MAAM,CAACvI,UAAU,CAAC1S,SAAS,CAAEqJ,IAAI,CAACqJ,UAAW,CAAC;QACnF,IAAKrJ,IAAI,CAAC5E,KAAK,KAAK9a,SAAS,EAAGsxB,MAAM,CAACxW,KAAK,CAACzE,SAAS,CAAEqJ,IAAI,CAAC5E,KAAM,CAAC;MAErE;MAEA,IAAK4E,IAAI,CAACmb,EAAE,KAAK76B,SAAS,EAAGsxB,MAAM,CAACuJ,EAAE,CAACxkB,SAAS,CAAEqJ,IAAI,CAACmb,EAAG,CAAC;MAE3D,IAAKnb,IAAI,CAACuhB,UAAU,KAAKjhC,SAAS,EAAGsxB,MAAM,CAAC2P,UAAU,GAAGvhB,IAAI,CAACuhB,UAAU;MACxE,IAAKvhB,IAAI,CAACwhB,aAAa,KAAKlhC,SAAS,EAAGsxB,MAAM,CAAC4P,aAAa,GAAGxhB,IAAI,CAACwhB,aAAa;MAEjF,IAAKxhB,IAAI,CAACi+C,MAAM,EAAG;QAElB,IAAKj+C,IAAI,CAACi+C,MAAM,CAACuyB,IAAI,KAAKlwF,SAAS,EAAGsxB,MAAM,CAACqsC,MAAM,CAACuyB,IAAI,GAAGxwE,IAAI,CAACi+C,MAAM,CAACuyB,IAAI;QAC3E,IAAKxwE,IAAI,CAACi+C,MAAM,CAACwyB,UAAU,KAAKnwF,SAAS,EAAGsxB,MAAM,CAACqsC,MAAM,CAACwyB,UAAU,GAAGzwE,IAAI,CAACi+C,MAAM,CAACwyB,UAAU;QAC7F,IAAKzwE,IAAI,CAACi+C,MAAM,CAAC/tC,MAAM,KAAK5vB,SAAS,EAAGsxB,MAAM,CAACqsC,MAAM,CAAC/tC,MAAM,GAAGlQ,IAAI,CAACi+C,MAAM,CAAC/tC,MAAM;QACjF,IAAKlQ,IAAI,CAACi+C,MAAM,CAACyyB,OAAO,KAAKpwF,SAAS,EAAGsxB,MAAM,CAACqsC,MAAM,CAACyyB,OAAO,CAAC/5E,SAAS,CAAEqJ,IAAI,CAACi+C,MAAM,CAACyyB,OAAQ,CAAC;QAC/F,IAAK1wE,IAAI,CAACi+C,MAAM,CAACtvC,MAAM,KAAKruB,SAAS,EAAGsxB,MAAM,CAACqsC,MAAM,CAACtvC,MAAM,GAAG,IAAI,CAAC6kI,WAAW,CAAExzI,IAAI,CAACi+C,MAAM,CAACtvC,MAAO,CAAC;MAEtG;MAEA,IAAK3O,IAAI,CAACshB,OAAO,KAAKhhC,SAAS,EAAGsxB,MAAM,CAAC0P,OAAO,GAAGthB,IAAI,CAACshB,OAAO;MAC/D,IAAKthB,IAAI,CAACyhB,aAAa,KAAKnhC,SAAS,EAAGsxB,MAAM,CAAC6P,aAAa,GAAGzhB,IAAI,CAACyhB,aAAa;MACjF,IAAKzhB,IAAI,CAAC0hB,WAAW,KAAKphC,SAAS,EAAGsxB,MAAM,CAAC8P,WAAW,GAAG1hB,IAAI,CAAC0hB,WAAW;MAC3E,IAAK1hB,IAAI,CAAC6C,QAAQ,KAAKviB,SAAS,EAAGsxB,MAAM,CAAC/O,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;MAClE,IAAK7C,IAAI,CAACuf,MAAM,KAAKj/B,SAAS,EAAGsxB,MAAM,CAAC2N,MAAM,CAACN,IAAI,GAAGjf,IAAI,CAACuf,MAAM;MAEjE,IAAKvf,IAAI,CAAC+S,QAAQ,KAAKzyB,SAAS,EAAG;QAElC,IAAMyyB,QAAQ,GAAG/S,IAAI,CAAC+S,QAAQ;QAE9B,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy5B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE5Cs4B,MAAM,CAAC3d,GAAG,CAAE,IAAI,CAACu/I,WAAW,CAAEzgI,QAAQ,CAAEz5B,CAAC,CAAE,EAAEsrC,UAAU,EAAEC,SAAS,EAAEvhB,QAAQ,EAAEqe,UAAW,CAAE,CAAC;QAE7F;MAED;MAEA,IAAK3hB,IAAI,CAAC2hB,UAAU,KAAKrhC,SAAS,EAAG;QAEpC,IAAMu1J,gBAAgB,GAAG71I,IAAI,CAAC2hB,UAAU;QAExC,KAAM,IAAIroC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGu8J,gBAAgB,CAACl4J,MAAM,EAAErE,IAAC,EAAG,EAAG;UAEpD,IAAMwV,IAAI,GAAG+mJ,gBAAgB,CAAEv8J,IAAC,CAAE;UAElCs4B,MAAM,CAAC+P,UAAU,CAACrkC,IAAI,CAAEqkC,UAAU,CAAE7yB,IAAI,CAAG,CAAC;QAE7C;MAED;MAEA,IAAKkR,IAAI,CAACxlB,IAAI,KAAK,KAAK,EAAG;QAE1B,IAAKwlB,IAAI,CAACg0E,UAAU,KAAK1zF,SAAS,EAAGsxB,MAAM,CAACoiE,UAAU,GAAGh0E,IAAI,CAACg0E,UAAU;QAExE,IAAMsU,MAAM,GAAGtoF,IAAI,CAACsoF,MAAM;QAE1B,KAAM,IAAI1tG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0tG,MAAM,CAAC3qG,MAAM,EAAE/C,CAAC,EAAG,EAAG;UAE1C,IAAMgqG,KAAK,GAAG0D,MAAM,CAAE1tG,CAAC,CAAE;UACzB,IAAMgpC,KAAK,GAAGhS,MAAM,CAAC8R,mBAAmB,CAAE,MAAM,EAAEkhE,KAAK,CAAChzE,MAAO,CAAC;UAEhE,IAAKgS,KAAK,KAAKtjC,SAAS,EAAG;YAE1BsxB,MAAM,CAAC+6F,QAAQ,CAAE/oF,KAAK,EAAEghE,KAAK,CAACpiE,QAAQ,EAAEoiE,KAAK,CAACgoB,UAAW,CAAC;UAE3D;QAED;MAED;MAEA,OAAOh7F,MAAM;IAEd;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAAq6J,cAAe9hI,MAAM,EAAEmT,SAAS,EAAG;MAElC,IAAKhsC,MAAM,CAACuF,IAAI,CAAEymC,SAAU,CAAC,CAACpnC,MAAM,KAAK,CAAC,EAAG;MAE7Ci0B,MAAM,CAACyS,QAAQ,CAAE,UAAWT,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAACoC,aAAa,KAAK,IAAI,IAAIpC,KAAK,CAACuC,QAAQ,KAAK7lC,SAAS,EAAG;UAEnE,IAAM6lC,QAAQ,GAAGpB,SAAS,CAAEnB,KAAK,CAACuC,QAAQ,CAAE;UAE5C,IAAKA,QAAQ,KAAK7lC,SAAS,EAAG;YAE7BkS,OAAO,CAACC,IAAI,CAAE,kDAAkD,EAAEmxB,KAAK,CAACuC,QAAS,CAAC;UAEnF,CAAC,MAAM;YAENvC,KAAK,CAAC04E,IAAI,CAAEn2E,QAAQ,EAAEvC,KAAK,CAACsC,UAAW,CAAC;UAEzC;QAED;MAED,CAAE,CAAC;IAEJ;EAAC;EAAA,OAAAssH,YAAA;AAAA,EAh/ByBlM,MAAM;AAo/BjC,IAAMiP,eAAe,GAAG;EACvB/wJ,SAAS,EAAEA,SAAS;EACpBC,qBAAqB,EAAEA,qBAAqB;EAC5CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gCAAgC,EAAEA,gCAAgC;EAClEC,gCAAgC,EAAEA,gCAAgC;EAClEC,uBAAuB,EAAEA;AAC1B,CAAC;AAED,IAAM2wJ,gBAAgB,GAAG;EACxB1wJ,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,sBAAsB,EAAEA;AACzB,CAAC;AAED,IAAMywJ,cAAc,GAAG;EACtBxwJ,aAAa,EAAEA,aAAa;EAC5BC,0BAA0B,EAAEA,0BAA0B;EACtDE,yBAAyB,EAAEA,yBAAyB;EACpDE,YAAY,EAAEA,YAAY;EAC1BC,yBAAyB,EAAEA,yBAAyB;EACpDE,wBAAwB,EAAEA;AAC3B,CAAC;AAAC,IAEIqwJ,iBAAiB,GAAAp1J,OAAA,CAAAo1J,iBAAA,0BAAAC,SAAA;EAAA50I,SAAA,CAAA20I,iBAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAA30I,YAAA,CAAAy0I,iBAAA;EAEtB,SAAAA,kBAAavP,OAAO,EAAG;IAAA,IAAA0P,QAAA;IAAA72J,eAAA,OAAA02J,iBAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAAt7J,IAAA,OAAO6rJ,OAAO;IAEd0P,QAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/B,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;MAE/C3jJ,OAAO,CAACC,IAAI,CAAE,6DAA8D,CAAC;IAE9E;IAEA,IAAK,OAAO+1I,KAAK,KAAK,WAAW,EAAG;MAEnCh2I,OAAO,CAACC,IAAI,CAAE,iDAAkD,CAAC;IAElE;IAEAwjJ,QAAA,CAAKnwI,OAAO,GAAG;MAAEpD,gBAAgB,EAAE;IAAO,CAAC;IAAC,OAAAuzI,QAAA;EAE7C;EAACp2J,YAAA,CAAAi2J,iBAAA;IAAAl2J,GAAA;IAAAvG,KAAA,EAED,SAAA+8J,WAAYtwI,OAAO,EAAG;MAErB,IAAI,CAACA,OAAO,GAAGA,OAAO;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAlmB,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAKzkI,GAAG,KAAKpgB,SAAS,EAAGogB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAAC+5D,IAAI,KAAKn6E,SAAS,EAAGogB,GAAG,GAAG,IAAI,CAAC+5D,IAAI,GAAG/5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC6lI,OAAO,CAACV,UAAU,CAAEnlI,GAAI,CAAC;MAEpC,IAAMm/B,KAAK,GAAG,IAAI;MAElB,IAAM0N,MAAM,GAAGs3F,KAAK,CAACrxI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAK6sC,MAAM,KAAKjtD,SAAS,EAAG;QAE3Bu/C,KAAK,CAAC0mG,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;QAE9BsnI,UAAU,CAAE,YAAY;UAEvB,IAAK/C,MAAM,EAAGA,MAAM,CAAE13F,MAAO,CAAC;UAE9B1N,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;QAE7B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAO6sC,MAAM;MAEd;MAEA,IAAM8oG,YAAY,GAAG,CAAC,CAAC;MACvBA,YAAY,CAAChO,WAAW,GAAK,IAAI,CAAC7B,WAAW,KAAK,WAAW,GAAK,aAAa,GAAG,SAAS;MAC3F6P,YAAY,CAAClO,OAAO,GAAG,IAAI,CAACxB,aAAa;MAEzC6B,KAAK,CAAE9nI,GAAG,EAAE21I,YAAa,CAAC,CAACr6J,IAAI,CAAE,UAAWuE,GAAG,EAAG;QAEjD,OAAOA,GAAG,CAACqpJ,IAAI,CAAC,CAAC;MAElB,CAAE,CAAC,CAAC5tJ,IAAI,CAAE,UAAW4tJ,IAAI,EAAG;QAE3B,OAAOuM,iBAAiB,CAAEvM,IAAI,EAAE7wJ,MAAM,CAACstB,MAAM,CAAEw5B,KAAK,CAAC/5B,OAAO,EAAE;UAAEwwI,oBAAoB,EAAE;QAAO,CAAE,CAAE,CAAC;MAEnG,CAAE,CAAC,CAACt6J,IAAI,CAAE,UAAWu6J,WAAW,EAAG;QAElC1R,KAAK,CAAC5wI,GAAG,CAAEyM,GAAG,EAAE61I,WAAY,CAAC;QAE7B,IAAKtR,MAAM,EAAGA,MAAM,CAAEsR,WAAY,CAAC;QAEnC12G,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;MAE7B,CAAE,CAAC,CAACzhB,KAAK,CAAE,UAAWrG,CAAC,EAAG;QAEzB,IAAKusJ,OAAO,EAAGA,OAAO,CAAEvsJ,CAAE,CAAC;QAE3BinD,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;QAC9Bm/B,KAAK,CAAC0mG,OAAO,CAACZ,OAAO,CAAEjlI,GAAI,CAAC;MAE7B,CAAE,CAAC;MAEHm/B,KAAK,CAAC0mG,OAAO,CAACb,SAAS,CAAEhlI,GAAI,CAAC;IAE/B;EAAC;EAAA,OAAAo1I,iBAAA;AAAA,EA3F8BxP,MAAM;AA+FtC,IAAIkQ,QAAQ;AAAC,IAEPC,YAAY,GAAA/1J,OAAA,CAAA+1J,YAAA;EAAA,SAAAA,aAAA;IAAAr3J,eAAA,OAAAq3J,YAAA;EAAA;EAAA52J,YAAA,CAAA42J,YAAA;IAAA72J,GAAA;IAAAvG,KAAA,EAEjB,SAAAimB,WAAA,EAAoB;MAEnB,IAAKk3I,QAAQ,KAAKl2J,SAAS,EAAG;QAE7Bk2J,QAAQ,GAAG,KAAME,MAAM,CAACD,YAAY,IAAIC,MAAM,CAACC,kBAAkB,EAAG,CAAC;MAEtE;MAEA,OAAOH,QAAQ;IAEhB;EAAC;IAAA52J,GAAA;IAAAvG,KAAA,EAED,SAAAwyD,WAAmBxyD,KAAK,EAAG;MAE1Bm9J,QAAQ,GAAGn9J,KAAK;IAEjB;EAAC;EAAA,OAAAo9J,YAAA;AAAA;AAAA,IAIIG,WAAW,GAAAl2J,OAAA,CAAAk2J,WAAA,0BAAAC,SAAA;EAAA11I,SAAA,CAAAy1I,WAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAAz1I,YAAA,CAAAu1I,WAAA;EAEhB,SAAAA,YAAarQ,OAAO,EAAG;IAAAnnJ,eAAA,OAAAw3J,WAAA;IAAA,OAAAE,SAAA,CAAAp8J,IAAA,OAEf6rJ,OAAO;EAEf;EAAC1mJ,YAAA,CAAA+2J,WAAA;IAAAh3J,GAAA;IAAAvG,KAAA,EAED,SAAAutJ,KAAMlmI,GAAG,EAAEukI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtlG,KAAK,GAAG,IAAI;MAElB,IAAMomG,MAAM,GAAG,IAAI2B,UAAU,CAAE,IAAI,CAACrB,OAAQ,CAAC;MAC7CN,MAAM,CAACsE,eAAe,CAAE,aAAc,CAAC;MACvCtE,MAAM,CAACgB,OAAO,CAAE,IAAI,CAACxsE,IAAK,CAAC;MAC3BwrE,MAAM,CAACkB,gBAAgB,CAAE,IAAI,CAACR,aAAc,CAAC;MAC7CV,MAAM,CAACe,kBAAkB,CAAE,IAAI,CAACP,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAElmI,GAAG,EAAE,UAAWzE,MAAM,EAAG;QAErC,IAAI;UAEH;UACA;UACA,IAAM86I,UAAU,GAAG96I,MAAM,CAACtd,KAAK,CAAE,CAAE,CAAC;UAEpC,IAAM0gB,OAAO,GAAGo3I,YAAY,CAACn3I,UAAU,CAAC,CAAC;UACzCD,OAAO,CAAC23I,eAAe,CAAED,UAAU,EAAE,UAAWE,WAAW,EAAG;YAE7DhS,MAAM,CAAEgS,WAAY,CAAC;UAEtB,CAAC,EAAEC,WAAY,CAAC;QAEjB,CAAC,CAAC,OAAQt+J,CAAC,EAAG;UAEbs+J,WAAW,CAAEt+J,CAAE,CAAC;QAEjB;MAED,CAAC,EAAEssJ,UAAU,EAAEC,OAAQ,CAAC;MAExB,SAAS+R,WAAWA,CAAEt+J,CAAC,EAAG;QAEzB,IAAKusJ,OAAO,EAAG;UAEdA,OAAO,CAAEvsJ,CAAE,CAAC;QAEb,CAAC,MAAM;UAEN4Z,OAAO,CAACywB,KAAK,CAAErqC,CAAE,CAAC;QAEnB;QAEAinD,KAAK,CAAC0mG,OAAO,CAACX,SAAS,CAAEllI,GAAI,CAAC;MAE/B;IAED;EAAC;EAAA,OAAAk2I,WAAA;AAAA,EAxDwBtQ,MAAM;AA4DhC,IAAM6Q,SAAS,GAAG,aAAc,IAAIj+H,OAAO,CAAC,CAAC;AAC7C,IAAMk+H,QAAQ,GAAG,aAAc,IAAIl+H,OAAO,CAAC,CAAC;AAC5C,IAAMm+H,iBAAiB,GAAG,aAAc,IAAIn+H,OAAO,CAAC,CAAC;AAAC,IAEhDo+H,YAAY,GAAA52J,OAAA,CAAA42J,YAAA;EAEjB,SAAAA,aAAA,EAAc;IAAAl4J,eAAA,OAAAk4J,YAAA;IAEb,IAAI,CAAC98J,IAAI,GAAG,cAAc;IAE1B,IAAI,CAACmpD,MAAM,GAAG,CAAC;IAEf,IAAI,CAAC4zG,MAAM,GAAG,KAAK;IAEnB,IAAI,CAAC5iD,OAAO,GAAG,IAAIpxD,iBAAiB,CAAC,CAAC;IACtC,IAAI,CAACoxD,OAAO,CAACp1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC/B,IAAI,CAACy1E,OAAO,CAACnyF,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAACoyF,OAAO,GAAG,IAAIrxD,iBAAiB,CAAC,CAAC;IACtC,IAAI,CAACqxD,OAAO,CAACr1E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC/B,IAAI,CAAC01E,OAAO,CAACpyF,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAAChG,MAAM,GAAG;MACbunC,KAAK,EAAE,IAAI;MACXL,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,IAAI;MACZ5lB,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACT8lB,IAAI,EAAE,IAAI;MACVyzG,MAAM,EAAE;IACT,CAAC;EAEF;EAAC13J,YAAA,CAAAy3J,YAAA;IAAA13J,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQmF,MAAM,EAAG;MAEhB,IAAM6X,KAAK,GAAG,IAAI,CAAChqB,MAAM;MAEzB,IAAM6G,WAAW,GAAGmjB,KAAK,CAACud,KAAK,KAAKp1B,MAAM,CAACo1B,KAAK,IAAIvd,KAAK,CAACkd,GAAG,KAAK/0B,MAAM,CAAC+0B,GAAG,IAC3Eld,KAAK,CAACmd,MAAM,KAAKh1B,MAAM,CAACg1B,MAAM,GAAG,IAAI,CAACA,MAAM,IAAInd,KAAK,CAACzI,IAAI,KAAKpP,MAAM,CAACoP,IAAI,IAC1EyI,KAAK,CAACxI,GAAG,KAAKrP,MAAM,CAACqP,GAAG,IAAIwI,KAAK,CAACsd,IAAI,KAAKn1B,MAAM,CAACm1B,IAAI,IAAItd,KAAK,CAAC+wH,MAAM,KAAK,IAAI,CAACA,MAAM;MAEvF,IAAKl0I,WAAW,EAAG;QAElBmjB,KAAK,CAACud,KAAK,GAAGp1B,MAAM,CAACo1B,KAAK;QAC1Bvd,KAAK,CAACkd,GAAG,GAAG/0B,MAAM,CAAC+0B,GAAG;QACtBld,KAAK,CAACmd,MAAM,GAAGh1B,MAAM,CAACg1B,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1Cnd,KAAK,CAACzI,IAAI,GAAGpP,MAAM,CAACoP,IAAI;QACxByI,KAAK,CAACxI,GAAG,GAAGrP,MAAM,CAACqP,GAAG;QACtBwI,KAAK,CAACsd,IAAI,GAAGn1B,MAAM,CAACm1B,IAAI;QACxBtd,KAAK,CAAC+wH,MAAM,GAAG,IAAI,CAACA,MAAM;;QAE1B;QACA;;QAEAF,iBAAiB,CAACrjJ,IAAI,CAAE2a,MAAM,CAACE,gBAAiB,CAAC;QACjD,IAAM2oI,UAAU,GAAGhxH,KAAK,CAAC+wH,MAAM,GAAG,CAAC;QACnC,IAAME,kBAAkB,GAAGD,UAAU,GAAGhxH,KAAK,CAACzI,IAAI,GAAGyI,KAAK,CAACud,KAAK;QAChE,IAAM2zG,IAAI,GAAKlxH,KAAK,CAACzI,IAAI,GAAG1vB,IAAI,CAACq2C,GAAG,CAAEt2C,OAAO,GAAGo4B,KAAK,CAACkd,GAAG,GAAG,GAAI,CAAC,GAAKld,KAAK,CAACsd,IAAI;QAChF,IAAI6zG,IAAI,EAAEC,IAAI;;QAEd;;QAEAR,QAAQ,CAACviJ,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAE2iJ,UAAU;QACtCL,SAAS,CAACtiJ,QAAQ,CAAE,EAAE,CAAE,GAAG2iJ,UAAU;;QAErC;;QAEAG,IAAI,GAAG,CAAED,IAAI,GAAGlxH,KAAK,CAACmd,MAAM,GAAG8zG,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGlxH,KAAK,CAACmd,MAAM,GAAG8zG,kBAAkB;QAE/CJ,iBAAiB,CAACxiJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG2xB,KAAK,CAACzI,IAAI,IAAK65H,IAAI,GAAGD,IAAI,CAAE;QAClEN,iBAAiB,CAACxiJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAE+iJ,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAAChjD,OAAO,CAAC9lF,gBAAgB,CAAC7a,IAAI,CAAEqjJ,iBAAkB,CAAC;;QAEvD;;QAEAM,IAAI,GAAG,CAAED,IAAI,GAAGlxH,KAAK,CAACmd,MAAM,GAAG8zG,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGlxH,KAAK,CAACmd,MAAM,GAAG8zG,kBAAkB;QAE/CJ,iBAAiB,CAACxiJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG2xB,KAAK,CAACzI,IAAI,IAAK65H,IAAI,GAAGD,IAAI,CAAE;QAClEN,iBAAiB,CAACxiJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAE+iJ,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAAC/iD,OAAO,CAAC/lF,gBAAgB,CAAC7a,IAAI,CAAEqjJ,iBAAkB,CAAC;MAExD;MAEA,IAAI,CAAC1iD,OAAO,CAAC3lF,WAAW,CAAChb,IAAI,CAAE2a,MAAM,CAACK,WAAY,CAAC,CAACxa,QAAQ,CAAE4iJ,QAAS,CAAC;MACxE,IAAI,CAACxiD,OAAO,CAAC5lF,WAAW,CAAChb,IAAI,CAAE2a,MAAM,CAACK,WAAY,CAAC,CAACxa,QAAQ,CAAE2iJ,SAAU,CAAC;IAE1E;EAAC;EAAA,OAAAG,YAAA;AAAA;AAAA,IAIIO,KAAK,GAAAn3J,OAAA,CAAAm3J,KAAA;EAEV,SAAAA,MAAaC,SAAS,GAAG,IAAI,EAAG;IAAA14J,eAAA,OAAAy4J,KAAA;IAE/B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAAC1X,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC2X,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACC,OAAO,GAAG,KAAK;EAErB;EAACp4J,YAAA,CAAAg4J,KAAA;IAAAj4J,GAAA;IAAAvG,KAAA,EAED,SAAA2/C,MAAA,EAAQ;MAEP,IAAI,CAAConG,SAAS,GAAG8X,GAAG,CAAC,CAAC;MAEtB,IAAI,CAACH,OAAO,GAAG,IAAI,CAAC3X,SAAS;MAC7B,IAAI,CAAC4X,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEpB;EAAC;IAAAr4J,GAAA;IAAAvG,KAAA,EAED,SAAAuF,KAAA,EAAO;MAEN,IAAI,CAACu5J,cAAc,CAAC,CAAC;MACrB,IAAI,CAACF,OAAO,GAAG,KAAK;MACpB,IAAI,CAACH,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAAl4J,GAAA;IAAAvG,KAAA,EAED,SAAA8+J,eAAA,EAAiB;MAEhB,IAAI,CAACC,QAAQ,CAAC,CAAC;MACf,OAAO,IAAI,CAACJ,WAAW;IAExB;EAAC;IAAAp4J,GAAA;IAAAvG,KAAA,EAED,SAAA++J,SAAA,EAAW;MAEV,IAAI55B,IAAI,GAAG,CAAC;MAEZ,IAAK,IAAI,CAACs5B,SAAS,IAAI,CAAE,IAAI,CAACG,OAAO,EAAG;QAEvC,IAAI,CAACj/G,KAAK,CAAC,CAAC;QACZ,OAAO,CAAC;MAET;MAEA,IAAK,IAAI,CAACi/G,OAAO,EAAG;QAEnB,IAAMI,OAAO,GAAGH,GAAG,CAAC,CAAC;QAErB15B,IAAI,GAAG,CAAE65B,OAAO,GAAG,IAAI,CAACN,OAAO,IAAK,IAAI;QACxC,IAAI,CAACA,OAAO,GAAGM,OAAO;QAEtB,IAAI,CAACL,WAAW,IAAIx5B,IAAI;MAEzB;MAEA,OAAOA,IAAI;IAEZ;EAAC;EAAA,OAAAq5B,KAAA;AAAA;AAIF,SAASK,GAAGA,CAAA,EAAG;EAEd,OAAO,CAAE,OAAOI,WAAW,KAAK,WAAW,GAAGC,IAAI,GAAGD,WAAW,EAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3E;;AAEA,IAAMM,WAAW,GAAG,aAAc,IAAI/qI,OAAO,CAAC,CAAC;AAC/C,IAAMgrI,aAAa,GAAG,aAAc,IAAI5vI,UAAU,CAAC,CAAC;AACpD,IAAM6vI,QAAQ,GAAG,aAAc,IAAIjrI,OAAO,CAAC,CAAC;AAC5C,IAAMkrI,cAAc,GAAG,aAAc,IAAIlrI,OAAO,CAAC,CAAC;AAAC,IAE7CmrI,aAAa,GAAAl4J,OAAA,CAAAk4J,aAAA,0BAAAC,WAAA;EAAA13I,SAAA,CAAAy3I,aAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAz3I,YAAA,CAAAu3I,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAA35J,eAAA,OAAAw5J,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAp+J,IAAA;IAEAq+J,QAAA,CAAKv+J,IAAI,GAAG,eAAe;IAE3Bu+J,QAAA,CAAK15I,OAAO,GAAGo3I,YAAY,CAACn3I,UAAU,CAAC,CAAC;IAExCy5I,QAAA,CAAKC,IAAI,GAAGD,QAAA,CAAK15I,OAAO,CAAC45I,UAAU,CAAC,CAAC;IACrCF,QAAA,CAAKC,IAAI,CAAC3nD,OAAO,CAAE0nD,QAAA,CAAK15I,OAAO,CAAC65I,WAAY,CAAC;IAE7CH,QAAA,CAAK96E,MAAM,GAAG,IAAI;IAElB86E,QAAA,CAAKI,SAAS,GAAG,CAAC;;IAElB;;IAEAJ,QAAA,CAAKK,MAAM,GAAG,IAAIvB,KAAK,CAAC,CAAC;IAAC,OAAAkB,QAAA;EAE3B;EAACl5J,YAAA,CAAA+4J,aAAA;IAAAh5J,GAAA;IAAAvG,KAAA,EAED,SAAAggK,SAAA,EAAW;MAEV,OAAO,IAAI,CAACL,IAAI;IAEjB;EAAC;IAAAp5J,GAAA;IAAAvG,KAAA,EAED,SAAAigK,aAAA,EAAe;MAEd,IAAK,IAAI,CAACr7E,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC+6E,IAAI,CAACpnD,UAAU,CAAE,IAAI,CAAC3zB,MAAO,CAAC;QACnC,IAAI,CAACA,MAAM,CAAC2zB,UAAU,CAAE,IAAI,CAACvyF,OAAO,CAAC65I,WAAY,CAAC;QAClD,IAAI,CAACF,IAAI,CAAC3nD,OAAO,CAAE,IAAI,CAAChyF,OAAO,CAAC65I,WAAY,CAAC;QAC7C,IAAI,CAACj7E,MAAM,GAAG,IAAI;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAr+E,GAAA;IAAAvG,KAAA,EAED,SAAAkgK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACt7E,MAAM;IAEnB;EAAC;IAAAr+E,GAAA;IAAAvG,KAAA,EAED,SAAAmgK,UAAWngK,KAAK,EAAG;MAElB,IAAK,IAAI,CAAC4kF,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC+6E,IAAI,CAACpnD,UAAU,CAAE,IAAI,CAAC3zB,MAAO,CAAC;QACnC,IAAI,CAACA,MAAM,CAAC2zB,UAAU,CAAE,IAAI,CAACvyF,OAAO,CAAC65I,WAAY,CAAC;MAEnD,CAAC,MAAM;QAEN,IAAI,CAACF,IAAI,CAACpnD,UAAU,CAAE,IAAI,CAACvyF,OAAO,CAAC65I,WAAY,CAAC;MAEjD;MAEA,IAAI,CAACj7E,MAAM,GAAG5kF,KAAK;MACnB,IAAI,CAAC2/J,IAAI,CAAC3nD,OAAO,CAAE,IAAI,CAACpzB,MAAO,CAAC;MAChC,IAAI,CAACA,MAAM,CAACozB,OAAO,CAAE,IAAI,CAAChyF,OAAO,CAAC65I,WAAY,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAt5J,GAAA;IAAAvG,KAAA,EAED,SAAAogK,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACT,IAAI,CAACA,IAAI,CAAC3/J,KAAK;IAE5B;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAqgK,gBAAiBrgK,KAAK,EAAG;MAExB,IAAI,CAAC2/J,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEtgK,KAAK,EAAE,IAAI,CAACgmB,OAAO,CAACu6I,WAAW,EAAE,IAAK,CAAC;MAEvE,OAAO,IAAI;IAEZ;EAAC;IAAAh6J,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAAglH,aAAA,CAAA5/J,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;MAE9B,IAAMn3B,QAAQ,GAAG,IAAI,CAAC+R,OAAO,CAAC/R,QAAQ;MACtC,IAAM6tB,EAAE,GAAG,IAAI,CAACA,EAAE;MAElB,IAAI,CAACg+H,SAAS,GAAG,IAAI,CAACC,MAAM,CAAChB,QAAQ,CAAC,CAAC;MAEvC,IAAI,CAACppI,WAAW,CAACqO,SAAS,CAAEm7H,WAAW,EAAEC,aAAa,EAAEC,QAAS,CAAC;MAElEC,cAAc,CAACpmJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAACub,eAAe,CAAE2qI,aAAc,CAAC;MAEhE,IAAKnrJ,QAAQ,CAACusJ,SAAS,EAAG;QAEzB;;QAEA,IAAMxZ,OAAO,GAAG,IAAI,CAAChhI,OAAO,CAACu6I,WAAW,GAAG,IAAI,CAACT,SAAS;QAEzD7rJ,QAAQ,CAACusJ,SAAS,CAACC,uBAAuB,CAAEtB,WAAW,CAAClpJ,CAAC,EAAE+wI,OAAQ,CAAC;QACpE/yI,QAAQ,CAACysJ,SAAS,CAACD,uBAAuB,CAAEtB,WAAW,CAACz9J,CAAC,EAAEslJ,OAAQ,CAAC;QACpE/yI,QAAQ,CAAC0sJ,SAAS,CAACF,uBAAuB,CAAEtB,WAAW,CAACz0I,CAAC,EAAEs8H,OAAQ,CAAC;QACpE/yI,QAAQ,CAAC2sJ,QAAQ,CAACH,uBAAuB,CAAEnB,cAAc,CAACrpJ,CAAC,EAAE+wI,OAAQ,CAAC;QACtE/yI,QAAQ,CAAC4sJ,QAAQ,CAACJ,uBAAuB,CAAEnB,cAAc,CAAC59J,CAAC,EAAEslJ,OAAQ,CAAC;QACtE/yI,QAAQ,CAAC6sJ,QAAQ,CAACL,uBAAuB,CAAEnB,cAAc,CAAC50I,CAAC,EAAEs8H,OAAQ,CAAC;QACtE/yI,QAAQ,CAAC8sJ,GAAG,CAACN,uBAAuB,CAAE3+H,EAAE,CAAC7rB,CAAC,EAAE+wI,OAAQ,CAAC;QACrD/yI,QAAQ,CAAC+sJ,GAAG,CAACP,uBAAuB,CAAE3+H,EAAE,CAACpgC,CAAC,EAAEslJ,OAAQ,CAAC;QACrD/yI,QAAQ,CAACgtJ,GAAG,CAACR,uBAAuB,CAAE3+H,EAAE,CAACpX,CAAC,EAAEs8H,OAAQ,CAAC;MAEtD,CAAC,MAAM;QAEN/yI,QAAQ,CAAC4uB,WAAW,CAAEs8H,WAAW,CAAClpJ,CAAC,EAAEkpJ,WAAW,CAACz9J,CAAC,EAAEy9J,WAAW,CAACz0I,CAAE,CAAC;QACnEzW,QAAQ,CAACitJ,cAAc,CAAE5B,cAAc,CAACrpJ,CAAC,EAAEqpJ,cAAc,CAAC59J,CAAC,EAAE49J,cAAc,CAAC50I,CAAC,EAAEoX,EAAE,CAAC7rB,CAAC,EAAE6rB,EAAE,CAACpgC,CAAC,EAAEogC,EAAE,CAACpX,CAAE,CAAC;MAElG;IAED;EAAC;EAAA,OAAA60I,aAAA;AAAA,EAzH0Bt4H,QAAQ;AAAA,IA6H9Bk6H,KAAK,GAAA95J,OAAA,CAAA85J,KAAA,0BAAAC,WAAA;EAAAt5I,SAAA,CAAAq5I,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAr5I,YAAA,CAAAm5I,KAAA;EAEV,SAAAA,MAAaltJ,QAAQ,EAAG;IAAA,IAAAqtJ,QAAA;IAAAv7J,eAAA,OAAAo7J,KAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAAhgK,IAAA;IAEAigK,QAAA,CAAKngK,IAAI,GAAG,OAAO;IAEnBmgK,QAAA,CAAKrtJ,QAAQ,GAAGA,QAAQ;IACxBqtJ,QAAA,CAAKt7I,OAAO,GAAG/R,QAAQ,CAAC+R,OAAO;IAE/Bs7I,QAAA,CAAK3B,IAAI,GAAG2B,QAAA,CAAKt7I,OAAO,CAAC45I,UAAU,CAAC,CAAC;IACrC0B,QAAA,CAAK3B,IAAI,CAAC3nD,OAAO,CAAE/jG,QAAQ,CAAC+rJ,QAAQ,CAAC,CAAE,CAAC;IAExCsB,QAAA,CAAKC,QAAQ,GAAG,KAAK;IAErBD,QAAA,CAAK1+I,MAAM,GAAG,IAAI;IAClB0+I,QAAA,CAAKE,MAAM,GAAG,CAAC;IACfF,QAAA,CAAKG,IAAI,GAAG,KAAK;IACjBH,QAAA,CAAKI,SAAS,GAAG,CAAC;IAClBJ,QAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,QAAA,CAAK/jJ,MAAM,GAAG,CAAC;IACf+jJ,QAAA,CAAK/X,QAAQ,GAAGtiJ,SAAS;IACzBq6J,QAAA,CAAKM,YAAY,GAAG,CAAC;IACrBN,QAAA,CAAKO,SAAS,GAAG,KAAK;IACtBP,QAAA,CAAKQ,kBAAkB,GAAG,IAAI;IAC9BR,QAAA,CAAKx4I,MAAM,GAAG,IAAI;IAClBw4I,QAAA,CAAKS,UAAU,GAAG,OAAO;IAEzBT,QAAA,CAAKU,UAAU,GAAG,CAAC;IACnBV,QAAA,CAAKW,SAAS,GAAG,CAAC;IAClBX,QAAA,CAAKY,UAAU,GAAG,KAAK;IAEvBZ,QAAA,CAAKa,OAAO,GAAG,EAAE;IAAC,OAAAb,QAAA;EAEnB;EAAC96J,YAAA,CAAA26J,KAAA;IAAA56J,GAAA;IAAAvG,KAAA,EAED,SAAAoiK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACzC,IAAI;IAEjB;EAAC;IAAAp5J,GAAA;IAAAvG,KAAA,EAED,SAAAqiK,cAAeC,SAAS,EAAG;MAE1B,IAAI,CAACR,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAACj5I,MAAM,GAAGw5I,SAAS;MACvB,IAAI,CAACtqD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAAzxG,GAAA;IAAAvG,KAAA,EAED,SAAAuiK,sBAAuBC,YAAY,EAAG;MAErC,IAAI,CAACV,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAACj5I,MAAM,GAAG,IAAI,CAAC9C,OAAO,CAACy8I,wBAAwB,CAAED,YAAa,CAAC;MACnE,IAAI,CAACxqD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAAzxG,GAAA;IAAAvG,KAAA,EAED,SAAA0iK,qBAAsBC,WAAW,EAAG;MAEnC,IAAI,CAACb,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,iBAAiB;MACnC,IAAI,CAACj5I,MAAM,GAAG,IAAI,CAAC9C,OAAO,CAAC48I,uBAAuB,CAAED,WAAY,CAAC;MACjE,IAAI,CAAC3qD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAAzxG,GAAA;IAAAvG,KAAA,EAED,SAAA6iK,UAAWjF,WAAW,EAAG;MAExB,IAAI,CAACh7I,MAAM,GAAGg7I,WAAW;MACzB,IAAI,CAACmE,UAAU,GAAG,QAAQ;MAE1B,IAAK,IAAI,CAACR,QAAQ,EAAG,IAAI,CAACuB,IAAI,CAAC,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAv8J,GAAA;IAAAvG,KAAA,EAED,SAAA8iK,KAAMC,KAAK,GAAG,CAAC,EAAG;MAEjB,IAAK,IAAI,CAAClB,SAAS,KAAK,IAAI,EAAG;QAE9B1oJ,OAAO,CAACC,IAAI,CAAE,wCAAyC,CAAC;QACxD;MAED;MAEA,IAAK,IAAI,CAAC0oJ,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAAC4oJ,UAAU,GAAG,IAAI,CAACh8I,OAAO,CAACu6I,WAAW,GAAGwC,KAAK;MAElD,IAAMj6I,MAAM,GAAG,IAAI,CAAC9C,OAAO,CAACg9I,kBAAkB,CAAC,CAAC;MAChDl6I,MAAM,CAAClG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC3BkG,MAAM,CAAC24I,IAAI,GAAG,IAAI,CAACA,IAAI;MACvB34I,MAAM,CAAC44I,SAAS,GAAG,IAAI,CAACA,SAAS;MACjC54I,MAAM,CAAC64I,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7B74I,MAAM,CAACm6I,OAAO,GAAG,IAAI,CAACC,OAAO,CAACjgD,IAAI,CAAE,IAAK,CAAC;MAC1Cn6F,MAAM,CAAC62B,KAAK,CAAE,IAAI,CAACqiH,UAAU,EAAE,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC1kJ,MAAM,EAAE,IAAI,CAACgsI,QAAS,CAAC;MAE5E,IAAI,CAACsY,SAAS,GAAG,IAAI;MAErB,IAAI,CAAC/4I,MAAM,GAAGA,MAAM;MAEpB,IAAI,CAACq6I,SAAS,CAAE,IAAI,CAAC3B,MAAO,CAAC;MAC7B,IAAI,CAAC4B,eAAe,CAAE,IAAI,CAACxB,YAAa,CAAC;MAEzC,OAAO,IAAI,CAAC5pD,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAzxG,GAAA;IAAAvG,KAAA,EAED,SAAAqjK,MAAA,EAAQ;MAEP,IAAK,IAAI,CAACvB,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAK,IAAI,CAACyoJ,SAAS,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAI,CAACI,SAAS,IAAIjtJ,IAAI,CAACa,GAAG,CAAE,IAAI,CAACmQ,OAAO,CAACu6I,WAAW,GAAG,IAAI,CAACyB,UAAU,EAAE,CAAE,CAAC,GAAG,IAAI,CAACJ,YAAY;QAE/F,IAAK,IAAI,CAACH,IAAI,KAAK,IAAI,EAAG;UAEzB;;UAEA,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS,IAAK,IAAI,CAAC1Y,QAAQ,IAAI,IAAI,CAAC3mI,MAAM,CAAC2mI,QAAQ,CAAE;QAE5E;QAEA,IAAI,CAACzgI,MAAM,CAACvjB,IAAI,CAAC,CAAC;QAClB,IAAI,CAACujB,MAAM,CAACm6I,OAAO,GAAG,IAAI;QAE1B,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAt7J,GAAA;IAAAvG,KAAA,EAED,SAAAuF,KAAA,EAAO;MAEN,IAAK,IAAI,CAACu8J,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAAC6oJ,SAAS,GAAG,CAAC;MAElB,IAAK,IAAI,CAACn5I,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACA,MAAM,CAACvjB,IAAI,CAAC,CAAC;QAClB,IAAI,CAACujB,MAAM,CAACm6I,OAAO,GAAG,IAAI;MAE3B;MAEA,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAt7J,GAAA;IAAAvG,KAAA,EAED,SAAAg4G,QAAA,EAAU;MAET,IAAK,IAAI,CAACmqD,OAAO,CAAC79J,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACwkB,MAAM,CAACkvF,OAAO,CAAE,IAAI,CAACmqD,OAAO,CAAE,CAAC,CAAG,CAAC;QAExC,KAAM,IAAIliK,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC4gK,OAAO,CAAC79J,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACkiK,OAAO,CAAEliK,CAAC,GAAG,CAAC,CAAE,CAAC+3G,OAAO,CAAE,IAAI,CAACmqD,OAAO,CAAEliK,CAAC,CAAG,CAAC;QAEnD;QAEA,IAAI,CAACkiK,OAAO,CAAE,IAAI,CAACA,OAAO,CAAC79J,MAAM,GAAG,CAAC,CAAE,CAAC0zG,OAAO,CAAE,IAAI,CAACoqD,SAAS,CAAC,CAAE,CAAC;MAEpE,CAAC,MAAM;QAEN,IAAI,CAACt5I,MAAM,CAACkvF,OAAO,CAAE,IAAI,CAACoqD,SAAS,CAAC,CAAE,CAAC;MAExC;MAEA,IAAI,CAACF,UAAU,GAAG,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA37J,GAAA;IAAAvG,KAAA,EAED,SAAAu4G,WAAA,EAAa;MAEZ,IAAK,IAAI,CAAC2pD,UAAU,KAAK,KAAK,EAAG;QAEhC;MAED;MAEA,IAAK,IAAI,CAACC,OAAO,CAAC79J,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACwkB,MAAM,CAACyvF,UAAU,CAAE,IAAI,CAAC4pD,OAAO,CAAE,CAAC,CAAG,CAAC;QAE3C,KAAM,IAAIliK,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAAC4gK,OAAO,CAAC79J,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACkiK,OAAO,CAAEliK,CAAC,GAAG,CAAC,CAAE,CAACs4G,UAAU,CAAE,IAAI,CAAC4pD,OAAO,CAAEliK,CAAC,CAAG,CAAC;QAEtD;QAEA,IAAI,CAACkiK,OAAO,CAAE,IAAI,CAACA,OAAO,CAAC79J,MAAM,GAAG,CAAC,CAAE,CAACi0G,UAAU,CAAE,IAAI,CAAC6pD,SAAS,CAAC,CAAE,CAAC;MAEvE,CAAC,MAAM;QAEN,IAAI,CAACt5I,MAAM,CAACyvF,UAAU,CAAE,IAAI,CAAC6pD,SAAS,CAAC,CAAE,CAAC;MAE3C;MAEA,IAAI,CAACF,UAAU,GAAG,KAAK;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA37J,GAAA;IAAAvG,KAAA,EAED,SAAAsjK,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACnB,OAAO;IAEpB;EAAC;IAAA57J,GAAA;IAAAvG,KAAA,EAED,SAAAujK,WAAYvjK,KAAK,EAAG;MAEnB,IAAK,CAAEA,KAAK,EAAGA,KAAK,GAAG,EAAE;MAEzB,IAAK,IAAI,CAACkiK,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAAC3pD,UAAU,CAAC,CAAC;QACjB,IAAI,CAAC4pD,OAAO,GAAGniK,KAAK,CAACsF,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC0yG,OAAO,CAAC,CAAC;MAEf,CAAC,MAAM;QAEN,IAAI,CAACmqD,OAAO,GAAGniK,KAAK,CAACsF,KAAK,CAAC,CAAC;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAiB,GAAA;IAAAvG,KAAA,EAED,SAAAmjK,UAAWnjK,KAAK,EAAG;MAElB,IAAI,CAACwhK,MAAM,GAAGxhK,KAAK;MAEnB,IAAK,IAAI,CAAC8oB,MAAM,CAAC04I,MAAM,KAAKv6J,SAAS,EAAG,OAAO,CAAC;;MAEhD,IAAK,IAAI,CAAC46J,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/4I,MAAM,CAAC04I,MAAM,CAAClB,eAAe,CAAE,IAAI,CAACkB,MAAM,EAAE,IAAI,CAACx7I,OAAO,CAACu6I,WAAW,EAAE,IAAK,CAAC;MAElF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAh6J,GAAA;IAAAvG,KAAA,EAED,SAAAwjK,UAAA,EAAY;MAEX,OAAO,IAAI,CAAChC,MAAM;IAEnB;EAAC;IAAAj7J,GAAA;IAAAvG,KAAA,EAED,SAAAkgK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoD,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE;IAE9B;EAAC;IAAA/8J,GAAA;IAAAvG,KAAA,EAED,SAAAmgK,UAAWv7E,MAAM,EAAG;MAEnB,OAAO,IAAI,CAAC2+E,UAAU,CAAE3+E,MAAM,GAAG,CAAEA,MAAM,CAAE,GAAG,EAAG,CAAC;IAEnD;EAAC;IAAAr+E,GAAA;IAAAvG,KAAA,EAED,SAAAojK,gBAAiBpjK,KAAK,EAAG;MAExB,IAAK,IAAI,CAAC8hK,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACwoJ,YAAY,GAAG5hK,KAAK;MAEzB,IAAK,IAAI,CAAC6hK,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/4I,MAAM,CAAC84I,YAAY,CAACtB,eAAe,CAAE,IAAI,CAACsB,YAAY,EAAE,IAAI,CAAC57I,OAAO,CAACu6I,WAAW,EAAE,IAAK,CAAC;MAE9F;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAh6J,GAAA;IAAAvG,KAAA,EAED,SAAAyjK,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC7B,YAAY;IAEzB;EAAC;IAAAr7J,GAAA;IAAAvG,KAAA,EAED,SAAAkjK,QAAA,EAAU;MAET,IAAI,CAACrB,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAAt7J,GAAA;IAAAvG,KAAA,EAED,SAAA0jK,QAAA,EAAU;MAET,IAAK,IAAI,CAAC5B,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE,OAAO,KAAK;MAEb;MAEA,OAAO,IAAI,CAACqoJ,IAAI;IAEjB;EAAC;IAAAl7J,GAAA;IAAAvG,KAAA,EAED,SAAA2jK,QAAS3jK,KAAK,EAAG;MAEhB,IAAK,IAAI,CAAC8hK,kBAAkB,KAAK,KAAK,EAAG;QAExC3oJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACqoJ,IAAI,GAAGzhK,KAAK;MAEjB,IAAK,IAAI,CAAC6hK,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/4I,MAAM,CAAC24I,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAl7J,GAAA;IAAAvG,KAAA,EAED,SAAA4jK,aAAc5jK,KAAK,EAAG;MAErB,IAAI,CAAC0hK,SAAS,GAAG1hK,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA6jK,WAAY7jK,KAAK,EAAG;MAEnB,IAAI,CAAC2hK,OAAO,GAAG3hK,KAAK;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA8jK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACnE,IAAI,CAACA,IAAI,CAAC3/J,KAAK;IAE5B;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA+jK,UAAW/jK,KAAK,EAAG;MAElB,IAAI,CAAC2/J,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEtgK,KAAK,EAAE,IAAI,CAACgmB,OAAO,CAACu6I,WAAW,EAAE,IAAK,CAAC;MAEvE,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAY,KAAA;AAAA,EA3YkBl6H,QAAQ;AA+Y5B,IAAM+8H,SAAS,GAAG,aAAc,IAAI5vI,OAAO,CAAC,CAAC;AAC7C,IAAM6vI,WAAW,GAAG,aAAc,IAAIz0I,UAAU,CAAC,CAAC;AAClD,IAAM00I,MAAM,GAAG,aAAc,IAAI9vI,OAAO,CAAC,CAAC;AAC1C,IAAM+vI,YAAY,GAAG,aAAc,IAAI/vI,OAAO,CAAC,CAAC;AAAC,IAE3CgwI,eAAe,GAAA/8J,OAAA,CAAA+8J,eAAA,0BAAAC,MAAA;EAAAv8I,SAAA,CAAAs8I,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAt8I,YAAA,CAAAo8I,eAAA;EAEpB,SAAAA,gBAAanwJ,QAAQ,EAAG;IAAA,IAAAswJ,QAAA;IAAAx+J,eAAA,OAAAq+J,eAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAAjjK,IAAA,OAAO4S,QAAQ;IAEfswJ,QAAA,CAAKC,MAAM,GAAGD,QAAA,CAAKv+I,OAAO,CAACy+I,YAAY,CAAC,CAAC;IACzCF,QAAA,CAAKC,MAAM,CAACE,YAAY,GAAG,MAAM;IACjCH,QAAA,CAAKC,MAAM,CAACxsD,OAAO,CAAEusD,QAAA,CAAK5E,IAAK,CAAC;IAAC,OAAA4E,QAAA;EAElC;EAAC/9J,YAAA,CAAA49J,eAAA;IAAA79J,GAAA;IAAAvG,KAAA,EAED,SAAAg4G,QAAA,EAAU;MAET19D,IAAA,CAAAC,eAAA,CAAA6pH,eAAA,CAAAzkK,SAAA,oBAAA0B,IAAA;MAEA,IAAI,CAACmjK,MAAM,CAACxsD,OAAO,CAAE,IAAI,CAAC2nD,IAAK,CAAC;IAEjC;EAAC;IAAAp5J,GAAA;IAAAvG,KAAA,EAED,SAAAu4G,WAAA,EAAa;MAEZj+D,IAAA,CAAAC,eAAA,CAAA6pH,eAAA,CAAAzkK,SAAA,uBAAA0B,IAAA;MAEA,IAAI,CAACmjK,MAAM,CAACjsD,UAAU,CAAE,IAAI,CAAConD,IAAK,CAAC;IAEpC;EAAC;IAAAp5J,GAAA;IAAAvG,KAAA,EAED,SAAAoiK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoC,MAAM;IAEnB;EAAC;IAAAj+J,GAAA;IAAAvG,KAAA,EAED,SAAA2kK,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACH,MAAM,CAACI,WAAW;IAE/B;EAAC;IAAAr+J,GAAA;IAAAvG,KAAA,EAED,SAAA6kK,eAAgB7kK,KAAK,EAAG;MAEvB,IAAI,CAACwkK,MAAM,CAACI,WAAW,GAAG5kK,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAA8kK,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa;IAEjC;EAAC;IAAAx+J,GAAA;IAAAvG,KAAA,EAED,SAAAglK,iBAAkBhlK,KAAK,EAAG;MAEzB,IAAI,CAACwkK,MAAM,CAACO,aAAa,GAAG/kK,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAilK,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACT,MAAM,CAACU,aAAa;IAEjC;EAAC;IAAA3+J,GAAA;IAAAvG,KAAA,EAED,SAAAmlK,iBAAkBnlK,KAAK,EAAG;MAEzB,IAAI,CAACwkK,MAAM,CAACU,aAAa,GAAGllK,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAolK,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACZ,MAAM,CAACa,WAAW;IAE/B;EAAC;IAAA9+J,GAAA;IAAAvG,KAAA,EAED,SAAAslK,eAAgBtlK,KAAK,EAAG;MAEvB,IAAI,CAACwkK,MAAM,CAACa,WAAW,GAAGrlK,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAulK,mBAAoBC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAG;MAEnE,IAAI,CAAClB,MAAM,CAACgB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAAChB,MAAM,CAACiB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAACjB,MAAM,CAACkB,aAAa,GAAGA,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAn/J,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAA6pH,eAAA,CAAAzkK,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;MAE9B,IAAK,IAAI,CAAC02H,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACD,SAAS,KAAK,KAAK,EAAG;MAEpE,IAAI,CAAClsI,WAAW,CAACqO,SAAS,CAAEggI,SAAS,EAAEC,WAAW,EAAEC,MAAO,CAAC;MAE5DC,YAAY,CAACjrJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAACub,eAAe,CAAEwvI,WAAY,CAAC;MAE1D,IAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAChE,SAAS,EAAG;QAEvB;;QAEA,IAAMxZ,OAAO,GAAG,IAAI,CAAChhI,OAAO,CAACu6I,WAAW,GAAG,IAAI,CAACtsJ,QAAQ,CAAC6rJ,SAAS;QAElE0E,MAAM,CAAChE,SAAS,CAACC,uBAAuB,CAAEuD,SAAS,CAAC/tJ,CAAC,EAAE+wI,OAAQ,CAAC;QAChEwd,MAAM,CAAC9D,SAAS,CAACD,uBAAuB,CAAEuD,SAAS,CAACtiK,CAAC,EAAEslJ,OAAQ,CAAC;QAChEwd,MAAM,CAAC7D,SAAS,CAACF,uBAAuB,CAAEuD,SAAS,CAACt5I,CAAC,EAAEs8H,OAAQ,CAAC;QAChEwd,MAAM,CAACmB,YAAY,CAAClF,uBAAuB,CAAE0D,YAAY,CAACluJ,CAAC,EAAE+wI,OAAQ,CAAC;QACtEwd,MAAM,CAACoB,YAAY,CAACnF,uBAAuB,CAAE0D,YAAY,CAACziK,CAAC,EAAEslJ,OAAQ,CAAC;QACtEwd,MAAM,CAACqB,YAAY,CAACpF,uBAAuB,CAAE0D,YAAY,CAACz5I,CAAC,EAAEs8H,OAAQ,CAAC;MAEvE,CAAC,MAAM;QAENwd,MAAM,CAAC3hI,WAAW,CAAEmhI,SAAS,CAAC/tJ,CAAC,EAAE+tJ,SAAS,CAACtiK,CAAC,EAAEsiK,SAAS,CAACt5I,CAAE,CAAC;QAC3D85I,MAAM,CAACtD,cAAc,CAAEiD,YAAY,CAACluJ,CAAC,EAAEkuJ,YAAY,CAACziK,CAAC,EAAEyiK,YAAY,CAACz5I,CAAE,CAAC;MAExE;IAED;EAAC;EAAA,OAAA05I,eAAA;AAAA,EApI4BjD,KAAK;AAAA,IAwI7B2E,aAAa,GAAAz+J,OAAA,CAAAy+J,aAAA;EAElB,SAAAA,cAAaC,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAG;IAAAjgK,eAAA,OAAA+/J,aAAA;IAEpC,IAAI,CAACG,QAAQ,GAAGF,KAAK,CAAC//I,OAAO,CAACkgJ,cAAc,CAAC,CAAC;IAC9C,IAAI,CAACD,QAAQ,CAACD,OAAO,GAAGA,OAAO;IAE/B,IAAI,CAACr/I,IAAI,GAAG,IAAIlN,UAAU,CAAE,IAAI,CAACwsJ,QAAQ,CAACE,iBAAkB,CAAC;IAE7DJ,KAAK,CAAC3D,SAAS,CAAC,CAAC,CAACpqD,OAAO,CAAE,IAAI,CAACiuD,QAAS,CAAC;EAE3C;EAACz/J,YAAA,CAAAs/J,aAAA;IAAAv/J,GAAA;IAAAvG,KAAA,EAGD,SAAAomK,iBAAA,EAAmB;MAElB,IAAI,CAACH,QAAQ,CAACI,oBAAoB,CAAE,IAAI,CAAC1/I,IAAK,CAAC;MAE/C,OAAO,IAAI,CAACA,IAAI;IAEjB;EAAC;IAAApgB,GAAA;IAAAvG,KAAA,EAED,SAAAsmK,oBAAA,EAAsB;MAErB,IAAItmK,KAAK,GAAG,CAAC;MACb,IAAM2mB,IAAI,GAAG,IAAI,CAACy/I,gBAAgB,CAAC,CAAC;MAEpC,KAAM,IAAInmK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0mB,IAAI,CAACriB,MAAM,EAAErE,CAAC,EAAG,EAAG;QAExCD,KAAK,IAAI2mB,IAAI,CAAE1mB,CAAC,CAAE;MAEnB;MAEA,OAAOD,KAAK,GAAG2mB,IAAI,CAACriB,MAAM;IAE3B;EAAC;EAAA,OAAAwhK,aAAA;AAAA;AAAA,IAIIS,aAAa,GAAAl/J,OAAA,CAAAk/J,aAAA;EAElB,SAAAA,cAAaC,OAAO,EAAEjb,QAAQ,EAAE3K,SAAS,EAAG;IAAA76I,eAAA,OAAAwgK,aAAA;IAE3C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC5lB,SAAS,GAAGA,SAAS;IAE1B,IAAI6lB,WAAW,EACdC,mBAAmB,EACnBC,WAAW;;IAEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,QAASpb,QAAQ;MAEhB,KAAK,YAAY;QAChBkb,WAAW,GAAG,IAAI,CAACG,MAAM;QACzBF,mBAAmB,GAAG,IAAI,CAACG,cAAc;QACzCF,WAAW,GAAG,IAAI,CAACG,8BAA8B;QAEjD,IAAI,CAAClkJ,MAAM,GAAG,IAAIF,YAAY,CAAEk+H,SAAS,GAAG,CAAE,CAAC;QAC/C,IAAI,CAACmmB,UAAU,GAAG,CAAC;QACnB;MAED,KAAK,QAAQ;MACb,KAAK,MAAM;QACVN,WAAW,GAAG,IAAI,CAACO,OAAO;;QAE1B;QACA;QACAN,mBAAmB,GAAG,IAAI,CAACM,OAAO;QAElCL,WAAW,GAAG,IAAI,CAACM,yBAAyB;QAE5C,IAAI,CAACrkJ,MAAM,GAAG,IAAI0E,KAAK,CAAEs5H,SAAS,GAAG,CAAE,CAAC;QACxC;MAED;QACC6lB,WAAW,GAAG,IAAI,CAACS,KAAK;QACxBR,mBAAmB,GAAG,IAAI,CAACS,aAAa;QACxCR,WAAW,GAAG,IAAI,CAACS,2BAA2B;QAE9C,IAAI,CAACxkJ,MAAM,GAAG,IAAIF,YAAY,CAAEk+H,SAAS,GAAG,CAAE,CAAC;IAEjD;IAEA,IAAI,CAACymB,gBAAgB,GAAGZ,WAAW;IACnC,IAAI,CAACa,wBAAwB,GAAGZ,mBAAmB;IACnD,IAAI,CAACa,YAAY,GAAGZ,WAAW;IAC/B,IAAI,CAACa,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAElB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAEjC,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,cAAc,GAAG,CAAC;EAExB;;EAEA;EAAArhK,YAAA,CAAA+/J,aAAA;IAAAhgK,GAAA;IAAAvG,KAAA,EACA,SAAA8nK,WAAYC,SAAS,EAAEjyF,MAAM,EAAG;MAE/B;MACA;;MAEA,IAAMlzD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBugC,MAAM,GAAG,IAAI,CAACy9F,SAAS;QACvBrjI,MAAM,GAAGwqJ,SAAS,GAAG5kH,MAAM,GAAGA,MAAM;MAErC,IAAI6kH,aAAa,GAAG,IAAI,CAACN,gBAAgB;MAEzC,IAAKM,aAAa,KAAK,CAAC,EAAG;QAE1B;;QAEA,KAAM,IAAI/nK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;UAErC2iB,MAAM,CAAErF,MAAM,GAAGtd,CAAC,CAAE,GAAG2iB,MAAM,CAAE3iB,CAAC,CAAE;QAEnC;QAEA+nK,aAAa,GAAGlyF,MAAM;MAEvB,CAAC,MAAM;QAEN;;QAEAkyF,aAAa,IAAIlyF,MAAM;QACvB,IAAMmyF,GAAG,GAAGnyF,MAAM,GAAGkyF,aAAa;QAClC,IAAI,CAACX,gBAAgB,CAAEzkJ,MAAM,EAAErF,MAAM,EAAE,CAAC,EAAE0qJ,GAAG,EAAE9kH,MAAO,CAAC;MAExD;MAEA,IAAI,CAACukH,gBAAgB,GAAGM,aAAa;IAEtC;;IAEA;EAAA;IAAAzhK,GAAA;IAAAvG,KAAA,EACA,SAAAkoK,mBAAoBpyF,MAAM,EAAG;MAE5B,IAAMlzD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBugC,MAAM,GAAG,IAAI,CAACy9F,SAAS;QACvBrjI,MAAM,GAAG4lC,MAAM,GAAG,IAAI,CAACskH,SAAS;MAEjC,IAAK,IAAI,CAACE,wBAAwB,KAAK,CAAC,EAAG;QAE1C;;QAEA,IAAI,CAACJ,YAAY,CAAC,CAAC;MAEpB;;MAEA;;MAEA,IAAI,CAACD,wBAAwB,CAAE1kJ,MAAM,EAAErF,MAAM,EAAE,CAAC,EAAEu4D,MAAM,EAAE3yB,MAAO,CAAC;MAClE,IAAI,CAACwkH,wBAAwB,IAAI7xF,MAAM;IAExC;;IAEA;EAAA;IAAAvvE,GAAA;IAAAvG,KAAA,EACA,SAAAgqC,MAAO+9H,SAAS,EAAG;MAElB,IAAM5kH,MAAM,GAAG,IAAI,CAACy9F,SAAS;QAC5Bh+H,MAAM,GAAG,IAAI,CAACA,MAAM;QACpBrF,MAAM,GAAGwqJ,SAAS,GAAG5kH,MAAM,GAAGA,MAAM;QAEpC2yB,MAAM,GAAG,IAAI,CAAC4xF,gBAAgB;QAC9BS,cAAc,GAAG,IAAI,CAACR,wBAAwB;QAE9CnB,OAAO,GAAG,IAAI,CAACA,OAAO;MAEvB,IAAI,CAACkB,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;MAEjC,IAAK7xF,MAAM,GAAG,CAAC,EAAG;QAEjB;;QAEA,IAAMsyF,mBAAmB,GAAGjlH,MAAM,GAAG,IAAI,CAACqkH,UAAU;QAEpD,IAAI,CAACH,gBAAgB,CACpBzkJ,MAAM,EAAErF,MAAM,EAAE6qJ,mBAAmB,EAAE,CAAC,GAAGtyF,MAAM,EAAE3yB,MAAO,CAAC;MAE3D;MAEA,IAAKglH,cAAc,GAAG,CAAC,EAAG;QAEzB;;QAEA,IAAI,CAACb,wBAAwB,CAAE1kJ,MAAM,EAAErF,MAAM,EAAE,IAAI,CAACkqJ,SAAS,GAAGtkH,MAAM,EAAE,CAAC,EAAEA,MAAO,CAAC;MAEpF;MAEA,KAAM,IAAIljD,CAAC,GAAGkjD,MAAM,EAAE5jD,CAAC,GAAG4jD,MAAM,GAAGA,MAAM,EAAEljD,CAAC,KAAKV,CAAC,EAAE,EAAGU,CAAC,EAAG;QAE1D,IAAK2iB,MAAM,CAAE3iB,CAAC,CAAE,KAAK2iB,MAAM,CAAE3iB,CAAC,GAAGkjD,MAAM,CAAE,EAAG;UAE3C;;UAEAqjH,OAAO,CAACjsF,QAAQ,CAAE33D,MAAM,EAAErF,MAAO,CAAC;UAClC;QAED;MAED;IAED;;IAEA;EAAA;IAAAhX,GAAA;IAAAvG,KAAA,EACA,SAAAqoK,kBAAA,EAAoB;MAEnB,IAAM7B,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B,IAAM5jJ,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBugC,MAAM,GAAG,IAAI,CAACy9F,SAAS;QAEvBwnB,mBAAmB,GAAGjlH,MAAM,GAAG,IAAI,CAACqkH,UAAU;MAE/ChB,OAAO,CAAC8B,QAAQ,CAAE1lJ,MAAM,EAAEwlJ,mBAAoB,CAAC;;MAE/C;MACA,KAAM,IAAInoK,CAAC,GAAGkjD,MAAM,EAAE5jD,CAAC,GAAG6oK,mBAAmB,EAAEnoK,CAAC,KAAKV,CAAC,EAAE,EAAGU,CAAC,EAAG;QAE9D2iB,MAAM,CAAE3iB,CAAC,CAAE,GAAG2iB,MAAM,CAAEwlJ,mBAAmB,GAAKnoK,CAAC,GAAGkjD,MAAQ,CAAE;MAE7D;;MAEA;MACA,IAAI,CAACokH,YAAY,CAAC,CAAC;MAEnB,IAAI,CAACG,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAElC;;IAEA;EAAA;IAAAphK,GAAA;IAAAvG,KAAA,EACA,SAAAuoK,qBAAA,EAAuB;MAEtB,IAAMH,mBAAmB,GAAG,IAAI,CAACxnB,SAAS,GAAG,CAAC;MAC9C,IAAI,CAAC4lB,OAAO,CAACjsF,QAAQ,CAAE,IAAI,CAAC33D,MAAM,EAAEwlJ,mBAAoB,CAAC;IAE1D;EAAC;IAAA7hK,GAAA;IAAAvG,KAAA,EAED,SAAAonK,4BAAA,EAA8B;MAE7B,IAAMjlB,UAAU,GAAG,IAAI,CAACslB,SAAS,GAAG,IAAI,CAAC7mB,SAAS;MAClD,IAAMwB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACvB,SAAS;MAE5C,KAAM,IAAI3gJ,CAAC,GAAGkiJ,UAAU,EAAEliJ,CAAC,GAAGmiJ,QAAQ,EAAEniJ,CAAC,EAAG,EAAG;QAE9C,IAAI,CAAC2iB,MAAM,CAAE3iB,CAAC,CAAE,GAAG,CAAC;MAErB;IAED;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAA8mK,+BAAA,EAAiC;MAEhC,IAAI,CAACM,2BAA2B,CAAC,CAAC;MAClC,IAAI,CAACxkJ,MAAM,CAAE,IAAI,CAAC6kJ,SAAS,GAAG,IAAI,CAAC7mB,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC;IAEvD;EAAC;IAAAr6I,GAAA;IAAAvG,KAAA,EAED,SAAAinK,0BAAA,EAA4B;MAE3B,IAAM9kB,UAAU,GAAG,IAAI,CAACqlB,UAAU,GAAG,IAAI,CAAC5mB,SAAS;MACnD,IAAM4nB,WAAW,GAAG,IAAI,CAACf,SAAS,GAAG,IAAI,CAAC7mB,SAAS;MAEnD,KAAM,IAAI3gJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2gJ,SAAS,EAAE3gJ,CAAC,EAAG,EAAG;QAE3C,IAAI,CAAC2iB,MAAM,CAAE4lJ,WAAW,GAAGvoK,CAAC,CAAE,GAAG,IAAI,CAAC2iB,MAAM,CAAEu/H,UAAU,GAAGliJ,CAAC,CAAE;MAE/D;IAED;;IAGA;EAAA;IAAAsG,GAAA;IAAAvG,KAAA,EAEA,SAAAgnK,QAASpkJ,MAAM,EAAEsQ,SAAS,EAAE8sH,SAAS,EAAExgJ,CAAC,EAAE2jD,MAAM,EAAG;MAElD,IAAK3jD,CAAC,IAAI,GAAG,EAAG;QAEf,KAAM,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;UAErC2iB,MAAM,CAAEsQ,SAAS,GAAGjzB,CAAC,CAAE,GAAG2iB,MAAM,CAAEo9H,SAAS,GAAG//I,CAAC,CAAE;QAElD;MAED;IAED;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAA4mK,OAAQhkJ,MAAM,EAAEsQ,SAAS,EAAE8sH,SAAS,EAAExgJ,CAAC,EAAG;MAEzCgwB,UAAU,CAACwD,SAAS,CAAEpQ,MAAM,EAAEsQ,SAAS,EAAEtQ,MAAM,EAAEsQ,SAAS,EAAEtQ,MAAM,EAAEo9H,SAAS,EAAExgJ,CAAE,CAAC;IAEnF;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAA6mK,eAAgBjkJ,MAAM,EAAEsQ,SAAS,EAAE8sH,SAAS,EAAExgJ,CAAC,EAAE2jD,MAAM,EAAG;MAEzD,IAAMslH,UAAU,GAAG,IAAI,CAAC1B,UAAU,GAAG5jH,MAAM;;MAE3C;MACA3zB,UAAU,CAAC2E,uBAAuB,CAAEvR,MAAM,EAAE6lJ,UAAU,EAAE7lJ,MAAM,EAAEsQ,SAAS,EAAEtQ,MAAM,EAAEo9H,SAAU,CAAC;;MAE9F;MACAxwH,UAAU,CAACwD,SAAS,CAAEpQ,MAAM,EAAEsQ,SAAS,EAAEtQ,MAAM,EAAEsQ,SAAS,EAAEtQ,MAAM,EAAE6lJ,UAAU,EAAEjpK,CAAE,CAAC;IAEpF;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAAknK,MAAOtkJ,MAAM,EAAEsQ,SAAS,EAAE8sH,SAAS,EAAExgJ,CAAC,EAAE2jD,MAAM,EAAG;MAEhD,IAAM1hD,CAAC,GAAG,CAAC,GAAGjC,CAAC;MAEf,KAAM,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;QAErC,IAAMw7B,CAAC,GAAGvI,SAAS,GAAGjzB,CAAC;QAEvB2iB,MAAM,CAAE6Y,CAAC,CAAE,GAAG7Y,MAAM,CAAE6Y,CAAC,CAAE,GAAGh6B,CAAC,GAAGmhB,MAAM,CAAEo9H,SAAS,GAAG//I,CAAC,CAAE,GAAGT,CAAC;MAE5D;IAED;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAAmnK,cAAevkJ,MAAM,EAAEsQ,SAAS,EAAE8sH,SAAS,EAAExgJ,CAAC,EAAE2jD,MAAM,EAAG;MAExD,KAAM,IAAIljD,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKkjD,MAAM,EAAE,EAAGljD,CAAC,EAAG;QAErC,IAAMw7B,CAAC,GAAGvI,SAAS,GAAGjzB,CAAC;QAEvB2iB,MAAM,CAAE6Y,CAAC,CAAE,GAAG7Y,MAAM,CAAE6Y,CAAC,CAAE,GAAG7Y,MAAM,CAAEo9H,SAAS,GAAG//I,CAAC,CAAE,GAAGT,CAAC;MAExD;IAED;EAAC;EAAA,OAAA+mK,aAAA;AAAA,KAIF;AACA,IAAMmC,kBAAkB,GAAG,eAAe;AAC1C,IAAMC,WAAW,GAAG,IAAIC,MAAM,CAAE,GAAG,GAAGF,kBAAkB,GAAG,GAAG,EAAE,GAAI,CAAC;;AAErE;AACA;AACA;AACA,IAAMG,SAAS,GAAG,IAAI,GAAGH,kBAAkB,GAAG,GAAG;AACjD,IAAMI,cAAc,GAAG,IAAI,GAAGJ,kBAAkB,CAAC/iF,OAAO,CAAE,KAAK,EAAE,EAAG,CAAC,GAAG,GAAG;;AAE3E;AACA;AACA,IAAMojF,YAAY,GAAG,aAAc,kBAAiB,CAACjgJ,MAAM,CAAC68D,OAAO,CAAE,IAAI,EAAEkjF,SAAU,CAAC;;AAEtF;AACA,IAAMG,OAAO,GAAG,aAAc,WAAU,CAAClgJ,MAAM,CAAC68D,OAAO,CAAE,MAAM,EAAEmjF,cAAe,CAAC;;AAEjF;AACA;AACA,IAAMG,SAAS,GAAG,aAAc,4BAA2B,CAACngJ,MAAM,CAAC68D,OAAO,CAAE,IAAI,EAAEkjF,SAAU,CAAC;;AAE7F;AACA;AACA,IAAMK,WAAW,GAAG,aAAc,uBAAsB,CAACpgJ,MAAM,CAAC68D,OAAO,CAAE,IAAI,EAAEkjF,SAAU,CAAC;AAE1F,IAAMM,QAAQ,GAAG,IAAIP,MAAM,CAAE,EAAE,GAC5B,GAAG,GACHG,YAAY,GACZC,OAAO,GACPC,SAAS,GACTC,WAAW,GACX,GACH,CAAC;AAED,IAAME,qBAAqB,GAAG,CAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,CAAE;AAAC,IAEpEC,SAAS;EAEd,SAAAA,UAAaC,WAAW,EAAEloF,IAAI,EAAEmoF,kBAAkB,EAAG;IAAAxjK,eAAA,OAAAsjK,SAAA;IAEpD,IAAMG,UAAU,GAAGD,kBAAkB,IAAIE,eAAe,CAACC,cAAc,CAAEtoF,IAAK,CAAC;IAE/E,IAAI,CAACuoF,YAAY,GAAGL,WAAW;IAC/B,IAAI,CAACM,SAAS,GAAGN,WAAW,CAACO,UAAU,CAAEzoF,IAAI,EAAEooF,UAAW,CAAC;EAE5D;EAAChjK,YAAA,CAAA6iK,SAAA;IAAA9iK,GAAA;IAAAvG,KAAA,EAED,SAAAsoK,SAAU1zJ,KAAK,EAAE2I,MAAM,EAAG;MAEzB,IAAI,CAAC0lG,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEb,IAAM6mD,eAAe,GAAG,IAAI,CAACH,YAAY,CAACI,eAAe;QACxDvD,OAAO,GAAG,IAAI,CAACoD,SAAS,CAAEE,eAAe,CAAE;;MAE5C;MACA,IAAKtD,OAAO,KAAKv/J,SAAS,EAAGu/J,OAAO,CAAC8B,QAAQ,CAAE1zJ,KAAK,EAAE2I,MAAO,CAAC;IAE/D;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAu6E,SAAU3lE,KAAK,EAAE2I,MAAM,EAAG;MAEzB,IAAMysJ,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI3pK,CAAC,GAAG,IAAI,CAAC0pK,YAAY,CAACI,eAAe,EAAEnqK,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAErF+pK,QAAQ,CAAE/pK,CAAC,CAAE,CAACs6E,QAAQ,CAAE3lE,KAAK,EAAE2I,MAAO,CAAC;MAExC;IAED;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAijH,KAAA,EAAO;MAEN,IAAM+mD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI3pK,CAAC,GAAG,IAAI,CAAC0pK,YAAY,CAACI,eAAe,EAAEnqK,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAErF+pK,QAAQ,CAAE/pK,CAAC,CAAE,CAACgjH,IAAI,CAAC,CAAC;MAErB;IAED;EAAC;IAAA18G,GAAA;IAAAvG,KAAA,EAED,SAAAiqK,OAAA,EAAS;MAER,IAAMD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI3pK,CAAC,GAAG,IAAI,CAAC0pK,YAAY,CAACI,eAAe,EAAEnqK,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAErF+pK,QAAQ,CAAE/pK,CAAC,CAAE,CAACgqK,MAAM,CAAC,CAAC;MAEvB;IAED;EAAC;EAAA,OAAAZ,SAAA;AAAA,KAIF;AACA;AACA;AACA;AACA;AAAA,IACMI,eAAe,GAAApiK,OAAA,CAAAoiK,eAAA;EAEpB,SAAAA,gBAAaS,QAAQ,EAAE9oF,IAAI,EAAEooF,UAAU,EAAG;IAAAzjK,eAAA,OAAA0jK,eAAA;IAEzC,IAAI,CAACroF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACooF,UAAU,GAAGA,UAAU,IAAIC,eAAe,CAACC,cAAc,CAAEtoF,IAAK,CAAC;IAEtE,IAAI,CAAC+oF,IAAI,GAAGV,eAAe,CAACW,QAAQ,CAAEF,QAAQ,EAAE,IAAI,CAACV,UAAU,CAACa,QAAS,CAAC;IAE1E,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;IAExB;IACA,IAAI,CAAC5B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;IACtC,IAAI,CAAC/vF,QAAQ,GAAG,IAAI,CAACgwF,iBAAiB;EAEvC;EAAC/jK,YAAA,CAAAijK,eAAA;IAAAljK,GAAA;IAAAvG,KAAA;IA0ID;IACA,SAAAwqK,sBAAA,EAAwB,CAAC;EAAC;IAAAjkK,GAAA;IAAAvG,KAAA,EAC1B,SAAAyqK,sBAAA,EAAwB,CAAC;;IAEzB;EAAA;IAAAlkK,GAAA;IAAAvG,KAAA,EAEA,SAAA0qK,iBAAkB9nJ,MAAM,EAAErF,MAAM,EAAG;MAElCqF,MAAM,CAAErF,MAAM,CAAE,GAAG,IAAI,CAACotJ,YAAY,CAAE,IAAI,CAAC9f,YAAY,CAAE;IAE1D;EAAC;IAAAtkJ,GAAA;IAAAvG,KAAA,EAED,SAAA4qK,gBAAiBhoJ,MAAM,EAAErF,MAAM,EAAG;MAEjC,IAAMuL,MAAM,GAAG,IAAI,CAAC+hJ,gBAAgB;MAEpC,KAAM,IAAI5qK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGkpB,MAAM,CAACxkB,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEnD2iB,MAAM,CAAErF,MAAM,EAAG,CAAE,GAAGuL,MAAM,CAAE7oB,CAAC,CAAE;MAElC;IAED;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAA8qK,uBAAwBloJ,MAAM,EAAErF,MAAM,EAAG;MAExCqF,MAAM,CAAErF,MAAM,CAAE,GAAG,IAAI,CAACstJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE;IAE/D;EAAC;IAAAxkK,GAAA;IAAAvG,KAAA,EAED,SAAAgrK,kBAAmBpoJ,MAAM,EAAErF,MAAM,EAAG;MAEnC,IAAI,CAACstJ,gBAAgB,CAACrtJ,OAAO,CAAEoF,MAAM,EAAErF,MAAO,CAAC;IAEhD;;IAEA;EAAA;IAAAhX,GAAA;IAAAvG,KAAA,EAEA,SAAAirK,iBAAkBroJ,MAAM,EAAErF,MAAM,EAAG;MAElC,IAAI,CAACotJ,YAAY,CAAE,IAAI,CAAC9f,YAAY,CAAE,GAAGjoI,MAAM,CAAErF,MAAM,CAAE;IAE1D;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAkrK,gCAAiCtoJ,MAAM,EAAErF,MAAM,EAAG;MAEjD,IAAI,CAACotJ,YAAY,CAAE,IAAI,CAAC9f,YAAY,CAAE,GAAGjoI,MAAM,CAAErF,MAAM,CAAE;MACzD,IAAI,CAACotJ,YAAY,CAAC3gJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAmrK,2CAA4CvoJ,MAAM,EAAErF,MAAM,EAAG;MAE5D,IAAI,CAACotJ,YAAY,CAAE,IAAI,CAAC9f,YAAY,CAAE,GAAGjoI,MAAM,CAAErF,MAAM,CAAE;MACzD,IAAI,CAACotJ,YAAY,CAAC7iI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAvhC,GAAA;IAAAvG,KAAA,EAEA,SAAAorK,gBAAiBxoJ,MAAM,EAAErF,MAAM,EAAG;MAEjC,IAAM8tJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI5qK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGyrK,IAAI,CAAC/mK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEjDorK,IAAI,CAAEprK,CAAC,CAAE,GAAG2iB,MAAM,CAAErF,MAAM,EAAG,CAAE;MAEhC;IAED;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAsrK,+BAAgC1oJ,MAAM,EAAErF,MAAM,EAAG;MAEhD,IAAM8tJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI5qK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGyrK,IAAI,CAAC/mK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEjDorK,IAAI,CAAEprK,CAAC,CAAE,GAAG2iB,MAAM,CAAErF,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAACotJ,YAAY,CAAC3gJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAurK,0CAA2C3oJ,MAAM,EAAErF,MAAM,EAAG;MAE3D,IAAM8tJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI5qK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGyrK,IAAI,CAAC/mK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEjDorK,IAAI,CAAEprK,CAAC,CAAE,GAAG2iB,MAAM,CAAErF,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAACotJ,YAAY,CAAC7iI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAvhC,GAAA;IAAAvG,KAAA,EAEA,SAAAwrK,uBAAwB5oJ,MAAM,EAAErF,MAAM,EAAG;MAExC,IAAI,CAACstJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGnoJ,MAAM,CAAErF,MAAM,CAAE;IAE/D;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAyrK,sCAAuC7oJ,MAAM,EAAErF,MAAM,EAAG;MAEvD,IAAI,CAACstJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGnoJ,MAAM,CAAErF,MAAM,CAAE;MAC9D,IAAI,CAACotJ,YAAY,CAAC3gJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAA0rK,iDAAkD9oJ,MAAM,EAAErF,MAAM,EAAG;MAElE,IAAI,CAACstJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGnoJ,MAAM,CAAErF,MAAM,CAAE;MAC9D,IAAI,CAACotJ,YAAY,CAAC7iI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAvhC,GAAA;IAAAvG,KAAA,EAEA,SAAA2rK,oBAAqB/oJ,MAAM,EAAErF,MAAM,EAAG;MAErC,IAAI,CAACstJ,gBAAgB,CAACvtJ,SAAS,CAAEsF,MAAM,EAAErF,MAAO,CAAC;IAElD;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAA4rK,mCAAoChpJ,MAAM,EAAErF,MAAM,EAAG;MAEpD,IAAI,CAACstJ,gBAAgB,CAACvtJ,SAAS,CAAEsF,MAAM,EAAErF,MAAO,CAAC;MACjD,IAAI,CAACotJ,YAAY,CAAC3gJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAA6rK,8CAA+CjpJ,MAAM,EAAErF,MAAM,EAAG;MAE/D,IAAI,CAACstJ,gBAAgB,CAACvtJ,SAAS,CAAEsF,MAAM,EAAErF,MAAO,CAAC;MACjD,IAAI,CAACotJ,YAAY,CAAC7iI,sBAAsB,GAAG,IAAI;IAEhD;EAAC;IAAAvhC,GAAA;IAAAvG,KAAA,EAED,SAAAsqK,kBAAmBwB,WAAW,EAAEvuJ,MAAM,EAAG;MAExC,IAAI,CAAC0lG,IAAI,CAAC,CAAC;MACX,IAAI,CAACqlD,QAAQ,CAAEwD,WAAW,EAAEvuJ,MAAO,CAAC;IAErC;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAuqK,kBAAmBwB,WAAW,EAAExuJ,MAAM,EAAG;MAExC,IAAI,CAAC0lG,IAAI,CAAC,CAAC;MACX,IAAI,CAAC1oC,QAAQ,CAAEwxF,WAAW,EAAExuJ,MAAO,CAAC;IAErC;;IAEA;EAAA;IAAAhX,GAAA;IAAAvG,KAAA,EACA,SAAAijH,KAAA,EAAO;MAEN,IAAI0nD,YAAY,GAAG,IAAI,CAACR,IAAI;MAC5B,IAAMX,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,IAAMwC,UAAU,GAAGxC,UAAU,CAACwC,UAAU;MACxC,IAAMnhB,YAAY,GAAG2e,UAAU,CAAC3e,YAAY;MAC5C,IAAIkgB,aAAa,GAAGvB,UAAU,CAACuB,aAAa;MAE5C,IAAK,CAAEJ,YAAY,EAAG;QAErBA,YAAY,GAAGlB,eAAe,CAACW,QAAQ,CAAE,IAAI,CAACF,QAAQ,EAAEV,UAAU,CAACa,QAAS,CAAC;QAE7E,IAAI,CAACF,IAAI,GAAGQ,YAAY;MAEzB;;MAEA;MACA,IAAI,CAACrC,QAAQ,GAAG,IAAI,CAACkC,qBAAqB;MAC1C,IAAI,CAACjwF,QAAQ,GAAG,IAAI,CAACkwF,qBAAqB;;MAE1C;MACA,IAAK,CAAEE,YAAY,EAAG;QAErBxxJ,OAAO,CAACC,IAAI,CAAE,yDAAyD,GAAG,IAAI,CAACgoE,IAAI,GAAG,GAAI,CAAC;QAC3F;MAED;MAEA,IAAK4qF,UAAU,EAAG;QAEjB,IAAIC,WAAW,GAAGzC,UAAU,CAACyC,WAAW;;QAExC;QACA,QAASD,UAAU;UAElB,KAAK,WAAW;YAEf,IAAK,CAAErB,YAAY,CAAC59H,QAAQ,EAAG;cAE9B5zB,OAAO,CAACywB,KAAK,CAAE,mFAAmF,EAAE,IAAK,CAAC;cAC1G;YAED;YAEA,IAAK,CAAE+gI,YAAY,CAAC59H,QAAQ,CAACvB,SAAS,EAAG;cAExCryB,OAAO,CAACywB,KAAK,CAAE,6GAA6G,EAAE,IAAK,CAAC;cACpI;YAED;YAEA+gI,YAAY,GAAGA,YAAY,CAAC59H,QAAQ,CAACvB,SAAS;YAE9C;UAED,KAAK,OAAO;YAEX,IAAK,CAAEm/H,YAAY,CAAC79H,QAAQ,EAAG;cAE9B3zB,OAAO,CAACywB,KAAK,CAAE,gFAAgF,EAAE,IAAK,CAAC;cACvG;YAED;;YAEA;YACA;;YAEA+gI,YAAY,GAAGA,YAAY,CAAC79H,QAAQ,CAACgoF,KAAK;;YAE1C;YACA,KAAM,IAAI70H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0qK,YAAY,CAACrmK,MAAM,EAAErE,CAAC,EAAG,EAAG;cAEhD,IAAK0qK,YAAY,CAAE1qK,CAAC,CAAE,CAACyE,IAAI,KAAKunK,WAAW,EAAG;gBAE7CA,WAAW,GAAGhsK,CAAC;gBACf;cAED;YAED;YAEA;UAED,KAAK,KAAK;YAET,IAAK,KAAK,IAAI0qK,YAAY,EAAG;cAE5BA,YAAY,GAAGA,YAAY,CAAC71H,GAAG;cAC/B;YAED;YAEA,IAAK,CAAE61H,YAAY,CAAC59H,QAAQ,EAAG;cAE9B5zB,OAAO,CAACywB,KAAK,CAAE,mFAAmF,EAAE,IAAK,CAAC;cAC1G;YAED;YAEA,IAAK,CAAE+gI,YAAY,CAAC59H,QAAQ,CAAC+H,GAAG,EAAG;cAElC37B,OAAO,CAACywB,KAAK,CAAE,2FAA2F,EAAE,IAAK,CAAC;cAClH;YAED;YAEA+gI,YAAY,GAAGA,YAAY,CAAC59H,QAAQ,CAAC+H,GAAG;YACxC;UAED;YAEC,IAAK61H,YAAY,CAAEqB,UAAU,CAAE,KAAK/kK,SAAS,EAAG;cAE/CkS,OAAO,CAACywB,KAAK,CAAE,sEAAsE,EAAE,IAAK,CAAC;cAC7F;YAED;YAEA+gI,YAAY,GAAGA,YAAY,CAAEqB,UAAU,CAAE;QAE3C;QAGA,IAAKC,WAAW,KAAKhlK,SAAS,EAAG;UAEhC,IAAK0jK,YAAY,CAAEsB,WAAW,CAAE,KAAKhlK,SAAS,EAAG;YAEhDkS,OAAO,CAACywB,KAAK,CAAE,uFAAuF,EAAE,IAAI,EAAE+gI,YAAa,CAAC;YAC5H;UAED;UAEAA,YAAY,GAAGA,YAAY,CAAEsB,WAAW,CAAE;QAE3C;MAED;;MAEA;MACA,IAAMC,YAAY,GAAGvB,YAAY,CAAE9f,YAAY,CAAE;MAEjD,IAAKqhB,YAAY,KAAKjlK,SAAS,EAAG;QAEjC,IAAMojK,QAAQ,GAAGb,UAAU,CAACa,QAAQ;QAEpClxJ,OAAO,CAACywB,KAAK,CAAE,8DAA8D,GAAGygI,QAAQ,GACvF,GAAG,GAAGxf,YAAY,GAAG,wBAAwB,EAAE8f,YAAa,CAAC;QAC9D;MAED;;MAEA;MACA,IAAIwB,UAAU,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI;MAErC,IAAI,CAAC1B,YAAY,GAAGA,YAAY;MAEhC,IAAKA,YAAY,CAAC3gJ,WAAW,KAAK/iB,SAAS,EAAG;QAAE;;QAE/CklK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACE,WAAW;MAEzC,CAAC,MAAM,IAAK3B,YAAY,CAAC7iI,sBAAsB,KAAK7gC,SAAS,EAAG;QAAE;;QAEjEklK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACG,sBAAsB;MAEpD;;MAEA;MACA,IAAIC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM;MAEzC,IAAK3B,aAAa,KAAK9jK,SAAS,EAAG;QAElC;;QAEA,IAAK4jJ,YAAY,KAAK,uBAAuB,EAAG;UAE/C;;UAEA;UACA,IAAK,CAAE8f,YAAY,CAACpxI,QAAQ,EAAG;YAE9BpgB,OAAO,CAACywB,KAAK,CAAE,qGAAqG,EAAE,IAAK,CAAC;YAC5H;UAED;UAEA,IAAK,CAAE+gI,YAAY,CAACpxI,QAAQ,CAAC+lB,eAAe,EAAG;YAE9CnmC,OAAO,CAACywB,KAAK,CAAE,qHAAqH,EAAE,IAAK,CAAC;YAC5I;UAED;UAEA,IAAK+gI,YAAY,CAAC3lH,qBAAqB,CAAE+lH,aAAa,CAAE,KAAK9jK,SAAS,EAAG;YAExE8jK,aAAa,GAAGJ,YAAY,CAAC3lH,qBAAqB,CAAE+lH,aAAa,CAAE;UAEpE;QAED;QAEAyB,WAAW,GAAG,IAAI,CAACC,WAAW,CAACE,YAAY;QAE3C,IAAI,CAAC9B,gBAAgB,GAAGqB,YAAY;QACpC,IAAI,CAACnB,aAAa,GAAGA,aAAa;MAEnC,CAAC,MAAM,IAAKmB,YAAY,CAAC5uJ,SAAS,KAAKrW,SAAS,IAAIilK,YAAY,CAAC1uJ,OAAO,KAAKvW,SAAS,EAAG;QAExF;;QAEAulK,WAAW,GAAG,IAAI,CAACC,WAAW,CAACG,cAAc;QAE7C,IAAI,CAAC/B,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM,IAAK5kJ,KAAK,CAACC,OAAO,CAAE2kJ,YAAa,CAAC,EAAG;QAE3CM,WAAW,GAAG,IAAI,CAACC,WAAW,CAACI,WAAW;QAE1C,IAAI,CAAChC,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM;QAEN,IAAI,CAACrhB,YAAY,GAAGA,YAAY;MAEjC;;MAEA;MACA,IAAI,CAACyd,QAAQ,GAAG,IAAI,CAACwE,mBAAmB,CAAEN,WAAW,CAAE;MACvD,IAAI,CAACjyF,QAAQ,GAAG,IAAI,CAACwyF,gCAAgC,CAAEP,WAAW,CAAE,CAAEL,UAAU,CAAE;IAEnF;EAAC;IAAA5lK,GAAA;IAAAvG,KAAA,EAED,SAAAiqK,OAAA,EAAS;MAER,IAAI,CAACE,IAAI,GAAG,IAAI;;MAEhB;MACA;MACA,IAAI,CAAC7B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;MACtC,IAAI,CAAC/vF,QAAQ,GAAG,IAAI,CAACgwF,iBAAiB;IAEvC;EAAC;IAAAhkK,GAAA;IAAAvG,KAAA,EAvhBD,SAAAe,OAAeisK,IAAI,EAAE5rF,IAAI,EAAEooF,UAAU,EAAG;MAEvC,IAAK,EAAIwD,IAAI,IAAIA,IAAI,CAACC,sBAAsB,CAAE,EAAG;QAEhD,OAAO,IAAIxD,eAAe,CAAEuD,IAAI,EAAE5rF,IAAI,EAAEooF,UAAW,CAAC;MAErD,CAAC,MAAM;QAEN,OAAO,IAAIC,eAAe,CAACJ,SAAS,CAAE2D,IAAI,EAAE5rF,IAAI,EAAEooF,UAAW,CAAC;MAE/D;IAED;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAAjjK,GAAA;IAAAvG,KAAA,EAOA,SAAAktK,iBAAyBxoK,IAAI,EAAG;MAE/B,OAAOA,IAAI,CAACihF,OAAO,CAAE,KAAK,EAAE,GAAI,CAAC,CAACA,OAAO,CAAEgjF,WAAW,EAAE,EAAG,CAAC;IAE7D;EAAC;IAAApiK,GAAA;IAAAvG,KAAA,EAED,SAAA0pK,eAAuB/e,SAAS,EAAG;MAElC,IAAMwiB,OAAO,GAAGhE,QAAQ,CAACzwH,IAAI,CAAEiyG,SAAU,CAAC;MAE1C,IAAKwiB,OAAO,KAAK,IAAI,EAAG;QAEvB,MAAM,IAAItqK,KAAK,CAAE,2CAA2C,GAAG8nJ,SAAU,CAAC;MAE3E;MAEA,IAAMyiB,OAAO,GAAG;QACf;QACA/C,QAAQ,EAAE8C,OAAO,CAAE,CAAC,CAAE;QACtBnB,UAAU,EAAEmB,OAAO,CAAE,CAAC,CAAE;QACxBlB,WAAW,EAAEkB,OAAO,CAAE,CAAC,CAAE;QACzBtiB,YAAY,EAAEsiB,OAAO,CAAE,CAAC,CAAE;QAAE;QAC5BpC,aAAa,EAAEoC,OAAO,CAAE,CAAC;MAC1B,CAAC;MAED,IAAME,OAAO,GAAGD,OAAO,CAAC/C,QAAQ,IAAI+C,OAAO,CAAC/C,QAAQ,CAACnS,WAAW,CAAE,GAAI,CAAC;MAEvE,IAAKmV,OAAO,KAAKpmK,SAAS,IAAIomK,OAAO,KAAK,CAAE,CAAC,EAAG;QAE/C,IAAMrB,UAAU,GAAGoB,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAED,OAAO,GAAG,CAAE,CAAC;;QAE5D;QACA;QACA;QACA;QACA,IAAKjE,qBAAqB,CAACh1J,OAAO,CAAE43J,UAAW,CAAC,KAAK,CAAE,CAAC,EAAG;UAE1DoB,OAAO,CAAC/C,QAAQ,GAAG+C,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAE,CAAC,EAAED,OAAQ,CAAC;UAC3DD,OAAO,CAACpB,UAAU,GAAGA,UAAU;QAEhC;MAED;MAEA,IAAKoB,OAAO,CAACviB,YAAY,KAAK,IAAI,IAAIuiB,OAAO,CAACviB,YAAY,CAACvmJ,MAAM,KAAK,CAAC,EAAG;QAEzE,MAAM,IAAIzB,KAAK,CAAE,8DAA8D,GAAG8nJ,SAAU,CAAC;MAE9F;MAEA,OAAOyiB,OAAO;IAEf;EAAC;IAAA7mK,GAAA;IAAAvG,KAAA,EAED,SAAAoqK,SAAiB4C,IAAI,EAAE3C,QAAQ,EAAG;MAEjC,IAAKA,QAAQ,KAAKpjK,SAAS,IAAIojK,QAAQ,KAAK,EAAE,IAAIA,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,CAAE,CAAC,IAAIA,QAAQ,KAAK2C,IAAI,CAACtoK,IAAI,IAAI2lK,QAAQ,KAAK2C,IAAI,CAACv3J,IAAI,EAAG;QAE5I,OAAOu3J,IAAI;MAEZ;;MAEA;MACA,IAAKA,IAAI,CAAClgI,QAAQ,EAAG;QAEpB,IAAMipF,IAAI,GAAGi3C,IAAI,CAAClgI,QAAQ,CAACkpF,aAAa,CAAEq0C,QAAS,CAAC;QAEpD,IAAKt0C,IAAI,KAAK9uH,SAAS,EAAG;UAEzB,OAAO8uH,IAAI;QAEZ;MAED;;MAEA;MACA,IAAKi3C,IAAI,CAACtzI,QAAQ,EAAG;QAEpB,IAAM6zI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAc7zI,QAAQ,EAAG;UAE/C,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy5B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,EAAG,EAAG;YAE5C,IAAMutK,SAAS,GAAG9zI,QAAQ,CAAEz5B,CAAC,CAAE;YAE/B,IAAKutK,SAAS,CAAC9oK,IAAI,KAAK2lK,QAAQ,IAAImD,SAAS,CAAC/3J,IAAI,KAAK40J,QAAQ,EAAG;cAEjE,OAAOmD,SAAS;YAEjB;YAEA,IAAM/iI,MAAM,GAAG8iI,iBAAiB,CAAEC,SAAS,CAAC9zI,QAAS,CAAC;YAEtD,IAAK+Q,MAAM,EAAG,OAAOA,MAAM;UAE5B;UAEA,OAAO,IAAI;QAEZ,CAAC;QAED,IAAMgjI,WAAW,GAAGF,iBAAiB,CAAEP,IAAI,CAACtzI,QAAS,CAAC;QAEtD,IAAK+zI,WAAW,EAAG;UAElB,OAAOA,WAAW;QAEnB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAhE,eAAA;AAAA;AAsZFA,eAAe,CAACJ,SAAS,GAAGA,SAAS;AAErCI,eAAe,CAAC9pK,SAAS,CAAC8sK,WAAW,GAAG;EACvCC,MAAM,EAAE,CAAC;EACTG,WAAW,EAAE,CAAC;EACdF,YAAY,EAAE,CAAC;EACfC,cAAc,EAAE;AACjB,CAAC;AAEDnD,eAAe,CAAC9pK,SAAS,CAACysK,UAAU,GAAG;EACtCC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,CAAC;EACdC,sBAAsB,EAAE;AACzB,CAAC;AAED9C,eAAe,CAAC9pK,SAAS,CAACmtK,mBAAmB,GAAG,CAE/CrD,eAAe,CAAC9pK,SAAS,CAAC+qK,gBAAgB,EAC1CjB,eAAe,CAAC9pK,SAAS,CAACirK,eAAe,EACzCnB,eAAe,CAAC9pK,SAAS,CAACmrK,sBAAsB,EAChDrB,eAAe,CAAC9pK,SAAS,CAACqrK,iBAAiB,CAE3C;AAEDvB,eAAe,CAAC9pK,SAAS,CAACotK,gCAAgC,GAAG,CAE5D;AACC;AACAtD,eAAe,CAAC9pK,SAAS,CAACsrK,gBAAgB,EAC1CxB,eAAe,CAAC9pK,SAAS,CAACurK,+BAA+B,EACzDzB,eAAe,CAAC9pK,SAAS,CAACwrK,0CAA0C,CAEpE,EAAE;AAEF;;AAEA1B,eAAe,CAAC9pK,SAAS,CAACyrK,eAAe,EACzC3B,eAAe,CAAC9pK,SAAS,CAAC2rK,8BAA8B,EACxD7B,eAAe,CAAC9pK,SAAS,CAAC4rK,yCAAyC,CAEnE,EAAE;AAEF;AACA9B,eAAe,CAAC9pK,SAAS,CAAC6rK,sBAAsB,EAChD/B,eAAe,CAAC9pK,SAAS,CAAC8rK,qCAAqC,EAC/DhC,eAAe,CAAC9pK,SAAS,CAAC+rK,gDAAgD,CAE1E,EAAE;AAEF;AACAjC,eAAe,CAAC9pK,SAAS,CAACgsK,mBAAmB,EAC7ClC,eAAe,CAAC9pK,SAAS,CAACisK,kCAAkC,EAC5DnC,eAAe,CAAC9pK,SAAS,CAACksK,6CAA6C,CAEvE,CAED;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IA6BM6B,oBAAoB,GAAArmK,OAAA,CAAAqmK,oBAAA;EAEzB,SAAAA,qBAAA,EAAc;IAAA3nK,eAAA,OAAA2nK,oBAAA;IAEb,IAAI,CAACT,sBAAsB,GAAG,IAAI;IAElC,IAAI,CAACx3J,IAAI,GAAGN,YAAY,CAAC,CAAC;;IAE1B;IACA,IAAI,CAACqkF,QAAQ,GAAGlyE,KAAK,CAAC3nB,SAAS,CAAC2F,KAAK,CAACjE,IAAI,CAAEsoC,SAAU,CAAC;IAEvD,IAAI,CAACogI,eAAe,GAAG,CAAC,CAAC,CAAC;IAC1B;;IAEA,IAAMlpH,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC8sH,cAAc,GAAG9sH,OAAO,CAAC,CAAC;;IAE/B,KAAM,IAAI5gD,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG+pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;MAEtD4gD,OAAO,CAAElX,SAAS,CAAE1pC,CAAC,CAAE,CAACwV,IAAI,CAAE,GAAGxV,CAAC;IAEnC;IAEA,IAAI,CAAC2tK,MAAM,GAAG,EAAE,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,GAAG,EAAE,CAAC,CAAC;IACxB,IAAI,CAACjE,SAAS,GAAG,EAAE,CAAC,CAAC;IACrB,IAAI,CAACkE,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;IAElC,IAAMtnH,KAAK,GAAG,IAAI;IAElB,IAAI,CAACunH,KAAK,GAAG;MAEZznG,OAAO,EAAE;QACR,IAAIopF,KAAKA,CAAA,EAAG;UAEX,OAAOlpG,KAAK,CAACgzC,QAAQ,CAACl1F,MAAM;QAE7B,CAAC;QACD,IAAI0pK,KAAKA,CAAA,EAAG;UAEX,OAAO,IAAI,CAACte,KAAK,GAAGlpG,KAAK,CAACujH,eAAe;QAE1C;MACD,CAAC;MACD,IAAIkE,iBAAiBA,CAAA,EAAG;QAEvB,OAAOznH,KAAK,CAACojH,SAAS,CAACtlK,MAAM;MAE9B;IAED,CAAC;EAEF;EAACkC,YAAA,CAAAknK,oBAAA;IAAAnnK,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAA,EAAM;MAEL,IAAM0rD,OAAO,GAAG,IAAI,CAACkzB,QAAQ;QAC5B00E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnCQ,KAAK,GAAG,IAAI,CAACP,MAAM;QACnBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAAC1lK,MAAM;MAE5B,IAAIgqK,WAAW,GAAGrnK,SAAS;QAC1BsnK,QAAQ,GAAGjoG,OAAO,CAAChiE,MAAM;QACzBkqK,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEtC,KAAM,IAAI9pK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG+pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEtD,IAAMs4B,MAAM,GAAGoR,SAAS,CAAE1pC,CAAC,CAAE;UAC5BwV,IAAI,GAAG8iB,MAAM,CAAC9iB,IAAI;QACnB,IAAIjB,KAAK,GAAG05J,aAAa,CAAEz4J,IAAI,CAAE;QAEjC,IAAKjB,KAAK,KAAKvN,SAAS,EAAG;UAE1B;;UAEAuN,KAAK,GAAG+5J,QAAQ,EAAG;UACnBL,aAAa,CAAEz4J,IAAI,CAAE,GAAGjB,KAAK;UAC7B8xD,OAAO,CAACriE,IAAI,CAAEs0B,MAAO,CAAC;;UAEtB;;UAEA,KAAM,IAAIkD,CAAC,GAAG,CAAC,EAAE1lB,CAAC,GAAGs4J,SAAS,EAAE5yI,CAAC,KAAK1lB,CAAC,EAAE,EAAG0lB,CAAC,EAAG;YAE/CuuI,QAAQ,CAAEvuI,CAAC,CAAE,CAACx3B,IAAI,CAAE,IAAIwlK,eAAe,CAAElxI,MAAM,EAAE41I,KAAK,CAAE1yI,CAAC,CAAE,EAAE2yI,WAAW,CAAE3yI,CAAC,CAAG,CAAE,CAAC;UAElF;QAED,CAAC,MAAM,IAAKjnB,KAAK,GAAGg6J,cAAc,EAAG;UAEpCF,WAAW,GAAGhoG,OAAO,CAAE9xD,KAAK,CAAE;;UAE9B;;UAEA,IAAMi6J,gBAAgB,GAAG,EAAGD,cAAc;YACzCE,gBAAgB,GAAGpoG,OAAO,CAAEmoG,gBAAgB,CAAE;UAE/CP,aAAa,CAAEQ,gBAAgB,CAACj5J,IAAI,CAAE,GAAGjB,KAAK;UAC9C8xD,OAAO,CAAE9xD,KAAK,CAAE,GAAGk6J,gBAAgB;UAEnCR,aAAa,CAAEz4J,IAAI,CAAE,GAAGg5J,gBAAgB;UACxCnoG,OAAO,CAAEmoG,gBAAgB,CAAE,GAAGl2I,MAAM;;UAEpC;;UAEA,KAAM,IAAIkD,IAAC,GAAG,CAAC,EAAE1lB,GAAC,GAAGs4J,SAAS,EAAE5yI,IAAC,KAAK1lB,GAAC,EAAE,EAAG0lB,IAAC,EAAG;YAE/C,IAAMkzI,eAAe,GAAG3E,QAAQ,CAAEvuI,IAAC,CAAE;cACpCmzI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;YAEjD,IAAIjI,OAAO,GAAGmI,eAAe,CAAEn6J,KAAK,CAAE;YAEtCm6J,eAAe,CAAEn6J,KAAK,CAAE,GAAGo6J,UAAU;YAErC,IAAKpI,OAAO,KAAKv/J,SAAS,EAAG;cAE5B;cACA;cACA;;cAEAu/J,OAAO,GAAG,IAAIiD,eAAe,CAAElxI,MAAM,EAAE41I,KAAK,CAAE1yI,IAAC,CAAE,EAAE2yI,WAAW,CAAE3yI,IAAC,CAAG,CAAC;YAEtE;YAEAkzI,eAAe,CAAEF,gBAAgB,CAAE,GAAGjI,OAAO;UAE9C;QAED,CAAC,MAAM,IAAKlgG,OAAO,CAAE9xD,KAAK,CAAE,KAAK85J,WAAW,EAAG;UAE9Cn1J,OAAO,CAACywB,KAAK,CAAE,mEAAmE,GACjF,mFAAoF,CAAC;QAEvF,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAACmgI,eAAe,GAAGyE,cAAc;IAEtC;EAAC;IAAAjoK,GAAA;IAAAvG,KAAA,EAED,SAAA6pC,OAAA,EAAS;MAER,IAAMy8B,OAAO,GAAG,IAAI,CAACkzB,QAAQ;QAC5B00E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAAC1lK,MAAM;MAE5B,IAAIkqK,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEzC,KAAM,IAAI9pK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG+pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEtD,IAAMs4B,MAAM,GAAGoR,SAAS,CAAE1pC,CAAC,CAAE;UAC5BwV,IAAI,GAAG8iB,MAAM,CAAC9iB,IAAI;UAClBjB,KAAK,GAAG05J,aAAa,CAAEz4J,IAAI,CAAE;QAE9B,IAAKjB,KAAK,KAAKvN,SAAS,IAAIuN,KAAK,IAAIg6J,cAAc,EAAG;UAErD;;UAEA,IAAMK,eAAe,GAAGL,cAAc,EAAG;YACxCM,iBAAiB,GAAGxoG,OAAO,CAAEuoG,eAAe,CAAE;UAE/CX,aAAa,CAAEY,iBAAiB,CAACr5J,IAAI,CAAE,GAAGjB,KAAK;UAC/C8xD,OAAO,CAAE9xD,KAAK,CAAE,GAAGs6J,iBAAiB;UAEpCZ,aAAa,CAAEz4J,IAAI,CAAE,GAAGo5J,eAAe;UACvCvoG,OAAO,CAAEuoG,eAAe,CAAE,GAAGt2I,MAAM;;UAEnC;;UAEA,KAAM,IAAIkD,CAAC,GAAG,CAAC,EAAE1lB,CAAC,GAAGs4J,SAAS,EAAE5yI,CAAC,KAAK1lB,CAAC,EAAE,EAAG0lB,CAAC,EAAG;YAE/C,IAAMkzI,eAAe,GAAG3E,QAAQ,CAAEvuI,CAAC,CAAE;cACpCszI,WAAW,GAAGJ,eAAe,CAAEE,eAAe,CAAE;cAChDrI,OAAO,GAAGmI,eAAe,CAAEn6J,KAAK,CAAE;YAEnCm6J,eAAe,CAAEn6J,KAAK,CAAE,GAAGu6J,WAAW;YACtCJ,eAAe,CAAEE,eAAe,CAAE,GAAGrI,OAAO;UAE7C;QAED;MAED,CAAC,CAAC;;MAEF,IAAI,CAACuD,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAAjoK,GAAA;IAAAvG,KAAA,EACA,SAAAgvK,QAAA,EAAU;MAET,IAAM1oG,OAAO,GAAG,IAAI,CAACkzB,QAAQ;QAC5B00E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAAC1lK,MAAM;MAE5B,IAAIkqK,cAAc,GAAG,IAAI,CAACzE,eAAe;QACxCwE,QAAQ,GAAGjoG,OAAO,CAAChiE,MAAM;MAE1B,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG+pC,SAAS,CAACrlC,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEtD,IAAMs4B,MAAM,GAAGoR,SAAS,CAAE1pC,CAAC,CAAE;UAC5BwV,IAAI,GAAG8iB,MAAM,CAAC9iB,IAAI;UAClBjB,KAAK,GAAG05J,aAAa,CAAEz4J,IAAI,CAAE;QAE9B,IAAKjB,KAAK,KAAKvN,SAAS,EAAG;UAE1B,OAAOinK,aAAa,CAAEz4J,IAAI,CAAE;UAE5B,IAAKjB,KAAK,GAAGg6J,cAAc,EAAG;YAE7B;;YAEA,IAAMC,gBAAgB,GAAG,EAAGD,cAAc;cACzCE,gBAAgB,GAAGpoG,OAAO,CAAEmoG,gBAAgB,CAAE;cAC9CntF,SAAS,GAAG,EAAGitF,QAAQ;cACvBU,UAAU,GAAG3oG,OAAO,CAAEgb,SAAS,CAAE;;YAElC;YACA4sF,aAAa,CAAEQ,gBAAgB,CAACj5J,IAAI,CAAE,GAAGjB,KAAK;YAC9C8xD,OAAO,CAAE9xD,KAAK,CAAE,GAAGk6J,gBAAgB;;YAEnC;YACAR,aAAa,CAAEe,UAAU,CAACx5J,IAAI,CAAE,GAAGg5J,gBAAgB;YACnDnoG,OAAO,CAAEmoG,gBAAgB,CAAE,GAAGQ,UAAU;YACxC3oG,OAAO,CAACnhE,GAAG,CAAC,CAAC;;YAEb;;YAEA,KAAM,IAAIs2B,CAAC,GAAG,CAAC,EAAE1lB,CAAC,GAAGs4J,SAAS,EAAE5yI,CAAC,KAAK1lB,CAAC,EAAE,EAAG0lB,CAAC,EAAG;cAE/C,IAAMkzI,eAAe,GAAG3E,QAAQ,CAAEvuI,CAAC,CAAE;gBACpCmzI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;gBAChDnxC,IAAI,GAAGqxC,eAAe,CAAErtF,SAAS,CAAE;cAEpCqtF,eAAe,CAAEn6J,KAAK,CAAE,GAAGo6J,UAAU;cACrCD,eAAe,CAAEF,gBAAgB,CAAE,GAAGnxC,IAAI;cAC1CqxC,eAAe,CAACxpK,GAAG,CAAC,CAAC;YAEtB;UAED,CAAC,MAAM;YAEN;;YAEA,IAAMm8E,UAAS,GAAG,EAAGitF,QAAQ;cAC5BU,WAAU,GAAG3oG,OAAO,CAAEgb,UAAS,CAAE;YAElC,IAAKA,UAAS,GAAG,CAAC,EAAG;cAEpB4sF,aAAa,CAAEe,WAAU,CAACx5J,IAAI,CAAE,GAAGjB,KAAK;YAEzC;YAEA8xD,OAAO,CAAE9xD,KAAK,CAAE,GAAGy6J,WAAU;YAC7B3oG,OAAO,CAACnhE,GAAG,CAAC,CAAC;;YAEb;;YAEA,KAAM,IAAIs2B,IAAC,GAAG,CAAC,EAAE1lB,GAAC,GAAGs4J,SAAS,EAAE5yI,IAAC,KAAK1lB,GAAC,EAAE,EAAG0lB,IAAC,EAAG;cAE/C,IAAMkzI,gBAAe,GAAG3E,QAAQ,CAAEvuI,IAAC,CAAE;cAErCkzI,gBAAe,CAAEn6J,KAAK,CAAE,GAAGm6J,gBAAe,CAAErtF,UAAS,CAAE;cACvDqtF,gBAAe,CAACxpK,GAAG,CAAC,CAAC;YAEtB;UAED,CAAC,CAAC;QAEH,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAAC4kK,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAAjoK,GAAA;IAAAvG,KAAA,EAEA,SAAA6pK,WAAYzoF,IAAI,EAAEooF,UAAU,EAAG;MAE9B;MACA;;MAEA,IAAM0F,aAAa,GAAG,IAAI,CAACpB,sBAAsB;MACjD,IAAIt5J,KAAK,GAAG06J,aAAa,CAAE9tF,IAAI,CAAE;MACjC,IAAM4oF,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,IAAKp1J,KAAK,KAAKvN,SAAS,EAAG,OAAO+iK,QAAQ,CAAEx1J,KAAK,CAAE;MAEnD,IAAM25J,KAAK,GAAG,IAAI,CAACP,MAAM;QACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/BvnG,OAAO,GAAG,IAAI,CAACkzB,QAAQ;QACvB+0E,QAAQ,GAAGjoG,OAAO,CAAChiE,MAAM;QACzBkqK,cAAc,GAAG,IAAI,CAACzE,eAAe;QACrC4E,eAAe,GAAG,IAAIrnJ,KAAK,CAAEinJ,QAAS,CAAC;MAExC/5J,KAAK,GAAGw1J,QAAQ,CAAC1lK,MAAM;MAEvB4qK,aAAa,CAAE9tF,IAAI,CAAE,GAAG5sE,KAAK;MAE7B25J,KAAK,CAAClqK,IAAI,CAAEm9E,IAAK,CAAC;MAClBgtF,WAAW,CAACnqK,IAAI,CAAEulK,UAAW,CAAC;MAC9BQ,QAAQ,CAAC/lK,IAAI,CAAE0qK,eAAgB,CAAC;MAEhC,KAAM,IAAI1uK,CAAC,GAAGuuK,cAAc,EAAE5uK,CAAC,GAAG0mE,OAAO,CAAChiE,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAEjE,IAAMs4B,MAAM,GAAG+tC,OAAO,CAAErmE,CAAC,CAAE;QAC3B0uK,eAAe,CAAE1uK,CAAC,CAAE,GAAG,IAAIwpK,eAAe,CAAElxI,MAAM,EAAE6oD,IAAI,EAAEooF,UAAW,CAAC;MAEvE;MAEA,OAAOmF,eAAe;IAEvB;EAAC;IAAApoK,GAAA;IAAAvG,KAAA,EAED,SAAAmvK,aAAc/tF,IAAI,EAAG;MAEpB;MACA;;MAEA,IAAM8tF,aAAa,GAAG,IAAI,CAACpB,sBAAsB;QAChDt5J,KAAK,GAAG06J,aAAa,CAAE9tF,IAAI,CAAE;MAE9B,IAAK5sE,KAAK,KAAKvN,SAAS,EAAG;QAE1B,IAAMknK,KAAK,GAAG,IAAI,CAACP,MAAM;UACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;UAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzBwF,iBAAiB,GAAGpF,QAAQ,CAAC1lK,MAAM,GAAG,CAAC;UACvC+qK,YAAY,GAAGrF,QAAQ,CAAEoF,iBAAiB,CAAE;UAC5CE,gBAAgB,GAAGluF,IAAI,CAAEguF,iBAAiB,CAAE;QAE7CF,aAAa,CAAEI,gBAAgB,CAAE,GAAG96J,KAAK;QAEzCw1J,QAAQ,CAAEx1J,KAAK,CAAE,GAAG66J,YAAY;QAChCrF,QAAQ,CAAC7kK,GAAG,CAAC,CAAC;QAEdipK,WAAW,CAAE55J,KAAK,CAAE,GAAG45J,WAAW,CAAEgB,iBAAiB,CAAE;QACvDhB,WAAW,CAACjpK,GAAG,CAAC,CAAC;QAEjBgpK,KAAK,CAAE35J,KAAK,CAAE,GAAG25J,KAAK,CAAEiB,iBAAiB,CAAE;QAC3CjB,KAAK,CAAChpK,GAAG,CAAC,CAAC;MAEZ;IAED;EAAC;EAAA,OAAAuoK,oBAAA;AAAA;AAAA,IAII6B,eAAe,GAAAloK,OAAA,CAAAkoK,eAAA;EAEpB,SAAAA,gBAAaC,KAAK,EAAE/uB,IAAI,EAAEgvB,SAAS,GAAG,IAAI,EAAE5sB,SAAS,GAAGpC,IAAI,CAACoC,SAAS,EAAG;IAAA98I,eAAA,OAAAwpK,eAAA;IAExE,IAAI,CAACG,MAAM,GAAGF,KAAK;IACnB,IAAI,CAACG,KAAK,GAAGlvB,IAAI;IACjB,IAAI,CAACmvB,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAAC5sB,SAAS,GAAGA,SAAS;IAE1B,IAAMnC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzBmvB,OAAO,GAAGnvB,MAAM,CAACp8I,MAAM;MACvBwrK,YAAY,GAAG,IAAIxoJ,KAAK,CAAEuoJ,OAAQ,CAAC;IAEpC,IAAME,mBAAmB,GAAG;MAC3BrrB,WAAW,EAAEx0I,mBAAmB;MAChCy0I,SAAS,EAAEz0I;IACZ,CAAC;IAED,KAAM,IAAIjQ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK4vK,OAAO,EAAE,EAAG5vK,CAAC,EAAG;MAEtC,IAAMoiJ,WAAW,GAAG3B,MAAM,CAAEzgJ,CAAC,CAAE,CAAC6hJ,iBAAiB,CAAE,IAAK,CAAC;MACzDguB,YAAY,CAAE7vK,CAAC,CAAE,GAAGoiJ,WAAW;MAC/BA,WAAW,CAACe,QAAQ,GAAG2sB,mBAAmB;IAE3C;IAEA,IAAI,CAACC,oBAAoB,GAAGD,mBAAmB;IAE/C,IAAI,CAACE,aAAa,GAAGH,YAAY,CAAC,CAAC;;IAEnC;IACA,IAAI,CAACI,iBAAiB,GAAG,IAAI5oJ,KAAK,CAAEuoJ,OAAQ,CAAC;IAE7C,IAAI,CAACM,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;IAE/B,IAAI,CAACC,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAE9B,IAAI,CAAC7O,IAAI,GAAG5xJ,UAAU;IACtB,IAAI,CAAC0gK,UAAU,GAAG,CAAE,CAAC;;IAErB;IACA;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;IACA;IACA,IAAI,CAACr+G,IAAI,GAAG,CAAC;IAEb,IAAI,CAAC20F,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC2pB,mBAAmB,GAAG,CAAC;IAE5B,IAAI,CAAC36F,MAAM,GAAG,CAAC;IACf,IAAI,CAAC46F,gBAAgB,GAAG,CAAC;IAEzB,IAAI,CAACC,WAAW,GAAGj5I,QAAQ,CAAC,CAAC;;IAE7B,IAAI,CAACk5I,MAAM,GAAG,KAAK,CAAC,CAAC;IACrB,IAAI,CAACvsJ,OAAO,GAAG,IAAI,CAAC,CAAC;;IAErB,IAAI,CAACwsJ,iBAAiB,GAAG,KAAK,CAAC;;IAE/B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAC;IAC7B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC;EAE5B;;EAEA;EAAAvqK,YAAA,CAAA+oK,eAAA;IAAAhpK,GAAA;IAAAvG,KAAA,EAEA,SAAA8iK,KAAA,EAAO;MAEN,IAAI,CAAC4M,MAAM,CAACsB,eAAe,CAAE,IAAK,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAzqK,GAAA;IAAAvG,KAAA,EAED,SAAAuF,KAAA,EAAO;MAEN,IAAI,CAACmqK,MAAM,CAACuB,iBAAiB,CAAE,IAAK,CAAC;MAErC,OAAO,IAAI,CAAC7sK,KAAK,CAAC,CAAC;IAEpB;EAAC;IAAAmC,GAAA;IAAAvG,KAAA,EAED,SAAAoE,MAAA,EAAQ;MAEP,IAAI,CAACwsK,MAAM,GAAG,KAAK;MACnB,IAAI,CAACvsJ,OAAO,GAAG,IAAI;MAEnB,IAAI,CAAC8tC,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,IAAI,CAACo+G,UAAU,GAAG,CAAE,CAAC,CAAC;MACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC;;MAEvB,OAAO,IAAI,CAACU,UAAU,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAEvC;EAAC;IAAA5qK,GAAA;IAAAvG,KAAA,EAED,SAAAoxK,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC/sJ,OAAO,IAAI,CAAE,IAAI,CAACusJ,MAAM,IAAI,IAAI,CAAC9pB,SAAS,KAAK,CAAC,IAC3D,IAAI,CAAC0pB,UAAU,KAAK,IAAI,IAAI,IAAI,CAACd,MAAM,CAAC2B,eAAe,CAAE,IAAK,CAAC;IAEjE;;IAEA;EAAA;IAAA9qK,GAAA;IAAAvG,KAAA,EACA,SAAAsxK,YAAA,EAAc;MAEb,OAAO,IAAI,CAAC5B,MAAM,CAAC2B,eAAe,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAA9qK,GAAA;IAAAvG,KAAA,EAED,SAAAuxK,QAASp/G,IAAI,EAAG;MAEf,IAAI,CAACq+G,UAAU,GAAGr+G,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA5rD,GAAA;IAAAvG,KAAA,EAED,SAAA2jK,QAASx3F,IAAI,EAAEwkG,WAAW,EAAG;MAE5B,IAAI,CAAClP,IAAI,GAAGt1F,IAAI;MAChB,IAAI,CAACwkG,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAApqK,GAAA;IAAAvG,KAAA,EACA,SAAAwxK,mBAAoB17F,MAAM,EAAG;MAE5B,IAAI,CAACA,MAAM,GAAGA,MAAM;;MAEpB;MACA,IAAI,CAAC46F,gBAAgB,GAAG,IAAI,CAACrsJ,OAAO,GAAGyxD,MAAM,GAAG,CAAC;MAEjD,OAAO,IAAI,CAACo7F,UAAU,CAAC,CAAC;IAEzB;;IAEA;EAAA;IAAA3qK,GAAA;IAAAvG,KAAA,EACA,SAAAyxK,mBAAA,EAAqB;MAEpB,OAAO,IAAI,CAACf,gBAAgB;IAE7B;EAAC;IAAAnqK,GAAA;IAAAvG,KAAA,EAED,SAAA0xK,OAAQnoB,QAAQ,EAAG;MAElB,OAAO,IAAI,CAACooB,eAAe,CAAEpoB,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9C;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAA4xK,QAASroB,QAAQ,EAAG;MAEnB,OAAO,IAAI,CAACooB,eAAe,CAAEpoB,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9C;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAA6xK,cAAeC,aAAa,EAAEvoB,QAAQ,EAAEwoB,IAAI,EAAG;MAE9CD,aAAa,CAACF,OAAO,CAAEroB,QAAS,CAAC;MACjC,IAAI,CAACmoB,MAAM,CAAEnoB,QAAS,CAAC;MAEvB,IAAKwoB,IAAI,EAAG;QAEX,IAAMC,cAAc,GAAG,IAAI,CAACrC,KAAK,CAACpmB,QAAQ;UACzC0oB,eAAe,GAAGH,aAAa,CAACnC,KAAK,CAACpmB,QAAQ;UAE9C2oB,aAAa,GAAGD,eAAe,GAAGD,cAAc;UAChDG,aAAa,GAAGH,cAAc,GAAGC,eAAe;QAEjDH,aAAa,CAACC,IAAI,CAAE,GAAG,EAAEG,aAAa,EAAE3oB,QAAS,CAAC;QAClD,IAAI,CAACwoB,IAAI,CAAEI,aAAa,EAAE,GAAG,EAAE5oB,QAAS,CAAC;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAAoyK,YAAaC,YAAY,EAAE9oB,QAAQ,EAAEwoB,IAAI,EAAG;MAE3C,OAAOM,YAAY,CAACR,aAAa,CAAE,IAAI,EAAEtoB,QAAQ,EAAEwoB,IAAK,CAAC;IAE1D;EAAC;IAAAxrK,GAAA;IAAAvG,KAAA,EAED,SAAAkxK,WAAA,EAAa;MAEZ,IAAMoB,iBAAiB,GAAG,IAAI,CAAChC,kBAAkB;MAEjD,IAAKgC,iBAAiB,KAAK,IAAI,EAAG;QAEjC,IAAI,CAAChC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACZ,MAAM,CAAC6C,2BAA2B,CAAED,iBAAkB,CAAC;MAE7D;MAEA,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAA/rK,GAAA;IAAAvG,KAAA,EACA,SAAAwyK,sBAAuB1rB,SAAS,EAAG;MAElC,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAAC2pB,mBAAmB,GAAG,IAAI,CAACG,MAAM,GAAG,CAAC,GAAG9pB,SAAS;MAEtD,OAAO,IAAI,CAACqqB,WAAW,CAAC,CAAC;IAE1B;;IAEA;EAAA;IAAA5qK,GAAA;IAAAvG,KAAA,EACA,SAAAyyK,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAAChC,mBAAmB;IAEhC;EAAC;IAAAlqK,GAAA;IAAAvG,KAAA,EAED,SAAA0yK,YAAanpB,QAAQ,EAAG;MAEvB,IAAI,CAACzC,SAAS,GAAG,IAAI,CAAC6oB,KAAK,CAACpmB,QAAQ,GAAGA,QAAQ;MAE/C,OAAO,IAAI,CAAC4nB,WAAW,CAAC,CAAC;IAE1B;EAAC;IAAA5qK,GAAA;IAAAvG,KAAA,EAED,SAAA2yK,SAAUC,MAAM,EAAG;MAElB,IAAI,CAACzgH,IAAI,GAAGygH,MAAM,CAACzgH,IAAI;MACvB,IAAI,CAAC20F,SAAS,GAAG8rB,MAAM,CAAC9rB,SAAS;MAEjC,OAAO,IAAI,CAACqqB,WAAW,CAAC,CAAC;IAE1B;EAAC;IAAA5qK,GAAA;IAAAvG,KAAA,EAED,SAAA6yK,KAAMtpB,QAAQ,EAAG;MAEhB,OAAO,IAAI,CAACwoB,IAAI,CAAE,IAAI,CAACtB,mBAAmB,EAAE,CAAC,EAAElnB,QAAS,CAAC;IAE1D;EAAC;IAAAhjJ,GAAA;IAAAvG,KAAA,EAED,SAAA+xK,KAAMe,cAAc,EAAEC,YAAY,EAAExpB,QAAQ,EAAG;MAE9C,IAAMimB,KAAK,GAAG,IAAI,CAACE,MAAM;QACxB7Q,GAAG,GAAG2Q,KAAK,CAACr9G,IAAI;QAChB20F,SAAS,GAAG,IAAI,CAACA,SAAS;MAE3B,IAAIzE,WAAW,GAAG,IAAI,CAACguB,qBAAqB;MAE5C,IAAKhuB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAGmtB,KAAK,CAACwD,uBAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC3C,qBAAqB,GAAGhuB,WAAW;MAEzC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C/gJ,MAAM,GAAGogJ,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAGif,GAAG;MAChBjf,KAAK,CAAE,CAAC,CAAE,GAAGif,GAAG,GAAGtV,QAAQ;MAE3BtnJ,MAAM,CAAE,CAAC,CAAE,GAAG6wK,cAAc,GAAGhsB,SAAS;MACxC7kJ,MAAM,CAAE,CAAC,CAAE,GAAG8wK,YAAY,GAAGjsB,SAAS;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAvgJ,GAAA;IAAAvG,KAAA,EAED,SAAAmxK,YAAA,EAAc;MAEb,IAAM8B,oBAAoB,GAAG,IAAI,CAAC5C,qBAAqB;MAEvD,IAAK4C,oBAAoB,KAAK,IAAI,EAAG;QAEpC,IAAI,CAAC5C,qBAAqB,GAAG,IAAI;QACjC,IAAI,CAACX,MAAM,CAAC6C,2BAA2B,CAAEU,oBAAqB,CAAC;MAEhE;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA1sK,GAAA;IAAAvG,KAAA,EAEA,SAAAkzK,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxD,MAAM;IAEnB;EAAC;IAAAnpK,GAAA;IAAAvG,KAAA,EAED,SAAAmzK,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,KAAK;IAElB;EAAC;IAAAppK,GAAA;IAAAvG,KAAA,EAED,SAAAozK,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,UAAU,IAAI,IAAI,CAACF,MAAM,CAAC2D,KAAK;IAE5C;;IAEA;EAAA;IAAA9sK,GAAA;IAAAvG,KAAA,EAEA,SAAAszK,QAASnhH,IAAI,EAAEohH,SAAS,EAAEC,aAAa,EAAEzL,SAAS,EAAG;MAEpD;;MAEA,IAAK,CAAE,IAAI,CAAC1jJ,OAAO,EAAG;QAErB;;QAEA,IAAI,CAACovJ,aAAa,CAAEthH,IAAK,CAAC;QAC1B;MAED;MAEA,IAAM40F,SAAS,GAAG,IAAI,CAACypB,UAAU;MAEjC,IAAKzpB,SAAS,KAAK,IAAI,EAAG;QAEzB;;QAEA,IAAM2sB,WAAW,GAAG,CAAEvhH,IAAI,GAAG40F,SAAS,IAAKysB,aAAa;QACxD,IAAKE,WAAW,GAAG,CAAC,IAAIF,aAAa,KAAK,CAAC,EAAG;UAE7CD,SAAS,GAAG,CAAC;QAEd,CAAC,MAAM;UAGN,IAAI,CAAC/C,UAAU,GAAG,IAAI,CAAC,CAAC;UACxB+C,SAAS,GAAGC,aAAa,GAAGE,WAAW;QAExC;MAED;;MAEA;;MAEAH,SAAS,IAAI,IAAI,CAACI,gBAAgB,CAAExhH,IAAK,CAAC;MAC1C,IAAMyhH,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAEN,SAAU,CAAC;;MAE9C;MACA;;MAEA,IAAMz9F,MAAM,GAAG,IAAI,CAAC29F,aAAa,CAAEthH,IAAK,CAAC;MAEzC,IAAK2jB,MAAM,GAAG,CAAC,EAAG;QAEjB,IAAMg6F,YAAY,GAAG,IAAI,CAACG,aAAa;QACvC,IAAM6D,cAAc,GAAG,IAAI,CAAC5D,iBAAiB;QAE7C,QAAS,IAAI,CAACrtB,SAAS;UAEtB,KAAKvyI,0BAA0B;YAE9B,KAAM,IAAImrB,CAAC,GAAG,CAAC,EAAE1lB,CAAC,GAAG+5J,YAAY,CAACxrK,MAAM,EAAEm3B,CAAC,KAAK1lB,CAAC,EAAE,EAAG0lB,CAAC,EAAG;cAEzDq0I,YAAY,CAAEr0I,CAAC,CAAE,CAAC6mH,QAAQ,CAAEsxB,QAAS,CAAC;cACtCE,cAAc,CAAEr4I,CAAC,CAAE,CAACysI,kBAAkB,CAAEpyF,MAAO,CAAC;YAEjD;YAEA;UAED,KAAKzlE,wBAAwB;UAC7B;YAEC,KAAM,IAAIorB,IAAC,GAAG,CAAC,EAAE1lB,GAAC,GAAG+5J,YAAY,CAACxrK,MAAM,EAAEm3B,IAAC,KAAK1lB,GAAC,EAAE,EAAG0lB,IAAC,EAAG;cAEzDq0I,YAAY,CAAEr0I,IAAC,CAAE,CAAC6mH,QAAQ,CAAEsxB,QAAS,CAAC;cACtCE,cAAc,CAAEr4I,IAAC,CAAE,CAACqsI,UAAU,CAAEC,SAAS,EAAEjyF,MAAO,CAAC;YAEpD;QAEF;MAED;IAED;EAAC;IAAAvvE,GAAA;IAAAvG,KAAA,EAED,SAAAyzK,cAAethH,IAAI,EAAG;MAErB,IAAI2jB,MAAM,GAAG,CAAC;MAEd,IAAK,IAAI,CAACzxD,OAAO,EAAG;QAEnByxD,MAAM,GAAG,IAAI,CAACA,MAAM;QACpB,IAAMusE,WAAW,GAAG,IAAI,CAACiuB,kBAAkB;QAE3C,IAAKjuB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAM0xB,gBAAgB,GAAG1xB,WAAW,CAACC,QAAQ,CAAEnwF,IAAK,CAAC,CAAE,CAAC,CAAE;UAE1D2jB,MAAM,IAAIi+F,gBAAgB;UAE1B,IAAK5hH,IAAI,GAAGkwF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAACkuB,UAAU,CAAC,CAAC;YAEjB,IAAK6C,gBAAgB,KAAK,CAAC,EAAG;cAE7B;cACA,IAAI,CAAC1vJ,OAAO,GAAG,KAAK;YAErB;UAED;QAED;MAED;MAEA,IAAI,CAACqsJ,gBAAgB,GAAG56F,MAAM;MAC9B,OAAOA,MAAM;IAEd;EAAC;IAAAvvE,GAAA;IAAAvG,KAAA,EAED,SAAA2zK,iBAAkBxhH,IAAI,EAAG;MAExB,IAAI20F,SAAS,GAAG,CAAC;MAEjB,IAAK,CAAE,IAAI,CAAC8pB,MAAM,EAAG;QAEpB9pB,SAAS,GAAG,IAAI,CAACA,SAAS;QAE1B,IAAMzE,WAAW,GAAG,IAAI,CAACguB,qBAAqB;QAE9C,IAAKhuB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAM0xB,gBAAgB,GAAG1xB,WAAW,CAACC,QAAQ,CAAEnwF,IAAK,CAAC,CAAE,CAAC,CAAE;UAE1D20F,SAAS,IAAIitB,gBAAgB;UAE7B,IAAK5hH,IAAI,GAAGkwF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAACmuB,WAAW,CAAC,CAAC;YAElB,IAAKrqB,SAAS,KAAK,CAAC,EAAG;cAEtB;cACA,IAAI,CAAC8pB,MAAM,GAAG,IAAI;YAEnB,CAAC,MAAM;cAEN;cACA,IAAI,CAAC9pB,SAAS,GAAGA,SAAS;YAE3B;UAED;QAED;MAED;MAEA,IAAI,CAAC2pB,mBAAmB,GAAG3pB,SAAS;MACpC,OAAOA,SAAS;IAEjB;EAAC;IAAAvgJ,GAAA;IAAAvG,KAAA,EAED,SAAA6zK,YAAaN,SAAS,EAAG;MAExB,IAAMhqB,QAAQ,GAAG,IAAI,CAAComB,KAAK,CAACpmB,QAAQ;MACpC,IAAMkY,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAItvG,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGohH,SAAS;MAChC,IAAIS,SAAS,GAAG,IAAI,CAACzD,UAAU;MAE/B,IAAM0D,QAAQ,GAAKxS,IAAI,KAAK3xJ,YAAc;MAE1C,IAAKyjK,SAAS,KAAK,CAAC,EAAG;QAEtB,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG,OAAO7hH,IAAI;QAEpC,OAAS8hH,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,GAAKzqB,QAAQ,GAAGp3F,IAAI,GAAGA,IAAI;MAExE;MAEA,IAAKsvG,IAAI,KAAK7xJ,QAAQ,EAAG;QAExB,IAAKokK,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAI,CAACzD,UAAU,GAAG,CAAC;UACnB,IAAI,CAAC2D,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;QAEtC;QAEAC,WAAW,EAAE;UAEZ,IAAKhiH,IAAI,IAAIo3F,QAAQ,EAAG;YAEvBp3F,IAAI,GAAGo3F,QAAQ;UAEhB,CAAC,MAAM,IAAKp3F,IAAI,GAAG,CAAC,EAAG;YAEtBA,IAAI,GAAG,CAAC;UAET,CAAC,MAAM;YAEN,IAAI,CAACA,IAAI,GAAGA,IAAI;YAEhB,MAAMgiH,WAAW;UAElB;UAEA,IAAK,IAAI,CAACtD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAACvsJ,OAAO,GAAG,KAAK;UAEzB,IAAI,CAAC8tC,IAAI,GAAGA,IAAI;UAEhB,IAAI,CAACu9G,MAAM,CAACh7J,aAAa,CAAE;YAC1BvT,IAAI,EAAE,UAAU;YAAEyxK,MAAM,EAAE,IAAI;YAC9B31I,SAAS,EAAEs2I,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG;UAClC,CAAE,CAAC;QAEJ;MAED,CAAC,MAAM;QAAE;;QAER,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAKT,SAAS,IAAI,CAAC,EAAG;YAErBS,SAAS,GAAG,CAAC;YAEb,IAAI,CAACE,WAAW,CAAE,IAAI,EAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAEsD,QAAS,CAAC;UAE3D,CAAC,MAAM;YAEN;YACA;YACA;;YAEA,IAAI,CAACC,WAAW,CAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAE,IAAI,EAAEsD,QAAS,CAAC;UAE3D;QAED;QAEA,IAAK9hH,IAAI,IAAIo3F,QAAQ,IAAIp3F,IAAI,GAAG,CAAC,EAAG;UAEnC;;UAEA,IAAMiiH,SAAS,GAAGp/J,IAAI,CAACmC,KAAK,CAAEg7C,IAAI,GAAGo3F,QAAS,CAAC,CAAC,CAAC;UACjDp3F,IAAI,IAAIo3F,QAAQ,GAAG6qB,SAAS;UAE5BJ,SAAS,IAAIh/J,IAAI,CAAC6B,GAAG,CAAEu9J,SAAU,CAAC;UAElC,IAAMC,OAAO,GAAG,IAAI,CAAC1D,WAAW,GAAGqD,SAAS;UAE5C,IAAKK,OAAO,IAAI,CAAC,EAAG;YAEnB;;YAEA,IAAK,IAAI,CAACxD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAACvsJ,OAAO,GAAG,KAAK;YAEzB8tC,IAAI,GAAGohH,SAAS,GAAG,CAAC,GAAGhqB,QAAQ,GAAG,CAAC;YAEnC,IAAI,CAACp3F,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAACu9G,MAAM,CAACh7J,aAAa,CAAE;cAC1BvT,IAAI,EAAE,UAAU;cAAEyxK,MAAM,EAAE,IAAI;cAC9B31I,SAAS,EAAEs2I,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;YAClC,CAAE,CAAC;UAEJ,CAAC,MAAM;YAEN;;YAEA,IAAKc,OAAO,KAAK,CAAC,EAAG;cAEpB;;cAEA,IAAMC,OAAO,GAAGf,SAAS,GAAG,CAAC;cAC7B,IAAI,CAACW,WAAW,CAAEI,OAAO,EAAE,CAAEA,OAAO,EAAEL,QAAS,CAAC;YAEjD,CAAC,MAAM;cAEN,IAAI,CAACC,WAAW,CAAE,KAAK,EAAE,KAAK,EAAED,QAAS,CAAC;YAE3C;YAEA,IAAI,CAAC1D,UAAU,GAAGyD,SAAS;YAE3B,IAAI,CAAC7hH,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAACu9G,MAAM,CAACh7J,aAAa,CAAE;cAC1BvT,IAAI,EAAE,MAAM;cAAEyxK,MAAM,EAAE,IAAI;cAAEwB,SAAS,EAAEA;YACxC,CAAE,CAAC;UAEJ;QAED,CAAC,MAAM;UAEN,IAAI,CAACjiH,IAAI,GAAGA,IAAI;QAEjB;QAEA,IAAK8hH,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,EAAG;UAE1C;;UAEA,OAAOzqB,QAAQ,GAAGp3F,IAAI;QAEvB;MAED;MAEA,OAAOA,IAAI;IAEZ;EAAC;IAAA5rD,GAAA;IAAAvG,KAAA,EAED,SAAAk0K,YAAaI,OAAO,EAAEC,KAAK,EAAEN,QAAQ,EAAG;MAEvC,IAAM7wB,QAAQ,GAAG,IAAI,CAAC4sB,oBAAoB;MAE1C,IAAKiE,QAAQ,EAAG;QAEf7wB,QAAQ,CAACsB,WAAW,GAAGv0I,eAAe;QACtCizI,QAAQ,CAACuB,SAAS,GAAGx0I,eAAe;MAErC,CAAC,MAAM;QAEN;;QAEA,IAAKmkK,OAAO,EAAG;UAEdlxB,QAAQ,CAACsB,WAAW,GAAG,IAAI,CAACosB,gBAAgB,GAAG3gK,eAAe,GAAGD,mBAAmB;QAErF,CAAC,MAAM;UAENkzI,QAAQ,CAACsB,WAAW,GAAGt0I,gBAAgB;QAExC;QAEA,IAAKmkK,KAAK,EAAG;UAEZnxB,QAAQ,CAACuB,SAAS,GAAG,IAAI,CAACosB,cAAc,GAAG5gK,eAAe,GAAGD,mBAAmB;QAEjF,CAAC,MAAM;UAENkzI,QAAQ,CAACuB,SAAS,GAAKv0I,gBAAgB;QAExC;MAED;IAED;EAAC;IAAA7J,GAAA;IAAAvG,KAAA,EAED,SAAA2xK,gBAAiBpoB,QAAQ,EAAEirB,SAAS,EAAEC,UAAU,EAAG;MAElD,IAAMjF,KAAK,GAAG,IAAI,CAACE,MAAM;QAAE7Q,GAAG,GAAG2Q,KAAK,CAACr9G,IAAI;MAC3C,IAAIkwF,WAAW,GAAG,IAAI,CAACiuB,kBAAkB;MAEzC,IAAKjuB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAGmtB,KAAK,CAACwD,uBAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC1C,kBAAkB,GAAGjuB,WAAW;MAEtC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C/gJ,MAAM,GAAGogJ,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAGif,GAAG;MAChB58J,MAAM,CAAE,CAAC,CAAE,GAAGuyK,SAAS;MACvB50B,KAAK,CAAE,CAAC,CAAE,GAAGif,GAAG,GAAGtV,QAAQ;MAC3BtnJ,MAAM,CAAE,CAAC,CAAE,GAAGwyK,UAAU;MAExB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAlF,eAAA;AAAA;AAIF,IAAMmF,gCAAgC,GAAG,IAAIp7J,YAAY,CAAE,CAAE,CAAC;AAAC,IAGzDq7J,cAAc,GAAAttK,OAAA,CAAAstK,cAAA,0BAAAC,iBAAA;EAAA9sJ,SAAA,CAAA6sJ,cAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAA7sJ,YAAA,CAAA2sJ,cAAA;EAEnB,SAAAA,eAAa3H,IAAI,EAAG;IAAA,IAAA8H,QAAA;IAAA/uK,eAAA,OAAA4uK,cAAA;IAEnBG,QAAA,GAAAD,SAAA,CAAAxzK,IAAA;IAEAyzK,QAAA,CAAKzB,KAAK,GAAGrG,IAAI;IACjB8H,QAAA,CAAKC,kBAAkB,CAAC,CAAC;IACzBD,QAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,QAAA,CAAK3iH,IAAI,GAAG,CAAC;IACb2iH,QAAA,CAAKhuB,SAAS,GAAG,GAAG;IAAC,OAAAguB,QAAA;EAEtB;EAACtuK,YAAA,CAAAmuK,cAAA;IAAApuK,GAAA;IAAAvG,KAAA,EAED,SAAAi1K,YAAarC,MAAM,EAAEsC,eAAe,EAAG;MAEtC,IAAMlI,IAAI,GAAG4F,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK;QAC3C3yB,MAAM,GAAGkyB,MAAM,CAACjD,KAAK,CAACjvB,MAAM;QAC5BmvB,OAAO,GAAGnvB,MAAM,CAACp8I,MAAM;QACvB0lK,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;QACnCJ,YAAY,GAAG8C,MAAM,CAAC3C,aAAa;QACnCkF,QAAQ,GAAGnI,IAAI,CAACv3J,IAAI;QACpB2/J,cAAc,GAAG,IAAI,CAACC,sBAAsB;MAE7C,IAAIC,cAAc,GAAGF,cAAc,CAAED,QAAQ,CAAE;MAE/C,IAAKG,cAAc,KAAKruK,SAAS,EAAG;QAEnCquK,cAAc,GAAG,CAAC,CAAC;QACnBF,cAAc,CAAED,QAAQ,CAAE,GAAGG,cAAc;MAE5C;MAEA,KAAM,IAAIr1K,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK4vK,OAAO,EAAE,EAAG5vK,CAAC,EAAG;QAEtC,IAAM0gJ,KAAK,GAAGD,MAAM,CAAEzgJ,CAAC,CAAE;UACxB0qJ,SAAS,GAAGhK,KAAK,CAACj8I,IAAI;QAEvB,IAAI8hK,OAAO,GAAG8O,cAAc,CAAE3qB,SAAS,CAAE;QAEzC,IAAK6b,OAAO,KAAKv/J,SAAS,EAAG;UAE5B,EAAGu/J,OAAO,CAACqB,cAAc;UACzBmC,QAAQ,CAAE/pK,CAAC,CAAE,GAAGumK,OAAO;QAExB,CAAC,MAAM;UAENA,OAAO,GAAGwD,QAAQ,CAAE/pK,CAAC,CAAE;UAEvB,IAAKumK,OAAO,KAAKv/J,SAAS,EAAG;YAE5B;;YAEA,IAAKu/J,OAAO,CAAC2J,WAAW,KAAK,IAAI,EAAG;cAEnC,EAAG3J,OAAO,CAACqB,cAAc;cACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAExqB,SAAU,CAAC;YAEzD;YAEA;UAED;UAEA,IAAMvpE,IAAI,GAAG8zF,eAAe,IAAIA,eAAe,CAC9ChF,iBAAiB,CAAEjwK,CAAC,CAAE,CAACumK,OAAO,CAACgD,UAAU;UAE1ChD,OAAO,GAAG,IAAID,aAAa,CAC1BkD,eAAe,CAAC1oK,MAAM,CAAEisK,IAAI,EAAEriB,SAAS,EAAEvpE,IAAK,CAAC,EAC/Cu/D,KAAK,CAACc,aAAa,EAAEd,KAAK,CAACE,YAAY,CAAC,CAAE,CAAC;UAE5C,EAAG2lB,OAAO,CAACqB,cAAc;UACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAExqB,SAAU,CAAC;UAExDqf,QAAQ,CAAE/pK,CAAC,CAAE,GAAGumK,OAAO;QAExB;QAEAsJ,YAAY,CAAE7vK,CAAC,CAAE,CAACsiJ,YAAY,GAAGikB,OAAO,CAAC5jJ,MAAM;MAEhD;IAED;EAAC;IAAArc,GAAA;IAAAvG,KAAA,EAED,SAAAgxK,gBAAiB4B,MAAM,EAAG;MAEzB,IAAK,CAAE,IAAI,CAACvB,eAAe,CAAEuB,MAAO,CAAC,EAAG;QAEvC,IAAKA,MAAM,CAACzC,WAAW,KAAK,IAAI,EAAG;UAElC;UACA;;UAEA,IAAMgF,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG59J,IAAI;YACxD+/J,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACl6J,IAAI;YAC5BggK,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;UAEjD,IAAI,CAACP,WAAW,CAAErC,MAAM,EACvB6C,cAAc,IAAIA,cAAc,CAACE,YAAY,CAAE,CAAC,CAAG,CAAC;UAErD,IAAI,CAACC,kBAAkB,CAAEhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAS,CAAC;QAEtD;QAEA,IAAMnL,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAIjwK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAErD,IAAMumK,OAAO,GAAGwD,QAAQ,CAAE/pK,CAAC,CAAE;UAE7B,IAAKumK,OAAO,CAACoB,QAAQ,EAAG,KAAK,CAAC,EAAG;YAEhC,IAAI,CAACiO,YAAY,CAAErP,OAAQ,CAAC;YAC5BA,OAAO,CAAC6B,iBAAiB,CAAC,CAAC;UAE5B;QAED;QAEA,IAAI,CAACyN,WAAW,CAAElD,MAAO,CAAC;MAE3B;IAED;EAAC;IAAArsK,GAAA;IAAAvG,KAAA,EAED,SAAAixK,kBAAmB2B,MAAM,EAAG;MAE3B,IAAK,IAAI,CAACvB,eAAe,CAAEuB,MAAO,CAAC,EAAG;QAErC,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAIjwK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAErD,IAAMumK,OAAO,GAAGwD,QAAQ,CAAE/pK,CAAC,CAAE;UAE7B,IAAK,EAAGumK,OAAO,CAACoB,QAAQ,KAAK,CAAC,EAAG;YAEhCpB,OAAO,CAAC+B,oBAAoB,CAAC,CAAC;YAC9B,IAAI,CAACwN,gBAAgB,CAAEvP,OAAQ,CAAC;UAEjC;QAED;QAEA,IAAI,CAACwP,eAAe,CAAEpD,MAAO,CAAC;MAE/B;IAED;;IAEA;EAAA;IAAArsK,GAAA;IAAAvG,KAAA,EAEA,SAAA+0K,mBAAA,EAAqB;MAEpB,IAAI,CAACkB,QAAQ,GAAG,EAAE,CAAC,CAAC;MACpB,IAAI,CAACC,eAAe,GAAG,CAAC;MAExB,IAAI,CAACR,cAAc,GAAG,CAAC,CAAC;MACxB;MACA;MACA;MACA;MACA;;MAGA,IAAI,CAAC9L,SAAS,GAAG,EAAE,CAAC,CAAC;MACrB,IAAI,CAACuM,gBAAgB,GAAG,CAAC;MAEzB,IAAI,CAACd,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;MAGlC,IAAI,CAACe,oBAAoB,GAAG,EAAE,CAAC,CAAC;MAChC,IAAI,CAACC,2BAA2B,GAAG,CAAC;MAEpC,IAAM7vH,KAAK,GAAG,IAAI;MAElB,IAAI,CAACunH,KAAK,GAAG;QAEZuI,OAAO,EAAE;UACR,IAAI5mB,KAAKA,CAAA,EAAG;YAEX,OAAOlpG,KAAK,CAACyvH,QAAQ,CAAC3xK,MAAM;UAE7B,CAAC;UACD,IAAI0pK,KAAKA,CAAA,EAAG;YAEX,OAAOxnH,KAAK,CAAC0vH,eAAe;UAE7B;QACD,CAAC;QACDlM,QAAQ,EAAE;UACT,IAAIta,KAAKA,CAAA,EAAG;YAEX,OAAOlpG,KAAK,CAACojH,SAAS,CAACtlK,MAAM;UAE9B,CAAC;UACD,IAAI0pK,KAAKA,CAAA,EAAG;YAEX,OAAOxnH,KAAK,CAAC2vH,gBAAgB;UAE9B;QACD,CAAC;QACDI,mBAAmB,EAAE;UACpB,IAAI7mB,KAAKA,CAAA,EAAG;YAEX,OAAOlpG,KAAK,CAAC4vH,oBAAoB,CAAC9xK,MAAM;UAEzC,CAAC;UACD,IAAI0pK,KAAKA,CAAA,EAAG;YAEX,OAAOxnH,KAAK,CAAC6vH,2BAA2B;UAEzC;QACD;MAED,CAAC;IAEF;;IAEA;EAAA;IAAA9vK,GAAA;IAAAvG,KAAA,EAEA,SAAAqxK,gBAAiBuB,MAAM,EAAG;MAEzB,IAAMp+J,KAAK,GAAGo+J,MAAM,CAACzC,WAAW;MAChC,OAAO37J,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,IAAI,CAAC0hK,eAAe;IAEtD;EAAC;IAAA3vK,GAAA;IAAAvG,KAAA,EAED,SAAA41K,mBAAoBhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,EAAG;MAEhD,IAAMmB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BO,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,IAAID,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE9C,IAAKC,cAAc,KAAKxuK,SAAS,EAAG;QAEnCwuK,cAAc,GAAG;UAEhBE,YAAY,EAAE,CAAE/C,MAAM,CAAE;UACxB6D,YAAY,EAAE,CAAC;QAEhB,CAAC;QAED7D,MAAM,CAACxC,iBAAiB,GAAG,CAAC;QAE5BoG,aAAa,CAAEhB,QAAQ,CAAE,GAAGC,cAAc;MAE3C,CAAC,MAAM;QAEN,IAAME,YAAY,GAAGF,cAAc,CAACE,YAAY;QAEhD/C,MAAM,CAACxC,iBAAiB,GAAGuF,YAAY,CAACrxK,MAAM;QAC9CqxK,YAAY,CAAC1xK,IAAI,CAAE2uK,MAAO,CAAC;MAE5B;MAEAA,MAAM,CAACzC,WAAW,GAAGmG,OAAO,CAAChyK,MAAM;MACnCgyK,OAAO,CAACryK,IAAI,CAAE2uK,MAAO,CAAC;MAEtB6C,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,GAAGvC,MAAM;IAEjD;EAAC;IAAArsK,GAAA;IAAAvG,KAAA,EAED,SAAA02K,sBAAuB9D,MAAM,EAAG;MAE/B,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BU,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAChyK,MAAM,GAAG,CAAC,CAAE;QAClDsyK,UAAU,GAAGhE,MAAM,CAACzC,WAAW;MAEhCwG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;MAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;MAC1CL,OAAO,CAACnxK,GAAG,CAAC,CAAC;MAEbytK,MAAM,CAACzC,WAAW,GAAG,IAAI;MAGzB,IAAMqF,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACl6J,IAAI;QACjC+gK,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;QAC1CqB,mBAAmB,GAAGpB,cAAc,CAACE,YAAY;QAEjDmB,eAAe,GACdD,mBAAmB,CAAEA,mBAAmB,CAACvyK,MAAM,GAAG,CAAC,CAAE;QAEtDyyK,gBAAgB,GAAGnE,MAAM,CAACxC,iBAAiB;MAE5C0G,eAAe,CAAC1G,iBAAiB,GAAG2G,gBAAgB;MACpDF,mBAAmB,CAAEE,gBAAgB,CAAE,GAAGD,eAAe;MACzDD,mBAAmB,CAAC1xK,GAAG,CAAC,CAAC;MAEzBytK,MAAM,CAACxC,iBAAiB,GAAG,IAAI;MAG/B,IAAMqG,YAAY,GAAGhB,cAAc,CAACgB,YAAY;QAC/CtB,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG59J,IAAI;MAEpD,OAAOghK,YAAY,CAAEtB,QAAQ,CAAE;MAE/B,IAAK0B,mBAAmB,CAACvyK,MAAM,KAAK,CAAC,EAAG;QAEvC,OAAOkyK,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;MAEA,IAAI,CAACwB,gCAAgC,CAAEpE,MAAO,CAAC;IAEhD;EAAC;IAAArsK,GAAA;IAAAvG,KAAA,EAED,SAAAg3K,iCAAkCpE,MAAM,EAAG;MAE1C,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;MAEzC,KAAM,IAAIjwK,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGoqK,QAAQ,CAAC1lK,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;QAErD,IAAMumK,OAAO,GAAGwD,QAAQ,CAAE/pK,CAAC,CAAE;QAE7B,IAAK,EAAGumK,OAAO,CAACqB,cAAc,KAAK,CAAC,EAAG;UAEtC,IAAI,CAACoP,sBAAsB,CAAEzQ,OAAQ,CAAC;QAEvC;MAED;IAED;EAAC;IAAAjgK,GAAA;IAAAvG,KAAA,EAED,SAAA81K,YAAalD,MAAM,EAAG;MAErB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BgH,eAAe,GAAG,IAAI,CAACjB,eAAe,EAAG;QAEzCkB,mBAAmB,GAAGd,OAAO,CAAEa,eAAe,CAAE;MAEjDvE,MAAM,CAACzC,WAAW,GAAGgH,eAAe;MACpCb,OAAO,CAAEa,eAAe,CAAE,GAAGvE,MAAM;MAEnCwE,mBAAmB,CAACjH,WAAW,GAAG+G,SAAS;MAC3CZ,OAAO,CAAEY,SAAS,CAAE,GAAGE,mBAAmB;IAE3C;EAAC;IAAA7wK,GAAA;IAAAvG,KAAA,EAED,SAAAg2K,gBAAiBpD,MAAM,EAAG;MAEzB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BkH,kBAAkB,GAAG,EAAG,IAAI,CAACnB,eAAe;QAE5CoB,gBAAgB,GAAGhB,OAAO,CAAEe,kBAAkB,CAAE;MAEjDzE,MAAM,CAACzC,WAAW,GAAGkH,kBAAkB;MACvCf,OAAO,CAAEe,kBAAkB,CAAE,GAAGzE,MAAM;MAEtC0E,gBAAgB,CAACnH,WAAW,GAAG+G,SAAS;MACxCZ,OAAO,CAAEY,SAAS,CAAE,GAAGI,gBAAgB;IAExC;;IAEA;EAAA;IAAA/wK,GAAA;IAAAvG,KAAA,EAEA,SAAAu1K,oBAAqB/O,OAAO,EAAE2O,QAAQ,EAAExqB,SAAS,EAAG;MAEnD,IAAMyqB,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDrL,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE1B,IAAI2N,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE9C,IAAKoC,aAAa,KAAKtwK,SAAS,EAAG;QAElCswK,aAAa,GAAG,CAAC,CAAC;QAClBnC,cAAc,CAAED,QAAQ,CAAE,GAAGoC,aAAa;MAE3C;MAEAA,aAAa,CAAE5sB,SAAS,CAAE,GAAG6b,OAAO;MAEpCA,OAAO,CAAC2J,WAAW,GAAGnG,QAAQ,CAAC1lK,MAAM;MACrC0lK,QAAQ,CAAC/lK,IAAI,CAAEuiK,OAAQ,CAAC;IAEzB;EAAC;IAAAjgK,GAAA;IAAAvG,KAAA,EAED,SAAAi3K,uBAAwBzQ,OAAO,EAAG;MAEjC,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9B4N,WAAW,GAAGhR,OAAO,CAACA,OAAO;QAC7B2O,QAAQ,GAAGqC,WAAW,CAACtN,QAAQ,CAACz0J,IAAI;QACpCk1I,SAAS,GAAG6sB,WAAW,CAACp2F,IAAI;QAC5Bg0F,cAAc,GAAG,IAAI,CAACC,sBAAsB;QAC5CkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;QAE1CsC,mBAAmB,GAAGzN,QAAQ,CAAEA,QAAQ,CAAC1lK,MAAM,GAAG,CAAC,CAAE;QACrDsyK,UAAU,GAAGpQ,OAAO,CAAC2J,WAAW;MAEjCsH,mBAAmB,CAACtH,WAAW,GAAGyG,UAAU;MAC5C5M,QAAQ,CAAE4M,UAAU,CAAE,GAAGa,mBAAmB;MAC5CzN,QAAQ,CAAC7kK,GAAG,CAAC,CAAC;MAEd,OAAOoyK,aAAa,CAAE5sB,SAAS,CAAE;MAEjC,IAAKjrJ,MAAM,CAACuF,IAAI,CAAEsyK,aAAc,CAAC,CAACjzK,MAAM,KAAK,CAAC,EAAG;QAEhD,OAAO8wK,cAAc,CAAED,QAAQ,CAAE;MAElC;IAED;EAAC;IAAA5uK,GAAA;IAAAvG,KAAA,EAED,SAAA61K,aAAcrP,OAAO,EAAG;MAEvB,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BgH,eAAe,GAAG,IAAI,CAAChB,gBAAgB,EAAG;QAE1CuB,oBAAoB,GAAG1N,QAAQ,CAAEmN,eAAe,CAAE;MAEnD3Q,OAAO,CAAC2J,WAAW,GAAGgH,eAAe;MACrCnN,QAAQ,CAAEmN,eAAe,CAAE,GAAG3Q,OAAO;MAErCkR,oBAAoB,CAACvH,WAAW,GAAG+G,SAAS;MAC5ClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGQ,oBAAoB;IAE7C;EAAC;IAAAnxK,GAAA;IAAAvG,KAAA,EAED,SAAA+1K,iBAAkBvP,OAAO,EAAG;MAE3B,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BkH,kBAAkB,GAAG,EAAG,IAAI,CAAClB,gBAAgB;QAE7CwB,iBAAiB,GAAG3N,QAAQ,CAAEqN,kBAAkB,CAAE;MAEnD7Q,OAAO,CAAC2J,WAAW,GAAGkH,kBAAkB;MACxCrN,QAAQ,CAAEqN,kBAAkB,CAAE,GAAG7Q,OAAO;MAExCmR,iBAAiB,CAACxH,WAAW,GAAG+G,SAAS;MACzClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGS,iBAAiB;IAE1C;;IAGA;EAAA;IAAApxK,GAAA;IAAAvG,KAAA,EAEA,SAAAgzK,wBAAA,EAA0B;MAEzB,IAAMlD,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Ce,eAAe,GAAG,IAAI,CAACd,2BAA2B,EAAG;MAEtD,IAAIh0B,WAAW,GAAGytB,YAAY,CAAEqH,eAAe,CAAE;MAEjD,IAAK90B,WAAW,KAAKp7I,SAAS,EAAG;QAEhCo7I,WAAW,GAAG,IAAIoD,iBAAiB,CAClC,IAAInsI,YAAY,CAAE,CAAE,CAAC,EAAE,IAAIA,YAAY,CAAE,CAAE,CAAC,EAC5C,CAAC,EAAEo7J,gCAAiC,CAAC;QAEtCryB,WAAW,CAACu1B,YAAY,GAAGT,eAAe;QAC1CrH,YAAY,CAAEqH,eAAe,CAAE,GAAG90B,WAAW;MAE9C;MAEA,OAAOA,WAAW;IAEnB;EAAC;IAAA97I,GAAA;IAAAvG,KAAA,EAED,SAAAuyK,4BAA6BlwB,WAAW,EAAG;MAE1C,IAAMytB,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Cc,SAAS,GAAG70B,WAAW,CAACu1B,YAAY;QAEpCP,kBAAkB,GAAG,EAAG,IAAI,CAAChB,2BAA2B;QAExDwB,qBAAqB,GAAG/H,YAAY,CAAEuH,kBAAkB,CAAE;MAE3Dh1B,WAAW,CAACu1B,YAAY,GAAGP,kBAAkB;MAC7CvH,YAAY,CAAEuH,kBAAkB,CAAE,GAAGh1B,WAAW;MAEhDw1B,qBAAqB,CAACD,YAAY,GAAGV,SAAS;MAC9CpH,YAAY,CAAEoH,SAAS,CAAE,GAAGW,qBAAqB;IAElD;;IAEA;IACA;IACA;EAAA;IAAAtxK,GAAA;IAAAvG,KAAA,EACA,SAAA83K,WAAYr3B,IAAI,EAAEs3B,YAAY,EAAEl1B,SAAS,EAAG;MAE3C,IAAMmqB,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACv3J,IAAI;MAErB,IAAIuiK,UAAU,GAAG,OAAOv3B,IAAI,KAAK,QAAQ,GAAG6I,aAAa,CAACU,UAAU,CAAEgjB,IAAI,EAAEvsB,IAAK,CAAC,GAAGA,IAAI;MAEzF,IAAM+0B,QAAQ,GAAGwC,UAAU,KAAK,IAAI,GAAGA,UAAU,CAACviK,IAAI,GAAGgrI,IAAI;MAE7D,IAAMg1B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MACtD,IAAIN,eAAe,GAAG,IAAI;MAE1B,IAAKryB,SAAS,KAAK57I,SAAS,EAAG;QAE9B,IAAK+wK,UAAU,KAAK,IAAI,EAAG;UAE1Bn1B,SAAS,GAAGm1B,UAAU,CAACn1B,SAAS;QAEjC,CAAC,MAAM;UAENA,SAAS,GAAGxyI,wBAAwB;QAErC;MAED;MAEA,IAAKolK,cAAc,KAAKxuK,SAAS,EAAG;QAEnC,IAAMgxK,cAAc,GAAGxC,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE;QAE9D,IAAK8C,cAAc,KAAKhxK,SAAS,IAAIgxK,cAAc,CAACp1B,SAAS,KAAKA,SAAS,EAAG;UAE7E,OAAOo1B,cAAc;QAEtB;;QAEA;QACA;QACA/C,eAAe,GAAGO,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE;;QAElD;QACA,IAAKqC,UAAU,KAAK,IAAI,EACvBA,UAAU,GAAG9C,eAAe,CAACvF,KAAK;MAEpC;;MAEA;MACA,IAAKqI,UAAU,KAAK,IAAI,EAAG,OAAO,IAAI;;MAEtC;MACA,IAAME,SAAS,GAAG,IAAI3I,eAAe,CAAE,IAAI,EAAEyI,UAAU,EAAED,YAAY,EAAEl1B,SAAU,CAAC;MAElF,IAAI,CAACoyB,WAAW,CAAEiD,SAAS,EAAEhD,eAAgB,CAAC;;MAE9C;MACA,IAAI,CAACU,kBAAkB,CAAEsC,SAAS,EAAE1C,QAAQ,EAAEL,QAAS,CAAC;MAExD,OAAO+C,SAAS;IAEjB;;IAEA;EAAA;IAAA3xK,GAAA;IAAAvG,KAAA,EACA,SAAAi4K,eAAgBx3B,IAAI,EAAEs3B,YAAY,EAAG;MAEpC,IAAM/K,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACv3J,IAAI;QAEpBuiK,UAAU,GAAG,OAAOv3B,IAAI,KAAK,QAAQ,GACpC6I,aAAa,CAACU,UAAU,CAAEgjB,IAAI,EAAEvsB,IAAK,CAAC,GAAGA,IAAI;QAE9C+0B,QAAQ,GAAGwC,UAAU,GAAGA,UAAU,CAACviK,IAAI,GAAGgrI,IAAI;QAE9Cg1B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MAEjD,IAAKC,cAAc,KAAKxuK,SAAS,EAAG;QAEnC,OAAOwuK,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,IAAI,IAAI;MAEvD;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA5uK,GAAA;IAAAvG,KAAA,EACA,SAAAm4K,cAAA,EAAgB;MAEf,IAAM7B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;MAEhC,KAAM,IAAIj2K,CAAC,GAAGm4K,QAAQ,GAAG,CAAC,EAAEn4K,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;QAE1Cq2K,OAAO,CAAEr2K,CAAC,CAAE,CAACsF,IAAI,CAAC,CAAC;MAEpB;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAgB,GAAA;IAAAvG,KAAA,EACA,SAAAmwB,OAAQojJ,SAAS,EAAG;MAEnBA,SAAS,IAAI,IAAI,CAACzsB,SAAS;MAE3B,IAAMwvB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;QAE/B/jH,IAAI,GAAG,IAAI,CAACA,IAAI,IAAIohH,SAAS;QAC7BC,aAAa,GAAGx+J,IAAI,CAACyqB,IAAI,CAAE8zI,SAAU,CAAC;QAEtCxL,SAAS,GAAG,IAAI,CAACiN,UAAU,IAAI,CAAC;;MAEjC;;MAEA,KAAM,IAAI/0K,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKm4K,QAAQ,EAAE,EAAGn4K,CAAC,EAAG;QAEvC,IAAM2yK,MAAM,GAAG0D,OAAO,CAAEr2K,CAAC,CAAE;QAE3B2yK,MAAM,CAACU,OAAO,CAAEnhH,IAAI,EAAEohH,SAAS,EAAEC,aAAa,EAAEzL,SAAU,CAAC;MAE5D;;MAEA;;MAEA,IAAMiC,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9ByE,SAAS,GAAG,IAAI,CAAC8H,gBAAgB;MAElC,KAAM,IAAIl2K,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKouK,SAAS,EAAE,EAAGpuK,IAAC,EAAG;QAExC+pK,QAAQ,CAAE/pK,IAAC,CAAE,CAAC+pC,KAAK,CAAE+9H,SAAU,CAAC;MAEjC;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAxhK,GAAA;IAAAvG,KAAA,EACA,SAAAq4K,QAASC,aAAa,EAAG;MAExB,IAAI,CAACnmH,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,KAAM,IAAIlyD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACg2K,QAAQ,CAAC3xK,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEjD,IAAI,CAACg2K,QAAQ,CAAEh2K,CAAC,CAAE,CAACkyD,IAAI,GAAG,CAAC,CAAC,CAAC;MAE9B;;MAEA,OAAO,IAAI,CAAChiC,MAAM,CAAEmoJ,aAAc,CAAC,CAAC,CAAC;IAEtC;;IAEA;EAAA;IAAA/xK,GAAA;IAAAvG,KAAA,EACA,SAAAozK,QAAA,EAAU;MAET,OAAO,IAAI,CAACC,KAAK;IAElB;;IAEA;EAAA;IAAA9sK,GAAA;IAAAvG,KAAA,EACA,SAAAu4K,YAAa93B,IAAI,EAAG;MAEnB,IAAM61B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BT,QAAQ,GAAG/0B,IAAI,CAAChrI,IAAI;QACpB+gK,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE3C,IAAKC,cAAc,KAAKxuK,SAAS,EAAG;QAEnC;QACA;QACA;;QAEA,IAAMuxK,eAAe,GAAG/C,cAAc,CAACE,YAAY;QAEnD,KAAM,IAAI11K,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG44K,eAAe,CAACl0K,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;UAE5D,IAAM2yK,MAAM,GAAG4F,eAAe,CAAEv4K,CAAC,CAAE;UAEnC,IAAI,CAACgxK,iBAAiB,CAAE2B,MAAO,CAAC;UAEhC,IAAMgE,UAAU,GAAGhE,MAAM,CAACzC,WAAW;YACpCwG,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAChyK,MAAM,GAAG,CAAC,CAAE;UAEnDsuK,MAAM,CAACzC,WAAW,GAAG,IAAI;UACzByC,MAAM,CAACxC,iBAAiB,GAAG,IAAI;UAE/BuG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;UAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;UAC1CL,OAAO,CAACnxK,GAAG,CAAC,CAAC;UAEb,IAAI,CAAC6xK,gCAAgC,CAAEpE,MAAO,CAAC;QAEhD;QAEA,OAAO4D,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;IAED;;IAEA;EAAA;IAAAjvK,GAAA;IAAAvG,KAAA,EACA,SAAAy4K,YAAazL,IAAI,EAAG;MAEnB,IAAMmI,QAAQ,GAAGnI,IAAI,CAACv3J,IAAI;QACzB+gK,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,KAAM,IAAMF,QAAQ,IAAIgB,aAAa,EAAG;QAEvC,IAAMC,YAAY,GAAGD,aAAa,CAAEhB,QAAQ,CAAE,CAACiB,YAAY;UAC1D7D,MAAM,GAAG6D,YAAY,CAAEtB,QAAQ,CAAE;QAElC,IAAKvC,MAAM,KAAK3rK,SAAS,EAAG;UAE3B,IAAI,CAACgqK,iBAAiB,CAAE2B,MAAO,CAAC;UAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAO,CAAC;QAErC;MAED;MAEA,IAAMwC,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE3C,IAAKoC,aAAa,KAAKtwK,SAAS,EAAG;QAElC,KAAM,IAAM0jJ,SAAS,IAAI4sB,aAAa,EAAG;UAExC,IAAM/Q,OAAO,GAAG+Q,aAAa,CAAE5sB,SAAS,CAAE;UAC1C6b,OAAO,CAAC+B,oBAAoB,CAAC,CAAC;UAC9B,IAAI,CAAC0O,sBAAsB,CAAEzQ,OAAQ,CAAC;QAEvC;MAED;IAED;;IAEA;EAAA;IAAAjgK,GAAA;IAAAvG,KAAA,EACA,SAAA04K,cAAej4B,IAAI,EAAEs3B,YAAY,EAAG;MAEnC,IAAMnF,MAAM,GAAG,IAAI,CAACqF,cAAc,CAAEx3B,IAAI,EAAEs3B,YAAa,CAAC;MAExD,IAAKnF,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAI,CAAC3B,iBAAiB,CAAE2B,MAAO,CAAC;QAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAO,CAAC;MAErC;IAED;EAAC;EAAA,OAAA+B,cAAA;AAAA,EAjvB2B5gK,eAAe;AAAA,IAqvBtC4kK,OAAO,GAAAtxK,OAAA,CAAAsxK,OAAA;EAEZ,SAAAA,QAAa34K,KAAK,EAAG;IAAA+F,eAAA,OAAA4yK,OAAA;IAEpB,IAAI,CAAC34K,KAAK,GAAGA,KAAK;EAEnB;EAACwG,YAAA,CAAAmyK,OAAA;IAAApyK,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAIi+J,OAAO,CAAE,IAAI,CAAC34K,KAAK,CAAC0a,KAAK,KAAKzT,SAAS,GAAG,IAAI,CAACjH,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC0a,KAAK,CAAC,CAAE,CAAC;IAEvF;EAAC;EAAA,OAAAi+J,OAAA;AAAA;AAIF,IAAIC,GAAG,GAAG,CAAC;AAAC,IAENC,aAAa,GAAAxxK,OAAA,CAAAwxK,aAAA,0BAAAC,iBAAA;EAAAhxJ,SAAA,CAAA+wJ,aAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAA/wJ,YAAA,CAAA6wJ,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAAjzK,eAAA,OAAA8yK,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA13K,IAAA;IAEA23K,QAAA,CAAKC,eAAe,GAAG,IAAI;IAE3Bv5K,MAAM,CAACK,cAAc,CAAA8oB,sBAAA,CAAAmwJ,QAAA,GAAQ,IAAI,EAAE;MAAEh5K,KAAK,EAAE44K,GAAG;IAAI,CAAE,CAAC;IAEtDI,QAAA,CAAKt0K,IAAI,GAAG,EAAE;IAEds0K,QAAA,CAAKp9H,KAAK,GAAG3oC,eAAe;IAC5B+lK,QAAA,CAAKlxH,QAAQ,GAAG,EAAE;IAAC,OAAAkxH,QAAA;EAEpB;EAACxyK,YAAA,CAAAqyK,aAAA;IAAAtyK,GAAA;IAAAvG,KAAA,EAED,SAAA4a,IAAKivC,OAAO,EAAG;MAEd,IAAI,CAAC/B,QAAQ,CAAC7jD,IAAI,CAAE4lD,OAAQ,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAtjD,GAAA;IAAAvG,KAAA,EAED,SAAA6pC,OAAQggB,OAAO,EAAG;MAEjB,IAAMr1C,KAAK,GAAG,IAAI,CAACszC,QAAQ,CAAC1zC,OAAO,CAAEy1C,OAAQ,CAAC;MAE9C,IAAKr1C,KAAK,KAAK,CAAE,CAAC,EAAG,IAAI,CAACszC,QAAQ,CAACrzC,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAjO,GAAA;IAAAvG,KAAA,EAED,SAAAk5K,QAASx0K,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA6B,GAAA;IAAAvG,KAAA,EAED,SAAAg8C,SAAUh8C,KAAK,EAAG;MAEjB,IAAI,CAAC47C,KAAK,GAAG57C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAuG,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC1V,aAAa,CAAE;QAAEvT,IAAI,EAAE;MAAU,CAAE,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAoF,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACpkB,IAAI,GAAGokB,MAAM,CAACpkB,IAAI;MACvB,IAAI,CAACk3C,KAAK,GAAG9yB,MAAM,CAAC8yB,KAAK;MAEzB,IAAMu9H,cAAc,GAAGrwJ,MAAM,CAACg/B,QAAQ;MAEtC,IAAI,CAACA,QAAQ,CAACxjD,MAAM,GAAG,CAAC;MAExB,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG43K,cAAc,CAAC70K,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEzD,IAAI,CAAC6nD,QAAQ,CAAC7jD,IAAI,CAAEk1K,cAAc,CAAEl5K,CAAC,CAAE,CAACya,KAAK,CAAC,CAAE,CAAC;MAElD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnU,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAk+J,aAAA;AAAA,EAlF0B9kK,eAAe;AAAA,IAsFrCqlK,0BAA0B,GAAA/xK,OAAA,CAAA+xK,0BAAA,0BAAAC,kBAAA;EAAAvxJ,SAAA,CAAAsxJ,0BAAA,EAAAC,kBAAA;EAAA,IAAAC,SAAA,GAAAtxJ,YAAA,CAAAoxJ,0BAAA;EAE/B,SAAAA,2BAAaxkK,KAAK,EAAEuuC,MAAM,EAAEunB,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAA6uG,QAAA;IAAAxzK,eAAA,OAAAqzK,0BAAA;IAElDG,QAAA,GAAAD,SAAA,CAAAj4K,IAAA,OAAOuT,KAAK,EAAEuuC,MAAM;IAEpBo2H,QAAA,CAAKpuG,4BAA4B,GAAG,IAAI;IAExCouG,QAAA,CAAK7uG,gBAAgB,GAAGA,gBAAgB;IAAC,OAAA6uG,QAAA;EAE1C;EAAC/yK,YAAA,CAAA4yK,0BAAA;IAAA7yK,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAA6+H,0BAAA,CAAAz5K,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM;MAElB,IAAI,CAAC4hD,gBAAgB,GAAG5hD,MAAM,CAAC4hD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAnkE,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAOiM,IAAI,EAAG;MAEb,IAAMuqG,EAAE,GAAA52E,IAAA,CAAAC,eAAA,CAAA6+H,0BAAA,CAAAz5K,SAAA,kBAAA0B,IAAA,OAAgBslB,IAAI,CAAE;MAE9BuqG,EAAE,CAACxmD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE3C,OAAOwmD,EAAE;IAEV;EAAC;IAAA3qH,GAAA;IAAAvG,KAAA,EAED,SAAAgnB,OAAQL,IAAI,EAAG;MAEd,IAAMsvG,IAAI,GAAA37E,IAAA,CAAAC,eAAA,CAAA6+H,0BAAA,CAAAz5K,SAAA,mBAAA0B,IAAA,OAAiBslB,IAAI,CAAE;MAEjCsvG,IAAI,CAAC9qD,4BAA4B,GAAG,IAAI;MACxC8qD,IAAI,CAACvrD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7C,OAAOurD,IAAI;IAEZ;EAAC;EAAA,OAAAmjD,0BAAA;AAAA,EAzCuCtoD,iBAAiB;AAAA,IA6CpD0oD,iBAAiB,GAAAnyK,OAAA,CAAAmyK,iBAAA;EAEtB,SAAAA,kBAAa52J,MAAM,EAAEzhB,IAAI,EAAEs6C,QAAQ,EAAE0Y,WAAW,EAAE/kC,KAAK,EAAG;IAAArpB,eAAA,OAAAyzK,iBAAA;IAEzD,IAAI,CAAC/4H,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAAC/7C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACke,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACzhB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACs6C,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC0Y,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAAC/kC,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACrI,OAAO,GAAG,CAAC;EAEjB;EAACvgB,YAAA,CAAAgzK,iBAAA;IAAAjzK,GAAA;IAAA2S,GAAA,EAED,SAAAA,IAAiBlZ,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC+mB,OAAO,EAAG;IAEtC;EAAC;IAAAxgB,GAAA;IAAAvG,KAAA,EAED,SAAA6iK,UAAWjgJ,MAAM,EAAG;MAEnB,IAAI,CAACA,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAArc,GAAA;IAAAvG,KAAA,EAED,SAAAy5K,QAASt4K,IAAI,EAAEgzD,WAAW,EAAG;MAE5B,IAAI,CAAChzD,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACgzD,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAA5tD,GAAA;IAAAvG,KAAA,EAED,SAAA05K,YAAaj+H,QAAQ,EAAG;MAEvB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAl1C,GAAA;IAAAvG,KAAA,EAED,SAAA25K,SAAUvqJ,KAAK,EAAG;MAEjB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAoqJ,iBAAA;AAAA;AAAA,IAIII,SAAS,GAAAvyK,OAAA,CAAAuyK,SAAA;EAEd,SAAAA,UAAa58I,MAAM,EAAEC,SAAS,EAAEyH,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAGjN,QAAQ,EAAG;IAAA3xB,eAAA,OAAA6zK,SAAA;IAE1D,IAAI,CAAC18I,GAAG,GAAG,IAAIH,GAAG,CAAEC,MAAM,EAAEC,SAAU,CAAC;IACvC;;IAEA,IAAI,CAACyH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACrP,MAAM,GAAG,IAAI;IAClB,IAAI,CAAC4Q,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAE1B,IAAI,CAACguC,MAAM,GAAG;MACbjvB,IAAI,EAAE,CAAC,CAAC;MACRwzE,IAAI,EAAE;QAAExe,SAAS,EAAE;MAAE,CAAC;MACtBuZ,GAAG,EAAE,CAAC,CAAC;MACP+G,MAAM,EAAE;QAAEtgB,SAAS,EAAE;MAAE,CAAC;MACxB6Y,MAAM,EAAE,CAAC;IACV,CAAC;EAEF;EAAC/rH,YAAA,CAAAozK,SAAA;IAAArzK,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK8jB,MAAM,EAAEC,SAAS,EAAG;MAExB;;MAEA,IAAI,CAACC,GAAG,CAAChkB,GAAG,CAAE8jB,MAAM,EAAEC,SAAU,CAAC;IAElC;EAAC;IAAA12B,GAAA;IAAAvG,KAAA,EAED,SAAA65K,cAAeC,MAAM,EAAExkJ,MAAM,EAAG;MAE/B,IAAKA,MAAM,CAACk1B,mBAAmB,EAAG;QAEjC,IAAI,CAACttB,GAAG,CAACF,MAAM,CAAC9F,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAC;QAC3D,IAAI,CAACuH,GAAG,CAACD,SAAS,CAAC/jB,GAAG,CAAE4gK,MAAM,CAAC7jK,CAAC,EAAE6jK,MAAM,CAACp4K,CAAC,EAAE,GAAI,CAAC,CAAC+zB,SAAS,CAAEH,MAAO,CAAC,CAACta,GAAG,CAAE,IAAI,CAACkiB,GAAG,CAACF,MAAO,CAAC,CAACnjB,SAAS,CAAC,CAAC;QACxG,IAAI,CAACyb,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM,IAAKA,MAAM,CAACu7C,oBAAoB,EAAG;QAEzC,IAAI,CAAC3zC,GAAG,CAACF,MAAM,CAAC9jB,GAAG,CAAE4gK,MAAM,CAAC7jK,CAAC,EAAE6jK,MAAM,CAACp4K,CAAC,EAAE,CAAE4zB,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,KAAOrP,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,CAAG,CAAC,CAAClP,SAAS,CAAEH,MAAO,CAAC,CAAC,CAAC;QAC5H,IAAI,CAAC4H,GAAG,CAACD,SAAS,CAAC/jB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAAC0c,kBAAkB,CAAEN,MAAM,CAACK,WAAY,CAAC;QAC5E,IAAI,CAACL,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM;QAENnc,OAAO,CAACywB,KAAK,CAAE,4CAA4C,GAAGtU,MAAM,CAACn0B,IAAK,CAAC;MAE5E;IAED;EAAC;IAAAoF,GAAA;IAAAvG,KAAA,EAED,SAAA+5K,gBAAiBxhJ,MAAM,EAAE6U,SAAS,GAAG,IAAI,EAAEmY,UAAU,GAAG,EAAE,EAAG;MAE5Dw0H,gBAAe,CAAExhJ,MAAM,EAAE,IAAI,EAAEgtB,UAAU,EAAEnY,SAAU,CAAC;MAEtDmY,UAAU,CAACk1B,IAAI,CAAEu/F,OAAQ,CAAC;MAE1B,OAAOz0H,UAAU;IAElB;EAAC;IAAAh/C,GAAA;IAAAvG,KAAA,EAED,SAAAi6K,iBAAkB3zG,OAAO,EAAEl5B,SAAS,GAAG,IAAI,EAAEmY,UAAU,GAAG,EAAE,EAAG;MAE9D,KAAM,IAAItlD,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG+kE,OAAO,CAAChiE,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAElD85K,gBAAe,CAAEzzG,OAAO,CAAErmE,CAAC,CAAE,EAAE,IAAI,EAAEslD,UAAU,EAAEnY,SAAU,CAAC;MAE7D;MAEAmY,UAAU,CAACk1B,IAAI,CAAEu/F,OAAQ,CAAC;MAE1B,OAAOz0H,UAAU;IAElB;EAAC;EAAA,OAAAq0H,SAAA;AAAA;AAIF,SAASI,OAAOA,CAAE75K,CAAC,EAAEmY,CAAC,EAAG;EAExB,OAAOnY,CAAC,CAACgpC,QAAQ,GAAG7wB,CAAC,CAAC6wB,QAAQ;AAE/B;AAEA,SAAS4wI,gBAAeA,CAAExhJ,MAAM,EAAE+sB,SAAS,EAAEC,UAAU,EAAEnY,SAAS,EAAG;EAEpE,IAAK7U,MAAM,CAAC2N,MAAM,CAACvgB,IAAI,CAAE2/B,SAAS,CAACpf,MAAO,CAAC,EAAG;IAE7C3N,MAAM,CAACwS,OAAO,CAAEua,SAAS,EAAEC,UAAW,CAAC;EAExC;EAEA,IAAKnY,SAAS,KAAK,IAAI,EAAG;IAEzB,IAAM1T,QAAQ,GAAGnB,MAAM,CAACmB,QAAQ;IAEhC,KAAM,IAAIz5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGm4B,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEnD85K,gBAAe,CAAErgJ,QAAQ,CAAEz5B,CAAC,CAAE,EAAEqlD,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;IAE9D;EAED;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAQM20H,SAAS,GAAA7yK,OAAA,CAAA6yK,SAAA;EAEd,SAAAA,UAAarjJ,MAAM,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEra,KAAK,GAAG,CAAC,EAAG;IAAA1W,eAAA,OAAAm0K,SAAA;IAE7C,IAAI,CAACrjJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGA,GAAG,CAAC,CAAC;IAChB,IAAI,CAACra,KAAK,GAAGA,KAAK,CAAC,CAAC;;IAEpB,OAAO,IAAI;EAEZ;EAACjW,YAAA,CAAA0zK,SAAA;IAAA3zK,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK2d,MAAM,EAAEC,GAAG,EAAEra,KAAK,EAAG;MAEzB,IAAI,CAACoa,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACra,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAlW,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMw/J,KAAK,EAAG;MAEb,IAAI,CAACtjJ,MAAM,GAAGsjJ,KAAK,CAACtjJ,MAAM;MAC1B,IAAI,CAACC,GAAG,GAAGqjJ,KAAK,CAACrjJ,GAAG;MACpB,IAAI,CAACra,KAAK,GAAG09J,KAAK,CAAC19J,KAAK;MAExB,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAlW,GAAA;IAAAvG,KAAA,EACA,SAAAo6K,SAAA,EAAW;MAEV,IAAMC,GAAG,GAAG,QAAQ;MACpB,IAAI,CAACvjJ,GAAG,GAAG9hB,IAAI,CAACa,GAAG,CAAEwkK,GAAG,EAAErlK,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACC,EAAE,GAAGolK,GAAG,EAAE,IAAI,CAACvjJ,GAAI,CAAE,CAAC;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAAvwB,GAAA;IAAAvG,KAAA,EAED,SAAAulC,eAAgBvjC,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACs4K,sBAAsB,CAAEt4K,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAE,CAAC;IAEpD;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAs6K,uBAAwBrkK,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEjC,IAAI,CAACmM,MAAM,GAAG7hB,IAAI,CAACmH,IAAI,CAAElG,CAAC,GAAGA,CAAC,GAAGvU,CAAC,GAAGA,CAAC,GAAGgpB,CAAC,GAAGA,CAAE,CAAC;MAEhD,IAAK,IAAI,CAACmM,MAAM,KAAK,CAAC,EAAG;QAExB,IAAI,CAACpa,KAAK,GAAG,CAAC;QACd,IAAI,CAACqa,GAAG,GAAG,CAAC;MAEb,CAAC,MAAM;QAEN,IAAI,CAACra,KAAK,GAAGzH,IAAI,CAACsH,KAAK,CAAErG,CAAC,EAAEyU,CAAE,CAAC;QAC/B,IAAI,CAACoM,GAAG,GAAG9hB,IAAI,CAAC0H,IAAI,CAAE/G,KAAK,CAAEjU,CAAC,GAAG,IAAI,CAACm1B,MAAM,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtwB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAu/J,SAAA;AAAA;AAIF;AACA;AACA;AAFA,IAIMK,WAAW,GAAAlzK,OAAA,CAAAkzK,WAAA;EAEhB,SAAAA,YAAa1jJ,MAAM,GAAG,CAAC,EAAEpa,KAAK,GAAG,CAAC,EAAE/a,CAAC,GAAG,CAAC,EAAG;IAAAqE,eAAA,OAAAw0K,WAAA;IAE3C,IAAI,CAAC1jJ,MAAM,GAAGA,MAAM,CAAC,CAAC;IACtB,IAAI,CAACpa,KAAK,GAAGA,KAAK,CAAC,CAAC;IACpB,IAAI,CAAC/a,CAAC,GAAGA,CAAC,CAAC,CAAC;;IAEZ,OAAO,IAAI;EAEZ;EAAC8E,YAAA,CAAA+zK,WAAA;IAAAh0K,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAK2d,MAAM,EAAEpa,KAAK,EAAE/a,CAAC,EAAG;MAEvB,IAAI,CAACm1B,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACpa,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC/a,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMw/J,KAAK,EAAG;MAEb,IAAI,CAACtjJ,MAAM,GAAGsjJ,KAAK,CAACtjJ,MAAM;MAC1B,IAAI,CAACpa,KAAK,GAAG09J,KAAK,CAAC19J,KAAK;MACxB,IAAI,CAAC/a,CAAC,GAAGy4K,KAAK,CAACz4K,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAulC,eAAgBvjC,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACs4K,sBAAsB,CAAEt4K,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC0oB,CAAE,CAAC;IAEpD;EAAC;IAAAnkB,GAAA;IAAAvG,KAAA,EAED,SAAAs6K,uBAAwBrkK,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;MAEjC,IAAI,CAACmM,MAAM,GAAG7hB,IAAI,CAACmH,IAAI,CAAElG,CAAC,GAAGA,CAAC,GAAGyU,CAAC,GAAGA,CAAE,CAAC;MACxC,IAAI,CAACjO,KAAK,GAAGzH,IAAI,CAACsH,KAAK,CAAErG,CAAC,EAAEyU,CAAE,CAAC;MAC/B,IAAI,CAAChpB,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAA4/J,WAAA;AAAA;AAIF,IAAMC,SAAS,GAAG,aAAc,IAAIxgK,OAAO,CAAC,CAAC;AAAC,IAExCygK,IAAI,GAAApzK,OAAA,CAAAozK,IAAA;EAET,SAAAA,KAAa7kK,GAAG,GAAG,IAAIoE,OAAO,CAAE,CAAE0d,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAE7hB,GAAG,GAAG,IAAImE,OAAO,CAAE,CAAE0d,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAG;IAAA3xB,eAAA,OAAA00K,IAAA;IAEvG,IAAI,CAACC,MAAM,GAAG,IAAI;IAElB,IAAI,CAAC9kK,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAACrP,YAAA,CAAAi0K,IAAA;IAAAl0K,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKtD,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAAC+E,IAAI,CAAE/E,GAAI,CAAC;MACpB,IAAI,CAACC,GAAG,CAAC8E,IAAI,CAAE9E,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAAi4B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACL,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAI53B,CAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAG2I,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsvB,EAAE,EAAEtvB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAAC63B,aAAa,CAAEI,MAAM,CAAEj4B,CAAC,CAAG,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAsG,GAAA;IAAAvG,KAAA,EAED,SAAAm4B,qBAAsBra,MAAM,EAAEsa,IAAI,EAAG;MAEpC,IAAMC,QAAQ,GAAGmiJ,SAAS,CAAC7/J,IAAI,CAAEyd,IAAK,CAAC,CAAChd,cAAc,CAAE,GAAI,CAAC;MAC7D,IAAI,CAACxF,GAAG,CAAC+E,IAAI,CAAEmD,MAAO,CAAC,CAAC9C,GAAG,CAAEqd,QAAS,CAAC;MACvC,IAAI,CAACxiB,GAAG,CAAC8E,IAAI,CAAEmD,MAAO,CAAC,CAAClD,GAAG,CAAEyd,QAAS,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA9xB,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAApU,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAM+d,GAAG,EAAG;MAEX,IAAI,CAAC9iB,GAAG,CAAC+E,IAAI,CAAE+d,GAAG,CAAC9iB,GAAI,CAAC;MACxB,IAAI,CAACC,GAAG,CAAC8E,IAAI,CAAE+d,GAAG,CAAC7iB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAA63B,UAAA,EAAY;MAEX,IAAI,CAACjiB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAAClU,CAAC,GAAG,CAAEg2B,QAAQ;MACpC,IAAI,CAAC7hB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACnU,CAAC,GAAG,CAAEg2B,QAAQ;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAnxB,GAAA;IAAAvG,KAAA,EAED,SAAA24B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAAC9iB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAQ,IAAI,CAACJ,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAG;IAElE;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA44B,UAAWzyB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACwyB,OAAO,CAAC,CAAC,GAAGxyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC2U,UAAU,CAAE,IAAI,CAAClF,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC,CAACuF,cAAc,CAAE,GAAI,CAAC;IAE3G;EAAC;IAAA7U,GAAA;IAAAvG,KAAA,EAED,SAAA64B,QAAS1yB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACwyB,OAAO,CAAC,CAAC,GAAGxyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC+U,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE,IAAI,CAACD,GAAI,CAAC;IAErF;EAAC;IAAArP,GAAA;IAAAvG,KAAA,EAED,SAAA83B,cAAegB,KAAK,EAAG;MAEtB,IAAI,CAACljB,GAAG,CAACA,GAAG,CAAEkjB,KAAM,CAAC;MACrB,IAAI,CAACjjB,GAAG,CAACA,GAAG,CAAEijB,KAAM,CAAC;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAA+4B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACpjB,GAAG,CAACoF,GAAG,CAAEge,MAAO,CAAC;MACtB,IAAI,CAACnjB,GAAG,CAAC+E,GAAG,CAAEoe,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAzyB,GAAA;IAAAvG,KAAA,EAED,SAAAi5B,eAAgB5e,MAAM,EAAG;MAExB,IAAI,CAACzE,GAAG,CAACiF,SAAS,CAAE,CAAER,MAAO,CAAC;MAC9B,IAAI,CAACxE,GAAG,CAACgF,SAAS,CAAER,MAAO,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA9T,GAAA;IAAAvG,KAAA,EAED,SAAA25B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAI6iB,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC,IAClD6iB,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAAIo3B,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA45B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAAC9iB,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC9iB,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC7iB,GAAG,CAACI,CAAC,IAAI,IAAI,CAACJ,GAAG,CAACI,CAAC,IACxD,IAAI,CAACL,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,IAAI,IAAI,CAACmU,GAAG,CAACnU,CAAC;IAEpD;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA65B,aAAcf,KAAK,EAAE3yB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+S,GAAG,CAChB,CAAE4f,KAAK,CAAC7iB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,KAAO,IAAI,CAACJ,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,CAAE,EACtD,CAAE6iB,KAAK,CAACp3B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,KAAO,IAAI,CAACmU,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,CACrD,CAAC;IAEF;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA85B,cAAepB,GAAG,EAAG;MAEpB;;MAEA,OAAOA,GAAG,CAAC7iB,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAAIyiB,GAAG,CAAC9iB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC,IACtDyiB,GAAG,CAAC7iB,GAAG,CAACnU,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAAIg3B,GAAG,CAAC9iB,GAAG,CAAClU,CAAC,GAAG,IAAI,CAACmU,GAAG,CAACnU,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAAi6B,WAAYnB,KAAK,EAAE3yB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwU,IAAI,CAAEme,KAAM,CAAC,CAACnjB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC;IAExD;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAAk7B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAE0hJ,SAAU,CAAC,CAAC79J,UAAU,CAAEmc,KAAM,CAAC;IAE/D;EAAC;IAAAvyB,GAAA;IAAAvG,KAAA,EAED,SAAAo7B,UAAW1C,GAAG,EAAG;MAEhB,IAAI,CAAC9iB,GAAG,CAACC,GAAG,CAAE6iB,GAAG,CAAC9iB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAE8iB,GAAG,CAAC7iB,GAAI,CAAC;MAEvB,IAAK,IAAI,CAAC8iB,OAAO,CAAC,CAAC,EAAG,IAAI,CAACd,SAAS,CAAC,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAtxB,GAAA;IAAAvG,KAAA,EAED,SAAAs5B,MAAOZ,GAAG,EAAG;MAEZ,IAAI,CAAC9iB,GAAG,CAACA,GAAG,CAAE8iB,GAAG,CAAC9iB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAE6iB,GAAG,CAAC7iB,GAAI,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAtP,GAAA;IAAAvG,KAAA,EAED,SAAAoiB,UAAW7E,MAAM,EAAG;MAEnB,IAAI,CAAC3H,GAAG,CAACgF,GAAG,CAAE2C,MAAO,CAAC;MACtB,IAAI,CAAC1H,GAAG,CAAC+E,GAAG,CAAE2C,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAhX,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQqb,GAAG,EAAG;MAEb,OAAOA,GAAG,CAAC9iB,GAAG,CAACyH,MAAM,CAAE,IAAI,CAACzH,GAAI,CAAC,IAAI8iB,GAAG,CAAC7iB,GAAG,CAACwH,MAAM,CAAE,IAAI,CAACxH,GAAI,CAAC;IAEhE;EAAC;EAAA,OAAA4kK,IAAA;AAAA;AAIF,IAAME,OAAO,GAAG,aAAc,IAAIvmJ,OAAO,CAAC,CAAC;AAC3C,IAAMwmJ,SAAS,GAAG,aAAc,IAAIxmJ,OAAO,CAAC,CAAC;AAAC,IAExCymJ,KAAK,GAAAxzK,OAAA,CAAAwzK,KAAA;EAEV,SAAAA,MAAal7H,KAAK,GAAG,IAAIvrB,OAAO,CAAC,CAAC,EAAEwxB,GAAG,GAAG,IAAIxxB,OAAO,CAAC,CAAC,EAAG;IAAAruB,eAAA,OAAA80K,KAAA;IAEzD,IAAI,CAACl7H,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACiG,GAAG,GAAGA,GAAG;EAEf;EAACp/C,YAAA,CAAAq0K,KAAA;IAAAt0K,GAAA;IAAAvG,KAAA,EAED,SAAAkZ,IAAKymC,KAAK,EAAEiG,GAAG,EAAG;MAEjB,IAAI,CAACjG,KAAK,CAAChlC,IAAI,CAAEglC,KAAM,CAAC;MACxB,IAAI,CAACiG,GAAG,CAACjrC,IAAI,CAAEirC,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAr/C,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMg1C,IAAI,EAAG;MAEZ,IAAI,CAAChQ,KAAK,CAAChlC,IAAI,CAAEg1C,IAAI,CAAChQ,KAAM,CAAC;MAC7B,IAAI,CAACiG,GAAG,CAACjrC,IAAI,CAAEg1C,IAAI,CAAC/J,GAAI,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAr/C,GAAA;IAAAvG,KAAA,EAED,SAAA44B,UAAWzyB,MAAM,EAAG;MAEnB,OAAOA,MAAM,CAAC2U,UAAU,CAAE,IAAI,CAAC6kC,KAAK,EAAE,IAAI,CAACiG,GAAI,CAAC,CAACxqC,cAAc,CAAE,GAAI,CAAC;IAEvE;EAAC;IAAA7U,GAAA;IAAAvG,KAAA,EAED,SAAAu8B,MAAOp2B,MAAM,EAAG;MAEf,OAAOA,MAAM,CAAC+U,UAAU,CAAE,IAAI,CAAC0qC,GAAG,EAAE,IAAI,CAACjG,KAAM,CAAC;IAEjD;EAAC;IAAAp5C,GAAA;IAAAvG,KAAA,EAED,SAAA86K,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACn7H,KAAK,CAAC/iC,iBAAiB,CAAE,IAAI,CAACgpC,GAAI,CAAC;IAEhD;EAAC;IAAAr/C,GAAA;IAAAvG,KAAA,EAED,SAAAmpC,SAAA,EAAW;MAEV,OAAO,IAAI,CAACwW,KAAK,CAAChjC,UAAU,CAAE,IAAI,CAACipC,GAAI,CAAC;IAEzC;EAAC;IAAAr/C,GAAA;IAAAvG,KAAA,EAED,SAAAm9B,GAAI39B,CAAC,EAAE2G,MAAM,EAAG;MAEf,OAAO,IAAI,CAACo2B,KAAK,CAAEp2B,MAAO,CAAC,CAACiV,cAAc,CAAE5b,CAAE,CAAC,CAACob,GAAG,CAAE,IAAI,CAAC+kC,KAAM,CAAC;IAElE;EAAC;IAAAp5C,GAAA;IAAAvG,KAAA,EAED,SAAA+6K,6BAA8BjiJ,KAAK,EAAEkiJ,WAAW,EAAG;MAElDL,OAAO,CAACz/J,UAAU,CAAE4d,KAAK,EAAE,IAAI,CAAC6mB,KAAM,CAAC;MACvCi7H,SAAS,CAAC1/J,UAAU,CAAE,IAAI,CAAC0qC,GAAG,EAAE,IAAI,CAACjG,KAAM,CAAC;MAE5C,IAAMs7H,SAAS,GAAGL,SAAS,CAAC5+J,GAAG,CAAE4+J,SAAU,CAAC;MAC5C,IAAMM,eAAe,GAAGN,SAAS,CAAC5+J,GAAG,CAAE2+J,OAAQ,CAAC;MAEhD,IAAIn7K,CAAC,GAAG07K,eAAe,GAAGD,SAAS;MAEnC,IAAKD,WAAW,EAAG;QAElBx7K,CAAC,GAAGmW,KAAK,CAAEnW,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAErB;MAEA,OAAOA,CAAC;IAET;EAAC;IAAA+G,GAAA;IAAAvG,KAAA,EAED,SAAAs9B,oBAAqBxE,KAAK,EAAEkiJ,WAAW,EAAE70K,MAAM,EAAG;MAEjD,IAAM3G,CAAC,GAAG,IAAI,CAACu7K,4BAA4B,CAAEjiJ,KAAK,EAAEkiJ,WAAY,CAAC;MAEjE,OAAO,IAAI,CAACz+I,KAAK,CAAEp2B,MAAO,CAAC,CAACiV,cAAc,CAAE5b,CAAE,CAAC,CAACob,GAAG,CAAE,IAAI,CAAC+kC,KAAM,CAAC;IAElE;EAAC;IAAAp5C,GAAA;IAAAvG,KAAA,EAED,SAAA+qB,aAAczI,MAAM,EAAG;MAEtB,IAAI,CAACq9B,KAAK,CAAC50B,YAAY,CAAEzI,MAAO,CAAC;MACjC,IAAI,CAACsjC,GAAG,CAAC76B,YAAY,CAAEzI,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA/b,GAAA;IAAAvG,KAAA,EAED,SAAAqd,OAAQsyC,IAAI,EAAG;MAEd,OAAOA,IAAI,CAAChQ,KAAK,CAACtiC,MAAM,CAAE,IAAI,CAACsiC,KAAM,CAAC,IAAIgQ,IAAI,CAAC/J,GAAG,CAACvoC,MAAM,CAAE,IAAI,CAACuoC,GAAI,CAAC;IAEtE;EAAC;IAAAr/C,GAAA;IAAAvG,KAAA,EAED,SAAA0a,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAACjW,WAAW,CAAC,CAAC,CAACkW,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAkgK,KAAA;AAAA;AAIF,IAAMM,SAAS,GAAG,aAAc,IAAI/mJ,OAAO,CAAC,CAAC;AAAC,IAExCgnJ,eAAe,GAAA/zK,OAAA,CAAA+zK,eAAA,0BAAAC,WAAA;EAAAvzJ,SAAA,CAAAszJ,eAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAtzJ,YAAA,CAAAozJ,eAAA;EAEpB,SAAAA,gBAAavmF,KAAK,EAAE/wE,KAAK,EAAG;IAAA,IAAAy3J,QAAA;IAAAx1K,eAAA,OAAAq1K,eAAA;IAE3BG,QAAA,GAAAD,SAAA,CAAAj6K,IAAA;IAEAk6K,QAAA,CAAK1mF,KAAK,GAAGA,KAAK;IAElB0mF,QAAA,CAAKj5J,MAAM,GAAGuyE,KAAK,CAACl/D,WAAW;IAC/B4lJ,QAAA,CAAKpyJ,gBAAgB,GAAG,KAAK;IAE7BoyJ,QAAA,CAAKz3J,KAAK,GAAGA,KAAK;IAElBy3J,QAAA,CAAKp6K,IAAI,GAAG,iBAAiB;IAE7B,IAAMo4B,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IAErC,IAAM6B,SAAS,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CACnB;IAED,KAAM,IAAI7gD,CAAC,GAAG,CAAC,EAAEw7B,CAAC,GAAG,CAAC,EAAEl6B,CAAC,GAAG,EAAE,EAAEtB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAEw7B,CAAC,EAAG,EAAG;MAEnD,IAAME,EAAE,GAAK17B,CAAC,GAAGsB,CAAC,GAAKyT,IAAI,CAACC,EAAE,GAAG,CAAC;MAClC,IAAM2mB,EAAE,GAAKH,CAAC,GAAGl6B,CAAC,GAAKyT,IAAI,CAACC,EAAE,GAAG,CAAC;MAElC6rC,SAAS,CAAC78C,IAAI,CACb+Q,IAAI,CAACwD,GAAG,CAAEmjB,EAAG,CAAC,EAAE3mB,IAAI,CAACyD,GAAG,CAAEkjB,EAAG,CAAC,EAAE,CAAC,EACjC3mB,IAAI,CAACwD,GAAG,CAAEojB,EAAG,CAAC,EAAE5mB,IAAI,CAACyD,GAAG,CAAEmjB,EAAG,CAAC,EAAE,CACjC,CAAC;IAEF;IAEArC,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAE/E,IAAM/T,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE93C,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE3E2oI,QAAA,CAAKC,IAAI,GAAG,IAAIviD,YAAY,CAAE1/F,QAAQ,EAAEwT,QAAS,CAAC;IAClDwuI,QAAA,CAAK3gK,GAAG,CAAE2gK,QAAA,CAAKC,IAAK,CAAC;IAErBD,QAAA,CAAKprJ,MAAM,CAAC,CAAC;IAAC,OAAAorJ,QAAA;EAEf;EAAC/0K,YAAA,CAAA40K,eAAA;IAAA70K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACoxJ,IAAI,CAACjiJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACoxJ,IAAI,CAACzuI,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAE7B;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAI,CAAC0kE,KAAK,CAAC37D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAC3C,IAAI,CAAC27D,KAAK,CAAC1uF,MAAM,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAElD,IAAMuiJ,UAAU,GAAG,IAAI,CAAC5mF,KAAK,CAAC1rD,QAAQ,GAAG,IAAI,CAAC0rD,KAAK,CAAC1rD,QAAQ,GAAG,IAAI;MACnE,IAAMuyI,SAAS,GAAGD,UAAU,GAAGzmK,IAAI,CAACq2C,GAAG,CAAE,IAAI,CAACwpC,KAAK,CAACx4E,KAAM,CAAC;MAE3D,IAAI,CAACm/J,IAAI,CAACz5J,KAAK,CAAC7I,GAAG,CAAEwiK,SAAS,EAAEA,SAAS,EAAED,UAAW,CAAC;MAEvDN,SAAS,CAACjkJ,qBAAqB,CAAE,IAAI,CAAC29D,KAAK,CAAC1uF,MAAM,CAACwvB,WAAY,CAAC;MAEhE,IAAI,CAAC6lJ,IAAI,CAACp+I,MAAM,CAAE+9I,SAAU,CAAC;MAE7B,IAAK,IAAI,CAACr3J,KAAK,KAAK7c,SAAS,EAAG;QAE/B,IAAI,CAACu0K,IAAI,CAACzuI,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE,IAAI,CAAC4K,KAAM,CAAC;MAE3C,CAAC,MAAM;QAEN,IAAI,CAAC03J,IAAI,CAACzuI,QAAQ,CAACjpB,KAAK,CAACnJ,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC/wE,KAAM,CAAC;MAElD;IAED;EAAC;EAAA,OAAAs3J,eAAA;AAAA,EA/E4Bn0I,QAAQ;AAmFtC,IAAM00I,SAAS,GAAG,aAAc,IAAIvnJ,OAAO,CAAC,CAAC;AAC7C,IAAMwnJ,WAAW,GAAG,aAAc,IAAI/7I,OAAO,CAAC,CAAC;AAC/C,IAAMg8I,eAAe,GAAG,aAAc,IAAIh8I,OAAO,CAAC,CAAC;AAAC,IAG9Ci8I,cAAc,GAAAz0K,OAAA,CAAAy0K,cAAA,0BAAAC,aAAA;EAAAj0J,SAAA,CAAAg0J,cAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAh0J,YAAA,CAAA8zJ,cAAA;EAEnB,SAAAA,eAAavjJ,MAAM,EAAG;IAAA,IAAA0jJ,QAAA;IAAAl2K,eAAA,OAAA+1K,cAAA;IAErB,IAAMhnD,KAAK,GAAGonD,WAAW,CAAE3jJ,MAAO,CAAC;IAEnC,IAAMgB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IAErC,IAAMwH,QAAQ,GAAG,EAAE;IACnB,IAAM01H,MAAM,GAAG,EAAE;IAEjB,IAAMxiI,MAAM,GAAG,IAAI3B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACnC,IAAM4B,MAAM,GAAG,IAAI5B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEnC,KAAM,IAAI/3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG60H,KAAK,CAACxwH,MAAM,EAAErE,CAAC,EAAG,EAAG;MAEzC,IAAM81H,IAAI,GAAGjB,KAAK,CAAE70H,CAAC,CAAE;MAEvB,IAAK81H,IAAI,CAACzuF,MAAM,IAAIyuF,IAAI,CAACzuF,MAAM,CAAC+tF,MAAM,EAAG;QAExC5uE,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxBwiD,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxBk4K,MAAM,CAACl4K,IAAI,CAAE01C,MAAM,CAACl6C,CAAC,EAAEk6C,MAAM,CAACz3C,CAAC,EAAEy3C,MAAM,CAACrhC,CAAE,CAAC;QAC3C6jK,MAAM,CAACl4K,IAAI,CAAE21C,MAAM,CAACn6C,CAAC,EAAEm6C,MAAM,CAAC13C,CAAC,EAAE03C,MAAM,CAACthC,CAAE,CAAC;MAE5C;IAED;IAEAihB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EltB,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE+9H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMpvI,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE7+C,YAAY,EAAE,IAAI;MAAEW,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEsB,UAAU,EAAE,KAAK;MAAEhC,WAAW,EAAE;IAAK,CAAE,CAAC;IAE3IqrI,QAAA,GAAAD,SAAA,CAAA36K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBkvI,QAAA,CAAKG,gBAAgB,GAAG,IAAI;IAE5BH,QAAA,CAAK96K,IAAI,GAAG,gBAAgB;IAE5B86K,QAAA,CAAKjP,IAAI,GAAGz0I,MAAM;IAClB0jJ,QAAA,CAAKnnD,KAAK,GAAGA,KAAK;IAElBmnD,QAAA,CAAK35J,MAAM,GAAGiW,MAAM,CAAC5C,WAAW;IAChCsmJ,QAAA,CAAK9yJ,gBAAgB,GAAG,KAAK;IAAC,OAAA8yJ,QAAA;EAE/B;EAACz1K,YAAA,CAAAs1K,cAAA;IAAAv1K,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1B,IAAM0pF,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAMv7F,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;MAEpD+7H,eAAe,CAAClhK,IAAI,CAAE,IAAI,CAACqyJ,IAAI,CAACr3I,WAAY,CAAC,CAAC/U,MAAM,CAAC,CAAC;MAEtD,KAAM,IAAI3gB,CAAC,GAAG,CAAC,EAAEw7B,CAAC,GAAG,CAAC,EAAEx7B,CAAC,GAAG60H,KAAK,CAACxwH,MAAM,EAAErE,CAAC,EAAG,EAAG;QAEhD,IAAM81H,IAAI,GAAGjB,KAAK,CAAE70H,CAAC,CAAE;QAEvB,IAAK81H,IAAI,CAACzuF,MAAM,IAAIyuF,IAAI,CAACzuF,MAAM,CAAC+tF,MAAM,EAAG;UAExCumD,WAAW,CAACv8J,gBAAgB,CAAEw8J,eAAe,EAAE9lD,IAAI,CAACpgG,WAAY,CAAC;UACjEgmJ,SAAS,CAACzkJ,qBAAqB,CAAE0kJ,WAAY,CAAC;UAC9CniJ,QAAQ,CAAC6iB,MAAM,CAAE7gB,CAAC,EAAEkgJ,SAAS,CAAC1lK,CAAC,EAAE0lK,SAAS,CAACj6K,CAAC,EAAEi6K,SAAS,CAACjxJ,CAAE,CAAC;UAE3DkxJ,WAAW,CAACv8J,gBAAgB,CAAEw8J,eAAe,EAAE9lD,IAAI,CAACzuF,MAAM,CAAC3R,WAAY,CAAC;UACxEgmJ,SAAS,CAACzkJ,qBAAqB,CAAE0kJ,WAAY,CAAC;UAC9CniJ,QAAQ,CAAC6iB,MAAM,CAAE7gB,CAAC,GAAG,CAAC,EAAEkgJ,SAAS,CAAC1lK,CAAC,EAAE0lK,SAAS,CAACj6K,CAAC,EAAEi6K,SAAS,CAACjxJ,CAAE,CAAC;UAE/D+Q,CAAC,IAAI,CAAC;QAEP;MAED;MAEAlC,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC,CAAC91B,WAAW,GAAG,IAAI;MAEtDswB,IAAA,CAAAC,eAAA,CAAAuhI,cAAA,CAAAn8K,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;IAE/B;EAAC;IAAA7kC,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAA0xJ,cAAA;AAAA,EAxF2B7iD,YAAY;AA6FzC,SAASijD,WAAWA,CAAE3jJ,MAAM,EAAG;EAE9B,IAAM8jJ,QAAQ,GAAG,EAAE;EAEnB,IAAK9jJ,MAAM,CAAC88F,MAAM,KAAK,IAAI,EAAG;IAE7BgnD,QAAQ,CAACp4K,IAAI,CAAEs0B,MAAO,CAAC;EAExB;EAEA,KAAM,IAAIt4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs4B,MAAM,CAACmB,QAAQ,CAACp1B,MAAM,EAAErE,CAAC,EAAG,EAAG;IAEnDo8K,QAAQ,CAACp4K,IAAI,CAAC+lC,KAAK,CAAEqyI,QAAQ,EAAEH,WAAW,CAAE3jJ,MAAM,CAACmB,QAAQ,CAAEz5B,CAAC,CAAG,CAAE,CAAC;EAErE;EAEA,OAAOo8K,QAAQ;AAEhB;AAAC,IAEKC,gBAAgB,GAAAj1K,OAAA,CAAAi1K,gBAAA,0BAAAC,MAAA;EAAAz0J,SAAA,CAAAw0J,gBAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAx0J,YAAA,CAAAs0J,gBAAA;EAErB,SAAAA,iBAAaznF,KAAK,EAAE4nF,UAAU,EAAE34J,KAAK,EAAG;IAAA,IAAA44J,QAAA;IAAA32K,eAAA,OAAAu2K,gBAAA;IAEvC,IAAM/iJ,QAAQ,GAAG,IAAIwgH,cAAc,CAAE0iC,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;IACvD,IAAM1vI,QAAQ,GAAG,IAAIkN,iBAAiB,CAAE;MAAE7C,SAAS,EAAE,IAAI;MAAEK,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE5F8pI,QAAA,GAAAF,SAAA,CAAAn7K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzB2vI,QAAA,CAAK7nF,KAAK,GAAGA,KAAK;IAElB6nF,QAAA,CAAK54J,KAAK,GAAGA,KAAK;IAElB44J,QAAA,CAAKv7K,IAAI,GAAG,kBAAkB;IAE9Bu7K,QAAA,CAAKp6J,MAAM,GAAGo6J,QAAA,CAAK7nF,KAAK,CAACl/D,WAAW;IACpC+mJ,QAAA,CAAKvzJ,gBAAgB,GAAG,KAAK;IAE7BuzJ,QAAA,CAAKvsJ,MAAM,CAAC,CAAC;;IAGb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbE,OAAAusJ,QAAA;EAuBD;EAACl2K,YAAA,CAAA81K,gBAAA;IAAA/1K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAI,CAAC0kE,KAAK,CAAC37D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAE3C,IAAK,IAAI,CAACpV,KAAK,KAAK7c,SAAS,EAAG;QAE/B,IAAI,CAAC8lC,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE,IAAI,CAAC4K,KAAM,CAAC;MAEtC,CAAC,MAAM;QAEN,IAAI,CAACipB,QAAQ,CAACjpB,KAAK,CAACnJ,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC/wE,KAAM,CAAC;MAE7C;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAOC;EAAC;EAAA,OAAAw4J,gBAAA;AAAA,EAlF6B53H,IAAI;AAsFnC,IAAMi4H,SAAS,GAAG,aAAc,IAAIvoJ,OAAO,CAAC,CAAC;AAC7C,IAAMwoJ,OAAO,GAAG,aAAc,IAAI5kI,KAAK,CAAC,CAAC;AACzC,IAAM6kI,OAAO,GAAG,aAAc,IAAI7kI,KAAK,CAAC,CAAC;AAAC,IAEpC8kI,qBAAqB,GAAAz1K,OAAA,CAAAy1K,qBAAA,0BAAAC,WAAA;EAAAj1J,SAAA,CAAAg1J,qBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAh1J,YAAA,CAAA80J,qBAAA;EAE1B,SAAAA,sBAAajoF,KAAK,EAAEz8D,IAAI,EAAEtU,KAAK,EAAG;IAAA,IAAAm5J,QAAA;IAAAl3K,eAAA,OAAA+2K,qBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAA37K,IAAA;IAEA47K,QAAA,CAAKpoF,KAAK,GAAGA,KAAK;IAElBooF,QAAA,CAAK36J,MAAM,GAAGuyE,KAAK,CAACl/D,WAAW;IAC/BsnJ,QAAA,CAAK9zJ,gBAAgB,GAAG,KAAK;IAE7B8zJ,QAAA,CAAKn5J,KAAK,GAAGA,KAAK;IAElBm5J,QAAA,CAAK97K,IAAI,GAAG,uBAAuB;IAEnC,IAAMo4B,QAAQ,GAAG,IAAIk/G,kBAAkB,CAAErgH,IAAK,CAAC;IAC/CmB,QAAQ,CAACyP,OAAO,CAAEh0B,IAAI,CAACC,EAAE,GAAG,GAAI,CAAC;IAEjCgoK,QAAA,CAAKlwI,QAAQ,GAAG,IAAIkN,iBAAiB,CAAE;MAAE7C,SAAS,EAAE,IAAI;MAAEK,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAC3F,IAAKqqI,QAAA,CAAKn5J,KAAK,KAAK7c,SAAS,EAAGg2K,QAAA,CAAKlwI,QAAQ,CAAC2D,YAAY,GAAG,IAAI;IAEjE,IAAMjX,QAAQ,GAAGF,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;IACpD,IAAMq8H,MAAM,GAAG,IAAI7iK,YAAY,CAAEmgB,QAAQ,CAACrK,KAAK,GAAG,CAAE,CAAC;IAErDmK,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAIvE,eAAe,CAAE2gI,MAAM,EAAE,CAAE,CAAE,CAAC;IAElEc,QAAA,CAAKriK,GAAG,CAAE,IAAI8pC,IAAI,CAAEnrB,QAAQ,EAAE0jJ,QAAA,CAAKlwI,QAAS,CAAE,CAAC;IAE/CkwI,QAAA,CAAK9sJ,MAAM,CAAC,CAAC;IAAC,OAAA8sJ,QAAA;EAEf;EAACz2K,YAAA,CAAAs2K,qBAAA;IAAAv2K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACrC,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACqT,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAEtC;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAM0+B,IAAI,GAAG,IAAI,CAACn1B,QAAQ,CAAE,CAAC,CAAE;MAE/B,IAAK,IAAI,CAAC5V,KAAK,KAAK7c,SAAS,EAAG;QAE/B,IAAI,CAAC8lC,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE,IAAI,CAAC4K,KAAM,CAAC;MAEtC,CAAC,MAAM;QAEN,IAAMq4J,MAAM,GAAGttH,IAAI,CAACt1B,QAAQ,CAACumB,YAAY,CAAE,OAAQ,CAAC;QAEpD88H,OAAO,CAACjiK,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC/wE,KAAM,CAAC;QAChC+4J,OAAO,CAACliK,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC1xB,WAAY,CAAC;QAEtC,KAAM,IAAIljE,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG46K,MAAM,CAAC/sJ,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAEhD,IAAM6jB,KAAK,GAAK7jB,CAAC,GAAKsB,CAAC,GAAG,CAAG,GAAKq7K,OAAO,GAAGC,OAAO;UAEnDV,MAAM,CAAC7/H,MAAM,CAAEr8C,CAAC,EAAE6jB,KAAK,CAACrkB,CAAC,EAAEqkB,KAAK,CAAC5hB,CAAC,EAAE4hB,KAAK,CAACxL,CAAE,CAAC;QAE9C;QAEA6jK,MAAM,CAACnyJ,WAAW,GAAG,IAAI;MAE1B;MAEA,IAAI,CAAC6qE,KAAK,CAAC37D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAE3C21B,IAAI,CAACzxB,MAAM,CAAEu/I,SAAS,CAACzlJ,qBAAqB,CAAE,IAAI,CAAC29D,KAAK,CAACl/D,WAAY,CAAC,CAAC5Z,MAAM,CAAC,CAAE,CAAC;IAElF;EAAC;EAAA,OAAA+gK,qBAAA;AAAA,EAtEkC71I,QAAQ;AAAA,IA0EtCi2I,UAAU,GAAA71K,OAAA,CAAA61K,UAAA,0BAAAC,cAAA;EAAAr1J,SAAA,CAAAo1J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAp1J,YAAA,CAAAk1J,UAAA;EAEf,SAAAA,WAAa9kJ,IAAI,GAAG,EAAE,EAAE2kG,SAAS,GAAG,EAAE,EAAEpjF,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAAyjI,QAAA;IAAAt3K,eAAA,OAAAm3K,UAAA;IAE9EvjI,MAAM,GAAG,IAAI3B,KAAK,CAAE2B,MAAO,CAAC;IAC5BC,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAO,CAAC;IAE5B,IAAM97B,MAAM,GAAGi/G,SAAS,GAAG,CAAC;IAC5B,IAAM5rG,IAAI,GAAGiH,IAAI,GAAG2kG,SAAS;IAC7B,IAAM1kG,QAAQ,GAAGD,IAAI,GAAG,CAAC;IAEzB,IAAMquB,QAAQ,GAAG,EAAE;MAAE01H,MAAM,GAAG,EAAE;IAEhC,KAAM,IAAIl8K,CAAC,GAAG,CAAC,EAAEw7B,CAAC,GAAG,CAAC,EAAEkhE,CAAC,GAAG,CAAEtkE,QAAQ,EAAEp4B,CAAC,IAAI88H,SAAS,EAAE98H,CAAC,EAAG,EAAE08F,CAAC,IAAIxrE,IAAI,EAAG;MAEzEs1B,QAAQ,CAACxiD,IAAI,CAAE,CAAEo0B,QAAQ,EAAE,CAAC,EAAEskE,CAAC,EAAEtkE,QAAQ,EAAE,CAAC,EAAEskE,CAAE,CAAC;MACjDl2C,QAAQ,CAACxiD,IAAI,CAAE04F,CAAC,EAAE,CAAC,EAAE,CAAEtkE,QAAQ,EAAEskE,CAAC,EAAE,CAAC,EAAEtkE,QAAS,CAAC;MAEjD,IAAMvU,KAAK,GAAG7jB,CAAC,KAAK6d,MAAM,GAAG67B,MAAM,GAAGC,MAAM;MAE5C91B,KAAK,CAACtG,OAAO,CAAE2+J,MAAM,EAAE1gJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClC3X,KAAK,CAACtG,OAAO,CAAE2+J,MAAM,EAAE1gJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClC3X,KAAK,CAACtG,OAAO,CAAE2+J,MAAM,EAAE1gJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClC3X,KAAK,CAACtG,OAAO,CAAE2+J,MAAM,EAAE1gJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;IAEnC;IAEA,IAAMlC,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EltB,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE+9H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMpvI,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE7+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnFyqI,QAAA,GAAAD,SAAA,CAAA/7K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBswI,QAAA,CAAKl8K,IAAI,GAAG,YAAY;IAAC,OAAAk8K,QAAA;EAE1B;EAAC72K,YAAA,CAAA02K,UAAA;IAAA32K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAA8yJ,UAAA;AAAA,EA5CuBjkD,YAAY;AAAA,IAgD/BqkD,eAAe,GAAAj2K,OAAA,CAAAi2K,eAAA,0BAAAC,cAAA;EAAAz1J,SAAA,CAAAw1J,eAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAx1J,YAAA,CAAAs1J,eAAA;EAEpB,SAAAA,gBAAazmJ,MAAM,GAAG,EAAE,EAAE4mJ,OAAO,GAAG,EAAE,EAAEC,KAAK,GAAG,CAAC,EAAE3gD,SAAS,GAAG,EAAE,EAAEpjF,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAA+jI,QAAA;IAAA53K,eAAA,OAAAu3K,eAAA;IAEzG3jI,MAAM,GAAG,IAAI3B,KAAK,CAAE2B,MAAO,CAAC;IAC5BC,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAO,CAAC;IAE5B,IAAM6M,QAAQ,GAAG,EAAE;IACnB,IAAM01H,MAAM,GAAG,EAAE;;IAEjB;;IAEA,IAAKsB,OAAO,GAAG,CAAC,EAAG;MAElB,KAAM,IAAIx9K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGw9K,OAAO,EAAEx9K,CAAC,EAAG,EAAG;QAEpC,IAAM+B,CAAC,GAAK/B,CAAC,GAAGw9K,OAAO,IAAOzoK,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE3C,IAAMgB,CAAC,GAAGjB,IAAI,CAACyD,GAAG,CAAEzW,CAAE,CAAC,GAAG60B,MAAM;QAChC,IAAMnM,CAAC,GAAG1V,IAAI,CAACwD,GAAG,CAAExW,CAAE,CAAC,GAAG60B,MAAM;QAEhC4vB,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxBwiD,QAAQ,CAACxiD,IAAI,CAAEgS,CAAC,EAAE,CAAC,EAAEyU,CAAE,CAAC;QAExB,IAAM5G,KAAK,GAAK7jB,CAAC,GAAG,CAAC,GAAK05C,MAAM,GAAGC,MAAM;QAEzCuiI,MAAM,CAACl4K,IAAI,CAAE6f,KAAK,CAACrkB,CAAC,EAAEqkB,KAAK,CAAC5hB,CAAC,EAAE4hB,KAAK,CAACxL,CAAE,CAAC;QACxC6jK,MAAM,CAACl4K,IAAI,CAAE6f,KAAK,CAACrkB,CAAC,EAAEqkB,KAAK,CAAC5hB,CAAC,EAAE4hB,KAAK,CAACxL,CAAE,CAAC;MAEzC;IAED;;IAEA;;IAEA,KAAM,IAAIrY,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGy9K,KAAK,EAAEz9K,IAAC,EAAG,EAAG;MAElC,IAAM6jB,OAAK,GAAK7jB,IAAC,GAAG,CAAC,GAAK05C,MAAM,GAAGC,MAAM;MAEzC,IAAMn6C,CAAC,GAAGo3B,MAAM,GAAKA,MAAM,GAAG6mJ,KAAK,GAAGz9K,IAAG;MAEzC,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGshG,SAAS,EAAEthG,CAAC,EAAG,EAAG;QAEtC;;QAEA,IAAIz5B,EAAC,GAAKy5B,CAAC,GAAGshG,SAAS,IAAO/nH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE3C,IAAIgB,IAAC,GAAGjB,IAAI,CAACyD,GAAG,CAAEzW,EAAE,CAAC,GAAGvC,CAAC;QACzB,IAAIirB,GAAC,GAAG1V,IAAI,CAACwD,GAAG,CAAExW,EAAE,CAAC,GAAGvC,CAAC;QAEzBgnD,QAAQ,CAACxiD,IAAI,CAAEgS,IAAC,EAAE,CAAC,EAAEyU,GAAE,CAAC;QACxByxJ,MAAM,CAACl4K,IAAI,CAAE6f,OAAK,CAACrkB,CAAC,EAAEqkB,OAAK,CAAC5hB,CAAC,EAAE4hB,OAAK,CAACxL,CAAE,CAAC;;QAExC;;QAEAtW,EAAC,GAAK,CAAEy5B,CAAC,GAAG,CAAC,IAAKshG,SAAS,IAAO/nH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE/CgB,IAAC,GAAGjB,IAAI,CAACyD,GAAG,CAAEzW,EAAE,CAAC,GAAGvC,CAAC;QACrBirB,GAAC,GAAG1V,IAAI,CAACwD,GAAG,CAAExW,EAAE,CAAC,GAAGvC,CAAC;QAErBgnD,QAAQ,CAACxiD,IAAI,CAAEgS,IAAC,EAAE,CAAC,EAAEyU,GAAE,CAAC;QACxByxJ,MAAM,CAACl4K,IAAI,CAAE6f,OAAK,CAACrkB,CAAC,EAAEqkB,OAAK,CAAC5hB,CAAC,EAAE4hB,OAAK,CAACxL,CAAE,CAAC;MAEzC;IAED;IAEA,IAAMihB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EltB,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE+9H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMpvI,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE7+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnF+qI,QAAA,GAAAH,SAAA,CAAAn8K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzB4wI,QAAA,CAAKx8K,IAAI,GAAG,iBAAiB;IAAC,OAAAw8K,QAAA;EAE/B;EAACn3K,YAAA,CAAA82K,eAAA;IAAA/2K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAkzJ,eAAA;AAAA,EApF4BrkD,YAAY;AAwF1C,IAAM2kD,GAAG,GAAG,aAAc,IAAIxpJ,OAAO,CAAC,CAAC;AACvC,IAAMypJ,GAAG,GAAG,aAAc,IAAIzpJ,OAAO,CAAC,CAAC;AACvC,IAAM0pJ,GAAG,GAAG,aAAc,IAAI1pJ,OAAO,CAAC,CAAC;AAAC,IAElC2pJ,sBAAsB,GAAA12K,OAAA,CAAA02K,sBAAA,0BAAAC,WAAA;EAAAl2J,SAAA,CAAAi2J,sBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAj2J,YAAA,CAAA+1J,sBAAA;EAE3B,SAAAA,uBAAalpF,KAAK,EAAEz8D,IAAI,EAAEtU,KAAK,EAAG;IAAA,IAAAo6J,QAAA;IAAAn4K,eAAA,OAAAg4K,sBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAA58K,IAAA;IAEA68K,QAAA,CAAKrpF,KAAK,GAAGA,KAAK;IAElBqpF,QAAA,CAAK57J,MAAM,GAAGuyE,KAAK,CAACl/D,WAAW;IAC/BuoJ,QAAA,CAAK/0J,gBAAgB,GAAG,KAAK;IAE7B+0J,QAAA,CAAKp6J,KAAK,GAAGA,KAAK;IAElBo6J,QAAA,CAAK/8K,IAAI,GAAG,wBAAwB;IAEpC,IAAKi3B,IAAI,KAAKnxB,SAAS,EAAGmxB,IAAI,GAAG,CAAC;IAElC,IAAImB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACnC1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAC9D,CAAEhmB,IAAI,EAAEA,IAAI,EAAE,CAAC,EACfA,IAAI,EAAEA,IAAI,EAAE,CAAC,EACbA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACf,CAAEA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACjB,CAAEA,IAAI,EAAEA,IAAI,EAAE,CAAC,CACf,EAAE,CAAE,CAAE,CAAC;IAER,IAAM2U,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE93C,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE3EsrI,QAAA,CAAKC,UAAU,GAAG,IAAIjmD,IAAI,CAAE3+F,QAAQ,EAAEwT,QAAS,CAAC;IAChDmxI,QAAA,CAAKtjK,GAAG,CAAEsjK,QAAA,CAAKC,UAAW,CAAC;IAE3B5kJ,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IAC/B1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC;IAE1F8/H,QAAA,CAAKE,UAAU,GAAG,IAAIlmD,IAAI,CAAE3+F,QAAQ,EAAEwT,QAAS,CAAC;IAChDmxI,QAAA,CAAKtjK,GAAG,CAAEsjK,QAAA,CAAKE,UAAW,CAAC;IAE3BF,QAAA,CAAK/tJ,MAAM,CAAC,CAAC;IAAC,OAAA+tJ,QAAA;EAEf;EAAC13K,YAAA,CAAAu3K,sBAAA;IAAAx3K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAAC+zJ,UAAU,CAAC5kJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAClC,IAAI,CAAC+zJ,UAAU,CAACpxI,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;MAClC,IAAI,CAACg0J,UAAU,CAAC7kJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAClC,IAAI,CAACg0J,UAAU,CAACrxI,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAEnC;EAAC;IAAA7jB,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAI,CAAC0kE,KAAK,CAAC37D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAC3C,IAAI,CAAC27D,KAAK,CAAC1uF,MAAM,CAAC+yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAElD0kJ,GAAG,CAAC1mJ,qBAAqB,CAAE,IAAI,CAAC29D,KAAK,CAACl/D,WAAY,CAAC;MACnDkoJ,GAAG,CAAC3mJ,qBAAqB,CAAE,IAAI,CAAC29D,KAAK,CAAC1uF,MAAM,CAACwvB,WAAY,CAAC;MAC1DmoJ,GAAG,CAAC5iK,UAAU,CAAE2iK,GAAG,EAAED,GAAI,CAAC;MAE1B,IAAI,CAACO,UAAU,CAAC/gJ,MAAM,CAAEygJ,GAAI,CAAC;MAE7B,IAAK,IAAI,CAAC/5J,KAAK,KAAK7c,SAAS,EAAG;QAE/B,IAAI,CAACk3K,UAAU,CAACpxI,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE,IAAI,CAAC4K,KAAM,CAAC;QAChD,IAAI,CAACs6J,UAAU,CAACrxI,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE,IAAI,CAAC4K,KAAM,CAAC;MAEjD,CAAC,MAAM;QAEN,IAAI,CAACq6J,UAAU,CAACpxI,QAAQ,CAACjpB,KAAK,CAACnJ,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC/wE,KAAM,CAAC;QACvD,IAAI,CAACs6J,UAAU,CAACrxI,QAAQ,CAACjpB,KAAK,CAACnJ,IAAI,CAAE,IAAI,CAACk6E,KAAK,CAAC/wE,KAAM,CAAC;MAExD;MAEA,IAAI,CAACs6J,UAAU,CAAChhJ,MAAM,CAAEygJ,GAAI,CAAC;MAC7B,IAAI,CAACO,UAAU,CAACr8J,KAAK,CAAC2I,CAAC,GAAGozJ,GAAG,CAACx5K,MAAM,CAAC,CAAC;IAEvC;EAAC;EAAA,OAAAy5K,sBAAA;AAAA,EA5EmC92I,QAAQ;AAgF7C,IAAMo3I,OAAO,GAAG,aAAc,IAAIjqJ,OAAO,CAAC,CAAC;AAC3C,IAAMkqJ,OAAO,GAAG,aAAc,IAAIx0H,MAAM,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AALA,IAOMy0H,YAAY,GAAAl3K,OAAA,CAAAk3K,YAAA,0BAAAC,cAAA;EAAA12J,SAAA,CAAAy2J,YAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAz2J,YAAA,CAAAu2J,YAAA;EAEjB,SAAAA,aAAajpJ,MAAM,EAAG;IAAA,IAAAopJ,QAAA;IAAA34K,eAAA,OAAAw4K,YAAA;IAErB,IAAMhlJ,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC,IAAMlS,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAEzrE,KAAK,EAAE,QAAQ;MAAE4sB,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEpG,IAAM6T,QAAQ,GAAG,EAAE;IACnB,IAAM01H,MAAM,GAAG,EAAE;IAEjB,IAAMwC,QAAQ,GAAG,CAAC,CAAC;;IAEnB;;IAEAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;;IAEpB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IACnBA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;;IAEnB;;IAEAA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IAEvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IAEvB,SAASA,OAAOA,CAAEz+K,CAAC,EAAEmY,CAAC,EAAG;MAExBumK,QAAQ,CAAE1+K,CAAE,CAAC;MACb0+K,QAAQ,CAAEvmK,CAAE,CAAC;IAEd;IAEA,SAASumK,QAAQA,CAAEz0I,EAAE,EAAG;MAEvBqc,QAAQ,CAACxiD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACxBk4K,MAAM,CAACl4K,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB,IAAK06K,QAAQ,CAAEv0I,EAAE,CAAE,KAAKnjC,SAAS,EAAG;QAEnC03K,QAAQ,CAAEv0I,EAAE,CAAE,GAAG,EAAE;MAEpB;MAEAu0I,QAAQ,CAAEv0I,EAAE,CAAE,CAACnmC,IAAI,CAAIwiD,QAAQ,CAACniD,MAAM,GAAG,CAAC,GAAK,CAAE,CAAC;IAEnD;IAEAi1B,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EltB,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE+9H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzEuC,QAAA,GAAAD,SAAA,CAAAp9K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzB2xI,QAAA,CAAKv9K,IAAI,GAAG,cAAc;IAE1Bu9K,QAAA,CAAKppJ,MAAM,GAAGA,MAAM;IACpB,IAAKopJ,QAAA,CAAKppJ,MAAM,CAACw1B,sBAAsB,EAAG4zH,QAAA,CAAKppJ,MAAM,CAACw1B,sBAAsB,CAAC,CAAC;IAE9E4zH,QAAA,CAAKp8J,MAAM,GAAGgT,MAAM,CAACK,WAAW;IAChC+oJ,QAAA,CAAKv1J,gBAAgB,GAAG,KAAK;IAE7Bu1J,QAAA,CAAKC,QAAQ,GAAGA,QAAQ;IAExBD,QAAA,CAAKvuJ,MAAM,CAAC,CAAC;;IAEb;;IAEA,IAAM2uJ,YAAY,GAAG,IAAI9mI,KAAK,CAAE,QAAS,CAAC;IAC1C,IAAM+mI,SAAS,GAAG,IAAI/mI,KAAK,CAAE,QAAS,CAAC;IACvC,IAAMgnI,OAAO,GAAG,IAAIhnI,KAAK,CAAE,QAAS,CAAC;IACrC,IAAMinI,WAAW,GAAG,IAAIjnI,KAAK,CAAE,QAAS,CAAC;IACzC,IAAMknI,UAAU,GAAG,IAAIlnI,KAAK,CAAE,QAAS,CAAC;IAExC0mI,QAAA,CAAKS,SAAS,CAAEL,YAAY,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,UAAW,CAAC;IAAC,OAAAR,QAAA;EAE7E;EAACl4K,YAAA,CAAA+3K,YAAA;IAAAh4K,GAAA;IAAAvG,KAAA,EAED,SAAAm/K,UAAW3uH,OAAO,EAAEgrH,IAAI,EAAE15I,EAAE,EAAE37B,MAAM,EAAE8V,KAAK,EAAG;MAE7C,IAAMsd,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM6lJ,cAAc,GAAG7lJ,QAAQ,CAACumB,YAAY,CAAE,OAAQ,CAAC;;MAEvD;;MAEAs/H,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC1H8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC1H8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC1H8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;;MAE1H;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,CAAC,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC1H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC5H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC5H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;;MAE5H;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC5H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC5H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;MAC5H8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEkU,OAAO,CAAC/wD,CAAC,EAAE+wD,OAAO,CAACtuD,CAAC,EAAEsuD,OAAO,CAACl4C,CAAE,CAAC,CAAC,CAAC;;MAE5H;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC,CAAC,CAAC;MAC1G8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC,CAAC,CAAC;MAC1G8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC,CAAC,CAAC;MAC1G8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEk/H,IAAI,CAAC/7K,CAAC,EAAE+7K,IAAI,CAACt5K,CAAC,EAAEs5K,IAAI,CAACljK,CAAE,CAAC,CAAC,CAAC;;MAE1G;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;MAC9F8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;MAC9F8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAExa,EAAE,CAACriC,CAAC,EAAEqiC,EAAE,CAAC5/B,CAAC,EAAE4/B,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;;MAE9F;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEn2C,MAAM,CAAC1G,CAAC,EAAE0G,MAAM,CAACjE,CAAC,EAAEiE,MAAM,CAACmS,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAEn2C,MAAM,CAAC1G,CAAC,EAAE0G,MAAM,CAACjE,CAAC,EAAEiE,MAAM,CAACmS,CAAE,CAAC,CAAC,CAAC;MACtH8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC,CAAC,CAAC;;MAEhH;;MAEA8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC,CAAC,CAAC;MAChH8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC,CAAC,CAAC;;MAEhH8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC,CAAC,CAAC;MAChH8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC;MAAE8mK,cAAc,CAAC9iI,MAAM,CAAE,EAAE,EAAErgC,KAAK,CAACxc,CAAC,EAAEwc,KAAK,CAAC/Z,CAAC,EAAE+Z,KAAK,CAAC3D,CAAE,CAAC,CAAC,CAAC;;MAEhH8mK,cAAc,CAACp1J,WAAW,GAAG,IAAI;IAElC;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAA,EAAS;MAER,IAAMoJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMolJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMh0J,CAAC,GAAG,CAAC;QAAErpB,CAAC,GAAG,CAAC;;MAElB;MACA;;MAEAg9K,OAAO,CAAC5oJ,uBAAuB,CAAC/a,IAAI,CAAE,IAAI,CAAC2a,MAAM,CAACI,uBAAwB,CAAC;;MAE3E;;MAEA2pJ,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MACvDe,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;MAErD;;MAEAe,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAE,CAAErpB,CAAC,EAAE,CAAE,CAAE,CAAC;MAC5D+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAE,CAAErpB,CAAC,EAAE,CAAE,CAAE,CAAC;MAC1D+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAErpB,CAAC,EAAE,CAAE,CAAE,CAAC;MAC1D+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAErpB,CAAC,EAAE,CAAE,CAAE,CAAC;;MAExD;;MAEA+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAE,CAAErpB,CAAC,EAAE,CAAE,CAAC;MAC1D+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAE,CAAErpB,CAAC,EAAE,CAAE,CAAC;MACxD+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAErpB,CAAC,EAAE,CAAE,CAAC;MACxD+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAErpB,CAAC,EAAE,CAAE,CAAC;;MAEtD;;MAEA+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,GAAG,GAAG,EAAErpB,CAAC,GAAG,GAAG,EAAE,CAAE,CAAE,CAAC;MACpE+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,GAAG,GAAG,EAAErpB,CAAC,GAAG,GAAG,EAAE,CAAE,CAAE,CAAC;MACtE+9K,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAEh9K,CAAC,GAAG,CAAC,EAAE,CAAE,CAAE,CAAC;;MAE5D;;MAEA+9K,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACzD00J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACvD00J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAE,CAAEh9K,CAAC,EAAE,CAAE,CAAC;MACzD+9K,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAEh9K,CAAC,EAAE,CAAE,CAAC;MAEvD+9K,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAE3zJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAC3D00J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE3zJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MACzD00J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAE,CAAEh9K,CAAC,EAAE,CAAE,CAAE,CAAC;MAC3D+9K,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEplJ,QAAQ,EAAE+kJ,OAAO,EAAE,CAAC,EAAEh9K,CAAC,EAAE,CAAE,CAAE,CAAC;MAEzDi4B,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC,CAAC91B,WAAW,GAAG,IAAI;IAEvD;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAm0J,YAAA;AAAA,EAjOyBtlD,YAAY;AAsOvC,SAASomD,QAAQA,CAAEvmJ,KAAK,EAAE6lJ,QAAQ,EAAEplJ,QAAQ,EAAEjE,MAAM,EAAErf,CAAC,EAAEvU,CAAC,EAAEgpB,CAAC,EAAG;EAE/D2zJ,OAAO,CAACnlK,GAAG,CAAEjD,CAAC,EAAEvU,CAAC,EAAEgpB,CAAE,CAAC,CAAC+K,SAAS,CAAEH,MAAO,CAAC;EAE1C,IAAM4C,MAAM,GAAGymJ,QAAQ,CAAE7lJ,KAAK,CAAE;EAEhC,IAAKZ,MAAM,KAAKjxB,SAAS,EAAG;IAE3B,IAAMwyB,QAAQ,GAAGF,QAAQ,CAACumB,YAAY,CAAE,UAAW,CAAC;IAEpD,KAAM,IAAI7/C,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG22B,MAAM,CAAC5zB,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MAEjDw5B,QAAQ,CAAC6iB,MAAM,CAAEpkB,MAAM,CAAEj4B,CAAC,CAAE,EAAEo+K,OAAO,CAACpoK,CAAC,EAAEooK,OAAO,CAAC38K,CAAC,EAAE28K,OAAO,CAAC3zJ,CAAE,CAAC;IAEhE;EAED;AAED;AAEA,IAAM40J,IAAI,GAAG,aAAc,IAAI7nJ,IAAI,CAAC,CAAC;AAAC,IAEhC8nJ,SAAS,GAAAl4K,OAAA,CAAAk4K,SAAA,0BAAAC,cAAA;EAAA13J,SAAA,CAAAy3J,SAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAz3J,YAAA,CAAAu3J,SAAA;EAEd,SAAAA,UAAahnJ,MAAM,EAAEzU,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAA47J,QAAA;IAAA35K,eAAA,OAAAw5K,SAAA;IAEvC,IAAM1+H,OAAO,GAAG,IAAIrnC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;IAC7G,IAAMsnC,SAAS,GAAG,IAAIxnC,YAAY,CAAE,CAAC,GAAG,CAAE,CAAC;IAE3C,IAAMigB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC1lB,QAAQ,CAACsmB,QAAQ,CAAE,IAAIrE,eAAe,CAAEqF,OAAO,EAAE,CAAE,CAAE,CAAC;IACtDtnB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAIvE,eAAe,CAAEsF,SAAS,EAAE,CAAE,CAAE,CAAC;IAExE4+H,QAAA,GAAAD,SAAA,CAAAp+K,IAAA,OAAOk4B,QAAQ,EAAE,IAAIg2D,iBAAiB,CAAE;MAAEzrE,KAAK,EAAEA,KAAK;MAAE8uB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7E8sI,QAAA,CAAKnnJ,MAAM,GAAGA,MAAM;IACpBmnJ,QAAA,CAAKv+K,IAAI,GAAG,WAAW;IAEvBu+K,QAAA,CAAKv2J,gBAAgB,GAAG,KAAK;IAE7Bu2J,QAAA,CAAKvvJ,MAAM,CAAC,CAAC;IAAC,OAAAuvJ,QAAA;EAEf;EAACl5K,YAAA,CAAA+4K,SAAA;IAAAh5K,GAAA;IAAAvG,KAAA,EAED,SAAAmwB,OAAQoI,MAAM,EAAG;MAEhB,IAAKA,MAAM,KAAKtxB,SAAS,EAAG;QAE3BkS,OAAO,CAACC,IAAI,CAAE,qDAAsD,CAAC;MAEtE;MAEA,IAAK,IAAI,CAACmf,MAAM,KAAKtxB,SAAS,EAAG;QAEhCq4K,IAAI,CAAChnJ,aAAa,CAAE,IAAI,CAACC,MAAO,CAAC;MAElC;MAEA,IAAK+mJ,IAAI,CAAC3mJ,OAAO,CAAC,CAAC,EAAG;MAEtB,IAAM/iB,GAAG,GAAG0pK,IAAI,CAAC1pK,GAAG;MACpB,IAAMC,GAAG,GAAGypK,IAAI,CAACzpK,GAAG;;MAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGE,IAAM4jB,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAClD,IAAM7kB,KAAK,GAAG6kB,QAAQ,CAAC7kB,KAAK;MAE5BA,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACI,CAAC;MAAErB,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACnU,CAAC;MAAEkT,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAAC6U,CAAC;MAC1D9V,KAAK,CAAE,CAAC,CAAE,GAAGgB,GAAG,CAACK,CAAC;MAAErB,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACnU,CAAC;MAAEkT,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAAC6U,CAAC;MAC1D9V,KAAK,CAAE,CAAC,CAAE,GAAGgB,GAAG,CAACK,CAAC;MAAErB,KAAK,CAAE,CAAC,CAAE,GAAGgB,GAAG,CAAClU,CAAC;MAAEkT,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAAC6U,CAAC;MAC1D9V,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACI,CAAC;MAAErB,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAClU,CAAC;MAAEkT,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAAC6U,CAAC;MAC5D9V,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACI,CAAC;MAAErB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACnU,CAAC;MAAEkT,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAC8U,CAAC;MAC7D9V,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAACK,CAAC;MAAErB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACnU,CAAC;MAAEkT,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAC8U,CAAC;MAC7D9V,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAACK,CAAC;MAAErB,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAClU,CAAC;MAAEkT,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAC8U,CAAC;MAC7D9V,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACI,CAAC;MAAErB,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAClU,CAAC;MAAEkT,KAAK,CAAE,EAAE,CAAE,GAAGgB,GAAG,CAAC8U,CAAC;MAE7D+O,QAAQ,CAACzP,WAAW,GAAG,IAAI;MAE3B,IAAI,CAACuP,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;IAEtC;EAAC;IAAAh6C,GAAA;IAAAvG,KAAA,EAED,SAAAs4B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACpI,MAAM,CAAC,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA5pB,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAEskB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAglI,SAAA,CAAA5/K,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAEskB,SAAS;MAE7B,IAAI,CAAC7U,MAAM,GAAGzP,MAAM,CAACyP,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAhyB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAm1J,SAAA;AAAA,EAnGsBtmD,YAAY;AAAA,IAuG9B0mD,UAAU,GAAAt4K,OAAA,CAAAs4K,UAAA,0BAAAC,cAAA;EAAA93J,SAAA,CAAA63J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAA73J,YAAA,CAAA23J,UAAA;EAEf,SAAAA,WAAajnJ,GAAG,EAAE5U,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAAg8J,QAAA;IAAA/5K,eAAA,OAAA45K,UAAA;IAEpC,IAAM9+H,OAAO,GAAG,IAAIrnC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;IAE7G,IAAMsnC,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;IAEpH,IAAMvnB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IAErC1lB,QAAQ,CAACsmB,QAAQ,CAAE,IAAIrE,eAAe,CAAEqF,OAAO,EAAE,CAAE,CAAE,CAAC;IAEtDtnB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAE/Eg/H,QAAA,GAAAD,SAAA,CAAAx+K,IAAA,OAAOk4B,QAAQ,EAAE,IAAIg2D,iBAAiB,CAAE;MAAEzrE,KAAK,EAAEA,KAAK;MAAE8uB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7EktI,QAAA,CAAKpnJ,GAAG,GAAGA,GAAG;IAEdonJ,QAAA,CAAK3+K,IAAI,GAAG,YAAY;IAExB2+K,QAAA,CAAKvmJ,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;IAAC,OAAAu/H,QAAA;EAEvC;EAACt5K,YAAA,CAAAm5K,UAAA;IAAAp5K,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1B,IAAM1S,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,IAAKA,GAAG,CAACC,OAAO,CAAC,CAAC,EAAG;MAErBD,GAAG,CAACE,SAAS,CAAE,IAAI,CAACa,QAAS,CAAC;MAE9Bf,GAAG,CAACG,OAAO,CAAE,IAAI,CAAC9W,KAAM,CAAC;MAEzB,IAAI,CAACA,KAAK,CAAC3G,cAAc,CAAE,GAAI,CAAC;MAEhCk/B,IAAA,CAAAC,eAAA,CAAAolI,UAAA,CAAAhgL,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;IAE/B;EAAC;IAAA7kC,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAu1J,UAAA;AAAA,EA7CuB1mD,YAAY;AAAA,IAiD/B8mD,WAAW,GAAA14K,OAAA,CAAA04K,WAAA,0BAAAC,MAAA;EAAAl4J,SAAA,CAAAi4J,WAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAj4J,YAAA,CAAA+3J,WAAA;EAEhB,SAAAA,YAAa5lJ,KAAK,EAAE/B,IAAI,GAAG,CAAC,EAAEigB,GAAG,GAAG,QAAQ,EAAG;IAAA,IAAA6nI,QAAA;IAAAn6K,eAAA,OAAAg6K,WAAA;IAE9C,IAAMj8J,KAAK,GAAGu0B,GAAG;IAEjB,IAAMyI,SAAS,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE5G,IAAMvnB,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAC/EvnB,QAAQ,CAACgnB,qBAAqB,CAAC,CAAC;IAEhC2/H,QAAA,GAAAD,SAAA,CAAA5+K,IAAA,OAAOk4B,QAAQ,EAAE,IAAIg2D,iBAAiB,CAAE;MAAEzrE,KAAK,EAAEA,KAAK;MAAE8uB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7EstI,QAAA,CAAK/+K,IAAI,GAAG,aAAa;IAEzB++K,QAAA,CAAK/lJ,KAAK,GAAGA,KAAK;IAElB+lJ,QAAA,CAAK9nJ,IAAI,GAAGA,IAAI;IAEhB,IAAM+nJ,UAAU,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAEvF,IAAM/8H,SAAS,GAAG,IAAInE,cAAc,CAAC,CAAC;IACtCmE,SAAS,CAACrD,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE+hI,UAAU,EAAE,CAAE,CAAE,CAAC;IACjF/8H,SAAS,CAAC7C,qBAAqB,CAAC,CAAC;IAEjC2/H,QAAA,CAAKtlK,GAAG,CAAE,IAAI8pC,IAAI,CAAEtB,SAAS,EAAE,IAAInJ,iBAAiB,CAAE;MAAEn2B,KAAK,EAAEA,KAAK;MAAE6sB,OAAO,EAAE,GAAG;MAAEC,WAAW,EAAE,IAAI;MAAEU,UAAU,EAAE,KAAK;MAAEsB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAE,CAAC;IAAC,OAAAstI,QAAA;EAErJ;EAAC15K,YAAA,CAAAu5K,WAAA;IAAAx5K,GAAA;IAAAvG,KAAA,EAED,SAAAmrC,kBAAmBC,KAAK,EAAG;MAE1B,IAAI,CAAC3R,QAAQ,CAACvgB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE5B,IAAI,CAAC6I,KAAK,CAAC7I,GAAG,CAAE,GAAG,GAAG,IAAI,CAACkf,IAAI,EAAE,GAAG,GAAG,IAAI,CAACA,IAAI,EAAE,CAAE,CAAC;MAErD,IAAI,CAACgF,MAAM,CAAE,IAAI,CAACjD,KAAK,CAAC1D,MAAO,CAAC;MAEhC,IAAI,CAAC6S,UAAU,CAAE,CAAE,IAAI,CAACnP,KAAK,CAACC,QAAS,CAAC;MAExCkgB,IAAA,CAAAC,eAAA,CAAAwlI,WAAA,CAAApgL,SAAA,8BAAA0B,IAAA,OAAyB+pC,KAAK;IAE/B;EAAC;IAAA7kC,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;MACvB,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACrC,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACqT,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAEtC;EAAC;EAAA,OAAA21J,WAAA;AAAA,EAnDwB7nD,IAAI;AAuD9B,IAAMkoD,KAAK,GAAG,aAAc,IAAIhsJ,OAAO,CAAC,CAAC;AACzC,IAAIisJ,aAAa,EAAEC,aAAa;AAAC,IAE3BC,WAAW,GAAAl5K,OAAA,CAAAk5K,WAAA,0BAAAC,WAAA;EAAA14J,SAAA,CAAAy4J,WAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAz4J,YAAA,CAAAu4J,WAAA;EAEhB;;EAEA,SAAAA,YAAaxsJ,GAAG,GAAG,IAAIK,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE4I,MAAM,GAAG,IAAI5I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE9vB,MAAM,GAAG,CAAC,EAAEwf,KAAK,GAAG,QAAQ,EAAE48J,UAAU,GAAGp8K,MAAM,GAAG,GAAG,EAAEq8K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;IAAA,IAAAE,QAAA;IAAA76K,eAAA,OAAAw6K,WAAA;IAEnKK,QAAA,GAAAH,SAAA,CAAAp/K,IAAA;IAEAu/K,QAAA,CAAKz/K,IAAI,GAAG,aAAa;IAEzB,IAAKk/K,aAAa,KAAKp5K,SAAS,EAAG;MAElCo5K,aAAa,GAAG,IAAIphI,cAAc,CAAC,CAAC;MACpCohI,aAAa,CAACtgI,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC;MAE/FkiI,aAAa,GAAG,IAAI/3C,gBAAgB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACvD+3C,aAAa,CAACl+J,SAAS,CAAE,CAAC,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC;IAEvC;IAEAw+J,QAAA,CAAKnnJ,QAAQ,CAAC9e,IAAI,CAAEqiB,MAAO,CAAC;IAE5B4jJ,QAAA,CAAKjxH,IAAI,GAAG,IAAIuoE,IAAI,CAAEmoD,aAAa,EAAE,IAAI9wF,iBAAiB,CAAE;MAAEzrE,KAAK,EAAEA,KAAK;MAAE8uB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAC;IACnGguI,QAAA,CAAKjxH,IAAI,CAACxmC,gBAAgB,GAAG,KAAK;IAClCy3J,QAAA,CAAKhmK,GAAG,CAAEgmK,QAAA,CAAKjxH,IAAK,CAAC;IAErBixH,QAAA,CAAKpF,IAAI,GAAG,IAAI92H,IAAI,CAAE47H,aAAa,EAAE,IAAIrmI,iBAAiB,CAAE;MAAEn2B,KAAK,EAAEA,KAAK;MAAE8uB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAC;IACnGguI,QAAA,CAAKpF,IAAI,CAACryJ,gBAAgB,GAAG,KAAK;IAClCy3J,QAAA,CAAKhmK,GAAG,CAAEgmK,QAAA,CAAKpF,IAAK,CAAC;IAErBoF,QAAA,CAAKC,YAAY,CAAE9sJ,GAAI,CAAC;IACxB6sJ,QAAA,CAAK5jK,SAAS,CAAE1Y,MAAM,EAAEo8K,UAAU,EAAEC,SAAU,CAAC;IAAC,OAAAC,QAAA;EAEjD;EAACp6K,YAAA,CAAA+5K,WAAA;IAAAh6K,GAAA;IAAAvG,KAAA,EAED,SAAA6gL,aAAc9sJ,GAAG,EAAG;MAEnB;;MAEA,IAAKA,GAAG,CAACryB,CAAC,GAAG,OAAO,EAAG;QAEtB,IAAI,CAACsuB,UAAU,CAAC9W,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElC,CAAC,MAAM,IAAK6a,GAAG,CAACryB,CAAC,GAAG,CAAE,OAAO,EAAG;QAE/B,IAAI,CAACsuB,UAAU,CAAC9W,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElC,CAAC,MAAM;QAENknK,KAAK,CAAClnK,GAAG,CAAE6a,GAAG,CAACrJ,CAAC,EAAE,CAAC,EAAE,CAAEqJ,GAAG,CAAC9d,CAAE,CAAC,CAAC4D,SAAS,CAAC,CAAC;QAE1C,IAAMjC,OAAO,GAAG5C,IAAI,CAAC0H,IAAI,CAAEqX,GAAG,CAACryB,CAAE,CAAC;QAElC,IAAI,CAACsuB,UAAU,CAACS,gBAAgB,CAAE2vJ,KAAK,EAAExoK,OAAQ,CAAC;MAEnD;IAED;EAAC;IAAArR,GAAA;IAAAvG,KAAA,EAED,SAAAgd,UAAW1Y,MAAM,EAAEo8K,UAAU,GAAGp8K,MAAM,GAAG,GAAG,EAAEq8K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;MAE5E,IAAI,CAAC/wH,IAAI,CAAC5tC,KAAK,CAAC7I,GAAG,CAAE,CAAC,EAAElE,IAAI,CAACa,GAAG,CAAE,MAAM,EAAEvR,MAAM,GAAGo8K,UAAW,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;MACtE,IAAI,CAAC/wH,IAAI,CAAC/lC,YAAY,CAAC,CAAC;MAExB,IAAI,CAAC4xJ,IAAI,CAACz5J,KAAK,CAAC7I,GAAG,CAAEynK,SAAS,EAAED,UAAU,EAAEC,SAAU,CAAC;MACvD,IAAI,CAACnF,IAAI,CAAC/hJ,QAAQ,CAAC/3B,CAAC,GAAG4C,MAAM;MAC7B,IAAI,CAACk3K,IAAI,CAAC5xJ,YAAY,CAAC,CAAC;IAEzB;EAAC;IAAArjB,GAAA;IAAAvG,KAAA,EAED,SAAA8gL,SAAUh9J,KAAK,EAAG;MAEjB,IAAI,CAAC6rC,IAAI,CAAC5iB,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE4K,KAAM,CAAC;MACrC,IAAI,CAAC03J,IAAI,CAACzuI,QAAQ,CAACjpB,KAAK,CAAC5K,GAAG,CAAE4K,KAAM,CAAC;IAEtC;EAAC;IAAAvd,GAAA;IAAAvG,KAAA,EAED,SAAA2a,KAAMmO,MAAM,EAAG;MAEdwxB,IAAA,CAAAC,eAAA,CAAAgmI,WAAA,CAAA5gL,SAAA,iBAAA0B,IAAA,OAAYynB,MAAM,EAAE,KAAK;MAEzB,IAAI,CAAC6mC,IAAI,CAACh1C,IAAI,CAAEmO,MAAM,CAAC6mC,IAAK,CAAC;MAC7B,IAAI,CAAC6rH,IAAI,CAAC7gK,IAAI,CAAEmO,MAAM,CAAC0yJ,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAj1K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACulC,IAAI,CAACp2B,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACulC,IAAI,CAAC5iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACoxJ,IAAI,CAACjiJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACoxJ,IAAI,CAACzuI,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAE7B;EAAC;EAAA,OAAAm2J,WAAA;AAAA,EA/FwBt5I,QAAQ;AAAA,IAmG5B85I,UAAU,GAAA15K,OAAA,CAAA05K,UAAA,0BAAAC,cAAA;EAAAl5J,SAAA,CAAAi5J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAj5J,YAAA,CAAA+4J,UAAA;EAEf,SAAAA,WAAa3oJ,IAAI,GAAG,CAAC,EAAG;IAAA,IAAA8oJ,QAAA;IAAAn7K,eAAA,OAAAg7K,UAAA;IAEvB,IAAMt6H,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEruB,IAAI,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,CACnB;IAED,IAAM+jJ,MAAM,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAClB;IAED,IAAM5iJ,QAAQ,GAAG,IAAI0lB,cAAc,CAAC,CAAC;IACrC1lB,QAAQ,CAACwmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EltB,QAAQ,CAACwmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE+9H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMpvI,QAAQ,GAAG,IAAIwiD,iBAAiB,CAAE;MAAE7+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnFsuI,QAAA,GAAAD,SAAA,CAAA5/K,IAAA,OAAOk4B,QAAQ,EAAEwT,QAAQ;IAEzBm0I,QAAA,CAAK//K,IAAI,GAAG,YAAY;IAAC,OAAA+/K,QAAA;EAE1B;EAAC16K,YAAA,CAAAu6K,UAAA;IAAAx6K,GAAA;IAAAvG,KAAA,EAED,SAAAm/K,UAAWgC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAG;MAE/C,IAAMv9J,KAAK,GAAG,IAAIk0B,KAAK,CAAC,CAAC;MACzB,IAAMpjC,KAAK,GAAG,IAAI,CAAC2kB,QAAQ,CAACC,UAAU,CAAC1V,KAAK,CAAClP,KAAK;MAElDkP,KAAK,CAAC5K,GAAG,CAAEioK,UAAW,CAAC;MACvBr9J,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,CAAE,CAAC;MACzBkP,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,CAAE,CAAC;MAEzBkP,KAAK,CAAC5K,GAAG,CAAEkoK,UAAW,CAAC;MACvBt9J,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,CAAE,CAAC;MACzBkP,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,CAAE,CAAC;MAEzBkP,KAAK,CAAC5K,GAAG,CAAEmoK,UAAW,CAAC;MACvBv9J,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,EAAG,CAAC;MAC1BkP,KAAK,CAACtG,OAAO,CAAE5I,KAAK,EAAE,EAAG,CAAC;MAE1B,IAAI,CAAC2kB,QAAQ,CAACC,UAAU,CAAC1V,KAAK,CAACkG,WAAW,GAAG,IAAI;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAzjB,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC2iB,QAAQ,CAAC3iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAA22J,UAAA;AAAA,EAxDuB9nD,YAAY;AAAA,IA4D/BqoD,SAAS,GAAAj6K,OAAA,CAAAi6K,SAAA;EAEd,SAAAA,UAAA,EAAc;IAAAv7K,eAAA,OAAAu7K,SAAA;IAEb,IAAI,CAACngL,IAAI,GAAG,WAAW;IAEvB,IAAI,CAAC2iB,KAAK,GAAG,IAAIk0B,KAAK,CAAC,CAAC;IAExB,IAAI,CAACupI,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,WAAW,GAAG,IAAI;EAExB;EAACh7K,YAAA,CAAA86K,SAAA;IAAA/6K,GAAA;IAAAvG,KAAA,EAED,SAAA6lI,OAAQ5vH,CAAC,EAAEvU,CAAC,EAAG;MAEd,IAAI,CAAC8/K,WAAW,GAAG,IAAIh8C,IAAI,CAAC,CAAC;MAC7B,IAAI,CAAC+7C,QAAQ,CAACt9K,IAAI,CAAE,IAAI,CAACu9K,WAAY,CAAC;MACtC,IAAI,CAACA,WAAW,CAAC37C,MAAM,CAAE5vH,CAAC,EAAEvU,CAAE,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA8lI,OAAQ7vH,CAAC,EAAEvU,CAAC,EAAG;MAEd,IAAI,CAAC8/K,WAAW,CAAC17C,MAAM,CAAE7vH,CAAC,EAAEvU,CAAE,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA6E,GAAA;IAAAvG,KAAA,EAED,SAAA+lI,iBAAkBC,IAAI,EAAEC,IAAI,EAAElH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAI,CAACwiD,WAAW,CAACz7C,gBAAgB,CAAEC,IAAI,EAAEC,IAAI,EAAElH,EAAE,EAAEC,EAAG,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAz4H,GAAA;IAAAvG,KAAA,EAED,SAAAkmI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEvH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAACwiD,WAAW,CAACt7C,aAAa,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEvH,EAAE,EAAEC,EAAG,CAAC;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAAz4H,GAAA;IAAAvG,KAAA,EAED,SAAAumI,WAAYhB,GAAG,EAAG;MAEjB,IAAI,CAACi8C,WAAW,CAACj7C,UAAU,CAAEhB,GAAI,CAAC;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAh/H,GAAA;IAAAvG,KAAA,EAED,SAAAyhL,SAAUC,KAAK,EAAG;MAEjB,SAASC,eAAeA,CAAEC,UAAU,EAAG;QAEtC,IAAMn2I,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIxrC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGqgL,UAAU,CAACt9K,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;UAErD,IAAM4hL,QAAO,GAAGD,UAAU,CAAE3hL,CAAC,CAAE;UAE/B,IAAM6hL,SAAQ,GAAG,IAAI/0C,KAAK,CAAC,CAAC;UAC5B+0C,SAAQ,CAACp9C,MAAM,GAAGm9C,QAAO,CAACn9C,MAAM;UAEhCj5F,MAAM,CAACxnC,IAAI,CAAE69K,SAAS,CAAC;QAExB;QAEA,OAAOr2I,MAAM;MAEd;MAEA,SAASs2I,oBAAoBA,CAAEttC,IAAI,EAAEutC,SAAS,EAAG;QAEhD,IAAMC,OAAO,GAAGD,SAAS,CAAC19K,MAAM;;QAEhC;QACA;QACA;QACA;QACA,IAAIutI,MAAM,GAAG,KAAK;QAClB,KAAM,IAAIhwI,CAAC,GAAGogL,OAAO,GAAG,CAAC,EAAE5pK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4pK,OAAO,EAAEpgL,CAAC,GAAGwW,CAAC,EAAG,EAAG;UAEzD,IAAI6pK,SAAS,GAAGF,SAAS,CAAEngL,CAAC,CAAE;UAC9B,IAAIsgL,UAAU,GAAGH,SAAS,CAAE3pK,CAAC,CAAE;UAE/B,IAAI+pK,MAAM,GAAGD,UAAU,CAAClsK,CAAC,GAAGisK,SAAS,CAACjsK,CAAC;UACvC,IAAIosK,MAAM,GAAGF,UAAU,CAACzgL,CAAC,GAAGwgL,SAAS,CAACxgL,CAAC;UAEvC,IAAKsT,IAAI,CAAC6B,GAAG,CAAEwrK,MAAO,CAAC,GAAGl7K,MAAM,CAAC8pB,OAAO,EAAG;YAE1C;YACA,IAAKoxJ,MAAM,GAAG,CAAC,EAAG;cAEjBH,SAAS,GAAGF,SAAS,CAAE3pK,CAAC,CAAE;cAAE+pK,MAAM,GAAG,CAAEA,MAAM;cAC7CD,UAAU,GAAGH,SAAS,CAAEngL,CAAC,CAAE;cAAEwgL,MAAM,GAAG,CAAEA,MAAM;YAE/C;YAEA,IAAO5tC,IAAI,CAAC/yI,CAAC,GAAGwgL,SAAS,CAACxgL,CAAC,IAAQ+yI,IAAI,CAAC/yI,CAAC,GAAGygL,UAAU,CAACzgL,CAAG,EAAK;YAE/D,IAAK+yI,IAAI,CAAC/yI,CAAC,KAAKwgL,SAAS,CAACxgL,CAAC,EAAG;cAE7B,IAAK+yI,IAAI,CAACx+H,CAAC,KAAKisK,SAAS,CAACjsK,CAAC,EAAI,OAAO,IAAI,CAAC,CAAE;cAC7C;YAED,CAAC,MAAM;cAEN,IAAMqsK,QAAQ,GAAGD,MAAM,IAAK5tC,IAAI,CAACx+H,CAAC,GAAGisK,SAAS,CAACjsK,CAAC,CAAE,GAAGmsK,MAAM,IAAK3tC,IAAI,CAAC/yI,CAAC,GAAGwgL,SAAS,CAACxgL,CAAC,CAAE;cACtF,IAAK4gL,QAAQ,KAAK,CAAC,EAAM,OAAO,IAAI,CAAC,CAAE;cACvC,IAAKA,QAAQ,GAAG,CAAC,EAAO;cACxBzwC,MAAM,GAAG,CAAEA,MAAM,CAAC,CAAE;YAErB;UAED,CAAC,MAAM;YAEN;YACA,IAAK4C,IAAI,CAAC/yI,CAAC,KAAKwgL,SAAS,CAACxgL,CAAC,EAAK,SAAS,CAAG;YAC5C;YACA,IAASygL,UAAU,CAAClsK,CAAC,IAAIw+H,IAAI,CAACx+H,CAAC,IAAQw+H,IAAI,CAACx+H,CAAC,IAAIisK,SAAS,CAACjsK,CAAG,IACxDisK,SAAS,CAACjsK,CAAC,IAAIw+H,IAAI,CAACx+H,CAAC,IAAQw+H,IAAI,CAACx+H,CAAC,IAAIksK,UAAU,CAAClsK,CAAK,EAAI,OAAO,IAAI,CAAC,CAAC;YAC9E;UAED;QAED;;QAEA,OAAO47H,MAAM;MAEd;MAEA,IAAMM,WAAW,GAAGF,UAAU,CAACE,WAAW;MAE1C,IAAMovC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAKA,QAAQ,CAACj9K,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE;MAEtC,IAAIi+K,KAAK,EAAEV,OAAO,EAAEC,QAAQ;MAC5B,IAAMr2I,MAAM,GAAG,EAAE;MAEjB,IAAK81I,QAAQ,CAACj9K,MAAM,KAAK,CAAC,EAAG;QAE5Bu9K,OAAO,GAAGN,QAAQ,CAAE,CAAC,CAAE;QACvBO,QAAQ,GAAG,IAAI/0C,KAAK,CAAC,CAAC;QACtB+0C,QAAQ,CAACp9C,MAAM,GAAGm9C,OAAO,CAACn9C,MAAM;QAChCj5F,MAAM,CAACxnC,IAAI,CAAE69K,QAAS,CAAC;QACvB,OAAOr2I,MAAM;MAEd;MAEA,IAAI+2I,UAAU,GAAG,CAAErwC,WAAW,CAAEovC,QAAQ,CAAE,CAAC,CAAE,CAACzkD,SAAS,CAAC,CAAE,CAAC;MAC3D0lD,UAAU,GAAGd,KAAK,GAAG,CAAEc,UAAU,GAAGA,UAAU;;MAE9C;;MAEA,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAMC,SAAS,GAAG,EAAE;MACpB,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,SAAS;MAEbH,SAAS,CAAEE,OAAO,CAAE,GAAG37K,SAAS;MAChC07K,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;MAE7B,KAAM,IAAI3iL,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGggL,QAAQ,CAACj9K,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEnD4hL,OAAO,GAAGN,QAAQ,CAAEthL,CAAC,CAAE;QACvB4iL,SAAS,GAAGhB,OAAO,CAAC/kD,SAAS,CAAC,CAAC;QAC/BylD,KAAK,GAAGpwC,WAAW,CAAE0wC,SAAU,CAAC;QAChCN,KAAK,GAAGb,KAAK,GAAG,CAAEa,KAAK,GAAGA,KAAK;QAE/B,IAAKA,KAAK,EAAG;UAEZ,IAAO,CAAEC,UAAU,IAAQE,SAAS,CAAEE,OAAO,CAAI,EAAGA,OAAO,EAAG;UAE9DF,SAAS,CAAEE,OAAO,CAAE,GAAG;YAAEnhL,CAAC,EAAE,IAAIsrI,KAAK,CAAC,CAAC;YAAElrI,CAAC,EAAEghL;UAAU,CAAC;UACvDH,SAAS,CAAEE,OAAO,CAAE,CAACnhL,CAAC,CAACijI,MAAM,GAAGm9C,OAAO,CAACn9C,MAAM;UAE9C,IAAK89C,UAAU,EAAGI,OAAO,EAAG;UAC5BD,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;;UAE7B;QAED,CAAC,MAAM;UAEND,aAAa,CAAEC,OAAO,CAAE,CAAC3+K,IAAI,CAAE;YAAE3C,CAAC,EAAEugL,OAAO;YAAEhgL,CAAC,EAAEghL,SAAS,CAAE,CAAC;UAAG,CAAE,CAAC;;UAElE;QAED;MAED;;MAEA;MACA,IAAK,CAAEH,SAAS,CAAE,CAAC,CAAE,EAAG,OAAOf,eAAe,CAAEJ,QAAS,CAAC;MAG1D,IAAKmB,SAAS,CAACp+K,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAIw+K,SAAS,GAAG,KAAK;QACrB,IAAIC,QAAQ,GAAG,CAAC;QAEhB,KAAM,IAAIC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAGP,SAAS,CAACp+K,MAAM,EAAE0+K,IAAI,GAAGC,IAAI,EAAED,IAAI,EAAG,EAAG;UAEnEP,gBAAgB,CAAEO,IAAI,CAAE,GAAG,EAAE;QAE9B;QAEA,KAAM,IAAIA,KAAI,GAAG,CAAC,EAAEC,KAAI,GAAGP,SAAS,CAACp+K,MAAM,EAAE0+K,KAAI,GAAGC,KAAI,EAAED,KAAI,EAAG,EAAG;UAEnE,IAAME,GAAG,GAAGP,aAAa,CAAEK,KAAI,CAAE;UAEjC,KAAM,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGD,GAAG,CAAC5+K,MAAM,EAAE6+K,IAAI,EAAG,EAAG;YAEhD,IAAMC,EAAE,GAAGF,GAAG,CAAEC,IAAI,CAAE;YACtB,IAAIE,eAAe,GAAG,IAAI;YAE1B,KAAM,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,SAAS,CAACp+K,MAAM,EAAEg/K,KAAK,EAAG,EAAG;cAEzD,IAAKvB,oBAAoB,CAAEqB,EAAE,CAACvhL,CAAC,EAAE6gL,SAAS,CAAEY,KAAK,CAAE,CAACzhL,CAAE,CAAC,EAAG;gBAEzD,IAAKmhL,KAAI,KAAKM,KAAK,EAAGP,QAAQ,EAAG;gBAEjC,IAAKM,eAAe,EAAG;kBAEtBA,eAAe,GAAG,KAAK;kBACvBZ,gBAAgB,CAAEa,KAAK,CAAE,CAACr/K,IAAI,CAAEm/K,EAAG,CAAC;gBAErC,CAAC,MAAM;kBAENN,SAAS,GAAG,IAAI;gBAEjB;cAED;YAED;YAEA,IAAKO,eAAe,EAAG;cAEtBZ,gBAAgB,CAAEO,KAAI,CAAE,CAAC/+K,IAAI,CAAEm/K,EAAG,CAAC;YAEpC;UAED;QAED;QAEA,IAAKL,QAAQ,GAAG,CAAC,IAAID,SAAS,KAAK,KAAK,EAAG;UAE1CH,aAAa,GAAGF,gBAAgB;QAEjC;MAED;MAEA,IAAIc,QAAQ;MAEZ,KAAM,IAAItjL,IAAC,GAAG,CAAC,EAAEsvB,EAAE,GAAGmzJ,SAAS,CAACp+K,MAAM,EAAErE,IAAC,GAAGsvB,EAAE,EAAEtvB,IAAC,EAAG,EAAG;QAEtD6hL,QAAQ,GAAGY,SAAS,CAAEziL,IAAC,CAAE,CAACwB,CAAC;QAC3BgqC,MAAM,CAACxnC,IAAI,CAAE69K,QAAS,CAAC;QACvByB,QAAQ,GAAGZ,aAAa,CAAE1iL,IAAC,CAAE;QAE7B,KAAM,IAAIw7B,CAAC,GAAG,CAAC,EAAEklB,EAAE,GAAG4iI,QAAQ,CAACj/K,MAAM,EAAEm3B,CAAC,GAAGklB,EAAE,EAAEllB,CAAC,EAAG,EAAG;UAErDqmJ,QAAQ,CAAC30C,KAAK,CAAClpI,IAAI,CAAEs/K,QAAQ,CAAE9nJ,CAAC,CAAE,CAACn6B,CAAE,CAAC;QAEvC;MAED;;MAEA;;MAEA,OAAOmqC,MAAM;IAEd;EAAC;EAAA,OAAA61I,SAAA;AAAA;AAIF,IAAK,OAAOtxD,kBAAkB,KAAK,WAAW,EAAG;EAEhDA,kBAAkB,CAACt7G,aAAa,CAAE,IAAIu7G,WAAW,CAAE,UAAU,EAAE;IAAEC,MAAM,EAAE;MACxEszD,QAAQ,EAAEp8K;IACX;EAAE,CAAE,CAAE,CAAC;AAER;AAEA,IAAK,OAAOi2J,MAAM,KAAK,WAAW,EAAG;EAEpC,IAAKA,MAAM,CAAComB,SAAS,EAAG;IAEvBtqK,OAAO,CAACC,IAAI,CAAE,yDAA0D,CAAC;EAE1E,CAAC,MAAM;IAENikJ,MAAM,CAAComB,SAAS,GAAGr8K,QAAQ;EAE5B;AAED;;;;;;;;AC9xkDA,IAAAs8K,MAAA,GAAAC,OAAA;AAIe,SAAAnhL,QAAA1C,CAAA,sCAAA0C,OAAA,wBAAAtC,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAN,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAI,MAAA,IAAAJ,CAAA,CAAA2E,WAAA,KAAAvE,MAAA,IAAAJ,CAAA,KAAAI,MAAA,CAAAP,SAAA,qBAAAG,CAAA,KAAA0C,OAAA,CAAA1C,CAAA;AAAA,SAAAiG,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA1C,SAAA;AAAA,SAAA2C,kBAAAC,MAAA,EAAAC,KAAA,aAAAnG,CAAA,MAAAA,CAAA,GAAAmG,KAAA,CAAA9B,MAAA,EAAArE,CAAA,UAAAoG,UAAA,GAAAD,KAAA,CAAAnG,CAAA,GAAAoG,UAAA,CAAA3F,UAAA,GAAA2F,UAAA,CAAA3F,UAAA,WAAA2F,UAAA,CAAA1F,YAAA,wBAAA0F,UAAA,EAAAA,UAAA,CAAAzF,QAAA,SAAAlB,MAAA,CAAAK,cAAA,CAAAoG,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAAE,GAAA,GAAAF,UAAA;AAAA,SAAAG,aAAAP,WAAA,EAAAQ,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAP,iBAAA,CAAAD,WAAA,CAAAtG,SAAA,EAAA8G,UAAA,OAAAC,WAAA,EAAAR,iBAAA,CAAAD,WAAA,EAAAS,WAAA,GAAAhH,MAAA,CAAAK,cAAA,CAAAkG,WAAA,iBAAArF,QAAA,mBAAAqF,WAAA;AAAA,SAAAK,eAAAlF,GAAA,QAAAmF,GAAA,GAAAI,YAAA,CAAAvF,GAAA,oBAAAoB,OAAA,CAAA+D,GAAA,iBAAAA,GAAA,GAAAK,MAAA,CAAAL,GAAA;AAAA,SAAAI,aAAAE,KAAA,EAAAC,IAAA,QAAAtE,OAAA,CAAAqE,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA3G,MAAA,CAAA8G,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAA1F,IAAA,CAAAwF,KAAA,EAAAC,IAAA,oBAAAtE,OAAA,CAAA0E,GAAA,uBAAAA,GAAA,YAAA3D,SAAA,4DAAAuD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAAihB,UAAA87J,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAtgL,SAAA,0DAAAqgL,QAAA,CAAAjkL,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAA8iL,UAAA,IAAAA,UAAA,CAAAlkL,SAAA,IAAA8E,WAAA,IAAAzE,KAAA,EAAA4jL,QAAA,EAAAhjL,QAAA,QAAAD,YAAA,aAAAjB,MAAA,CAAAK,cAAA,CAAA6jL,QAAA,iBAAAhjL,QAAA,gBAAAijL,UAAA,EAAAC,eAAA,CAAAF,QAAA,EAAAC,UAAA;AAAA,SAAAC,gBAAAhkL,CAAA,EAAA+B,CAAA,IAAAiiL,eAAA,GAAApkL,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAkF,cAAA,CAAAq+G,IAAA,cAAA6gE,gBAAAhkL,CAAA,EAAA+B,CAAA,IAAA/B,CAAA,CAAA+E,SAAA,GAAAhD,CAAA,SAAA/B,CAAA,YAAAgkL,eAAA,CAAAhkL,CAAA,EAAA+B,CAAA;AAAA,SAAAmmB,aAAA+7J,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAA5pI,eAAA,CAAAwpI,OAAA,GAAAt5I,MAAA,MAAAu5I,yBAAA,QAAAI,SAAA,GAAA7pI,eAAA,OAAA91C,WAAA,EAAAgmC,MAAA,GAAA45I,OAAA,CAAAC,SAAA,CAAAH,KAAA,EAAAx6I,SAAA,EAAAy6I,SAAA,YAAA35I,MAAA,GAAA05I,KAAA,CAAAn6I,KAAA,OAAAL,SAAA,YAAA46I,0BAAA,OAAA95I,MAAA;AAAA,SAAA85I,2BAAA14D,IAAA,EAAAxqH,IAAA,QAAAA,IAAA,KAAAmB,OAAA,CAAAnB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAkC,SAAA,uEAAAslB,sBAAA,CAAAgjG,IAAA;AAAA,SAAAhjG,uBAAAgjG,IAAA,QAAAA,IAAA,yBAAA24D,cAAA,wEAAA34D,IAAA;AAAA,SAAAo4D,0BAAA,eAAAI,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAhlL,SAAA,CAAAilL,OAAA,CAAAvjL,IAAA,CAAAgjL,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAplL,CAAA;AAAA,SAAAg7C,gBAAAz6C,CAAA,IAAAy6C,eAAA,GAAA76C,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAqC,cAAA,CAAAkhH,IAAA,cAAA1oE,gBAAAz6C,CAAA,WAAAA,CAAA,CAAA+E,SAAA,IAAAnF,MAAA,CAAAqC,cAAA,CAAAjC,CAAA,aAAAy6C,eAAA,CAAAz6C,CAAA;AAEf,IAAM+kL,MAAM,GAAG,IAAI5/I,YAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAM,CAAC;AAC1C,IAAMo5I,OAAO,GAAG,IAAIjqJ,cAAO,CAAC,CAAC;AAE7B,IAAM0wJ,YAAY,GAAG;EAAE3jL,IAAI,EAAE;AAAS,CAAC;AACvC,IAAM4jL,UAAU,GAAG;EAAE5jL,IAAI,EAAE;AAAO,CAAC;AACnC,IAAM6jL,YAAY,GAAG;EAAE7jL,IAAI,EAAE;AAAS,CAAC;AAEvC,IAAM8jL,KAAK,GAAGjwK,IAAI,CAACC,EAAE,GAAG,CAAC;AAAC,IAEpBiwK,mBAAmB,GAAA79K,OAAA,CAAA69K,mBAAA,0BAAAr9J,gBAAA;EAAAC,SAAA,CAAAo9J,mBAAA,EAAAr9J,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAk9J,mBAAA;EAExB,SAAAA,oBAAa5vJ,MAAM,EAAE0wF,UAAU,EAAG;IAAA,IAAAI,KAAA;IAAArgH,eAAA,OAAAm/K,mBAAA;IAEjC9+D,KAAA,GAAAr+F,MAAA,CAAA1mB,IAAA;IAEA+kH,KAAA,CAAK9wF,MAAM,GAAGA,MAAM;IACpB8wF,KAAA,CAAKJ,UAAU,GAAGA,UAAU;IAE5BI,KAAA,CAAK++D,QAAQ,GAAG,KAAK;;IAErB;IACA;IACA/+D,KAAA,CAAKg/D,aAAa,GAAG,CAAC,CAAC,CAAC;IACxBh/D,KAAA,CAAKi/D,aAAa,GAAGrwK,IAAI,CAACC,EAAE,CAAC,CAAC;;IAE9BmxG,KAAA,CAAKk/D,YAAY,GAAG,GAAG;IAEvBl/D,KAAA,CAAKm/D,YAAY,GAAGC,WAAW,CAACviE,IAAI,CAAAp6F,sBAAA,CAAAu9F,KAAA,CAAO,CAAC;IAC5CA,KAAA,CAAKq/D,oBAAoB,GAAGC,mBAAmB,CAACziE,IAAI,CAAAp6F,sBAAA,CAAAu9F,KAAA,CAAO,CAAC;IAC5DA,KAAA,CAAKu/D,mBAAmB,GAAGC,kBAAkB,CAAC3iE,IAAI,CAAAp6F,sBAAA,CAAAu9F,KAAA,CAAO,CAAC;IAE1DA,KAAA,CAAKpO,OAAO,CAAC,CAAC;IAAC,OAAAoO,KAAA;EAEhB;EAAC5/G,YAAA,CAAA0+K,mBAAA;IAAA3+K,GAAA;IAAAvG,KAAA,EAED,SAAAg4G,QAAA,EAAU;MAET,IAAI,CAACgO,UAAU,CAAC6/D,aAAa,CAAC7xK,gBAAgB,CAAE,WAAW,EAAE,IAAI,CAACuxK,YAAa,CAAC;MAChF,IAAI,CAACv/D,UAAU,CAAC6/D,aAAa,CAAC7xK,gBAAgB,CAAE,mBAAmB,EAAE,IAAI,CAACyxK,oBAAqB,CAAC;MAChG,IAAI,CAACz/D,UAAU,CAAC6/D,aAAa,CAAC7xK,gBAAgB,CAAE,kBAAkB,EAAE,IAAI,CAAC2xK,mBAAoB,CAAC;IAE/F;EAAC;IAAAp/K,GAAA;IAAAvG,KAAA,EAED,SAAAu4G,WAAA,EAAa;MAEZ,IAAI,CAACyN,UAAU,CAAC6/D,aAAa,CAACvxK,mBAAmB,CAAE,WAAW,EAAE,IAAI,CAACixK,YAAa,CAAC;MACnF,IAAI,CAACv/D,UAAU,CAAC6/D,aAAa,CAACvxK,mBAAmB,CAAE,mBAAmB,EAAE,IAAI,CAACmxK,oBAAqB,CAAC;MACnG,IAAI,CAACz/D,UAAU,CAAC6/D,aAAa,CAACvxK,mBAAmB,CAAE,kBAAkB,EAAE,IAAI,CAACqxK,mBAAoB,CAAC;IAElG;EAAC;IAAAp/K,GAAA;IAAAvG,KAAA,EAED,SAAAoqB,QAAA,EAAU;MAET,IAAI,CAACmuF,UAAU,CAAC,CAAC;IAElB;EAAC;IAAAhyG,GAAA;IAAAvG,KAAA,EAED,SAAA8lL,UAAA,EAAY;MAAE;;MAEb,OAAO,IAAI,CAACxwJ,MAAM;IAEnB;EAAC;IAAA/uB,GAAA;IAAAvG,KAAA,EAED,SAAA+lL,aAAc/jL,CAAC,EAAG;MAEjB,OAAOA,CAAC,CAACkX,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAACub,eAAe,CAAE,IAAI,CAACa,MAAM,CAACtF,UAAW,CAAC;IAEpE;EAAC;IAAAzpB,GAAA;IAAAvG,KAAA,EAED,SAAAgmL,YAAa78I,QAAQ,EAAG;MAEvB;MACA;;MAEA,IAAM7T,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B+oJ,OAAO,CAACjnJ,mBAAmB,CAAE9B,MAAM,CAAChT,MAAM,EAAE,CAAE,CAAC;MAE/C+7J,OAAO,CAACxoJ,YAAY,CAAEP,MAAM,CAACwM,EAAE,EAAEu8I,OAAQ,CAAC;MAE1C/oJ,MAAM,CAACmE,QAAQ,CAAC1e,eAAe,CAAEsjK,OAAO,EAAEl1I,QAAS,CAAC;IAErD;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAimL,UAAW98I,QAAQ,EAAG;MAErB,IAAM7T,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B+oJ,OAAO,CAACjnJ,mBAAmB,CAAE9B,MAAM,CAAChT,MAAM,EAAE,CAAE,CAAC;MAE/CgT,MAAM,CAACmE,QAAQ,CAAC1e,eAAe,CAAEsjK,OAAO,EAAEl1I,QAAS,CAAC;IAErD;EAAC;IAAA5iC,GAAA;IAAAvG,KAAA,EAED,SAAAw9F,KAAA,EAAO;MAEN,IAAI,CAACwoB,UAAU,CAACkgE,kBAAkB,CAAC,CAAC;IAErC;EAAC;IAAA3/K,GAAA;IAAAvG,KAAA,EAED,SAAAmmL,OAAA,EAAS;MAER,IAAI,CAACngE,UAAU,CAAC6/D,aAAa,CAACO,eAAe,CAAC,CAAC;IAEhD;EAAC;EAAA,OAAAlB,mBAAA;AAAA,EA/FgCnxK,sBAAe,GAmGjD;AAEA,SAASyxK,WAAWA,CAAE7wK,KAAK,EAAG;EAE7B,IAAK,IAAI,CAACwwK,QAAQ,KAAK,KAAK,EAAG;EAE/B,IAAMkB,SAAS,GAAG1xK,KAAK,CAAC0xK,SAAS,IAAI1xK,KAAK,CAAC2xK,YAAY,IAAI3xK,KAAK,CAAC4xK,eAAe,IAAI,CAAC;EACrF,IAAMC,SAAS,GAAG7xK,KAAK,CAAC6xK,SAAS,IAAI7xK,KAAK,CAAC8xK,YAAY,IAAI9xK,KAAK,CAAC+xK,eAAe,IAAI,CAAC;EAErF,IAAMpxJ,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BuvJ,MAAM,CAACv/I,iBAAiB,CAAEhQ,MAAM,CAACtF,UAAW,CAAC;EAE7C60J,MAAM,CAACnjL,CAAC,IAAI2kL,SAAS,GAAG,KAAK,GAAG,IAAI,CAACf,YAAY;EACjDT,MAAM,CAAC5uK,CAAC,IAAIuwK,SAAS,GAAG,KAAK,GAAG,IAAI,CAAClB,YAAY;EAEjDT,MAAM,CAAC5uK,CAAC,GAAGjB,IAAI,CAACa,GAAG,CAAEovK,KAAK,GAAG,IAAI,CAACI,aAAa,EAAErwK,IAAI,CAACY,GAAG,CAAEqvK,KAAK,GAAG,IAAI,CAACG,aAAa,EAAEP,MAAM,CAAC5uK,CAAE,CAAE,CAAC;EAEnGqf,MAAM,CAACtF,UAAU,CAACC,YAAY,CAAE40J,MAAO,CAAC;EAExC,IAAI,CAACnwK,aAAa,CAAEowK,YAAa,CAAC;AAEnC;AAEA,SAASY,mBAAmBA,CAAA,EAAG;EAE9B,IAAK,IAAI,CAAC1/D,UAAU,CAAC6/D,aAAa,CAACc,kBAAkB,KAAK,IAAI,CAAC3gE,UAAU,EAAG;IAE3E,IAAI,CAACtxG,aAAa,CAAEqwK,UAAW,CAAC;IAEhC,IAAI,CAACI,QAAQ,GAAG,IAAI;EAErB,CAAC,MAAM;IAEN,IAAI,CAACzwK,aAAa,CAAEswK,YAAa,CAAC;IAElC,IAAI,CAACG,QAAQ,GAAG,KAAK;EAEtB;AAED;AAEA,SAASS,kBAAkBA,CAAA,EAAG;EAE7BzsK,OAAO,CAACywB,KAAK,CAAE,2DAA4D,CAAC;AAE7E;;;;AC/JA,IAAAg9I,KAAA,GAAAC,uBAAA,CAAAlD,OAAA;AACA,IAAAmD,oBAAA,GAAAnD,OAAA;AAAyF,SAAAoD,yBAAAC,WAAA,eAAAl0H,OAAA,kCAAAm0H,iBAAA,OAAAn0H,OAAA,QAAAo0H,gBAAA,OAAAp0H,OAAA,YAAAi0H,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAE,gBAAA,GAAAD,iBAAA,KAAAD,WAAA;AAAA,SAAAH,wBAAAM,GAAA,EAAAH,WAAA,SAAAA,WAAA,IAAAG,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAh6I,KAAA,GAAA45I,wBAAA,CAAAC,WAAA,OAAA75I,KAAA,IAAAA,KAAA,CAAAzoB,GAAA,CAAAyiK,GAAA,YAAAh6I,KAAA,CAAAhzB,GAAA,CAAAgtK,GAAA,SAAAG,MAAA,WAAAC,qBAAA,GAAA7nL,MAAA,CAAAK,cAAA,IAAAL,MAAA,CAAA8nL,wBAAA,WAAAjhL,GAAA,IAAA4gL,GAAA,QAAA5gL,GAAA,kBAAA7G,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAAwB,IAAA,CAAA8lL,GAAA,EAAA5gL,GAAA,SAAAkhL,IAAA,GAAAF,qBAAA,GAAA7nL,MAAA,CAAA8nL,wBAAA,CAAAL,GAAA,EAAA5gL,GAAA,cAAAkhL,IAAA,KAAAA,IAAA,CAAAttK,GAAA,IAAAstK,IAAA,CAAAvuK,GAAA,KAAAxZ,MAAA,CAAAK,cAAA,CAAAunL,MAAA,EAAA/gL,GAAA,EAAAkhL,IAAA,YAAAH,MAAA,CAAA/gL,GAAA,IAAA4gL,GAAA,CAAA5gL,GAAA,SAAA+gL,MAAA,CAAAD,OAAA,GAAAF,GAAA,MAAAh6I,KAAA,IAAAA,KAAA,CAAAj0B,GAAA,CAAAiuK,GAAA,EAAAG,MAAA,YAAAA,MAAA;AAEzF,IAAIhyJ,MAAM,EAAE+3B,KAAK,EAAEnF,QAAQ,EAAEw/H,QAAQ;AAErC,IAAMphH,OAAO,GAAG,EAAE;AAElB,IAAIhhB,SAAS;AAEb,IAAI0gI,WAAW,GAAG,KAAK;AACvB,IAAI2B,YAAY,GAAG,KAAK;AACxB,IAAIC,QAAQ,GAAG,KAAK;AACpB,IAAI3B,SAAS,GAAG,KAAK;AACrB,IAAI4B,OAAO,GAAG,KAAK;AAEnB,IAAIzgC,QAAQ,GAAG6X,WAAW,CAACJ,GAAG,CAAC,CAAC;AAChC,IAAMipB,QAAQ,GAAG,IAAIlB,KAAK,CAACxyJ,OAAO,CAAC,CAAC;AACpC,IAAM6I,SAAS,GAAG,IAAI2pJ,KAAK,CAACxyJ,OAAO,CAAC,CAAC;AACrC,IAAMilE,MAAM,GAAG,IAAIutF,KAAK,CAACxyJ,OAAO,CAAC,CAAC;AAClC,IAAMtQ,KAAK,GAAG,IAAI8iK,KAAK,CAAC5uI,KAAK,CAAC,CAAC;AAE/Bk3B,IAAI,CAAC,CAAC;AACN64G,OAAO,CAAC,CAAC;AAET,SAAS74G,IAAIA,CAAA,EAAG;EACd55C,MAAM,GAAG,IAAIsxJ,KAAK,CAAC18H,iBAAiB,CAClC,EAAE,EACFmzG,MAAM,CAAC2qB,UAAU,GAAG3qB,MAAM,CAAC4qB,WAAW,EACtC,CAAC,EACD,IACF,CAAC;EACD3yJ,MAAM,CAACmE,QAAQ,CAAC/3B,CAAC,GAAG,EAAE;EAEtB2rD,KAAK,GAAG,IAAIu5H,KAAK,CAACl2D,KAAK,CAAC,CAAC;EACzBrjE,KAAK,CAAClhB,UAAU,GAAG,IAAIy6I,KAAK,CAAC5uI,KAAK,CAAC,QAAQ,CAAC;EAC5CqV,KAAK,CAAC5V,GAAG,GAAG,IAAImvI,KAAK,CAACn2D,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC;EAE3C,IAAM57B,KAAK,GAAG,IAAI+xF,KAAK,CAACzzB,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC;EAChEt+D,KAAK,CAACp7D,QAAQ,CAACvgB,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;EAChCm0C,KAAK,CAACzyC,GAAG,CAACi6E,KAAK,CAAC;EAEhB6yF,QAAQ,GAAG,IAAIxC,wCAAmB,CAAC5vJ,MAAM,EAAExS,QAAQ,CAACusI,IAAI,CAAC;EAEzD,IAAM64B,OAAO,GAAGplK,QAAQ,CAACqlK,cAAc,CAAC,SAAS,CAAC;EAClD,IAAMC,YAAY,GAAGtlK,QAAQ,CAACqlK,cAAc,CAAC,cAAc,CAAC;EAE5DC,YAAY,CAACp0K,gBAAgB,CAAC,OAAO,EAAE,YAAY;IACjD0zK,QAAQ,CAAClqF,IAAI,CAAC,CAAC;EACjB,CAAC,CAAC;EAEFkqF,QAAQ,CAAC1zK,gBAAgB,CAAC,MAAM,EAAE,YAAY;IAC5Co0K,YAAY,CAACnlK,KAAK,CAACC,OAAO,GAAG,MAAM;IACnCglK,OAAO,CAACjlK,KAAK,CAACC,OAAO,GAAG,MAAM;EAChC,CAAC,CAAC;EAEFwkK,QAAQ,CAAC1zK,gBAAgB,CAAC,QAAQ,EAAE,YAAY;IAC9Ck0K,OAAO,CAACjlK,KAAK,CAACC,OAAO,GAAG,OAAO;IAC/BklK,YAAY,CAACnlK,KAAK,CAACC,OAAO,GAAG,EAAE;EACjC,CAAC,CAAC;EAEFmqC,KAAK,CAACzyC,GAAG,CAAC8sK,QAAQ,CAAC5B,SAAS,CAAC,CAAC,CAAC;EAE/B,IAAMuC,SAAS,GAAG,SAAZA,SAASA,CAAa1zK,KAAK,EAAE;IACjC,QAAQA,KAAK,CAACw5E,IAAI;MAChB,KAAK,SAAS;MACd,KAAK,MAAM;QACT63F,WAAW,GAAG,IAAI;QAClB;MAEF,KAAK,WAAW;MAChB,KAAK,MAAM;QACT4B,QAAQ,GAAG,IAAI;QACf;MAEF,KAAK,WAAW;MAChB,KAAK,MAAM;QACTD,YAAY,GAAG,IAAI;QACnB;MAEF,KAAK,YAAY;MACjB,KAAK,MAAM;QACT1B,SAAS,GAAG,IAAI;QAChB;MAEF,KAAK,OAAO;QACV,IAAI4B,OAAO,KAAK,IAAI,EAAEC,QAAQ,CAACpmL,CAAC,IAAI,GAAG;QACvCmmL,OAAO,GAAG,KAAK;QACf;IACJ;EACF,CAAC;EAED,IAAMS,OAAO,GAAG,SAAVA,OAAOA,CAAa3zK,KAAK,EAAE;IAC/B,QAAQA,KAAK,CAACw5E,IAAI;MAChB,KAAK,SAAS;MACd,KAAK,MAAM;QACT63F,WAAW,GAAG,KAAK;QACnB;MAEF,KAAK,WAAW;MAChB,KAAK,MAAM;QACT4B,QAAQ,GAAG,KAAK;QAChB;MAEF,KAAK,WAAW;MAChB,KAAK,MAAM;QACTD,YAAY,GAAG,KAAK;QACpB;MAEF,KAAK,YAAY;MACjB,KAAK,MAAM;QACT1B,SAAS,GAAG,KAAK;QACjB;IACJ;EACF,CAAC;EAEDnjK,QAAQ,CAAC9O,gBAAgB,CAAC,SAAS,EAAEq0K,SAAS,CAAC;EAC/CvlK,QAAQ,CAAC9O,gBAAgB,CAAC,OAAO,EAAEs0K,OAAO,CAAC;EAE3ChjI,SAAS,GAAG,IAAIshI,KAAK,CAAChN,SAAS,CAC7B,IAAIgN,KAAK,CAACxyJ,OAAO,CAAC,CAAC,EACnB,IAAIwyJ,KAAK,CAACxyJ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,EACD,EACF,CAAC;;EAED;;EAEA,IAAIm0J,aAAa,GAAG,IAAI3B,KAAK,CAACxyH,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;EACjEm0H,aAAa,CAACx/I,OAAO,CAAC,CAAC/zB,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;;EAEnC;;EAEA,IAAIwkB,QAAQ,GAAG8uJ,aAAa,CAAC/uJ,UAAU,CAACC,QAAQ;EAEhD,KAAK,IAAIx5B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGk4B,QAAQ,CAACrK,KAAK,EAAEnvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAE,EAAE;IAC9Co5F,MAAM,CAAC57E,mBAAmB,CAACgc,QAAQ,EAAEx5B,CAAC,CAAC;IAEvCo5F,MAAM,CAACpjF,CAAC,IAAIjB,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;IACnCgkF,MAAM,CAAC33F,CAAC,IAAIsT,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,CAAC;IAC7BgkF,MAAM,CAAC3uE,CAAC,IAAI1V,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;IAEnCokB,QAAQ,CAAC6iB,MAAM,CAACr8C,CAAC,EAAEo5F,MAAM,CAACpjF,CAAC,EAAEojF,MAAM,CAAC33F,CAAC,EAAE23F,MAAM,CAAC3uE,CAAC,CAAC;EAClD;EAEA69J,aAAa,GAAGA,aAAa,CAACxlI,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE9CtpB,QAAQ,GAAG8uJ,aAAa,CAAC/uJ,UAAU,CAACC,QAAQ;EAC5C,IAAM+uJ,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIvoL,EAAC,GAAG,CAAC,EAAEsB,EAAC,GAAGk4B,QAAQ,CAACrK,KAAK,EAAEnvB,EAAC,GAAGsB,EAAC,EAAEtB,EAAC,EAAE,EAAE;IAC9C6jB,KAAK,CAACw0B,MAAM,CACVtjC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EACzB,IAAI,EACJL,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,EAC3BuxK,KAAK,CAAC31K,cACR,CAAC;IACDu3K,WAAW,CAACvkL,IAAI,CAAC6f,KAAK,CAACrkB,CAAC,EAAEqkB,KAAK,CAAC5hB,CAAC,EAAE4hB,KAAK,CAACxL,CAAC,CAAC;EAC7C;EAEAiwK,aAAa,CAACxoI,YAAY,CACxB,OAAO,EACP,IAAI6mI,KAAK,CAACxoI,sBAAsB,CAACoqI,WAAW,EAAE,CAAC,CACjD,CAAC;EAED,IAAMC,aAAa,GAAG,IAAI7B,KAAK,CAAC3sI,iBAAiB,CAAC;IAAEvJ,YAAY,EAAE;EAAK,CAAC,CAAC;EAEzE,IAAMv5B,KAAK,GAAG,IAAIyvK,KAAK,CAACliI,IAAI,CAAC6jI,aAAa,EAAEE,aAAa,CAAC;EAC1Dp7H,KAAK,CAACzyC,GAAG,CAACzD,KAAK,CAAC;;EAEhB;;EAEA,IAAMuxK,WAAW,GAAG,IAAI9B,KAAK,CAAC3gI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAClD,YAAY,CAAC,CAAC;EAEpEtpB,QAAQ,GAAGivJ,WAAW,CAAClvJ,UAAU,CAACC,QAAQ;EAC1C,IAAMkvJ,SAAS,GAAG,EAAE;EAEpB,KAAK,IAAI1oL,GAAC,GAAG,CAAC,EAAEsB,GAAC,GAAGk4B,QAAQ,CAACrK,KAAK,EAAEnvB,GAAC,GAAGsB,GAAC,EAAEtB,GAAC,EAAE,EAAE;IAC9C6jB,KAAK,CAACw0B,MAAM,CACVtjC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EACzB,IAAI,EACJL,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,EAC3BuxK,KAAK,CAAC31K,cACR,CAAC;IACD03K,SAAS,CAAC1kL,IAAI,CAAC6f,KAAK,CAACrkB,CAAC,EAAEqkB,KAAK,CAAC5hB,CAAC,EAAE4hB,KAAK,CAACxL,CAAC,CAAC;EAC3C;EAEAowK,WAAW,CAAC3oI,YAAY,CACtB,OAAO,EACP,IAAI6mI,KAAK,CAACxoI,sBAAsB,CAACuqI,SAAS,EAAE,CAAC,CAC/C,CAAC;EAED,KAAK,IAAI1oL,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,GAAG,EAAEA,GAAC,EAAE,EAAE;IAC5B,IAAM2oL,WAAW,GAAG,IAAIhC,KAAK,CAAC13F,iBAAiB,CAAC;MAC9Cr7C,QAAQ,EAAE,QAAQ;MAClB2D,WAAW,EAAE,IAAI;MACjB9G,YAAY,EAAE;IAChB,CAAC,CAAC;IACFk4I,WAAW,CAAC9kK,KAAK,CAACw0B,MAAM,CACtBtjC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EACzB,IAAI,EACJL,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,EAC3BuxK,KAAK,CAAC31K,cACR,CAAC;IAED,IAAMynB,GAAG,GAAG,IAAIkuJ,KAAK,CAACliI,IAAI,CAACgkI,WAAW,EAAEE,WAAW,CAAC;IACpDlwJ,GAAG,CAACe,QAAQ,CAACxjB,CAAC,GAAGjB,IAAI,CAACmC,KAAK,CAACnC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IACzDqjB,GAAG,CAACe,QAAQ,CAAC/3B,CAAC,GAAGsT,IAAI,CAACmC,KAAK,CAACnC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE;IACzDqjB,GAAG,CAACe,QAAQ,CAAC/O,CAAC,GAAG1V,IAAI,CAACmC,KAAK,CAACnC,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IAEzDg4C,KAAK,CAACzyC,GAAG,CAAC8d,GAAG,CAAC;IACd4tC,OAAO,CAACriE,IAAI,CAACy0B,GAAG,CAAC;EACnB;;EAEA;;EAEAwvB,QAAQ,GAAG,IAAI0+H,KAAK,CAACliE,aAAa,CAAC;IAAE/G,SAAS,EAAE;EAAK,CAAC,CAAC;EACvDz1D,QAAQ,CAACihE,aAAa,CAACk0C,MAAM,CAACwrB,gBAAgB,CAAC;EAC/C3gI,QAAQ,CAAC56B,OAAO,CAAC+vI,MAAM,CAAC2qB,UAAU,EAAE3qB,MAAM,CAAC4qB,WAAW,CAAC;EACvDnlK,QAAQ,CAACusI,IAAI,CAACy5B,WAAW,CAAC5gI,QAAQ,CAAC89D,UAAU,CAAC;;EAE9C;;EAEAq3C,MAAM,CAACrpJ,gBAAgB,CAAC,QAAQ,EAAE+0K,cAAc,CAAC;AACnD;AAEA,SAASA,cAAcA,CAAA,EAAG;EACxBzzJ,MAAM,CAACg1B,MAAM,GAAG+yG,MAAM,CAAC2qB,UAAU,GAAG3qB,MAAM,CAAC4qB,WAAW;EACtD3yJ,MAAM,CAACw1B,sBAAsB,CAAC,CAAC;EAE/B5C,QAAQ,CAAC56B,OAAO,CAAC+vI,MAAM,CAAC2qB,UAAU,EAAE3qB,MAAM,CAAC4qB,WAAW,CAAC;AACzD;AAEA,SAASF,OAAOA,CAAA,EAAG;EACjB11H,qBAAqB,CAAC01H,OAAO,CAAC;EAE9B,IAAM51H,IAAI,GAAG8sG,WAAW,CAACJ,GAAG,CAAC,CAAC;EAE9B,IAAI6oB,QAAQ,CAACvC,QAAQ,KAAK,IAAI,EAAE;IAC9B7/H,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACriB,IAAI,CAAC+sK,QAAQ,CAAC5B,SAAS,CAAC,CAAC,CAACrsJ,QAAQ,CAAC;IACxD6rB,SAAS,CAACpoB,GAAG,CAACF,MAAM,CAACt7B,CAAC,IAAI,EAAE;IAE5B,IAAMsnL,aAAa,GAAG1jI,SAAS,CAAC20H,gBAAgB,CAAC3zG,OAAO,EAAE,KAAK,CAAC;IAEhE,IAAM2iH,QAAQ,GAAGD,aAAa,CAAC1kL,MAAM,GAAG,CAAC;IAEzC,IAAMi4B,KAAK,GAAG,CAAC41B,IAAI,GAAGi1F,QAAQ,IAAI,IAAI;IAEtC0gC,QAAQ,CAAC7xK,CAAC,IAAI6xK,QAAQ,CAAC7xK,CAAC,GAAG,IAAI,GAAGsmB,KAAK;IACvCurJ,QAAQ,CAACp9J,CAAC,IAAIo9J,QAAQ,CAACp9J,CAAC,GAAG,IAAI,GAAG6R,KAAK;IAEvCurJ,QAAQ,CAACpmL,CAAC,IAAI,GAAG,GAAG,KAAK,GAAG66B,KAAK,CAAC,CAAC;;IAEnCU,SAAS,CAACvS,CAAC,GAAGvjB,MAAM,CAAC6+K,WAAW,CAAC,GAAG7+K,MAAM,CAACwgL,YAAY,CAAC;IACxD1qJ,SAAS,CAAChnB,CAAC,GAAG9O,MAAM,CAAC8+K,SAAS,CAAC,GAAG9+K,MAAM,CAACygL,QAAQ,CAAC;IAClD3qJ,SAAS,CAACpjB,SAAS,CAAC,CAAC,CAAC,CAAC;;IAEvB,IAAImsK,WAAW,IAAI2B,YAAY,EAAEG,QAAQ,CAACp9J,CAAC,IAAIuS,SAAS,CAACvS,CAAC,GAAG,KAAK,GAAG6R,KAAK;IAC1E,IAAIqrJ,QAAQ,IAAI3B,SAAS,EAAE6B,QAAQ,CAAC7xK,CAAC,IAAIgnB,SAAS,CAAChnB,CAAC,GAAG,KAAK,GAAGsmB,KAAK;IAEpE,IAAI0sJ,QAAQ,KAAK,IAAI,EAAE;MACrBnB,QAAQ,CAACpmL,CAAC,GAAGsT,IAAI,CAACa,GAAG,CAAC,CAAC,EAAEiyK,QAAQ,CAACpmL,CAAC,CAAC;MACpCmmL,OAAO,GAAG,IAAI;IAChB;IAEAH,QAAQ,CAACzB,SAAS,CAAC,CAAC6B,QAAQ,CAAC7xK,CAAC,GAAGsmB,KAAK,CAAC;IACvCmrJ,QAAQ,CAAC1B,WAAW,CAAC,CAAC8B,QAAQ,CAACp9J,CAAC,GAAG6R,KAAK,CAAC;IAEzCmrJ,QAAQ,CAAC5B,SAAS,CAAC,CAAC,CAACrsJ,QAAQ,CAAC/3B,CAAC,IAAIomL,QAAQ,CAACpmL,CAAC,GAAG66B,KAAK,CAAC,CAAC;;IAEvD,IAAImrJ,QAAQ,CAAC5B,SAAS,CAAC,CAAC,CAACrsJ,QAAQ,CAAC/3B,CAAC,GAAG,EAAE,EAAE;MACxComL,QAAQ,CAACpmL,CAAC,GAAG,CAAC;MACdgmL,QAAQ,CAAC5B,SAAS,CAAC,CAAC,CAACrsJ,QAAQ,CAAC/3B,CAAC,GAAG,EAAE;MAEpCmmL,OAAO,GAAG,IAAI;IAChB;EACF;EAEAzgC,QAAQ,GAAGj1F,IAAI;EAEfjK,QAAQ,CAAC6F,MAAM,CAACV,KAAK,EAAE/3B,MAAM,CAAC;AAChC;;;ACxRA,IAAI4zJ,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAAC9nL,IAAI,CAAC,IAAI,EAAEkoL,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACT7iK,IAAI,EAAEyiK,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUC,EAAE,EAAE;MACpB,IAAI,CAACH,gBAAgB,CAACzlL,IAAI,CAAC4lL,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDz/J,OAAO,EAAE,SAAAA,CAAUy/J,EAAE,EAAE;MACrB,IAAI,CAACF,iBAAiB,CAAC1lL,IAAI,CAAC4lL,EAAE,CAAC;IACjC;EACF,CAAC;EAEDT,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIQ,aAAa,EAAEC,cAAc;AAEjC,IAAIziJ,MAAM,GAAG8hJ,MAAM,CAACC,MAAM,CAAC/hJ,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAAC0iJ,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4B9/G,QAAQ,CAAC8/G,QAAQ;EAC5D,IAAIC,QAAQ,GAAG//G,QAAQ,CAAC+/G,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIH,SAAS,CAACE,QAAQ,GAAG,KAAK,GAAGD,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFE,EAAE,CAACC,SAAS,GAAG,UAAS11K,KAAK,EAAE;IAC7Bm1K,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAIpjK,IAAI,GAAGkD,IAAI,CAACC,KAAK,CAACnV,KAAK,CAACgS,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACxlB,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAImpL,OAAO,GAAG,KAAK;MACnB3jK,IAAI,CAAC4jK,MAAM,CAACnoL,OAAO,CAAC,UAASooL,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAAC59B,MAAM,CAAC69B,aAAa,EAAEJ,KAAK,CAACpgJ,EAAE,CAAC;UAC9D,IAAIsgJ,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAI3jK,IAAI,CAAC4jK,MAAM,CAACM,KAAK,CAAC,UAASL,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACrpL,IAAI,KAAK,KAAK,IAAIqpL,KAAK,CAACM,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIT,OAAO,EAAE;QACXnxK,OAAO,CAAC4wB,KAAK,CAAC,CAAC;QAEfpjB,IAAI,CAAC4jK,MAAM,CAACnoL,OAAO,CAAC,UAAUooL,KAAK,EAAE;UACnCQ,QAAQ,CAACj+B,MAAM,CAAC69B,aAAa,EAAEJ,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFT,cAAc,CAAC3nL,OAAO,CAAC,UAAUJ,CAAC,EAAE;UAClCipL,YAAY,CAACjpL,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIooE,QAAQ,CAAC8gH,MAAM,EAAE;QAAE;QAC5B9gH,QAAQ,CAAC8gH,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAIvkK,IAAI,CAACxlB,IAAI,KAAK,QAAQ,EAAE;MAC1BipL,EAAE,CAACp6B,KAAK,CAAC,CAAC;MACVo6B,EAAE,CAACe,OAAO,GAAG,YAAY;QACvB/gH,QAAQ,CAAC8gH,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAIvkK,IAAI,CAACxlB,IAAI,KAAK,gBAAgB,EAAE;MAClCgY,OAAO,CAAClB,GAAG,CAAC,2BAA2B,CAAC;MAExCmzK,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAIzkK,IAAI,CAACxlB,IAAI,KAAK,OAAO,EAAE;MACzBgY,OAAO,CAACywB,KAAK,CAAC,eAAe,GAAGjjB,IAAI,CAACijB,KAAK,CAACvmB,OAAO,GAAG,IAAI,GAAGsD,IAAI,CAACijB,KAAK,CAACyhJ,KAAK,CAAC;MAE7ED,kBAAkB,CAAC,CAAC;MAEpB,IAAIE,OAAO,GAAGC,kBAAkB,CAAC5kK,IAAI,CAAC;MACtC7D,QAAQ,CAACusI,IAAI,CAACy5B,WAAW,CAACwC,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASF,kBAAkBA,CAAA,EAAG;EAC5B,IAAIE,OAAO,GAAGxoK,QAAQ,CAACqlK,cAAc,CAACe,UAAU,CAAC;EACjD,IAAIoC,OAAO,EAAE;IACXA,OAAO,CAACzhJ,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAAS0hJ,kBAAkBA,CAAC5kK,IAAI,EAAE;EAChC,IAAI2kK,OAAO,GAAGxoK,QAAQ,CAAC0oK,aAAa,CAAC,KAAK,CAAC;EAC3CF,OAAO,CAAClhJ,EAAE,GAAG8+I,UAAU;;EAEvB;EACA,IAAI7lK,OAAO,GAAGP,QAAQ,CAAC0oK,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIC,UAAU,GAAG3oK,QAAQ,CAAC0oK,aAAa,CAAC,KAAK,CAAC;EAC9CnoK,OAAO,CAACqoK,SAAS,GAAG/kK,IAAI,CAACijB,KAAK,CAACvmB,OAAO;EACtCooK,UAAU,CAACC,SAAS,GAAG/kK,IAAI,CAACijB,KAAK,CAACyhJ,KAAK;EAEvCC,OAAO,CAACK,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAGtoK,OAAO,CAACsoK,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGF,UAAU,CAACE,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAOL,OAAO;AAEhB;AAEA,SAASM,UAAUA,CAACvC,MAAM,EAAEj/I,EAAE,EAAE;EAC9B,IAAIyhJ,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAInvF,CAAC,EAAE76F,CAAC,EAAEiqL,GAAG;EAEb,KAAKpvF,CAAC,IAAIkvF,OAAO,EAAE;IACjB,KAAK/pL,CAAC,IAAI+pL,OAAO,CAAClvF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBovF,GAAG,GAAGF,OAAO,CAAClvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC76F,CAAC,CAAC;MACtB,IAAIiqL,GAAG,KAAK3hJ,EAAE,IAAK9iB,KAAK,CAACC,OAAO,CAACwkK,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACznL,MAAM,GAAG,CAAC,CAAC,KAAK8lC,EAAG,EAAE;QACpE0hJ,OAAO,CAAC7nL,IAAI,CAAC04F,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAI0sF,MAAM,CAAC/hJ,MAAM,EAAE;IACjBwkJ,OAAO,GAAGA,OAAO,CAACnnK,MAAM,CAACinK,UAAU,CAACvC,MAAM,CAAC/hJ,MAAM,EAAE8C,EAAE,CAAC,CAAC;EACzD;EAEA,OAAO0hJ,OAAO;AAChB;AAEA,SAASd,QAAQA,CAAC3B,MAAM,EAAEmB,KAAK,EAAE;EAC/B,IAAIqB,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAACrB,KAAK,CAACpgJ,EAAE,CAAC,IAAI,CAACi/I,MAAM,CAAC/hJ,MAAM,EAAE;IACvC,IAAIuiJ,EAAE,GAAG,IAAImC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAExB,KAAK,CAACM,SAAS,CAACC,EAAE,CAAC;IACzEP,KAAK,CAACC,KAAK,GAAG,CAACoB,OAAO,CAACrB,KAAK,CAACpgJ,EAAE,CAAC;IAChCyhJ,OAAO,CAACrB,KAAK,CAACpgJ,EAAE,CAAC,GAAG,CAACy/I,EAAE,EAAEW,KAAK,CAACyB,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI5C,MAAM,CAAC/hJ,MAAM,EAAE;IACxB0jJ,QAAQ,CAAC3B,MAAM,CAAC/hJ,MAAM,EAAEkjJ,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAACtB,MAAM,EAAEj/I,EAAE,EAAE;EAClC,IAAIyhJ,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACzhJ,EAAE,CAAC,IAAIi/I,MAAM,CAAC/hJ,MAAM,EAAE;IACjC,OAAOqjJ,cAAc,CAACtB,MAAM,CAAC/hJ,MAAM,EAAE8C,EAAE,CAAC;EAC1C;EAEA,IAAI0/I,aAAa,CAAC1/I,EAAE,CAAC,EAAE;IACrB;EACF;EACA0/I,aAAa,CAAC1/I,EAAE,CAAC,GAAG,IAAI;EAExB,IAAI8pB,MAAM,GAAGm1H,MAAM,CAACl8I,KAAK,CAAC/C,EAAE,CAAC;EAE7B2/I,cAAc,CAAC9lL,IAAI,CAAC,CAAColL,MAAM,EAAEj/I,EAAE,CAAC,CAAC;EAEjC,IAAI8pB,MAAM,IAAIA,MAAM,CAACs1H,GAAG,IAAIt1H,MAAM,CAACs1H,GAAG,CAACE,gBAAgB,CAACplL,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOsnL,UAAU,CAAC7+B,MAAM,CAAC69B,aAAa,EAAExgJ,EAAE,CAAC,CAAC8hJ,IAAI,CAAC,UAAU9hJ,EAAE,EAAE;IAC7D,OAAOugJ,cAAc,CAAC59B,MAAM,CAAC69B,aAAa,EAAExgJ,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAAS6gJ,YAAYA,CAAC5B,MAAM,EAAEj/I,EAAE,EAAE;EAChC,IAAI8pB,MAAM,GAAGm1H,MAAM,CAACl8I,KAAK,CAAC/C,EAAE,CAAC;EAC7Bi/I,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAIv1H,MAAM,EAAE;IACVA,MAAM,CAACs1H,GAAG,CAAC7iK,IAAI,GAAG0iK,MAAM,CAACI,OAAO;EAClC;EAEA,IAAIv1H,MAAM,IAAIA,MAAM,CAACs1H,GAAG,IAAIt1H,MAAM,CAACs1H,GAAG,CAACG,iBAAiB,CAACrlL,MAAM,EAAE;IAC/D4vD,MAAM,CAACs1H,GAAG,CAACG,iBAAiB,CAACvnL,OAAO,CAAC,UAAUwgD,EAAE,EAAE;MACjDA,EAAE,CAACymI,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAACl8I,KAAK,CAAC/C,EAAE,CAAC;EACvBi/I,MAAM,CAACj/I,EAAE,CAAC;EAEV8pB,MAAM,GAAGm1H,MAAM,CAACl8I,KAAK,CAAC/C,EAAE,CAAC;EACzB,IAAI8pB,MAAM,IAAIA,MAAM,CAACs1H,GAAG,IAAIt1H,MAAM,CAACs1H,GAAG,CAACE,gBAAgB,CAACplL,MAAM,EAAE;IAC9D4vD,MAAM,CAACs1H,GAAG,CAACE,gBAAgB,CAACtnL,OAAO,CAAC,UAAUwgD,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '157';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal;\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import {\n\tEuler,\n\tEventDispatcher,\n\tVector3\n} from 'three';\n\nconst _euler = new Euler( 0, 0, 0, 'YXZ' );\nconst _vector = new Vector3();\n\nconst _changeEvent = { type: 'change' };\nconst _lockEvent = { type: 'lock' };\nconst _unlockEvent = { type: 'unlock' };\n\nconst _PI_2 = Math.PI / 2;\n\nclass PointerLockControls extends EventDispatcher {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.camera = camera;\n\t\tthis.domElement = domElement;\n\n\t\tthis.isLocked = false;\n\n\t\t// Set to constrain the pitch of the camera\n\t\t// Range is 0 to Math.PI radians\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\tthis.pointerSpeed = 1.0;\n\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\t\tthis._onPointerlockChange = onPointerlockChange.bind( this );\n\t\tthis._onPointerlockError = onPointerlockError.bind( this );\n\n\t\tthis.connect();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.ownerDocument.addEventListener( 'mousemove', this._onMouseMove );\n\t\tthis.domElement.ownerDocument.addEventListener( 'pointerlockchange', this._onPointerlockChange );\n\t\tthis.domElement.ownerDocument.addEventListener( 'pointerlockerror', this._onPointerlockError );\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.ownerDocument.removeEventListener( 'mousemove', this._onMouseMove );\n\t\tthis.domElement.ownerDocument.removeEventListener( 'pointerlockchange', this._onPointerlockChange );\n\t\tthis.domElement.ownerDocument.removeEventListener( 'pointerlockerror', this._onPointerlockError );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetObject() { // retaining this method for backward compatibility\n\n\t\treturn this.camera;\n\n\t}\n\n\tgetDirection( v ) {\n\n\t\treturn v.set( 0, 0, - 1 ).applyQuaternion( this.camera.quaternion );\n\n\t}\n\n\tmoveForward( distance ) {\n\n\t\t// move forward parallel to the xz-plane\n\t\t// assumes camera.up is y-up\n\n\t\tconst camera = this.camera;\n\n\t\t_vector.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\t_vector.crossVectors( camera.up, _vector );\n\n\t\tcamera.position.addScaledVector( _vector, distance );\n\n\t}\n\n\tmoveRight( distance ) {\n\n\t\tconst camera = this.camera;\n\n\t\t_vector.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\tcamera.position.addScaledVector( _vector, distance );\n\n\t}\n\n\tlock() {\n\n\t\tthis.domElement.requestPointerLock();\n\n\t}\n\n\tunlock() {\n\n\t\tthis.domElement.ownerDocument.exitPointerLock();\n\n\t}\n\n}\n\n// event listeners\n\nfunction onMouseMove( event ) {\n\n\tif ( this.isLocked === false ) return;\n\n\tconst movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n\tconst movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n\tconst camera = this.camera;\n\t_euler.setFromQuaternion( camera.quaternion );\n\n\t_euler.y -= movementX * 0.002 * this.pointerSpeed;\n\t_euler.x -= movementY * 0.002 * this.pointerSpeed;\n\n\t_euler.x = Math.max( _PI_2 - this.maxPolarAngle, Math.min( _PI_2 - this.minPolarAngle, _euler.x ) );\n\n\tcamera.quaternion.setFromEuler( _euler );\n\n\tthis.dispatchEvent( _changeEvent );\n\n}\n\nfunction onPointerlockChange() {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement === this.domElement ) {\n\n\t\tthis.dispatchEvent( _lockEvent );\n\n\t\tthis.isLocked = true;\n\n\t} else {\n\n\t\tthis.dispatchEvent( _unlockEvent );\n\n\t\tthis.isLocked = false;\n\n\t}\n\n}\n\nfunction onPointerlockError() {\n\n\tconsole.error( 'THREE.PointerLockControls: Unable to use Pointer Lock API' );\n\n}\n\nexport { PointerLockControls };\n","import * as THREE from \"three\";\nimport { PointerLockControls } from \"three/examples/jsm/controls/PointerLockControls.js\";\n\nlet camera, scene, renderer, controls;\n\nconst objects = [];\n\nlet raycaster;\n\nlet moveForward = false;\nlet moveBackward = false;\nlet moveLeft = false;\nlet moveRight = false;\nlet canJump = false;\n\nlet prevTime = performance.now();\nconst velocity = new THREE.Vector3();\nconst direction = new THREE.Vector3();\nconst vertex = new THREE.Vector3();\nconst color = new THREE.Color();\n\ninit();\nanimate();\n\nfunction init() {\n  camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  camera.position.y = 10;\n\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n  scene.fog = new THREE.Fog(0xffffff, 0, 750);\n\n  const light = new THREE.HemisphereLight(0xeeeeff, 0x777788, 2.5);\n  light.position.set(0.5, 1, 0.75);\n  scene.add(light);\n\n  controls = new PointerLockControls(camera, document.body);\n\n  const blocker = document.getElementById(\"blocker\");\n  const instructions = document.getElementById(\"instructions\");\n\n  instructions.addEventListener(\"click\", function () {\n    controls.lock();\n  });\n\n  controls.addEventListener(\"lock\", function () {\n    instructions.style.display = \"none\";\n    blocker.style.display = \"none\";\n  });\n\n  controls.addEventListener(\"unlock\", function () {\n    blocker.style.display = \"block\";\n    instructions.style.display = \"\";\n  });\n\n  scene.add(controls.getObject());\n\n  const onKeyDown = function (event) {\n    switch (event.code) {\n      case \"ArrowUp\":\n      case \"KeyW\":\n        moveForward = true;\n        break;\n\n      case \"ArrowLeft\":\n      case \"KeyA\":\n        moveLeft = true;\n        break;\n\n      case \"ArrowDown\":\n      case \"KeyS\":\n        moveBackward = true;\n        break;\n\n      case \"ArrowRight\":\n      case \"KeyD\":\n        moveRight = true;\n        break;\n\n      case \"Space\":\n        if (canJump === true) velocity.y += 350;\n        canJump = false;\n        break;\n    }\n  };\n\n  const onKeyUp = function (event) {\n    switch (event.code) {\n      case \"ArrowUp\":\n      case \"KeyW\":\n        moveForward = false;\n        break;\n\n      case \"ArrowLeft\":\n      case \"KeyA\":\n        moveLeft = false;\n        break;\n\n      case \"ArrowDown\":\n      case \"KeyS\":\n        moveBackward = false;\n        break;\n\n      case \"ArrowRight\":\n      case \"KeyD\":\n        moveRight = false;\n        break;\n    }\n  };\n\n  document.addEventListener(\"keydown\", onKeyDown);\n  document.addEventListener(\"keyup\", onKeyUp);\n\n  raycaster = new THREE.Raycaster(\n    new THREE.Vector3(),\n    new THREE.Vector3(0, -1, 0),\n    0,\n    10\n  );\n\n  // floor\n\n  let floorGeometry = new THREE.PlaneGeometry(2000, 2000, 100, 100);\n  floorGeometry.rotateX(-Math.PI / 2);\n\n  // vertex displacement\n\n  let position = floorGeometry.attributes.position;\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    vertex.fromBufferAttribute(position, i);\n\n    vertex.x += Math.random() * 20 - 10;\n    vertex.y += Math.random() * 2;\n    vertex.z += Math.random() * 20 - 10;\n\n    position.setXYZ(i, vertex.x, vertex.y, vertex.z);\n  }\n\n  floorGeometry = floorGeometry.toNonIndexed(); // ensure each face has unique vertices\n\n  position = floorGeometry.attributes.position;\n  const colorsFloor = [];\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    color.setHSL(\n      Math.random() * 0.3 + 0.5,\n      0.75,\n      Math.random() * 0.25 + 0.75,\n      THREE.SRGBColorSpace\n    );\n    colorsFloor.push(color.r, color.g, color.b);\n  }\n\n  floorGeometry.setAttribute(\n    \"color\",\n    new THREE.Float32BufferAttribute(colorsFloor, 3)\n  );\n\n  const floorMaterial = new THREE.MeshBasicMaterial({ vertexColors: true });\n\n  const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n  scene.add(floor);\n\n  // objects\n\n  const boxGeometry = new THREE.BoxGeometry(20, 20, 20).toNonIndexed();\n\n  position = boxGeometry.attributes.position;\n  const colorsBox = [];\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    color.setHSL(\n      Math.random() * 0.3 + 0.5,\n      0.75,\n      Math.random() * 0.25 + 0.75,\n      THREE.SRGBColorSpace\n    );\n    colorsBox.push(color.r, color.g, color.b);\n  }\n\n  boxGeometry.setAttribute(\n    \"color\",\n    new THREE.Float32BufferAttribute(colorsBox, 3)\n  );\n\n  for (let i = 0; i < 500; i++) {\n    const boxMaterial = new THREE.MeshPhongMaterial({\n      specular: 0xffffff,\n      flatShading: true,\n      vertexColors: true,\n    });\n    boxMaterial.color.setHSL(\n      Math.random() * 0.2 + 0.5,\n      0.75,\n      Math.random() * 0.25 + 0.75,\n      THREE.SRGBColorSpace\n    );\n\n    const box = new THREE.Mesh(boxGeometry, boxMaterial);\n    box.position.x = Math.floor(Math.random() * 20 - 10) * 20;\n    box.position.y = Math.floor(Math.random() * 20) * 20 + 10;\n    box.position.z = Math.floor(Math.random() * 20 - 10) * 20;\n\n    scene.add(box);\n    objects.push(box);\n  }\n\n  //\n\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  //\n\n  window.addEventListener(\"resize\", onWindowResize);\n}\n\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  const time = performance.now();\n\n  if (controls.isLocked === true) {\n    raycaster.ray.origin.copy(controls.getObject().position);\n    raycaster.ray.origin.y -= 10;\n\n    const intersections = raycaster.intersectObjects(objects, false);\n\n    const onObject = intersections.length > 0;\n\n    const delta = (time - prevTime) / 1000;\n\n    velocity.x -= velocity.x * 10.0 * delta;\n    velocity.z -= velocity.z * 10.0 * delta;\n\n    velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\n\n    direction.z = Number(moveForward) - Number(moveBackward);\n    direction.x = Number(moveRight) - Number(moveLeft);\n    direction.normalize(); // this ensures consistent movements in all directions\n\n    if (moveForward || moveBackward) velocity.z -= direction.z * 400.0 * delta;\n    if (moveLeft || moveRight) velocity.x -= direction.x * 400.0 * delta;\n\n    if (onObject === true) {\n      velocity.y = Math.max(0, velocity.y);\n      canJump = true;\n    }\n\n    controls.moveRight(-velocity.x * delta);\n    controls.moveForward(-velocity.z * delta);\n\n    controls.getObject().position.y += velocity.y * delta; // new behavior\n\n    if (controls.getObject().position.y < 10) {\n      velocity.y = 0;\n      controls.getObject().position.y = 10;\n\n      canJump = true;\n    }\n  }\n\n  prevTime = time;\n\n  renderer.render(scene, camera);\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}